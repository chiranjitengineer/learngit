
--------------------------------------------------------------------
--------------------------------------------------------------------

create taBLE BJM_QTR_MAST
(
    LINENO    
    QUARTERNO    
    LOCALITY 
    FLOR    
    FLOORAREA    
    FACE    
    QUARTERSTATUS    
    QUARTERRENT    
    FURNITURERENT    
    FREEELECREADING    
    CHOWKIDARIRENT    
    ELECTRICITYRATE    
    QUARTERTYPE    
    METERNO    
    BENEFICIARY_AC_NO    
    NOOFEMPLOYEEALLOCATE
)
    
SELECT * FROM WPSQUATERMASTER

LINENO               
QUARTERNO            
LOCALITY             
FLOR                 
FLOORAREA            
FACE                 
QUARTERSTATUS        
QUARTERRENT          
FURNITURERENT        
FREEELECREADING      
CHOWKIDARIRENT       
ELECTRICITYRATE      
QUARTERTYPE          
METERNO              
NOOFEMPLOYEEALLOCATE 

--------------------------------------------------------------------
--------------------------------------------------------------------



create taBLE BJM_QTR_MAST
(
    LINENO    
    QUARTERNO    
    LOCALITY 
    FLOR    
    FLOORAREA    
    FACE    
    QUARTERSTATUS    
    QUARTERRENT    
    FURNITURERENT    
    FREEELECREADING    
    CHOWKIDARIRENT    
    ELECTRICITYRATE    
    QUARTERTYPE    
    METERNO    
    BENEFICIARY_AC_NO    
    NOOFEMPLOYEEALLOCATE
)


SELECT * FROM BJM_QTR_MAST


CREATE TABLE BJM_QTR_MAST
(
    LINENO                VARCHAR2(10 BYTE),
    QUARTERNO             VARCHAR2(10 BYTE)       NOT NULL,
    LOCALITY              VARCHAR2(10 BYTE),
    FLOR                  VARCHAR2(10 BYTE),
    FLOORAREA             VARCHAR2(10 BYTE),
    FACE                  VARCHAR2(10 BYTE),
    QUARTERSTATUS         VARCHAR2(50 BYTE)       DEFAULT 'VACANT'              NOT NULL,
    QUARTERRENT           NUMBER(9,2)             DEFAULT 0,
    FURNITURERENT         NUMBER(9,2)             DEFAULT 0,
    FREEELECREADING       NUMBER(9,2)             DEFAULT 0,
    CHOWKIDARIRENT        NUMBER(9,2)             DEFAULT 0,
    ELECTRICITYRATE       NUMBER(9,2)             DEFAULT 0,
    QUARTERTYPE           VARCHAR2(50 BYTE)       NOT NULL,
    METERNO               VARCHAR2(50 BYTE)       NOT NULL,
    BENEFICIARY_AC_NO     VARCHAR2(50 BYTE)       NOT NULL,
    NOOFEMPLOYEEALLOCATE  NUMBER(3)               DEFAULT 1
)


    
SELECT * FROM WPSQUATERMASTER

LINENO               
QUARTERNO            
LOCALITY             
FLOR                 
FLOORAREA            
FACE                 
QUARTERSTATUS        
QUARTERRENT          
FURNITURERENT        
FREEELECREADING      
CHOWKIDARIRENT       
ELECTRICITYRATE      
QUARTERTYPE          
METERNO              
NOOFEMPLOYEEALLOCATE 




--------------------------------------------------------------------
--------------------------------------------------------------------

DROP TABLE BIRLANEW.BJM_QTR_MAST CASCADE CONSTRAINTS;

CREATE TABLE BIRLANEW.BJM_QTR_MAST
(
  LINENO                VARCHAR2(10 BYTE),
  QUARTERNO             VARCHAR2(10 BYTE)       NOT NULL,
  LOCALITY              VARCHAR2(10 BYTE),
  FLOR                  VARCHAR2(10 BYTE),
  FLOORAREA             VARCHAR2(10 BYTE),
  FACE                  VARCHAR2(10 BYTE),
  QUARTERSTATUS         VARCHAR2(50 BYTE)       DEFAULT 'VACANT'              NOT NULL,
  QUARTERRENT           NUMBER(9,2)             DEFAULT 0,
  FURNITURERENT         NUMBER(9,2)             DEFAULT 0,
  FREEELECREADING       NUMBER(9,2)             DEFAULT 0,
  CHOWKIDARIRENT        NUMBER(9,2)             DEFAULT 0,
  ELECTRICITYRATE       NUMBER(9,2)             DEFAULT 0,
  QUARTERTYPE           VARCHAR2(50 BYTE)       DEFAULT NULL,
  METERNO               VARCHAR2(50 BYTE)       DEFAULT NULL,
  BENEFICIARY_AC_NO     VARCHAR2(50 BYTE)       DEFAULT NULL,
  NOOFEMPLOYEEALLOCATE  NUMBER(3)               DEFAULT 1
)


--------------------------------------------------------------------
--------------------------------------------------------------------

DROP TABLE QUARTERLINEMASTER CASCADE CONSTRAINTS;

CREATE TABLE QUARTERLINEMASTER
(
  COMPANYCODE   VARCHAR2(10 BYTE)               NOT NULL,
  DIVISIONCODE  VARCHAR2(10 BYTE)               DEFAULT NULL                  NOT NULL,
  LINENO        VARCHAR2(10 BYTE)               NOT NULL,
  LINEDESC      VARCHAR2(50 BYTE)               NOT NULL,
  USERNAME      VARCHAR2(100 BYTE),
  LASTMODIFIED  DATE                            DEFAULT SYSDATE,
  SYSROWID      VARCHAR2(50 BYTE)               NOT NULL
)






DROP TABLE QUARTERALLOCATIONDETAILS CASCADE CONSTRAINTS;

CREATE TABLE QUARTERALLOCATIONDETAILS
(
  COMPANYCODE    VARCHAR2(10 BYTE)              NOT NULL,
  DIVISIONCODE   VARCHAR2(10 BYTE)              NOT NULL,
  EFFECTIVEDATE  DATE,
  LINENO         VARCHAR2(10 BYTE),
  QUARTERNO      VARCHAR2(10 BYTE)              NOT NULL,
  WORKERSERIAL   VARCHAR2(10 BYTE),
  TOKENNO        VARCHAR2(10 BYTE),
  QUARTERSTATUS  VARCHAR2(50 BYTE)              NOT NULL,
  RELEASEDATE    DATE,
  USERNAME       VARCHAR2(100 BYTE)             NOT NULL,
  LASTMODIFIED   DATE                           DEFAULT SYSDATE,
  SYSROWID       VARCHAR2(50 BYTE)              NOT NULL
)




DROP TABLE QUARTERELECTRICREADING CASCADE CONSTRAINTS;

CREATE TABLE QUARTERELECTRICREADING
(
  COMPANYCODE         VARCHAR2(10 BYTE)         NOT NULL,
  DIVISIONCODE        VARCHAR2(10 BYTE)         NOT NULL,
  LINENO              VARCHAR2(10 BYTE),
  QUARTERNO           VARCHAR2(10 BYTE)         NOT NULL,
  METERNO             VARCHAR2(50 BYTE)         NOT NULL,
  READINGFROMDATE     DATE,
  READINGTODATE       DATE,
  NOOFUNIT            NUMBER(9,2)               DEFAULT 0,
  TOTALBILLDAYS       NUMBER(9,2)               DEFAULT 0,
  FORTNIGHTSTARTDATE  DATE,
  FORTNIGHTENDDATE    DATE,
  EFFECTIVEDATE       DATE,
  RELEASEDATE         DATE,
  BILLAMOUNT          NUMBER(9,5)               DEFAULT 0,
  WORKERSERIAL        VARCHAR2(10 BYTE),
  TOKENNO             VARCHAR2(10 BYTE),
  NOOFALLOCATIONDAYS  NUMBER(9,2)               DEFAULT 0,
  PREVIOUSDUEAMOUNT   NUMBER(9,5)               DEFAULT 0,
  CONTRIBUTIONAMOUNT  NUMBER(9,5)               DEFAULT 0,
  EMIAMOUNT           NUMBER(9,5)               DEFAULT 0,
  USERNAME            VARCHAR2(100 BYTE)        NOT NULL,
  LASTMODIFIED        DATE                      DEFAULT SYSDATE,
  SYSROWID            VARCHAR2(50 BYTE)         NOT NULL
)


--------------------------------------------------------------------
--------------------------------------------------------------------



DROP TABLE EXPIMPINF_EXCEL CASCADE CONSTRAINTS;

CREATE TABLE EXPIMPINF_EXCEL
(
  COMPANYCODE         VARCHAR2(10 BYTE)         NOT NULL,
  DIVISIONCODE        VARCHAR2(10 BYTE)         NOT NULL,
  MODULE              VARCHAR2(30 BYTE),
  EXPORT_IMPORT_TYPE  VARCHAR2(10 BYTE)         NOT NULL,
  SOURCE_QUERY        VARCHAR2(4000 BYTE),
  IMPORTTAG           VARCHAR2(100 BYTE),
  RAW_TABLE_NAME      VARCHAR2(30 BYTE),
  KEYCOLUMN1          VARCHAR2(30 BYTE),
  KEYCOLUMN2          VARCHAR2(30 BYTE)
)


--------------------------------------------------------------------
--------------------------------------------------------------------



SELECT ROWNUM SLNO, LINENO, QUARTERNO, 100  AMOUNT FROM QUARTERMASTER


SLNO    QTR LINE NO    QTR NO    AMOUNT


737    20    1    221.00
738    20    521    444.00
739    20    387    801.00



EXPIMPINF_EXCEL



UPDATE QUARTERMASTER SET LINENO='S1'

SELECT * FROM EXPIMPINF_EXCEL

INSERT INTO EXPIMPINF_EXCEL 
SELECT COMPANYCODE, DIVISIONCODE, 'PIS' MODULE, EXPORT_IMPORT_TYPE, SOURCE_QUERY, IMPORTTAG, RAW_TABLE_NAME, KEYCOLUMN1, KEYCOLUMN2 FROM EXPIMPINF_EXCEL


SET DEFINE OFF;
Insert into EXPIMPINF_EXCEL
   (COMPANYCODE, DIVISIONCODE, MODULE, EXPORT_IMPORT_TYPE, SOURCE_QUERY, IMPORTTAG, RAW_TABLE_NAME, KEYCOLUMN1, KEYCOLUMN2)
 Values
   ('BJ0056', '0001', 'WPS', 'IMPORT', 
    NULL, 'STL Import Dynamic', 'WPSSTLRAWDATA', NULL, NULL);
Insert into EXPIMPINF_EXCEL
   (COMPANYCODE, DIVISIONCODE, MODULE, EXPORT_IMPORT_TYPE, SOURCE_QUERY, IMPORTTAG, RAW_TABLE_NAME, KEYCOLUMN1, KEYCOLUMN2)
 Values
   ('BJ0056', '0001', 'WPS', 'IMPORT', 
    NULL, 'Excel Import Production', 'WPSPRODRAWDATATAB', 'PRODUCTIONDATE', NULL);
Insert into EXPIMPINF_EXCEL
   (COMPANYCODE, DIVISIONCODE, MODULE, EXPORT_IMPORT_TYPE, SOURCE_QUERY, IMPORTTAG, RAW_TABLE_NAME, KEYCOLUMN1, KEYCOLUMN2)
 Values
   ('BJ0056', '0001', 'WPS', 'IMPORT', 
    NULL, 'Excel Import Attendance', 'WPSATTENDANCEDEVICERAWDATA', 'ATTN_DT', NULL);
Insert into EXPIMPINF_EXCEL
   (COMPANYCODE, DIVISIONCODE, MODULE, EXPORT_IMPORT_TYPE, SOURCE_QUERY, IMPORTTAG, RAW_TABLE_NAME, KEYCOLUMN1, KEYCOLUMN2)
 Values
   ('BJ0056', '0001', 'WPS', 'IMPORT', 
    NULL, 'ELECTRIC Import Dynamic', 'WPSELECTRICRAWDATA', NULL, NULL);
COMMIT;


WPSELECTRICRAWDATA


DROP TABLE WPSELECTRICRAWDATA CASCADE CONSTRAINTS;

CREATE TABLE WPSELECTRICRAWDATA
(
  SLNO                VARCHAR2(100 BYTE),
  QTRLINENO           VARCHAR2(100 BYTE),
  QTRNO               VARCHAR2(100 BYTE),
  AMOUNT              VARCHAR2(100 BYTE),
  READINGFROMDATE     VARCHAR2(10 BYTE),
  READINGTODATE       VARCHAR2(10 BYTE),
  FORTNIGHTSTARTDATE  VARCHAR2(10 BYTE),
  FORTNIGHTENDDATE    VARCHAR2(10 BYTE),
  MODIFIEDDATE        DATE                      DEFAULT SYSDATE
)


--------------------------------------------------------------------
--------------------------------------------------------------------


SET DEFINE OFF;
Insert into SYS_PARAMETER
   (PARAMETER_NAME, PARAMETER_DESC, PARAMETER_VALUE, PROJECTNAME, COMPANYCODE, LASTMODIFIED, SYSROWID, DIVISIONCODE, USERNAME, ALLOW_CHANGE_FROM_INTERFACE)
 Values
   ('ELECTRIC DATA IMPORT', 'ELECTRIC  DATA SHOW IN GRID AND IMPORT', 'PROC_ELECTRIC_GRID_SHOW', 'WPS', 'NJ0001', 
    TO_DATE('08/07/2020 11:24:01', 'MM/DD/YYYY HH24:MI:SS'), '0004004200001', '0002', 'SWT', 'SWT TO SET');
COMMIT;



--------------------------------------------------------------------
--------------------------------------------------------------------



DROP TABLE GBL_ELECBLNC CASCADE CONSTRAINTS;

CREATE GLOBAL TEMPORARY TABLE GBL_ELECBLNC
(
  WORKERSERIAL       VARCHAR2(10 BYTE),
  TOKENNO            VARCHAR2(10 BYTE),
  QUARTER            VARCHAR2(10 BYTE),
  READINGDATE        DATE,
  BILLAMOUNT         NUMBER(11,2),
  PREVIOUSDUEAMOUNT  NUMBER(11,2),
  TOTALCONTRIBUTION  NUMBER(11,2),
  ELEC_BAL_AMT       NUMBER(18,2),
  ELEC_EMI_AMT       NUMBER(18,2)
)
ON COMMIT PRESERVE ROWS
NOCACHE;



DROP TABLE ELECTRICDEDUCTIONBREAKUP CASCADE CONSTRAINTS;

CREATE TABLE ELECTRICDEDUCTIONBREAKUP
(
  COMPANYCODE         VARCHAR2(10 BYTE),
  DIVISIONCODE        VARCHAR2(10 BYTE),
  YEARCODE            VARCHAR2(10 BYTE),
  YEARMONTH           VARCHAR2(10 BYTE),
  QUARTERNO           VARCHAR2(10 BYTE),
  TOKENNO             VARCHAR2(50 BYTE),
  WORKERSERIAL        VARCHAR2(10 BYTE),
  CATEGORYCODE        VARCHAR2(10 BYTE),
  DEDUCTIONDATE       DATE,
  DEDUCTEDAMT         NUMBER(18,2),
  ELECTRIC_UNIT       NUMBER(11,2)              DEFAULT 0,
  EFFECTIVEFORTNIGHT  DATE,
  REMARKS             VARCHAR2(300 BYTE),
  MODULE              VARCHAR2(10 BYTE),
  SYSROWID            VARCHAR2(50 BYTE),
  USERNAME            VARCHAR2(100 BYTE),
  LASTMODIFIED        DATE                      DEFAULT SYSDATE,
  TRANTYPE            VARCHAR2(30 BYTE)         DEFAULT 'SALARY'
)




DROP TABLE ELECTRICMETERREADING CASCADE CONSTRAINTS;

CREATE TABLE ELECTRICMETERREADING
(
  COMPANYCODE         VARCHAR2(10 BYTE)         NOT NULL,
  DIVISIONCODE        VARCHAR2(10 BYTE)         NOT NULL,
  MODULE              VARCHAR2(10 BYTE),
  YEARCODE            VARCHAR2(10 BYTE)         NOT NULL,
  YEARMONTH           VARCHAR2(10 BYTE)         NOT NULL,
  READINGDATE         DATE,
  WORKERSERIAL        VARCHAR2(10 BYTE),
  TOKENNO             VARCHAR2(10 BYTE)         NOT NULL,
  DEPARTMENTCODE      VARCHAR2(10 BYTE),
  LINENO              VARCHAR2(10 BYTE),
  QUARTERNO           VARCHAR2(10 BYTE)         NOT NULL,
  METERREADINGFROM    NUMBER(11,2),
  METERREADINGTO      NUMBER(11,2),
  NOOFUNIT            NUMBER(9,2),
  FREEUNIT            NUMBER(11,2),
  CREDITUNIT          NUMBER(11,2),
  CHARGEUNIT          NUMBER(11,2),
  UNIT_RATE           NUMBER(11,2),
  ELEC_DED_AMT        NUMBER(11,2),
  PREV_DUE_AMT        NUMBER(11,2),
  ELEC_EMI            NUMBER(11,2),
  METERNO             VARCHAR2(50 BYTE),
  READINGFROMDATE     DATE,
  READINGTODATE       DATE,
  TOTALBILLDAYS       NUMBER(9,2),
  FORTNIGHTSTARTDATE  DATE,
  FORTNIGHTENDDATE    DATE,
  EFFECTIVEDATE       DATE,
  RELEASEDATE         DATE,
  BILLAMOUNT          NUMBER(9,5),
  NOOFALLOCATIONDAYS  NUMBER(9,2),
  PREVIOUSDUEAMOUNT   NUMBER(9,5),
  CONTRIBUTIONAMOUNT  NUMBER(9,5),
  EMIAMOUNT           NUMBER(9,5),
  LASTMODIFIED        DATE                      DEFAULT SYSDATE,
  USERNAME            VARCHAR2(100 BYTE)        NOT NULL,
  SYSROWID            VARCHAR2(50 BYTE)         NOT NULL
)




--------------------------------------------------------------------
--------------------------------------------------------------------


CREATE OR REPLACE PROCEDURE PROC_ELECBLNC_WITH_BILL_EMI
(
    P_COMPCODE  VARCHAR2,
    P_DIVCODE VARCHAR2,
    P_STARTDATE    VARCHAR2,
    P_ENDDATE      VARCHAR2,    
    P_WORKERSERIAL VARCHAR2 DEFAULT NULL,
    P_MODULE       VARCHAR2 DEFAULT 'WPS',
    P_WAGEPROCESS  VARCHAR2 DEFAULT 'NO'
)
AS 
    LV_SQLSTR           VARCHAR2(20000);
BEGIN
     DELETE FROM GBL_ELECBLNC;
     COMMIT;
    IF P_WAGEPROCESS ='YES' THEN
        DELETE FROM ELECTRICDEDUCTIONBREAKUP WHERE DEDUCTIONDATE= TO_DATE(P_ENDDATE,'DD/MM/YYYY') AND MODULE=P_MODULE;
    END IF;
    LV_SQLSTR := ' INSERT INTO GBL_ELECBLNC '||CHR(10)
           ||'  SELECT A.WORKERSERIAL, A.TOKENNO, A.QUARTERNO, READINGDATE, BILLAMOUNT, PREVIOUSDUEAMOUNT, NVL(CONTRIBUTIONAMOUNT,0)+NVL(PREVIOUSDUEAMOUNT,0) TOTALCONTRIBUTION,  '||CHR(10) 
           ||'  C.ELEC_BAL_AMT, EMIAMOUNT '||CHR(10)
           ||'  FROM ELECTRICMETERREADING A, '||CHR(10)
           ||'  ( '||CHR(10)
           ||'      SELECT WORKERSERIAL, MAX(FORTNIGHTSTARTDATE) FORTNIGHTSTARTDATE  '||CHR(10)
           ||'      FROM ELECTRICMETERREADING  '||CHR(10)
           ||'      WHERE COMPANYCODE = '''||P_COMPCODE||'''  '||CHR(10)
           ||'        AND FORTNIGHTSTARTDATE <= TO_DATE('''||P_STARTDATE||''',''DD/MM/YYYY'')  '||CHR(10) 
           ||'      GROUP BY WORKERSERIAL  '||CHR(10)
           ||'  ) B,  '||CHR(10)
           ||'  (  '||CHR(10)
           ||'      SELECT WORKERSERIAL, SUM(ELEC_BAL_AMT) ELEC_BAL_AMT  '||CHR(10)
           ||'      FROM (  '||CHR(10)
           ||'              SELECT WORKERSERIAL, SUM(NVL(CONTRIBUTIONAMOUNT,0))+SUM(NVL(PREV_DUE_AMT,0)) ELEC_BAL_AMT  '||CHR(10)
           ||'              FROM ELECTRICMETERREADING   '||CHR(10)
           ||'               WHERE COMPANYCODE= '''||P_COMPCODE||'''    '||CHR(10)
           ||'                 AND DIVISIONCODE='''||P_DIVCODE||'''     '||CHR(10)
           ||'                 AND FORTNIGHTSTARTDATE <= TO_DATE('''||P_STARTDATE||''',''DD/MM/YYYY'')  '||CHR(10)
           ||'              GROUP BY WORKERSERIAL   '||CHR(10)
           ||'              UNION ALL  '||CHR(10)
           ||'              SELECT WORKERSERIAL,-1* SUM(NVL(DEDUCTEDAMT,0)) ELEC_BAL_AMT  '||CHR(10)
           ||'              FROM ELECTRICDEDUCTIONBREAKUP    '||CHR(10)
           ||'               WHERE COMPANYCODE='''||P_COMPCODE||'''     '||CHR(10)
           ||'                 AND DIVISIONCODE= '''||P_DIVCODE||'''  '||CHR(10)
           ||'                 AND DEDUCTIONDATE <= TO_DATE('''||P_ENDDATE||''',''DD/MM/YYYY'')  '||CHR(10)
           ||'              GROUP BY WORKERSERIAL        '||CHR(10)
           ||'         )   '||CHR(10)
           ||'       GROUP BY WORKERSERIAL   '||CHR(10)
           ||'  ) C  '||CHR(10)
           ||'  WHERE A.COMPANYCODE ='''||P_COMPCODE||''' AND A.DIVISIONCODE = '''||P_DIVCODE||'''   '||CHR(10)
           ||'    AND A.WORKERSERIAL=B.WORKERSERIAL   '||CHR(10)
           ||'    AND A.FORTNIGHTSTARTDATE =B.FORTNIGHTSTARTDATE   '||CHR(10)
           ||'    AND A.WORKERSERIAL = C.WORKERSERIAL   '||CHR(10);


--    LV_SQLSTR := ' INSERT INTO GBL_ELECBLNC '||CHR(10)
--                ||' SELECT WORKERSERIAL,TOKENNO,'''' QUARTERNO,   '||CHR(10)
--                ||' SUM(NVL(ELEC_BAL_AMT,0)) ELEC_BAL_AMT,   '||CHR(10)
--                ||' /*(CASE WHEN SUBSTR(TO_DATE('''||P_ENDDATE||''',''DD/MM/YYYY''),1,2)<>''15'' THEN   '||CHR(10) 
--                ||'           ROUND(SUM(NVL(ELEC_BAL_AMT,0))/2)   '||CHR(10)
--                ||'      ELSE   '||CHR(10)
--                ||'           ROUND(SUM(NVL(ELEC_BAL_AMT,0)))   '||CHR(10)
--                ||'      END) ELEC_EMI_AMT */  SUM(NVL(ELEC_BAL_AMT,0)) ELEC_EMI_AMT   '||CHR(10)
--                ||' FROM (   '||CHR(10)
--                ||'     SELECT WORKERSERIAL,TOKENNO,SUM(NVL(ELEC_DED_AMT,0))+SUM(NVL(PREV_DUE_AMT,0)) /* SUM(NVL(ELEC_EMI,0))*/ ELEC_BAL_AMT   '||CHR(10) 
--                ||'       FROM ELECTRICMETERREADING   '||CHR(10)
--                ||'     WHERE COMPANYCODE='''||P_COMPANYCODE||'''   '||CHR(10)
--                ||'       AND DIVISIONCODE='''||P_DIVISIONCODE||'''   '||CHR(10)
--                ||'       AND READINGDATE >= TO_DATE(''01/08/2018'',''DD/MM/YYYY'') '||CHR(10)  --- THIS LINE ADDED DUE TO WAGES LIVE ON 01/08/2018
--                ||'       AND READINGDATE<=TO_DATE('''||P_ENDDATE||''',''DD/MM/YYYY'')   '||CHR(10)
--                ||'       --AND NVL(PREV_DUE_AMT,0)>0   '||CHR(10)
--                ||'     GROUP BY WORKERSERIAL,TOKENNO     '||CHR(10)
--                ||'     UNION ALL   '||CHR(10)
--                ||'     SELECT WORKERSERIAL,TOKENNO,-1* SUM(NVL(DEDUCTEDAMT,0)) DEDUCTEDAMT   '||CHR(10) 
--                ||'       FROM ELECTRICDEDUCTIONBREAKUP   '||CHR(10)
--                ||'     WHERE COMPANYCODE='''||P_COMPANYCODE||'''   '||CHR(10)
--                ||'       AND DIVISIONCODE='''||P_DIVISIONCODE||'''   '||CHR(10)
--                ||'       AND DEDUCTIONDATE >= TO_DATE(''01/08/2018'',''DD/MM/YYYY'') '||CHR(10)  --- THIS LINE ADDED DUE TO WAGES LIVE ON 01/08/2018
--                ||'       AND DEDUCTIONDATE<TO_DATE('''||P_ENDDATE||''',''DD/MM/YYYY'')   '||CHR(10)
--                ||'     GROUP BY WORKERSERIAL,TOKENNO    '||CHR(10)
--                ||' )GROUP BY WORKERSERIAL,TOKENNO  '||CHR(10);

  DBMS_OUTPUT.PUT_LINE(LV_SQLSTR);
  EXECUTE IMMEDIATE LV_SQLSTR;
END;
/



--------------------------------------------------------------------
--------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE PROC_ELECTRIC_GRID_SHOW(
                                            P_COMPANYCODE VARCHAR2,
                                            P_DIVISIONCODE VARCHAR2,
                                            P_YEARCODE VARCHAR2,
                                            P_COMPANYNAME VARCHAR2 ,
                                            P_READINGFROMDATE VARCHAR2 ,
                                            P_READINGTODATE VARCHAR2,
                                            P_FORTNIGHTSTARTDATE VARCHAR2 ,
                                            P_FORTNIGHTENDDATE VARCHAR2,
                                            P_USERNAME VARCHAR2
                                           )
AS
    LV_SQLSTR      VARCHAR2(4000);     
BEGIN
   DELETE FROM WPSELECTRICDATAGRID;  
   
   PROC_ELECBLNC_WITH_BILL_EMI(P_COMPANYCODE,P_DIVISIONCODE,P_FORTNIGHTSTARTDATE,P_FORTNIGHTENDDATE,'','WPS','NO');
 
LV_SQLSTR := 'INSERT INTO WPSELECTRICDATAGRID'||CHR(10);  
LV_SQLSTR := LV_SQLSTR ||'SELECT '||CHR(10)
 ||' A.LINENO ,A.QUARTERNO,M.METERNO,NVL(W.TOKENNO,'''||P_COMPANYCODE||''')TOKENNO,NVL(W.WORKERNAME,'||CHR(10)
 ||' '''||P_COMPANYNAME||''')WORKERNAME,'||CHR(10)
 ||' NVL(ELEC_BAL_AMT,0) PREVIOUSDUEAMOUNT,'||CHR(10)
 ||' RW.AMOUNT CONTRIBUTIONAMOUNT,'||CHR(10)
 ||' FN_ROUNDOFFRS(((NVL(RW.AMOUNT,0)+NVL(BL.ELEC_BAL_AMT,0))/3),1,''H'')EMIAMOUNT,'||CHR(10)
 ||' TO_DATE(RW.READINGFROMDATE,''DD/MM/YYYY'') EFFECTIVEDATE,'||CHR(10)
 ||' TO_DATE(RW.READINGTODATE,''DD/MM/YYYY'') RELEASEDATE,'||CHR(10)
 ||' (CASE WHEN NVL(A.RELEASEDATE,TO_DATE(RW.READINGTODATE,''DD/MM/YYYY''))>='||CHR(10)
 ||' TO_DATE(RW.READINGTODATE,''DD/MM/YYYY'') THEN TO_DATE(RW.READINGTODATE,''DD/MM/YYYY'')'||CHR(10)
 ||' ELSE  A.RELEASEDATE END)- TO_DATE(RW.READINGFROMDATE,''DD/MM/YYYY'')+1 TOTALBILLDAYS,'||CHR(10)
 ||' A.COMPANYCODE,A.DIVISIONCODE,TO_DATE(RW.READINGFROMDATE,''DD/MM/YYYY'') READINGFROMDATE,'||CHR(10)
 ||' TO_DATE(RW.READINGTODATE,''DD/MM/YYYY'') READINGTODATE,'||CHR(10)
 ||' 0 NOOFUNIT,TO_DATE(RW.FORTNIGHTSTARTDATE,''DD/MM/YYYY''),TO_DATE(RW.FORTNIGHTENDDATE,''DD/MM/YYYY''), NVL(AMOUNT,0) BILLAMOUNT,W.WORKERSERIAL,'||CHR(10)
 ||' (CASE WHEN NVL(A.RELEASEDATE,TO_DATE(RW.READINGTODATE,''DD/MM/YYYY''))>= '||CHR(10)
 ||' TO_DATE(RW.READINGTODATE,''DD/MM/YYYY'') THEN TO_DATE(RW.READINGTODATE,''DD/MM/YYYY'')'||CHR(10)
 ||' ELSE  A.RELEASEDATE END)- TO_DATE(RW.READINGFROMDATE,''DD/MM/YYYY'')+1 NOOFALLOCATIONDAYS,'||CHR(10)
 ||' '''||P_USERNAME||''' USERNAME,NULL SYSROWID, TO_CHAR(TO_DATE(RW.READINGFROMDATE,''DD/MM/YYYY''),''YYYYMM'') YEARMONTH ,TO_DATE(RW.READINGFROMDATE,''DD/MM/YYYY'')  READINGDATE,'||CHR(10)
 ||'  DEPARTMENTCODE, ''WPS'' MODULE,0 METERREADINGFROM, 0 METERREADINGTO, 0 FREEUNIT,0 CHARGEUNIT,0 UNIT_RATE, NVL(ELEC_BAL_AMT,0) PREV_DUE_AMT '||CHR(10)
 ||' FROM WPSELECTRICRAWDATA RW,QUARTERALLOCATIONDETAILS A,WPSWORKERMAST W,QUARTERMASTER M,GBL_ELECBLNC BL,'||CHR(10)
 ||' ('||CHR(10)
 ||'     SELECT LINENO,QUARTERNO, MAX(EFFECTIVEDATE) EFFECTIVEDATE '||CHR(10)
 ||'     FROM QUARTERALLOCATIONDETAILS'||CHR(10)
 ||'     WHERE COMPANYCODE='''||P_COMPANYCODE||''' AND DIVISIONCODE='''||P_DIVISIONCODE||''''||CHR(10)
 ||'       AND EFFECTIVEDATE <= TO_DATE('''||P_FORTNIGHTENDDATE||''',''DD/MM/YYYY'')'||CHR(10)
 ||'     GROUP BY QUARTERNO,LINENO'||CHR(10)
 ||' ) B'||CHR(10)
-- ||' ,('||CHR(10)
-- ||' SELECT SUM(NVL(COMPONENTAMOUNT,0)) PREVIOUSDUEAMOUNT,WORKERSERIAL FROM WPSUNREALIZEDDATA'||CHR(10)
-- ||' WHERE COMPANYCODE='''||P_COMPANYCODE||''' AND DIVISIONCODE='''||P_DIVISIONCODE||''''||CHR(10)
-- ||' GROUP BY WORKERSERIAL'||CHR(10)
-- ||' ) OUTSTANDING'||CHR(10)
 ||' WHERE A.COMPANYCODE='''||P_COMPANYCODE||'''  AND A.DIVISIONCODE='''||P_DIVISIONCODE||''''||CHR(10)
 ||'   AND A.QUARTERNO = B.QUARTERNO AND A.LINENO=B.LINENO AND A.EFFECTIVEDATE=B.EFFECTIVEDATE'||CHR(10)
 ||'   AND (A.RELEASEDATE IS NULL OR A.RELEASEDATE > TO_DATE('''||P_READINGFROMDATE||''',''DD/MM/YYYY''))'||CHR(10)
 ||'   AND A.COMPANYCODE=W.COMPANYCODE(+)'||CHR(10)
 ||'   AND A.DIVISIONCODE=W.DIVISIONCODE(+)'||CHR(10)
 ||'   AND A.WORKERSERIAL=W.WORKERSERIAL(+)'||CHR(10)
 ||'   AND A.COMPANYCODE=M.COMPANYCODE'||CHR(10)  --
 ||'   AND A.DIVISIONCODE=M.DIVISIONCODE'||CHR(10)
 ||'   AND A.LINENO=M.LINENO'||CHR(10)
 ||'   AND A.QUARTERNO=M.QUARTERNO'||CHR(10)
 ||'   AND A.QUARTERSTATUS=''ALLOCATED'''||CHR(10)
 ||'   AND A.WORKERSERIAL=BL.WORKERSERIAL(+) '||CHR(10)
 ||'   AND RW.QTRLINENO=M.LINENO'||CHR(10)
 --||'   AND RW.QTRNO=M.QUARTERNO '||CHR(10)
-- ||'AND RW.QTRLINENO||''/''||LPAD(RW.QTRNO,4,0)=M.QUARTERNO '||CHR(10)
  ||'AND RW.QTRLINENO||''/''||LPAD(TO_NUMBER(RW.QTRNO),4,0)=M.QUARTERNO '||CHR(10)
-- ||'   AND A.WORKERSERIAL=OUTSTANDING.WORKERSERIAL(+)'||CHR(10)
 ||'   AND TO_DATE(RW.READINGFROMDATE,''DD/MM/YYYY'') >= TO_DATE('''||P_READINGFROMDATE||''',''DD/MM/YYYY'')'||CHR(10)
 ||'   AND TO_DATE(RW.READINGTODATE,''DD/MM/YYYY'') <= TO_DATE('''||P_READINGTODATE||''',''DD/MM/YYYY'')'||CHR(10)
 ||'   AND RW.FORTNIGHTSTARTDATE='''||P_FORTNIGHTSTARTDATE||''''||CHR(10)
 ||'   AND RW.FORTNIGHTENDDATE='''||P_FORTNIGHTENDDATE||''''||CHR(10)
 --||'   AND W.TOKENNO IS NOT NULL '||CHR(10)
 ||'    ORDER BY RW.QTRLINENO,RW.QTRNO'||CHR(10);
 
   DBMS_OUTPUT.PUT_LINE(LV_SQLSTR);
 EXECUTE IMMEDIATE LV_SQLSTR;
 
END;
/


--------------------------------------------------------------------
--------------------------------------------------------------------


SELECT * FROM BJM_QTR_MAST



SLNO    QTR LINE NO    QTR NO    AMOUNT


SELECT * FROM QUARTERMASTER

INSERT INTO QUARTERMASTER
(
    COMPANYCODE, DIVISIONCODE, LINENO, QUARTERNO, LOCALITY, FLOR, FLOORAREA, FACE, 
    QUARTERSTATUS, QUARTERRENT, FURNITURERENT, FREEELECREADING, CHOWKIDARIRENT, 
    ELECTRICITYRATE, QUARTERTYPE, METERNO, CONSIGNMENTNO, NOOFEMPLOYEEALLOCATE, 
    USERNAME, LASTMODIFIED, SYSROWID
)
SELECT 'BJ0056' COMPANYCODE,'0001' DIVISIONCODE, LINENO, QUARTERNO, LOCALITY, FLOR, FLOORAREA, FACE, 
    QUARTERSTATUS, QUARTERRENT, FURNITURERENT, FREEELECREADING, CHOWKIDARIRENT, 
    ELECTRICITYRATE,'LINE QUARTER' QUARTERTYPE,NVL(BENEFICIARY_AC_NO,'NA') METERNO, BENEFICIARY_AC_NO, NOOFEMPLOYEEALLOCATE, 
    'SWT' USERNAME, SYSDATE LASTMODIFIED,SYS_GUID() SYSROWID
FROM BJM_QTR_MAST

SELECT * FROM DIVISIONMASTER


ALTER TABLE QUARTERMASTER ADD CONSIGNMENTNO VARCHAR2(50)

UPDATE QUARTERMASTER SET CONSIGNMENTNO = 


SELECT  TO_CHAR(FORTNIGHTENDDATE,'DD/MM/RRRR') FORTNIGHTENDDATE FROM WPSWAGEDPERIODDECLARATION WHERE FORTNIGHTSTARTDATE= TO_DATE('01/07/2020','DD/MM/RRRR')


EXPIMPINF_EXCEL



DROP TABLE EXPIMPINF_EXCEL CASCADE CONSTRAINTS;

CREATE TABLE EXPIMPINF_EXCEL
(
  COMPANYCODE         VARCHAR2(10 BYTE)         NOT NULL,
  DIVISIONCODE        VARCHAR2(10 BYTE)         NOT NULL,
  MODULE              VARCHAR2(30 BYTE),
  EXPORT_IMPORT_TYPE  VARCHAR2(10 BYTE)         NOT NULL,
  SOURCE_QUERY        VARCHAR2(4000 BYTE),
  IMPORTTAG           VARCHAR2(100 BYTE),
  RAW_TABLE_NAME      VARCHAR2(30 BYTE),
  KEYCOLUMN1          VARCHAR2(30 BYTE),
  KEYCOLUMN2          VARCHAR2(30 BYTE)
)

SELECT  TO_CHAR(LAST_DAY(TO_DATE('01/08/2020','DD/MM/RRRR')),'DD/MM/RRRR') FROM DUAL


select * from sys_tfmap
where SYS_TABLENAME_TEMP = 'GBL_SALESSAUDAMASTER'

select * from sys_tfmap
where SYS_TABLENAME_TEMP = 'GBL_SALESSAUDADETAILS'


--------------------------------------------------------------------
--------------------------------------------------------------------
--------------------------------------------------------------------

 INSERT INTO GBL_ELECBLNC 
 
  SELECT A.WORKERSERIAL, A.TOKENNO, A.QUARTERNO, READINGDATE, BILLAMOUNT, PREVIOUSDUEAMOUNT, NVL(CONTRIBUTIONAMOUNT,0)+NVL(PREVIOUSDUEAMOUNT,0) TOTALCONTRIBUTION,  
  C.ELEC_BAL_AMT, EMIAMOUNT 
  FROM ELECTRICMETERREADING A, 
  ( 
      SELECT WORKERSERIAL, MAX(FORTNIGHTSTARTDATE) FORTNIGHTSTARTDATE  
      FROM ELECTRICMETERREADING  
      WHERE COMPANYCODE = 'BJ0056'  
        AND FORTNIGHTSTARTDATE <= TO_DATE('01/07/2020','DD/MM/YYYY')  
      GROUP BY WORKERSERIAL  
  ) B,  
  (  
      SELECT WORKERSERIAL, SUM(ELEC_BAL_AMT) ELEC_BAL_AMT  
      FROM (  
              SELECT WORKERSERIAL, SUM(NVL(CONTRIBUTIONAMOUNT,0))+SUM(NVL(PREV_DUE_AMT,0)) ELEC_BAL_AMT  
              FROM ELECTRICMETERREADING   
               WHERE COMPANYCODE= 'BJ0056'    
                 AND DIVISIONCODE='0001'     
                 AND FORTNIGHTSTARTDATE <= TO_DATE('01/07/2020','DD/MM/YYYY')  
              GROUP BY WORKERSERIAL   
              UNION ALL  
              SELECT WORKERSERIAL,-1* SUM(NVL(DEDUCTEDAMT,0)) ELEC_BAL_AMT  
              FROM ELECTRICDEDUCTIONBREAKUP    
               WHERE COMPANYCODE='BJ0056'     
                 AND DIVISIONCODE= '0001'  
                 AND DEDUCTIONDATE <= TO_DATE('31/07/2020','DD/MM/YYYY')  
              GROUP BY WORKERSERIAL        
         )   
       GROUP BY WORKERSERIAL   
  ) C  
  WHERE A.COMPANYCODE ='BJ0056' AND A.DIVISIONCODE = '0001'   
    AND A.WORKERSERIAL=B.WORKERSERIAL   
    AND A.FORTNIGHTSTARTDATE =B.FORTNIGHTSTARTDATE   
    AND A.WORKERSERIAL = C.WORKERSERIAL   

INSERT INTO WPSELECTRICDATAGRID


SELECT 
 A.LINENO ,A.QUARTERNO,M.METERNO,NVL(W.TOKENNO,'BJ0056')TOKENNO,NVL(W.EMPLOYEENAME,
 'BIRLA CORPORATION LIMITED ')WORKERNAME,
 NVL(ELEC_BAL_AMT,0) PREVIOUSDUEAMOUNT,
 RW.AMOUNT CONTRIBUTIONAMOUNT,
 FN_ROUNDOFFRS(((NVL(RW.AMOUNT,0)+NVL(BL.ELEC_BAL_AMT,0))/3),1,'H')EMIAMOUNT,
 TO_DATE(RW.READINGFROMDATE,'DD/MM/YYYY') EFFECTIVEDATE,
 TO_DATE(RW.READINGTODATE,'DD/MM/YYYY') RELEASEDATE,
 (CASE WHEN NVL(A.RELEASEDATE,TO_DATE(RW.READINGTODATE,'DD/MM/YYYY'))>=
 TO_DATE(RW.READINGTODATE,'DD/MM/YYYY') THEN TO_DATE(RW.READINGTODATE,'DD/MM/YYYY')
 ELSE  A.RELEASEDATE END)- TO_DATE(RW.READINGFROMDATE,'DD/MM/YYYY')+1 TOTALBILLDAYS,
 A.COMPANYCODE,A.DIVISIONCODE,TO_DATE(RW.READINGFROMDATE,'DD/MM/YYYY') READINGFROMDATE,
 TO_DATE(RW.READINGTODATE,'DD/MM/YYYY') READINGTODATE,
 0 NOOFUNIT,TO_DATE(RW.FORTNIGHTSTARTDATE,'DD/MM/YYYY'),TO_DATE(RW.FORTNIGHTENDDATE,'DD/MM/YYYY'), NVL(AMOUNT,0) BILLAMOUNT,W.WORKERSERIAL,
 (CASE WHEN NVL(A.RELEASEDATE,TO_DATE(RW.READINGTODATE,'DD/MM/YYYY'))>= 
 TO_DATE(RW.READINGTODATE,'DD/MM/YYYY') THEN TO_DATE(RW.READINGTODATE,'DD/MM/YYYY')
 ELSE  A.RELEASEDATE END)- TO_DATE(RW.READINGFROMDATE,'DD/MM/YYYY')+1 NOOFALLOCATIONDAYS,
 'SWT' USERNAME,NULL SYSROWID, TO_CHAR(TO_DATE(RW.READINGFROMDATE,'DD/MM/YYYY'),'YYYYMM') YEARMONTH ,TO_DATE(RW.READINGFROMDATE,'DD/MM/YYYY')  READINGDATE,
  DEPARTMENTCODE, 'WPS' MODULE,0 METERREADINGFROM, 0 METERREADINGTO, 0 FREEUNIT,0 CHARGEUNIT,0 UNIT_RATE, NVL(ELEC_BAL_AMT,0) PREV_DUE_AMT 
 FROM WPSELECTRICRAWDATA RW,QUARTERALLOCATIONDETAILS A,PISEMPLOYEEMASTER W,QUARTERMASTER M,GBL_ELECBLNC BL,
 (
     SELECT LINENO,QUARTERNO, MAX(EFFECTIVEDATE) EFFECTIVEDATE 
     FROM QUARTERALLOCATIONDETAILS
     WHERE COMPANYCODE='BJ0056' AND DIVISIONCODE='0001'
       AND EFFECTIVEDATE <= TO_DATE('31/07/2020','DD/MM/YYYY')
     GROUP BY QUARTERNO,LINENO
 ) B
 WHERE A.COMPANYCODE='BJ0056'  AND A.DIVISIONCODE='0001'
   AND A.QUARTERNO = B.QUARTERNO AND A.LINENO=B.LINENO AND A.EFFECTIVEDATE=B.EFFECTIVEDATE
   AND (A.RELEASEDATE IS NULL OR A.RELEASEDATE > TO_DATE('01/07/2020','DD/MM/YYYY'))
   AND A.COMPANYCODE=W.COMPANYCODE(+)
   AND A.DIVISIONCODE=W.DIVISIONCODE(+)
   AND A.WORKERSERIAL=W.WORKERSERIAL(+)
   AND A.COMPANYCODE=M.COMPANYCODE
   AND A.DIVISIONCODE=M.DIVISIONCODE
   AND A.LINENO=M.LINENO
   AND A.QUARTERNO=M.QUARTERNO
   AND A.QUARTERSTATUS='ALLOCATED'
   AND A.WORKERSERIAL=BL.WORKERSERIAL(+) 
   AND RW.QTRLINENO=M.LINENO
AND RW.QTRLINENO||'/'||LPAD(TO_NUMBER(RW.QTRNO),4,0)=M.QUARTERNO 
   AND TO_DATE(RW.READINGFROMDATE,'DD/MM/YYYY') >= TO_DATE('01/07/2020','DD/MM/YYYY')
   AND TO_DATE(RW.READINGTODATE,'DD/MM/YYYY') <= TO_DATE('31/07/2020','DD/MM/YYYY')
   AND RW.FORTNIGHTSTARTDATE='01/07/2020'
   AND RW.FORTNIGHTENDDATE='31/07/2020'
    ORDER BY RW.QTRLINENO,RW.QTRNO
	
	
--------------------------------------------------------------------
--------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE BIRLANEW.PROC_ELECTRIC_GRID_SHOW(
                                            P_COMPANYCODE VARCHAR2,
                                            P_DIVISIONCODE VARCHAR2,
                                            P_YEARCODE VARCHAR2,
                                            P_COMPANYNAME VARCHAR2 ,
                                            P_READINGFROMDATE VARCHAR2 ,
                                            P_READINGTODATE VARCHAR2,
                                            P_FORTNIGHTSTARTDATE VARCHAR2 ,
                                            P_FORTNIGHTENDDATE VARCHAR2,
                                            P_USERNAME VARCHAR2
                                           )
AS
    LV_SQLSTR      VARCHAR2(4000);     
BEGIN
   DELETE FROM WPSELECTRICDATAGRID;  
   
   PROC_ELECBLNC_WITH_BILL_EMI(P_COMPANYCODE,P_DIVISIONCODE,P_FORTNIGHTSTARTDATE,P_FORTNIGHTENDDATE,'','WPS','NO');
 
LV_SQLSTR := 'INSERT INTO WPSELECTRICDATAGRID'||CHR(10);  
LV_SQLSTR := LV_SQLSTR ||'SELECT '||CHR(10)
 ||' A.LINENO ,A.QUARTERNO,M.METERNO,NVL(W.TOKENNO,'''||P_COMPANYCODE||''')TOKENNO,NVL(W.EMPLOYEENAME,'||CHR(10)
 ||' '''||P_COMPANYNAME||''')WORKERNAME,'||CHR(10)
 ||' NVL(ELEC_BAL_AMT,0) PREVIOUSDUEAMOUNT,'||CHR(10)
 ||' RW.AMOUNT CONTRIBUTIONAMOUNT,'||CHR(10)
 ||' FN_ROUNDOFFRS(((NVL(RW.AMOUNT,0)+NVL(BL.ELEC_BAL_AMT,0))/3),1,''H'')EMIAMOUNT,'||CHR(10)
 ||' TO_DATE(RW.READINGFROMDATE,''DD/MM/YYYY'') EFFECTIVEDATE,'||CHR(10)
 ||' TO_DATE(RW.READINGTODATE,''DD/MM/YYYY'') RELEASEDATE,'||CHR(10)
 ||' (CASE WHEN NVL(A.RELEASEDATE,TO_DATE(RW.READINGTODATE,''DD/MM/YYYY''))>='||CHR(10)
 ||' TO_DATE(RW.READINGTODATE,''DD/MM/YYYY'') THEN TO_DATE(RW.READINGTODATE,''DD/MM/YYYY'')'||CHR(10)
 ||' ELSE  A.RELEASEDATE END)- TO_DATE(RW.READINGFROMDATE,''DD/MM/YYYY'')+1 TOTALBILLDAYS,'||CHR(10)
 ||' A.COMPANYCODE,A.DIVISIONCODE,TO_DATE(RW.READINGFROMDATE,''DD/MM/YYYY'') READINGFROMDATE,'||CHR(10)
 ||' TO_DATE(RW.READINGTODATE,''DD/MM/YYYY'') READINGTODATE,'||CHR(10)
 ||' 0 NOOFUNIT,TO_DATE(RW.FORTNIGHTSTARTDATE,''DD/MM/YYYY''),TO_DATE(RW.FORTNIGHTENDDATE,''DD/MM/YYYY''), NVL(AMOUNT,0) BILLAMOUNT,W.WORKERSERIAL,'||CHR(10)
 ||' (CASE WHEN NVL(A.RELEASEDATE,TO_DATE(RW.READINGTODATE,''DD/MM/YYYY''))>= '||CHR(10)
 ||' TO_DATE(RW.READINGTODATE,''DD/MM/YYYY'') THEN TO_DATE(RW.READINGTODATE,''DD/MM/YYYY'')'||CHR(10)
 ||' ELSE  A.RELEASEDATE END)- TO_DATE(RW.READINGFROMDATE,''DD/MM/YYYY'')+1 NOOFALLOCATIONDAYS,'||CHR(10)
 ||' '''||P_USERNAME||''' USERNAME,NULL SYSROWID, TO_CHAR(TO_DATE(RW.READINGFROMDATE,''DD/MM/YYYY''),''YYYYMM'') YEARMONTH ,TO_DATE(RW.READINGFROMDATE,''DD/MM/YYYY'')  READINGDATE,'||CHR(10)
 ||'  DEPARTMENTCODE, ''WPS'' MODULE,0 METERREADINGFROM, 0 METERREADINGTO, 0 FREEUNIT,0 CHARGEUNIT,0 UNIT_RATE, NVL(ELEC_BAL_AMT,0) PREV_DUE_AMT '||CHR(10)
 ||' FROM WPSELECTRICRAWDATA RW,QUARTERALLOCATIONDETAILS A,PISEMPLOYEEMASTER W,QUARTERMASTER M,GBL_ELECBLNC BL,'||CHR(10)
 ||' ('||CHR(10)
 ||'     SELECT LINENO,QUARTERNO, MAX(EFFECTIVEDATE) EFFECTIVEDATE '||CHR(10)
 ||'     FROM QUARTERALLOCATIONDETAILS'||CHR(10)
 ||'     WHERE COMPANYCODE='''||P_COMPANYCODE||''' AND DIVISIONCODE='''||P_DIVISIONCODE||''''||CHR(10)
 ||'       AND EFFECTIVEDATE <= TO_DATE('''||P_FORTNIGHTENDDATE||''',''DD/MM/YYYY'')'||CHR(10)
 ||'     GROUP BY QUARTERNO,LINENO'||CHR(10)
 ||' ) B'||CHR(10)
-- ||' ,('||CHR(10)
-- ||' SELECT SUM(NVL(COMPONENTAMOUNT,0)) PREVIOUSDUEAMOUNT,WORKERSERIAL FROM WPSUNREALIZEDDATA'||CHR(10)
-- ||' WHERE COMPANYCODE='''||P_COMPANYCODE||''' AND DIVISIONCODE='''||P_DIVISIONCODE||''''||CHR(10)
-- ||' GROUP BY WORKERSERIAL'||CHR(10)
-- ||' ) OUTSTANDING'||CHR(10)
 ||' WHERE A.COMPANYCODE='''||P_COMPANYCODE||'''  AND A.DIVISIONCODE='''||P_DIVISIONCODE||''''||CHR(10)
 ||'   AND A.QUARTERNO = B.QUARTERNO AND A.LINENO=B.LINENO AND A.EFFECTIVEDATE=B.EFFECTIVEDATE'||CHR(10)
 ||'   AND (A.RELEASEDATE IS NULL OR A.RELEASEDATE > TO_DATE('''||P_READINGFROMDATE||''',''DD/MM/YYYY''))'||CHR(10)
 ||'   AND A.COMPANYCODE=W.COMPANYCODE(+)'||CHR(10)
 ||'   AND A.DIVISIONCODE=W.DIVISIONCODE(+)'||CHR(10)
 ||'   AND A.WORKERSERIAL=W.WORKERSERIAL(+)'||CHR(10)
 ||'   AND A.COMPANYCODE=M.COMPANYCODE'||CHR(10)  --
 ||'   AND A.DIVISIONCODE=M.DIVISIONCODE'||CHR(10)
 ||'   AND A.LINENO=M.LINENO'||CHR(10)
 ||'   AND A.QUARTERNO=M.QUARTERNO'||CHR(10)
 ||'   AND A.QUARTERSTATUS=''ALLOCATED'''||CHR(10)
 ||'   AND A.WORKERSERIAL=BL.WORKERSERIAL(+) '||CHR(10)
 ||'   AND RW.QTRLINENO=M.LINENO'||CHR(10)
 ||'   AND RW.QTRNO=M.QUARTERNO '||CHR(10)
-- ||'AND RW.QTRLINENO||''/''||LPAD(RW.QTRNO,4,0)=M.QUARTERNO '||CHR(10)
--  ||'AND RW.QTRLINENO||''/''||LPAD(TO_NUMBER(RW.QTRNO),4,0)=M.QUARTERNO '||CHR(10)
-- ||'   AND A.WORKERSERIAL=OUTSTANDING.WORKERSERIAL(+)'||CHR(10)
 ||'   AND TO_DATE(RW.READINGFROMDATE,''DD/MM/YYYY'') >= TO_DATE('''||P_READINGFROMDATE||''',''DD/MM/YYYY'')'||CHR(10)
 ||'   AND TO_DATE(RW.READINGTODATE,''DD/MM/YYYY'') <= TO_DATE('''||P_READINGTODATE||''',''DD/MM/YYYY'')'||CHR(10)
 ||'   AND RW.FORTNIGHTSTARTDATE='''||P_FORTNIGHTSTARTDATE||''''||CHR(10)
 ||'   AND RW.FORTNIGHTENDDATE='''||P_FORTNIGHTENDDATE||''''||CHR(10)
 --||'   AND W.TOKENNO IS NOT NULL '||CHR(10)
 ||'    ORDER BY RW.QTRLINENO,RW.QTRNO'||CHR(10);
 
   DBMS_OUTPUT.PUT_LINE(LV_SQLSTR);
 EXECUTE IMMEDIATE LV_SQLSTR;
 
END;
/


--------------------------------------------------------------------
--------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE BIRLANEW.PROC_ELECBLNC_WITH_BILL_EMI
(
    P_COMPCODE  VARCHAR2,
    P_DIVCODE VARCHAR2,
    P_STARTDATE    VARCHAR2,
    P_ENDDATE      VARCHAR2,    
    P_WORKERSERIAL VARCHAR2 DEFAULT NULL,
    P_MODULE       VARCHAR2 DEFAULT 'WPS',
    P_WAGEPROCESS  VARCHAR2 DEFAULT 'NO'
)
AS 
    LV_SQLSTR           VARCHAR2(20000);
BEGIN
     DELETE FROM GBL_ELECBLNC;
     COMMIT;
    IF P_WAGEPROCESS ='YES' THEN
        DELETE FROM ELECTRICDEDUCTIONBREAKUP WHERE DEDUCTIONDATE= TO_DATE(P_ENDDATE,'DD/MM/YYYY') AND MODULE=P_MODULE;
    END IF;
    LV_SQLSTR := ' INSERT INTO GBL_ELECBLNC '||CHR(10)
           ||'  SELECT A.WORKERSERIAL, A.TOKENNO, A.QUARTERNO, READINGDATE, BILLAMOUNT, PREVIOUSDUEAMOUNT, NVL(CONTRIBUTIONAMOUNT,0)+NVL(PREVIOUSDUEAMOUNT,0) TOTALCONTRIBUTION,  '||CHR(10) 
           ||'  C.ELEC_BAL_AMT, EMIAMOUNT '||CHR(10)
           ||'  FROM ELECTRICMETERREADING A, '||CHR(10)
           ||'  ( '||CHR(10)
           ||'      SELECT WORKERSERIAL, MAX(FORTNIGHTSTARTDATE) FORTNIGHTSTARTDATE  '||CHR(10)
           ||'      FROM ELECTRICMETERREADING  '||CHR(10)
           ||'      WHERE COMPANYCODE = '''||P_COMPCODE||'''  '||CHR(10)
           ||'        AND FORTNIGHTSTARTDATE <= TO_DATE('''||P_STARTDATE||''',''DD/MM/YYYY'')  '||CHR(10) 
           ||'      GROUP BY WORKERSERIAL  '||CHR(10)
           ||'  ) B,  '||CHR(10)
           ||'  (  '||CHR(10)
           ||'      SELECT WORKERSERIAL, SUM(ELEC_BAL_AMT) ELEC_BAL_AMT  '||CHR(10)
           ||'      FROM (  '||CHR(10)
           ||'              SELECT WORKERSERIAL, SUM(NVL(CONTRIBUTIONAMOUNT,0))+SUM(NVL(PREV_DUE_AMT,0)) ELEC_BAL_AMT  '||CHR(10)
           ||'              FROM ELECTRICMETERREADING   '||CHR(10)
           ||'               WHERE COMPANYCODE= '''||P_COMPCODE||'''    '||CHR(10)
           ||'                 AND DIVISIONCODE='''||P_DIVCODE||'''     '||CHR(10)
           ||'                 AND FORTNIGHTSTARTDATE <= TO_DATE('''||P_STARTDATE||''',''DD/MM/YYYY'')  '||CHR(10)
           ||'              GROUP BY WORKERSERIAL   '||CHR(10)
           ||'              UNION ALL  '||CHR(10)
           ||'              SELECT WORKERSERIAL,-1* SUM(NVL(DEDUCTEDAMT,0)) ELEC_BAL_AMT  '||CHR(10)
           ||'              FROM ELECTRICDEDUCTIONBREAKUP    '||CHR(10)
           ||'               WHERE COMPANYCODE='''||P_COMPCODE||'''     '||CHR(10)
           ||'                 AND DIVISIONCODE= '''||P_DIVCODE||'''  '||CHR(10)
           ||'                 AND DEDUCTIONDATE <= TO_DATE('''||P_ENDDATE||''',''DD/MM/YYYY'')  '||CHR(10)
           ||'              GROUP BY WORKERSERIAL        '||CHR(10)
           ||'         )   '||CHR(10)
           ||'       GROUP BY WORKERSERIAL   '||CHR(10)
           ||'  ) C  '||CHR(10)
           ||'  WHERE A.COMPANYCODE ='''||P_COMPCODE||''' AND A.DIVISIONCODE = '''||P_DIVCODE||'''   '||CHR(10)
           ||'    AND A.WORKERSERIAL=B.WORKERSERIAL   '||CHR(10)
           ||'    AND A.FORTNIGHTSTARTDATE =B.FORTNIGHTSTARTDATE   '||CHR(10)
           ||'    AND A.WORKERSERIAL = C.WORKERSERIAL   '||CHR(10);


--    LV_SQLSTR := ' INSERT INTO GBL_ELECBLNC '||CHR(10)
--                ||' SELECT WORKERSERIAL,TOKENNO,'''' QUARTERNO,   '||CHR(10)
--                ||' SUM(NVL(ELEC_BAL_AMT,0)) ELEC_BAL_AMT,   '||CHR(10)
--                ||' /*(CASE WHEN SUBSTR(TO_DATE('''||P_ENDDATE||''',''DD/MM/YYYY''),1,2)<>''15'' THEN   '||CHR(10) 
--                ||'           ROUND(SUM(NVL(ELEC_BAL_AMT,0))/2)   '||CHR(10)
--                ||'      ELSE   '||CHR(10)
--                ||'           ROUND(SUM(NVL(ELEC_BAL_AMT,0)))   '||CHR(10)
--                ||'      END) ELEC_EMI_AMT */  SUM(NVL(ELEC_BAL_AMT,0)) ELEC_EMI_AMT   '||CHR(10)
--                ||' FROM (   '||CHR(10)
--                ||'     SELECT WORKERSERIAL,TOKENNO,SUM(NVL(ELEC_DED_AMT,0))+SUM(NVL(PREV_DUE_AMT,0)) /* SUM(NVL(ELEC_EMI,0))*/ ELEC_BAL_AMT   '||CHR(10) 
--                ||'       FROM ELECTRICMETERREADING   '||CHR(10)
--                ||'     WHERE COMPANYCODE='''||P_COMPANYCODE||'''   '||CHR(10)
--                ||'       AND DIVISIONCODE='''||P_DIVISIONCODE||'''   '||CHR(10)
--                ||'       AND READINGDATE >= TO_DATE(''01/08/2018'',''DD/MM/YYYY'') '||CHR(10)  --- THIS LINE ADDED DUE TO WAGES LIVE ON 01/08/2018
--                ||'       AND READINGDATE<=TO_DATE('''||P_ENDDATE||''',''DD/MM/YYYY'')   '||CHR(10)
--                ||'       --AND NVL(PREV_DUE_AMT,0)>0   '||CHR(10)
--                ||'     GROUP BY WORKERSERIAL,TOKENNO     '||CHR(10)
--                ||'     UNION ALL   '||CHR(10)
--                ||'     SELECT WORKERSERIAL,TOKENNO,-1* SUM(NVL(DEDUCTEDAMT,0)) DEDUCTEDAMT   '||CHR(10) 
--                ||'       FROM ELECTRICDEDUCTIONBREAKUP   '||CHR(10)
--                ||'     WHERE COMPANYCODE='''||P_COMPANYCODE||'''   '||CHR(10)
--                ||'       AND DIVISIONCODE='''||P_DIVISIONCODE||'''   '||CHR(10)
--                ||'       AND DEDUCTIONDATE >= TO_DATE(''01/08/2018'',''DD/MM/YYYY'') '||CHR(10)  --- THIS LINE ADDED DUE TO WAGES LIVE ON 01/08/2018
--                ||'       AND DEDUCTIONDATE<TO_DATE('''||P_ENDDATE||''',''DD/MM/YYYY'')   '||CHR(10)
--                ||'     GROUP BY WORKERSERIAL,TOKENNO    '||CHR(10)
--                ||' )GROUP BY WORKERSERIAL,TOKENNO  '||CHR(10);

  DBMS_OUTPUT.PUT_LINE(LV_SQLSTR);
  EXECUTE IMMEDIATE LV_SQLSTR;
END;
/


--------------------------------------------------------------------
--------------------------------------------------------------------