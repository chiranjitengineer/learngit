CREATE OR REPLACE PROCEDURE PROC_GPSWAGESPROCESS_ARREAR 
(
    P_COMPCODE VARCHAR2, 
    P_DIVCODE VARCHAR2, 
    P_PROCESSTYPE VARCHAR2 DEFAULT 'ARREAR',
    P_YEARCODE VARCHAR2,
    P_FNSTDT VARCHAR2,   
    P_FNENDT VARCHAR2,
    P_EFFECT_FNEDT    VARCHAR2,
    P_PHASE  NUMBER, 
    P_PHASE_TABLENAME VARCHAR2 DEFAULT 'GPSDAILYPAYSHEETDETAILS',
    P_TABLENAME VARCHAR2 DEFAULT 'GPSARREARDAILYPAYSHEETDETAILS',
    P_USER       VARCHAR2 DEFAULT 'SWT', 
    P_CATEGORYTYPE VARCHAR2 DEFAULT 'WORKER',
    P_CATEGORYCODE    VARCHAR2 DEFAULT NULL,
    P_WORKERSERIAL VARCHAR2 DEFAULT NULL
)
AS
LV_FN_STDT DATE := TO_DATE(P_FNSTDT,'DD/MM/YYYY');
LV_FN_ENDT DATE := TO_DATE(P_FNENDT,'DD/MM/YYYY');
LV_TABLENAME        VARCHAR2(50);
LV_FNEDT_YYYYMM     VARCHAR2(6) := TO_CHAR(TO_DATE(P_FNSTDT,'DD/MM/YYYY'),'YYYYMM');
LV_REMARKS          VARCHAR2(1000) := NULL;
LV_SQL              VARCHAR2(4000);
LV_SQLSTR              VARCHAR2(32000);
LV_PARVALUES        VARCHAR2(500);
LV_CALCULATIONTYPE  VARCHAR2(10):=NULL;
LV_SQLERRM          VARCHAR2(4000) := NULL;
LV_PROCNAME         VARCHAR2(30) := 'PROC_GPSWAGESPROCESS_ARREAR';

LV_ARRCOMPS                  VARCHAR2(4000);
LV_ARRCOMPS_SUM_CURR         VARCHAR2(4000);
LV_ARRCOMPS_SUM_PREV         VARCHAR2(4000);
BEGIN
    
    LV_PARVALUES := 'FROM - '||P_FNSTDT||', TO - '||P_FNENDT||', PHASE '||P_PHASE;

--DELETE PREVIOUS DATA START
--    LV_SQL := ' DELETE FROM '||P_TABLENAME||' '||CHR(10);
--    LV_SQL := LV_SQL || ' WHERE COMPANYCODE = '''||P_COMPCODE||''' AND DIVISIONCODE = '''||P_DIVCODE||''' '||CHR(10);
--    IF P_PROCESSTYPE = 'DAILY' THEN
--        LV_SQL := LV_SQL || '   AND ATTENDANCEDATE = TO_DATE('''||P_FNENDT||''',''DD/MM/YYYY'') '||CHR(10);
--    ELSE
--        LV_SQL := LV_SQL || '   AND PERIODFROM = TO_DATE('''||P_FNSTDT||''',''DD/MM/YYYY'') '||CHR(10);
--        LV_SQL := LV_SQL || '   AND PERIODTO = TO_DATE('''||P_FNENDT||''',''DD/MM/YYYY'') '||CHR(10);
--    END IF;
--    LV_SQL := LV_SQL||'     AND CATEGORYTYPE = '''||P_CATEGORYTYPE||''' '||CHR(10);
--    IF  NVL(P_CATEGORYCODE,'SWT') <> 'SWT' THEN
--        LV_SQL := LV_SQL||'     AND CATEGORYCODE IN ('''||P_CATEGORYCODE||''') '||CHR(10);    
--    END IF;          
--    IF NVL(P_WORKERSERIAL,'SWT') <> 'SWT' THEN
--        LV_SQL := LV_SQL||'     AND WORKERSERIAL = '''||P_WORKERSERIAL||''' '||CHR(10);
--    END IF;
--    
--    LV_REMARKS := 'DELETE '||P_PROCESSTYPE||' DATA';    
--    INSERT INTO GPS_ERROR_LOG(COMPANYCODE, DIVISIONCODE, PROC_NAME,ORA_ERROR_MESSG,ERROR_QUERY,PAR_VALUES,FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS ) 
--    VALUES( P_COMPCODE, P_DIVCODE, LV_PROCNAME,NULL,LV_SQL,LV_PARVALUES,LV_FN_STDT,LV_FN_ENDT, LV_REMARKS);
--    EXECUTE IMMEDIATE LV_SQL;
    
    --DELETE PREVIOUS DATA END    
    
    
    DELETE FROM GPSDAILYPAYSHEETDETAILS_PREV WHERE 1=1;
    
    INSERT INTO GPSDAILYPAYSHEETDETAILS_PREV
    SELECT * FROM GPSDAILYPAYSHEETDETAILS
    WHERE PERIODFROM BETWEEN LV_FN_STDT AND LV_FN_ENDT
    AND PROCESSTYPE='DAILY PROCESS'
    AND COMPANYCODE=P_COMPCODE
    AND DIVISIONCODE=P_DIVCODE
    AND CATEGORYTYPE=NVL(P_CATEGORYTYPE,CATEGORYTYPE)
    AND CATEGORYCODE=NVL(P_CATEGORYCODE,CATEGORYCODE)
    AND WORKERSERIAL=NVL(P_WORKERSERIAL,WORKERSERIAL);
    
    
    DELETE FROM GPSARREARDAILYPAYSHEET_TEMP WHERE 1=1;
    
    INSERT INTO GPSARREARDAILYPAYSHEET_TEMP
    SELECT * FROM GPSARREARDAILYPAYSHEETDETAILS
    WHERE PERIODFROM BETWEEN LV_FN_STDT AND LV_FN_ENDT
    AND PROCESSTYPE='NEW DAILY PROCESS'
    AND COMPANYCODE=P_COMPCODE
    AND DIVISIONCODE=P_DIVCODE
    AND CATEGORYTYPE=NVL(P_CATEGORYTYPE,CATEGORYTYPE)
    AND CATEGORYCODE=NVL(P_CATEGORYCODE,CATEGORYCODE)
    AND WORKERSERIAL=NVL(P_WORKERSERIAL,WORKERSERIAL);

    DELETE FROM GPSARREARDAILYPAYSHEETDETAILS
    WHERE PERIODFROM BETWEEN LV_FN_STDT AND LV_FN_ENDT
    AND PROCESSTYPE='DAILY ARREAR PROCESS'
    AND COMPANYCODE=P_COMPCODE
    AND DIVISIONCODE=P_DIVCODE
    AND CATEGORYTYPE=NVL(P_CATEGORYTYPE,CATEGORYTYPE)
    AND CATEGORYCODE=NVL(P_CATEGORYCODE,CATEGORYCODE)
    AND WORKERSERIAL=NVL(P_WORKERSERIAL,WORKERSERIAL);


    --FIND ARREAR COMPONENTS START
    SELECT WM_CONCAT(COMPONENTCODE),
    WM_CONCAT('SUM(NVL('||COMPONENTCODE||',0)) '||COMPONENTCODE),
    WM_CONCAT('SUM(NVL('||COMPONENTCODE||',0))*-1 '||COMPONENTCODE) 
    INTO LV_ARRCOMPS,LV_ARRCOMPS_SUM_CURR,LV_ARRCOMPS_SUM_PREV
    FROM GPSCOMPONENTMAST
    WHERE INCLUDEARREAR='Y'
    ORDER BY PHASE,CALCULATIONINDEX;
    --FIND ARREAR COMPONENTS END
    
--INSERT ARREAR DATA INTO TABLE STA
    LV_SQLSTR := NULL;
    LV_SQLSTR := LV_SQLSTR || 'INSERT INTO GPSARREARDAILYPAYSHEETDETAILS' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '(' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    COMPANYCODE, DIVISIONCODE,YEARCODE,PERIODFROM,PERIODTO,ATTENDANCEDATE,' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    WORKERSERIAL, TOKENNO,CATEGORYCODE,CATEGORYTYPE, OCCUPATIONCODE, CLUSTERCODE,  ATTNBOOKCODE,' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    PROCESSTYPE, ' || CHR(10);
--    LV_SQLSTR := LV_SQLSTR || '    LALW_AL,LALW_SL,BASIC, DAILYWAGES, INCENTIVE' || CHR(10);
    LV_SQLSTR := LV_SQLSTR ||'    '|| LV_ARRCOMPS || CHR(10);
    LV_SQLSTR := LV_SQLSTR || ')' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'SELECT COMPANYCODE, DIVISIONCODE,'''||P_YEARCODE||''' YEARCODE,TO_DATE('''||P_FNSTDT||''',''DD/MM/YYYY'') PERIODFROM,TO_DATE('''||P_FNENDT||''',''DD/MM/YYYY'') PERIODTO,TO_DATE('''||P_EFFECT_FNEDT||''',''DD/MM/YYYY'') ATTENDANCEDATE,' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'A.WORKERSERIAL, A.TOKENNO,B.CATEGORYCODE,A.CATEGORYTYPE, B.OCCUPATIONCODE, B.CLUSTERCODE,  B.ATTNBOOKCODE,' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '''DAILY ARREAR PROCESS'' PROCESSTYPE, ' || CHR(10);
--    LV_SQLSTR := LV_SQLSTR || 'SUM(NVL(LALW_AL,0)) LALW_AL,SUM(NVL(LALW_SL,0)) LALW_SL,SUM(NVL(BASIC,0)) BASIC,' || CHR(10);
--    LV_SQLSTR := LV_SQLSTR || 'SUM(NVL(DAILYWAGES,0)) DAILYWAGES,SUM(NVL(INCENTIVE,0)) INCENTIVE' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || LV_ARRCOMPS_SUM_CURR || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'FROM' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '(' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    SELECT COMPANYCODE, DIVISIONCODE, YEARCODE, ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    ATTENDANCEDATE, WORKERSERIAL, TOKENNO, CATEGORYCODE, CATEGORYTYPE, ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    OCCUPATIONCODE, CLUSTERCODE, AREACLASSIFICATIONCODE, ATTNBOOKCODE, ' || CHR(10);
--    LV_SQLSTR := LV_SQLSTR || '    SUM(NVL(LALW_AL,0)) LALW_AL,SUM(NVL(LALW_SL,0)) LALW_SL,SUM(NVL(BASIC,0)) BASIC,' || CHR(10);
--    LV_SQLSTR := LV_SQLSTR || '    SUM(NVL(DAILYWAGES,0)) DAILYWAGES,SUM(NVL(INCENTIVE,0)) INCENTIVE' || CHR(10);
    LV_SQLSTR := LV_SQLSTR ||'    '|| LV_ARRCOMPS_SUM_CURR || CHR(10); 
    LV_SQLSTR := LV_SQLSTR || '    FROM GPSARREARDAILYPAYSHEET_TEMP' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    WHERE PERIODFROM BETWEEN TO_DATE('''||P_FNSTDT||''',''DD/MM/YYYY'') AND TO_DATE('''||P_FNENDT||''',''DD/MM/YYYY'')' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    AND PROCESSTYPE=''NEW DAILY PROCESS''' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    GROUP BY COMPANYCODE, DIVISIONCODE, YEARCODE, ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    ATTENDANCEDATE, WORKERSERIAL, TOKENNO, CATEGORYCODE, CATEGORYTYPE, ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    OCCUPATIONCODE, CLUSTERCODE, AREACLASSIFICATIONCODE, ATTNBOOKCODE' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    UNION ALL' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    SELECT COMPANYCODE, DIVISIONCODE, YEARCODE, ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    ATTENDANCEDATE, WORKERSERIAL, TOKENNO, CATEGORYCODE, CATEGORYTYPE, ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    OCCUPATIONCODE, CLUSTERCODE, AREACLASSIFICATIONCODE, ATTNBOOKCODE, ' || CHR(10);
--    LV_SQLSTR := LV_SQLSTR || '    SUM(NVL(LALW_AL,0))*-1 LALW_AL,SUM(NVL(LALW_SL,0))*-1 LALW_SL,SUM(NVL(BASIC,0))*-1 BASIC,' || CHR(10);
--    LV_SQLSTR := LV_SQLSTR || '    SUM(NVL(DAILYWAGES,0))*-1 DAILYWAGES,SUM(NVL(INCENTIVE,0))*-1 INCENTIVE ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR ||'    '|| LV_ARRCOMPS_SUM_PREV || CHR(10); 
    LV_SQLSTR := LV_SQLSTR || '    FROM GPSDAILYPAYSHEETDETAILS_PREV' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    WHERE PERIODFROM BETWEEN TO_DATE('''||P_FNSTDT||''',''DD/MM/YYYY'') AND TO_DATE('''||P_FNENDT||''',''DD/MM/YYYY'')' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '     AND PROCESSTYPE=''DAILY PROCESS''' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '     GROUP BY COMPANYCODE, DIVISIONCODE, YEARCODE, ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    ATTENDANCEDATE, WORKERSERIAL, TOKENNO, CATEGORYCODE, CATEGORYTYPE, ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    OCCUPATIONCODE, CLUSTERCODE, AREACLASSIFICATIONCODE, ATTNBOOKCODE' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || ') A, ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '(' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    SELECT WORKERSERIAL,TOKENNO, CATEGORYCODE, OCCUPATIONCODE, CLUSTERCODE,  ATTNBOOKCODE FROM GPSEMPLOYEEMAST' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || ') B' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'WHERE A.WORKERSERIAL=B.WORKERSERIAL' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'GROUP BY COMPANYCODE, DIVISIONCODE, YEARCODE, B.CATEGORYCODE,A.CATEGORYTYPE, B.OCCUPATIONCODE, ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'B.CLUSTERCODE, B.ATTNBOOKCODE, A.WORKERSERIAL, A.TOKENNO' || CHR(10);
    
--INSERT ARREAR DATA INTO TABLE END
    
    
    
    
    
    
    
    
    
    LV_REMARKS := 'INSERT ARREAR DATA';
--    LV_SQL := 'INSERT INTO '||P_TABLENAME||' SELECT * FROM '||P_PHASE_TABLENAME||' '||CHR(10); 
    LV_SQL := LV_SQLSTR; 
    INSERT INTO GPS_ERROR_LOG(COMPANYCODE, DIVISIONCODE, PROC_NAME,ORA_ERROR_MESSG,ERROR_QUERY,PAR_VALUES,FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS ) 
    VALUES( P_COMPCODE, P_DIVCODE, LV_PROCNAME,NULL,LV_SQL,LV_PARVALUES,LV_FN_STDT,LV_FN_ENDT, LV_REMARKS);
    EXECUTE IMMEDIATE LV_SQL;                                              
    COMMIT;            
EXCEPTION
    WHEN OTHERS THEN
    LV_SQLERRM := SQLERRM;
    INSERT INTO GPS_ERROR_LOG(COMPANYCODE, DIVISIONCODE,PROC_NAME,ORA_ERROR_MESSG,ERROR_QUERY,PAR_VALUES,FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS ) 
    VALUES( P_COMPCODE, P_DIVCODE, LV_PROCNAME,LV_SQLERRM,LV_SQL,LV_PARVALUES,LV_FN_STDT,LV_FN_ENDT, 'ERROR TRAP - '||LV_REMARKS);
    COMMIT;    
END;
/
