CREATE OR REPLACE FUNCTION GET_MEDICAL_ALLOW
(
P_WORKERSERIAL VARCHAR2, 
P_YEARMONTH VARCHAR2
) RETURN NUMBER
AS
LV_SQL VARCHAR2(200) := 'SUCCESS';
LV_RESULT NUMBER(10);

LV_MONTH1 VARCHAR2(15);
LV_MONTH2 VARCHAR2(15);
LV_BASICAMT VARCHAR2(15);
LV_YEARCODE VARCHAR2(10);

BEGIN


LV_MONTH1 := TO_CHAR(ADD_MONTHS(TO_DATE(P_YEARMONTH,'YYYYMM'),-1),'YYYYMM');

LV_MONTH2 :=  TO_CHAR(ADD_MONTHS(TO_DATE(P_YEARMONTH,'YYYYMM'),-2),'YYYYMM');

--LV_YEARCODE := 


SELECT DISTINCT YEARCODE INTO LV_YEARCODE FROM FINANCIALYEAR WHERE  TO_DATE(P_YEARMONTH,'YYYYMM') BETWEEN STARTDATE AND ENDDATE;

    BEGIN
        
--        DBMS_OUTPUT.PUT_LINE(LV_MONTH1||'     LV_MONTH2  '||LV_MONTH2);
       
        
        IF (SUBSTR(P_YEARMONTH,-2) = '03') THEN
           
            SELECT MAX(RT_BASIC)+- SUM(MED_ALLOW) INTO LV_BASICAMT 
            FROM PISPAYTRANSACTION  
            WHERE WORKERSERIAL=P_WORKERSERIAL  
    --        AND YEARMONTH = P_YEARMONTH
            AND YEARCODE = LV_YEARCODE;
            
            LV_RESULT := LV_BASICAMT ;
        ELSE
             
            SELECT ROUND(SUM(MED_MONTH))  INTO LV_RESULT  FROM PISPAYTRANSACTION 
            WHERE WORKERSERIAL=P_WORKERSERIAL 
            AND YEARMONTH IN (P_YEARMONTH,LV_MONTH1,LV_MONTH2);
        
        END IF;
        
    EXCEPTION WHEN OTHERS THEN
         LV_RESULT := 0;
    END;
    RETURN LV_RESULT;
END;



SELECT * FROM PISPAYTRANSACTION
WHERE GRADECODE='A' AND Y

SELECT GET_MEDICAL_ALLOW('000212','202009') FROM DUAL

GET_MEDICAL_ALLOW(PISMAST.WORKERSERIAL,PISCOMP.YEARMONTH)

SELECT * FROM PIS_ERROR_LOG



 SELECT MED_ALLOW  
 FROM PISPAYTRANSACTION 
 WHERE WORKERSERIAL='000212' 
 AND YEARMONTH='202009'
    
      INTO LV_SQL
      
SELECT PAYFORMULA FROM PISCOMPONENTMASTER      

SELECT * FROM PISCOMPONENTASSIGNMENT
WHERE TRANSACTIONTYPE LIKE 'ASS%'
AND TOKENNO IN (00794,01068)

