DROP PROCEDURE NJMCL_WEB.PROC_WPS_VB_MCH_WEAV;

CREATE OR REPLACE PROCEDURE NJMCL_WEB.PROC_WPS_VB_MCH_WEAV ( P_COMPCODE VARCHAR2, P_DIVCODE VARCHAR2, P_YEARCODE VARCHAR2,P_FN_STDT VARCHAR2, P_FN_ENDT VARCHAR2, P_1ST_WK_ENDT VARCHAR2 DEFAULT NULL, 
                                                         P_TABLENAME varchar2 DEFAULT 'WPSVBDETAILS', P_PRODUCTIONTYPE VARCHAR2 DEFAULT NULL, 
                                                         P_DEPARTMENT VARCHAR2 DEFAULT NULL, P_SECTION VARCHAR2 DEFAULT NULL, 
                                                         P_OCCUPATION VARCHAR2 DEFAULT NULL, P_WORKERSERIAL VARCHAR2 DEFAULT NULL)
AS
----- THIS PROCEDURE WRITTEN BY Amalesh Das ON 15.04.2020 ----
----- THIS PROCEDURE USE FOR CALCULATE VARIABLE BASIC BASED ON FORTNIGHTLY INDIVIDUAL MACHINEWISE, QUALITY WISE PRODUCTION 
----- QUALITYRATE TAKE FROM  - WPSQUALITYRATE_ON_REEDSPACE TABLE -----
----- AND BELOW OTHER PROCEDURE CALLS HELPER, SARDAR, HELPER RELIVER, SARDAR RELIVER PRODUCTION BASIC CALCULATION ---------- 

lv_Sql      varchar2(20000) := '';
lv_ProcName varchar2(30) := 'PROC_WPS_VB_MCH_WEAV';
lv_ParValue varchar2(200) := '';
lv_Remarks  varchar2(200) := '';
lv_FN_STDT  date := to_date(P_FN_STDT,'DD/MM/YYYY');
lv_FN_ENDT  date := to_date(P_FN_ENDT,'DD/MM/YYYY');
lv_SqlErr   varchar2(200) := '';
lv_SectionCode   varchar2(10) := '';
lv_DeptCode varchar2(10) :='';
lv_OcpCode  varchar2(10) := '';       
lv_dependantsectioncode varchar2(10) := '';
lv_OccupationType   varchar2(50) := '';
lv_ProductionType   varchar2(10) := '';
Begin

--    SELECT SECTIONCODE into lv_SectionCode FROM WPSPRODUCTIONTYPEMAST 
--    WHERE COMPANYCODE = P_COMPCODE
--    AND DIVISIONCODE = P_DIVCODE
--    AND PRODUCTIONTYPECODE = P_PRODUCTIONTYPE ;
    

    IF P_PRODUCTIONTYPE IS NOT NULL THEN
        lv_ProductionType := P_PRODUCTIONTYPE;   
        BEGIN
            select DEPARTMENTCODE, SECTIONCODE, OCCUPATIONCODE into lv_DeptCode,lv_SectionCode, lv_OcpCode 
            FROM WPSPRODUCTIONTYPEMAST 
            WHERE COMPANYCODE = P_COMPCODE AND DIVISIONCODE = P_DIVCODE
              AND PRODUCTIONTYPECODE = P_PRODUCTIONTYPE;
              --lv_TempTable :='WPS_PREPROCESS_TEMP_'||lv_SectionCode;
        EXCEPTION
            WHEN OTHERS THEN lv_SectionCode := '';      
        END;
    ELSE
        IF P_DEPARTMENT IS NOT NULL AND P_SECTION IS NOT NULL THEN
            BEGIN
                lv_SectionCode := P_SECTION;
                lv_DeptCode := P_DEPARTMENT;
                lv_OcpCode  := P_OCCUPATION;
               
                SELECT PRODUCTIONTYPECODE INTO lv_ProductionType 
                FROM WPSPRODUCTIONTYPEMAST 
                WHERE COMPANYCODE = P_COMPCODE AND DIVISIONCODE = P_DIVCODE
                  AND DEPARTMENTCODE= P_DEPARTMENT
                  AND SECTIONCODE = P_SECTION;
            EXCEPTION
                WHEN OTHERS THEN lv_ProductionType := 'SWT';    
            END;        
        END IF;    
    END IF;
    
    SELECT OCCUPATIONTYPE into lv_OccupationType
    FROM WPSOCCUPATIONMAST
    WHERE COMPANYCODE=P_COMPCODE AND DIVISIONCODE = P_DIVCODE
      AND DEPARTMENTCODE = lv_DeptCode AND SECTIONCODE = lv_SectionCode AND OCCUPATIONCODE = lv_OcpCode;    
    -- THIS BLOCK IS FOR CALCULATIING MACHINE WISE TOTAL HOUR AND VB AMOUNT
    
    BEGIN
        EXECUTE IMMEDIATE 'DROP TABLE WPSTMP_MCHWISEVBAMT';
    EXCEPTION
        WHEN OTHERS THEN NULL;     
    END;     
    
    lv_Remarks := 'CREATE TABLE WPSTMP_MCHWISEVBAMT ' ||  P_PRODUCTIONTYPE; 
    
    lv_Sql :=  ' CREATE TABLE WPSTMP_MCHWISEVBAMT AS '||chr(10)
             ||' SELECT A.DEPARTMENTCODE,''' ||lv_SectionCode|| ''' AS SECTIONCODE, A.PRODUCTIONTYPE, A.SHIFTCODE, A.LOOMCODE, A.MACHINECODE, '||chr(10)  
             ||' A.QUALITYCODE, B.QUALITYRATE, SUM(NVL(TOTALPRODUCTION,0)) PRODUCTION,    '||chr(10)
             ||' ROUND(ROUND(SUM(NVL(TOTALPRODUCTION,0))/NVL(B.UNITQUANTITY,1),2)*B.QUALITYRATE* NVL(B.PERCENTAGEOFRATE,100)*0.01,2) VBAMOUNT '||chr(10)   
             ||' FROM WPSPRODUCTIONSUMMARY A,    '||chr(10)
             ||' (    '||chr(10)
             ||'    SELECT X.PRODUCTIONTYPE, X.QUALITYCODE, X.REEDSPACE, CASE WHEN NVL(X.UNITQUANTITY,1) = 0 THEN 1 ELSE NVL(X.UNITQUANTITY,1) END UNITQUANTITY, '||chr(10)   
             ||'    CASE WHEN NVL(X.PERCENTAGEOFRATE,0)=0 THEN 100 ELSE X.PERCENTAGEOFRATE END PERCENTAGEOFRATE, X.QUALITYRATE    '||chr(10)
             ||'    FROM  WPSQUALITYRATE_ON_REEDSPACE X,    '||chr(10)
             ||'    (    '||chr(10)
             ||'       SELECT PRODUCTIONTYPE, QUALITYCODE, MAX(EFFECTIVEDATE) EFFECTIVEDATE '||chr(10)   
             ||'       FROM WPSQUALITYRATE_ON_REEDSPACE    '||chr(10)
             ||'       WHERE COMPANYCODE = ''' ||P_COMPCODE|| ''' AND DIVISIONCODE = ''' ||P_DIVCODE|| ''' '||chr(10)
             ||'       AND PRODUCTIONTYPE = ''' ||lv_ProductionType|| '''  '||chr(10)
             ||'       GROUP BY PRODUCTIONTYPE, QUALITYCODE    '||chr(10)
             ||'    ) Y    '||chr(10)
             ||'    WHERE X.COMPANYCODE = ''' ||P_COMPCODE|| ''' AND DIVISIONCODE = ''' ||P_DIVCODE|| ''' '||chr(10)    
             ||'      AND X.PRODUCTIONTYPE = Y.PRODUCTIONTYPE    '||chr(10)
             ||'      AND X.QUALITYCODE = Y.QUALITYCODE AND X.EFFECTIVEDATE = Y.EFFECTIVEDATE '||chr(10)    
             ||' ) B   '||chr(10)
             ||' WHERE A.COMPANYCODE = ''' ||P_COMPCODE|| ''' AND A.DIVISIONCODE = ''' ||P_DIVCODE|| ''' '||chr(10)
             ||'   AND A.YEARCODE = ''' ||P_YEARCODE|| ''' '||chr(10)
             ||'   AND A.STARTDATE >= ''' ||lv_FN_STDT|| ''' AND A.STARTDATE <= ''' ||lv_FN_ENDT|| ''' '||chr(10) 
             ||'   AND A.PRODUCTIONTYPE = B.PRODUCTIONTYPE   '||chr(10)
             ||'   AND A.QUALITYCODE = B.QUALITYCODE   '||chr(10)
             ||'   /*AND A.REEDSPACE = B.REEDSPACE */'||chr(10)
             ||'   AND A.TRANSACTIONTYPE = ''GENERAL'' '||chr(10)
             ||'   GROUP BY A.DEPARTMENTCODE, A.PRODUCTIONTYPE, A.SHIFTCODE, A.LOOMCODE, A.MACHINECODE, A.QUALITYCODE, B.QUALITYRATE, B.UNITQUANTITY, B.PERCENTAGEOFRATE ';
--                 ||'   ) '||chr(10) 
--                 ||'   GROUP BY LOOMCODE, MACHINECODE ';
                 
      EXECUTE IMMEDIATE lv_Sql;
      
      INSERT INTO WPS_ERROR_LOG (COMPANYCODE, DIVISIONCODE, PROC_NAME, ORA_ERROR_MESSG, ERROR_DATE, ERROR_QUERY, PAR_VALUES, FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS) 
      values ( P_COMPCODE, P_DIVCODE, lv_ProcName,'',SYSDATE, lv_Sql,lv_ParValue, lv_FN_STDT, lv_FN_ENDT, lv_Remarks); 
      COMMIT; 
      
     -- END BLOCK
      
     --RETURN;
      

    -- THIS BLOCK IS TO FIND OUT WHICH MACHINES PER HOURLY RATE WILL NOT CALCULATE ON TOTAL PICK OR MACHINES ARE NOT APPLICABLE 
    -- FOR CALCULATION BASED ON TOTAL PICK
    BEGIN
        EXECUTE IMMEDIATE 'DROP TABLE WPSTMP_SHIFTWISEMACHINEWISEHR';
    EXCEPTION
        WHEN OTHERS THEN NULL;    
    END;
    
    
   lv_Sql := ' CREATE TABLE WPSTMP_SHIFTWISEMACHINEWISEHR AS '||chr(10)
   --- Changes as per version version V05 and calculation logic mailed on 02.05.2020 ommit NS_HRS and OT_NS_HRS  --------
--      ||' SELECT /*DECODE(GROUPCODE,''B'', ''2'',''C'',''3'',''1'') */ GROUPCODE SHIFTCODE, LOOMCODE, SUM(NVL(ATTENDANCEHOURS,0)+NVL(OVERTIMEHOURS,0)+NVL(NIGHTALLOWANCEHOURS,0)+ NVL(OT_NSHRS,0)) TOTHOURS, '||chr(10)
      ||' SELECT /*DECODE(GROUPCODE,''B'', ''2'',''C'',''3'',''1'') */ GROUPCODE SHIFTCODE, LOOMCODE, SUM(NVL(ATTENDANCEHOURS,0)+NVL(OVERTIMEHOURS,0)) TOTHOURS, '||chr(10)      
      ||' SUM(NVL(ATTENDANCEHOURS,0)) ATTN_HRS, SUM(NVL(OVERTIMEHOURS,0)) OT_HRS, SUM(NVL(NIGHTALLOWANCEHOURS,0)) NS_HRS, SUM(NVL(OT_NSHRS,0)) OTNS_HRS '||CHR(10)
      ||' FROM WPSATTENDANCEDAYWISE '||chr(10)
      ||' WHERE COMPANYCODE = ''' ||P_COMPCODE|| ''' '||chr(10)
      ||'   AND DIVISIONCODE = ''' ||P_DIVCODE|| '''  '||chr(10)
      ||'   AND YEARCODE = ''' ||P_YEARCODE|| '''   '||chr(10)
      ||'   AND FORTNIGHTSTARTDATE >=  ''' ||lv_FN_STDT|| ''' '||chr(10)
      ||'   AND FORTNIGHTENDDATE <=  ''' ||lv_FN_ENDT|| ''' '||chr(10)
      ||'   AND DEPARTMENTCODE = '''||lv_DeptCode||''' '||chr(10)
      ||'   AND SECTIONCODE = ''' ||lv_SectionCode|| ''' '||chr(10)
      ||'   AND OCCUPATIONCODE = '''||lv_OcpCode||''' '||chr(10) 
      ||'   AND NVL(LOOMCODE,''NONE'') <> ''NONE'' '||chr(10)
      ||' GROUP BY GROUPCODE/*SHIFTCODE*/, LOOMCODE '||chr(10);
        
    INSERT INTO WPS_ERROR_LOG (COMPANYCODE, DIVISIONCODE, PROC_NAME, ORA_ERROR_MESSG, ERROR_DATE, ERROR_QUERY, PAR_VALUES, FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS) 
    values ( P_COMPCODE, P_DIVCODE, lv_ProcName,'',SYSDATE, lv_Sql,lv_ParValue, lv_FN_STDT, lv_FN_ENDT, lv_Remarks); 
    COMMIT;

    EXECUTE IMMEDIATE lv_Sql;        
    COMMIT;
     
    -- END BLOCK
    
    --- THEN BLOCK USE MACHINE AND LOOMCODE WISE HELPER, SARDAR, RELIVERNO FOUND
    BEGIN
        EXECUTE IMMEDIATE 'DROP TABLE WPSMACHINELINEMAPING_TEMP';
    EXCEPTION
        WHEN OTHERS THEN NULL;    
    END;
    
    lv_Sql := ' CREATE TABLE WPSMACHINELINEMAPING_TEMP AS '||CHR(10) 
       ||' SELECT A.MACHINECODE, A.LOOMCODE, H.HELPERNO, S.SARDARNO, R.RELIVERNO '||chr(10)
       ||' FROM  '||chr(10)
       ||'  (   '||chr(10)
       ||'       SELECT MACHINECODE, LOOMCODE FROM WPSMACHINELOOMMAPPING  '||chr(10)
       ||'       WHERE COMPANYCODE=''' ||P_COMPCODE|| ''' AND DIVISIONCODE ='''||P_DIVCODE||'''  '||chr(10)
       ||'         AND DEPARTMENTCODE ='''||lv_DeptCode||''' AND SECTIONCODE='''||lv_SectionCode||'''  '||chr(10)
       ||'         AND EFFECTIVEDATE = (  SELECT MAX(EFFECTIVEDATE) EFFECTIVEDATE  '||chr(10)
       ||'                                FROM WPSMACHINELOOMMAPPING  '||chr(10)
       ||'                                WHERE COMPANYCODE=''' ||P_COMPCODE|| ''' AND DIVISIONCODE ='''||P_DIVCODE||'''  '||chr(10)
       ||'                                  AND DEPARTMENTCODE ='''||lv_DeptCode||''' AND SECTIONCODE='''||lv_SectionCode||'''  '||chr(10)
       ||'                             )  '||chr(10)
       ||'   ) A,  '||chr(10)
       ||'   ( '||chr(10)
       ||'       SELECT MACHINECODE, LINENO HELPERNO FROM WPSMACHINELINEMAPPING  '||chr(10)
       ||'       WHERE COMPANYCODE=''' ||P_COMPCODE|| ''' AND DIVISIONCODE ='''||P_DIVCODE||''' '||chr(10)
       ||'         AND DEPARTMENTCODE ='''||lv_DeptCode||'''  '||chr(10)
       ||'         AND MAPPINGTAG=''HELPER'' '||chr(10)
       ||'         AND EFFECTIVEDATE = (  SELECT MAX(EFFECTIVEDATE) EFFECTIVEDATE  '||chr(10)
       ||'                                FROM WPSMACHINELINEMAPPING '||chr(10)
       ||'                                WHERE COMPANYCODE=''' ||P_COMPCODE|| ''' AND DIVISIONCODE ='''||P_DIVCODE||'''  '||chr(10)
       ||'                                  AND DEPARTMENTCODE ='''||lv_DeptCode||''' '||chr(10)
       ||'                                  AND MAPPINGTAG=''HELPER'' '||chr(10)
       ||'                             )  '||chr(10)
       ||'   ) H, '||chr(10)
       ||'   ( '||chr(10)
       ||'       SELECT MACHINECODE, LINENO SARDARNO FROM WPSMACHINELINEMAPPING '||chr(10)
       ||'       WHERE COMPANYCODE=''' ||P_COMPCODE|| ''' AND DIVISIONCODE ='''||P_DIVCODE||''' '||chr(10)
       ||'         AND DEPARTMENTCODE ='''||lv_DeptCode||'''  '||chr(10)
       ||'         AND MAPPINGTAG=''SARDAR'' '||chr(10)
       ||'         AND EFFECTIVEDATE = (  SELECT MAX(EFFECTIVEDATE) EFFECTIVEDATE '||chr(10)
       ||'                                FROM WPSMACHINELINEMAPPING '||chr(10)
       ||'                                WHERE COMPANYCODE=''' ||P_COMPCODE|| ''' AND DIVISIONCODE ='''||P_DIVCODE||''' '||chr(10)
       ||'                                  AND DEPARTMENTCODE ='''||lv_DeptCode||'''  '||chr(10)
       ||'                                  AND MAPPINGTAG=''SARDAR'' '||chr(10)
       ||'                             )   '||chr(10)
       ||'   ) S, '||chr(10)
       ||'   ( '||chr(10)
       ||'       SELECT MACHINECODE, LINENO RELIVERNO FROM WPSMACHINELINEMAPPING '||chr(10)
       ||'       WHERE COMPANYCODE=''' ||P_COMPCODE|| ''' AND DIVISIONCODE ='''||P_DIVCODE||''' '||chr(10)
       ||'         AND DEPARTMENTCODE ='''||lv_DeptCode||'''  '||chr(10)
       ||'         AND MAPPINGTAG=''RELIVER'' '||chr(10)
       ||'         AND EFFECTIVEDATE = (  SELECT MAX(EFFECTIVEDATE) EFFECTIVEDATE '||chr(10)
       ||'                                FROM WPSMACHINELINEMAPPING '||chr(10)
       ||'                                WHERE COMPANYCODE=''' ||P_COMPCODE|| ''' AND DIVISIONCODE ='''||P_DIVCODE||''' '||chr(10)
       ||'                                  AND DEPARTMENTCODE ='''||lv_DeptCode||''' '||chr(10)
       ||'                                  AND MAPPINGTAG=''RELIVER'' '||chr(10)
       ||'                             )   '||chr(10)
       ||'   ) R '||chr(10)
       ||'   WHERE A.MACHINECODE = H.MACHINECODE (+) '||chr(10)
       ||'     AND A.MACHINECODE = S.MACHINECODE (+) '||chr(10)
       ||'     AND A.MACHINECODE = R.MACHINECODE (+) '||chr(10);
    
    --END BLOCK    
      -- THIS BLOCK IS FOR DELETE AND INSERT DATA INTO WPSLINEHOURLYRATE MACHINE WISE
      
    INSERT INTO WPS_ERROR_LOG (COMPANYCODE, DIVISIONCODE, PROC_NAME, ORA_ERROR_MESSG, ERROR_DATE, ERROR_QUERY, PAR_VALUES, FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS) 
    values ( P_COMPCODE, P_DIVCODE, lv_ProcName,'',SYSDATE, lv_Sql,lv_ParValue, lv_FN_STDT, lv_FN_ENDT, lv_Remarks); 
    COMMIT; 

    EXECUTE IMMEDIATE lv_Sql;      
      
    lv_Remarks := 'DELETE FROM WPSLINEHOURLYRATE MACHINE WISE PRODUCTION TYPE ' ||  P_PRODUCTIONTYPE;
    
  --  DBMS_OUTPUT.PUT_LINE('1_0'); 
    lv_Sql := ' DELETE FROM WPSLINEHOURLYRATE '||chr(10)  
             ||'WHERE COMPANYCODE = ''' ||P_COMPCODE|| ''' '||chr(10)  
             ||'AND DIVISIONCODE = ''' ||P_DIVCODE|| ''' '||chr(10)  
             ||'AND PRODUCTIONTYPE = ''' ||P_PRODUCTIONTYPE|| ''' '||chr(10)  
             ||'AND FORTNIGHTSTARTDATE = ''' ||lv_FN_STDT|| ''' '||chr(10)  
             ||'AND FORTNIGHTENDDATE = ''' ||lv_FN_ENDT|| ''' '||chr(10)  
             ||'AND LINETAG = ''MACHINE'' '||chr(10)
             ||'AND TRANTYPE = ''VB'' ';  
    
    INSERT INTO WPS_ERROR_LOG (COMPANYCODE, DIVISIONCODE, PROC_NAME, ORA_ERROR_MESSG, ERROR_DATE, ERROR_QUERY, PAR_VALUES, FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS) 
    values ( P_COMPCODE, P_DIVCODE, lv_ProcName,'',SYSDATE, lv_Sql,lv_ParValue, lv_FN_STDT, lv_FN_ENDT, lv_Remarks); 
    COMMIT; 

    EXECUTE IMMEDIATE lv_Sql;
             
    COMMIT; 
    --DBMS_OUTPUT.PUT_LINE('1_1');    
     lv_Remarks := 'INSERT INTO WPSLINEHOURLYRATE MACHINE WISE PRODUCTION TYPE ' ||  P_PRODUCTIONTYPE;
        
    lv_Sql := ' INSERT INTO WPSLINEHOURLYRATE ( '||CHR(10)
            ||' COMPANYCODE, DIVISIONCODE, FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, SHIFTCODE, '||CHR(10) 
            ||' PRODUCTIONTYPE,DEPARTMENTCODE, SECTIONCODE, OCCUPATIONCODE, LINETAG, LINENO, HELPERNO, SARDARNO, RELIVERNO, MACHINECODE, LOOMCODE, '||CHR(10) 
            ||' QUANTITY, PIECERATEHOURS, PIECERATEBASIC, VBHOURLYRATE,  '||CHR(10)
            ||' TOTALHOURS, TOTALBASIC, OCCUPATIONTYPE, TOTALPRODUCTION, TRANTYPE,  '||CHR(10) 
            ||' LASTMODIFIED, USERNAME, SYSROWID)  '||CHR(10)

            ||' SELECT '''||P_COMPCODE||''' COMPANYCODE, '''||P_DIVCODE||''' DIVISIONCODE, '''||lv_FN_STDT||''' FORTNIGHTSTARTDATE, '''||lv_FN_ENDT||''' FORNIGHTENDDATE, A.SHIFTCODE,  '||CHR(10) 
            ||' A.PRODUCTIONTYPE, A.DEPARTMENTCODE, A.SECTIONCODE, '''||lv_OcpCode||''' OCCUPATIONCODE, ''MACHINE'' LINETAG, NULL LINENO, C.HELPERNO, C.SARDARNO, C.RELIVERNO, D.MACHINECODE,  A.LOOMCODE,  '||CHR(10)
            ||' 0 QUALTITY, B.TOTHOURS PIECERATEHOURS, SUM(A.VBAMOUNT) PIECERATEBASIC, ROUND(SUM(A.VBAMOUNT) / B.TOTHOURS,5) VBHOURLYRATE,  '||CHR(10)
            ||' B.TOTHOURS TOTALHOURS, SUM(A.VBAMOUNT) TOTALBASIC, '''||lv_OccupationType||''' OCCUPATIONTYPE, 0 TOTALPRODUCTION, ''VB'' TRANTYPE,  '||CHR(10)
            ||' SYSDATE LASTMODIFIED, ''SWT'' USERNAME, SYS_GUID()  SYSROWID '||CHR(10)
            ||' FROM WPSTMP_MCHWISEVBAMT A, WPSTMP_SHIFTWISEMACHINEWISEHR B, '||CHR(10)
            ||' (SELECT DISTINCT LOOMCODE, HELPERNO, SARDARNO, RELIVERNO FROM WPSMACHINELINEMAPING_TEMP) C,  '||CHR(10)
            ||' ( '||CHR(10)
            ||'     SELECT LOOMCODE, MAX(MACHINECODE) MACHINECODE FROM WPSTMP_MCHWISEVBAMT GROUP BY LOOMCODE '||CHR(10)  
            ||' ) D '||CHR(10)
            ||' WHERE A.SHIFTCODE = B.SHIFTCODE AND A.LOOMCODE = B.LOOMCODE  '||CHR(10)
            ||'   AND A.LOOMCODE = C.LOOMCODE '||CHR(10)
            ||'   AND A.MACHINECODE = D.MACHINECODE '||CHR(10)
            ||' GROUP  BY A.PRODUCTIONTYPE, A.DEPARTMENTCODE, A.SECTIONCODE, A.SHIFTCODE, D.MACHINECODE, A.LOOMCODE, C.HELPERNO, C.SARDARNO, C.RELIVERNO,B.TOTHOURS  '||CHR(10);

    INSERT INTO WPS_ERROR_LOG (COMPANYCODE, DIVISIONCODE, PROC_NAME, ORA_ERROR_MESSG, ERROR_DATE, ERROR_QUERY, PAR_VALUES, FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS) 
    values ( P_COMPCODE, P_DIVCODE, lv_ProcName,'',SYSDATE, lv_Sql,lv_ParValue, lv_FN_STDT, lv_FN_ENDT, lv_Remarks);
    commit;
    EXECUTE IMMEDIATE lv_Sql; 
    COMMIT;
--    RETURN; 
    
--    DBMS_OUTPUT.PUT_LINE('2_0');
    -- END BLOCK
   
    ---- THE BLOSCK USE FOR SHIFT,DEPT,SECTION, OCUUPATION, DEPT SERIAL WISE WEAVE VB CALCUATION -----------

    lv_Remarks := 'DELETE FROM VBDETAILS ' ||  P_PRODUCTIONTYPE;
    
  --  DBMS_OUTPUT.PUT_LINE('1_0'); 
    lv_Sql := ' DELETE FROM WPSVBDETAILS '||chr(10)  
            ||' WHERE COMPANYCODE = ''' ||P_COMPCODE|| ''' '||chr(10)  
            ||'   AND DIVISIONCODE = ''' ||P_DIVCODE|| ''' '||chr(10)  
            ||'   AND FORTNIGHTSTARTDATE = ''' ||lv_FN_STDT|| ''' '||chr(10)  
            ||'   AND FORTNIGHTENDDATE = ''' ||lv_FN_ENDT|| ''' '||chr(10)  
            ||'   AND PRODUCTIONTYPE = ''' ||P_PRODUCTIONTYPE|| ''' '||chr(10)
            ||'   AND OCCUPATIONCODE = '''||lv_OcpCode||''' '||chr(10);
    
    INSERT INTO WPS_ERROR_LOG (COMPANYCODE, DIVISIONCODE, PROC_NAME, ORA_ERROR_MESSG, ERROR_DATE, ERROR_QUERY, PAR_VALUES, FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS) 
    values ( P_COMPCODE, P_DIVCODE, lv_ProcName,'',SYSDATE, lv_Sql,lv_ParValue, lv_FN_STDT, lv_FN_ENDT, lv_Remarks);
    commit;
    EXECUTE IMMEDIATE lv_Sql; 
    COMMIT;
   
     lv_Remarks := 'INESERT IN VBDETIAL FOR WEAVER BASED ON SHIFT,DEPT, SECTION, OCP, DETPSERIAL';

     lv_Sql := 'INSERT INTO WPSVBDETAILS ( '||chr(10)
         ||' COMPANYCODE, DIVISIONCODE, FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, '||chr(10) 
         ||' PRODUCTIONTYPE, DEPARTMENTCODE, SECTIONCODE,SHIFTCODE, DEPTSERIAL, OCCUPATIONCODE, OCCUPATIONTYPE,WORKERSERIAL, TOKENNO, LINETAG, '||chr(10)
         ||' MACHINECODE, HELPERNO, SARDARNO, RELIVERNO, PRODUCTIONHOURS, ATTENDANCEHOURS, NS_HOURS, OVERTIMEHOURS, OTNS_HOURS, '||chr(10)
         ||' VBRATE, VBAMOUNT, VBAMOUNT_FBK, VBAMOUNT_OT, VBAMOUNT_NS, VBAMOUNT_OTNS, VBAMOUNT_HOLIDAY, TOTAL_VBAMOUNT, '||chr(10)
         ||' USERNAME, LASTMODIFIED, SYSROWID ) '||chr(10)
         ||' SELECT '''||P_COMPCODE||''' COMPANYCODE, '''||P_DIVCODE||''' DIVISIONCODE, '''||lv_FN_STDT||''' FORTNIGHTSTARTDATE, '''||lv_FN_ENDT||''' FORTNIGHTENDDATE, '||CHR(10) 
         ||' '''||P_PRODUCTIONTYPE||''' PRODUCTIONTYPE, A.DEPARTMENTCODE, A.SECTIONCODE, A.SHIFTCODE, A.DEPTSERIAL, '''||lv_OcpCode||''' OCCUPATIONCODE, R.OCCUPATIONTYPE, A.WORKERSERIAL, A.TOKENNO, ''MACHINE'' LINETAG,  '||CHR(10)
         ||'  A.MACHINECODE1, R.HELPERNO, R.SARDARNO, R.RELIVERNO, SUM(NVL(A.ATTENDANCEHOURS,0)+NVL(A.NIGHTALLOWANCEHOURS,0) + NVL(A.OVERTIMEHOURS,0)+NVL(A.OT_NSHRS,0)) PRODUCTIONHOURS,  '||CHR(10)
         ||'  SUM(NVL(A.ATTENDANCEHOURS,0)) ATTENDANCEHOURS, SUM(NVL(A.NIGHTALLOWANCEHOURS,0)) NS_HOURS, SUM(NVL(A.OVERTIMEHOURS,0)) OVERTIMEHOURS, SUM(NVL(A.OT_NSHRS,0)) OTNS_HOURS,  '||CHR(10)
         ||'  NVL(R.VBHOURLYRATE,0)VBRATE, ROUND(SUM(NVL(A.ATTENDANCEHOURS,0)) * NVL(R.VBHOURLYRATE,0),2) VBAMOUNT, 0 VBAMOUNT_FBK,  '||CHR(10)
         ||'  ROUND(SUM(NVL(A.OVERTIMEHOURS,0))*NVL(R.VBHOURLYRATE,0),2) VBAMOUNT_OT,  '||CHR(10)
         ||'  ROUND(SUM(NVL(A.NIGHTALLOWANCEHOURS,0))*NVL(R.VBHOURLYRATE,0),2) VBAMOUNT_NS,  '||CHR(10)
         ||'  ROUND(SUM(NVL(A.OT_NSHRS,0))*NVL(R.VBHOURLYRATE,0),2) VBAMOUNT_OTNS,  '||CHR(10)
         ||'  ROUND(SUM(NVL(A.HOLIDAYHOURS,0))*NVL(R.VBHOURLYRATE,0),2) VBAMOUNT_HOLIDAY,  '||CHR(10)
         ||'  (ROUND(SUM(NVL(A.ATTENDANCEHOURS,0)) * NVL(R.VBHOURLYRATE,0),2) + ROUND(SUM(NVL(A.OVERTIMEHOURS,0))*NVL(R.VBHOURLYRATE,0),2)+ROUND(SUM(NVL(A.NIGHTALLOWANCEHOURS,0))*NVL(R.VBHOURLYRATE,0),2) '||CHR(10)
         ||'   + ROUND(SUM(NVL(A.OT_NSHRS,0))*NVL(R.VBHOURLYRATE,0),2)+ROUND(SUM(NVL(A.HOLIDAYHOURS,0))*NVL(R.VBHOURLYRATE,0),2)) TOTAL_VBAMOUNT,  '||CHR(10)
         ||' ''SWT'' USERNAME, SYSDATE LASTMODIFIED, SYS_GUID() SYSROWID  '||CHR(10)
         ||' FROM WPSATTENDANCEDAYWISE  A, WPSLINEHOURLYRATE R  '||CHR(10)
         ||' WHERE A.COMPANYCODE = '''||P_COMPCODE||''' AND A.DIVISIONCODE = ''' ||P_DIVCODE|| '''  '||CHR(10)
         ||'   AND R.FORTNIGHTSTARTDATE  = '''||lv_FN_STDT||'''  '||CHR(10)
         ||'   AND R.FORTNIGHTENDDATE  = '''||lv_FN_ENDT||'''  '||CHR(10)
         ||'   AND A.DATEOFATTENDANCE BETWEEN   R.FORTNIGHTSTARTDATE AND R.FORTNIGHTENDDATE '||CHR(10) 
         ||'   AND A.COMPANYCODE =  R.COMPANYCODE  AND A.DIVISIONCODE =  R.DIVISIONCODE  '||CHR(10)
         ||'   AND A.DEPARTMENTCODE = R.DEPARTMENTCODE  AND A.SECTIONCODE = R.SECTIONCODE   '||CHR(10)
         ||'   AND A.SHIFTCODE = R.SHIFTCODE AND A.LOOMCODE = R.LOOMCODE    '||CHR(10)
         ||'   AND R.PRODUCTIONTYPE = '''||P_PRODUCTIONTYPE||''' '||CHR(10)
         ||'   AND R.LINETAG = ''MACHINE''   '||CHR(10)
         ||'   AND (NVL(A.ATTENDANCEHOURS,0)+NVL(A.OVERTIMEHOURS,0)+NVL(A.HOLIDAYHOURS,0)) > 0  '||CHR(10)
         ||' GROUP BY  A.DEPARTMENTCODE, R.PRODUCTIONTYPE, A.SECTIONCODE, A.SHIFTCODE, A.DEPTSERIAL,R.OCCUPATIONTYPE,R.VBHOURLYRATE, '||CHR(10) 
         ||' A.TOKENNO, A.WORKERSERIAL, A.MACHINECODE1, R.HELPERNO, R.SARDARNO, R.RELIVERNO  '||CHR(10);   

    
    INSERT INTO WPS_ERROR_LOG (COMPANYCODE, DIVISIONCODE, PROC_NAME, ORA_ERROR_MESSG, ERROR_DATE, ERROR_QUERY, PAR_VALUES, FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS) 
    values ( P_COMPCODE, P_DIVCODE, lv_ProcName,'',SYSDATE, lv_Sql,lv_ParValue, lv_FN_STDT, lv_FN_ENDT, lv_Remarks);
    commit;
    EXECUTE IMMEDIATE lv_Sql; 
    COMMIT;
--    RETURN;
    --PROC_VBDETAILS_WEAV_INSERT ( P_COMPCODE, P_DIVCODE, NULL, P_FN_STDT, P_FN_ENDT,NULL,'WPSVBDETAILS',P_PRODUCTIONTYPE,NULL, NULL,NULL,NULL);
    
--    SELECT DEPENDANTSECTIONCODE INTO lv_dependantsectioncode FROM WPSSECTIONMAST
--    WHERE COMPANYCODE = P_COMPCODE
--    AND DIVISIONCODE =  P_DIVCODE
--    AND SECTIONCODE = lv_SectionCode;
   ----- CALLING LINE OCCUPATION HELPER,SARDAR, HELPER RELIVER, SARDAR RELIVER ---
   --- WEAVING RELIAVER STILL PENDING DUE TO NO DATA AVAILABLE FOR PENDING ------ 
   PROC_WPS_VB_LINE_OCP( P_COMPCODE, P_DIVCODE, P_YEARCODE, P_FN_STDT, P_FN_ENDT, NULL,'WPSVBDETAILS',P_PRODUCTIONTYPE,P_DEPARTMENT, P_SECTION,NULL,'HELPER');
   PROC_WPS_VB_LINE_OCP( P_COMPCODE, P_DIVCODE, P_YEARCODE, P_FN_STDT, P_FN_ENDT, NULL,'WPSVBDETAILS',P_PRODUCTIONTYPE,P_DEPARTMENT, P_SECTION,NULL,'SARDAR');
   PROC_WPS_VB_LINE_OCP( P_COMPCODE, P_DIVCODE, P_YEARCODE, P_FN_STDT, P_FN_ENDT, NULL,'WPSVBDETAILS',P_PRODUCTIONTYPE,P_DEPARTMENT, P_SECTION,NULL,'HELPER RELIVER');
   PROC_WPS_VB_LINE_OCP( P_COMPCODE, P_DIVCODE, P_YEARCODE, P_FN_STDT, P_FN_ENDT, NULL,'WPSVBDETAILS',P_PRODUCTIONTYPE,P_DEPARTMENT, P_SECTION,NULL,'SARDAR RELIVER');
    --PROC_WPS_VB_LINE_SARDAR ( P_COMPCODE, P_DIVCODE, NULL, P_FN_STDT, P_FN_ENDT,NULL,'WPSVBDETAILS',NULL,NULL,lv_dependantsectioncode,NULL,NULL);
   
   ------ DELETE NON ENTITLE (PRODUCTUION BASIC) TOKENNO
   PROC_WPS_NONENTILE_VB_DELETE ( P_COMPCODE, P_DIVCODE, P_YEARCODE, P_FN_STDT, P_FN_ENDT, 'WPSVBDETAILS', P_PRODUCTIONTYPE,P_DEPARTMENT,NULL);
    
--exception    
--    when others then
--        lv_SqlErr := sqlerrm;
--    INSERT INTO WPS_ERROR_LOG (COMPANYCODE, DIVISIONCODE, PROC_NAME, ORA_ERROR_MESSG, ERROR_DATE, ERROR_QUERY, PAR_VALUES, FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS) 
--    values ( P_COMPCODE, P_DIVCODE, lv_ProcName,lv_SqlErr,SYSDATE, lv_Sql,lv_ParValue, lv_FN_STDT, lv_FN_ENDT, lv_Remarks);
--    commit; 
End;
/


