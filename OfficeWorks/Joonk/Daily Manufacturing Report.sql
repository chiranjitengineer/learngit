INSERT INTO GTT_DAILY_MANUFACTURE

SELECT NULL DMRNO, '2020-2021' YEAR_CY, TO_CHAR(SUBSTR('2020-2021', 1, 4) -1) ||'-'||TO_CHAR(SUBSTR('2020-2021', 6, 4) -1) YEAR_LY,   
ROUND(NVL(RAINFALL_TODAY_CY, 0),2) RAINFALL_TODAY_CY, ROUND(NVL(RAINFALL_TODATE_CY, 0),2) RAINFALL_TODATE_CY, 
NVL(TEMP_MAX_TDY_CY, 0) TEMP_MAX_CY, NVL(TEMP_MIN_TDY_CY, 0) TEMP_MIN_CY, 
NVL(RAINFALL_TODAY_LY, 0) RAINFALL_TODAY_LY, ROUND(NVL(RAINFALL_TODATE_LY, 0),2) RAINFALL_TODATE_LY, 
NVL(TEMP_MAX_TDY_LY, 0) TEMP_MAX_LY, NVL(TEMP_MIN_TDY_LY, 0) TEMP_MIN_LY, ROUND(WTHR_PER_OWN,2), WTHR_PER_BOUGHT,TEAMADE_OWN_CTC_TODAY, TEAMADE_BOUGHT_CTC_TODAY, WLTOM_OWN DDS, WLTOM_BOUGHT DDW,
DECODE(NVL(WLTOM_OWN,0),0,0,ROUND(NVL(TEAMADE_OWN_CTC_TODAY, 0)*100/WLTOM_OWN,2)) WLTOTM_OWN,  
DECODE(NVL(WLTOM_BOUGHT,0),0,0,ROUND(NVL(TEAMADE_BOUGHT_CTC_TODAY, 0)*100/WLTOM_BOUGHT,2)) WLTOTM_BOUGHT, 
CASE WHEN OWNLEAF_TODAY_CY>0 THEN (((NVL(TEAMADE_OWN_ORX_TODAY, 0)+NVL(TEAMADE_OWN_CTC_TODAY, 0)+NVL(TEAMADE_OWN_GTEA_TODAY, 0)) / NVL(OWNLEAF_TODAY_CY, 0))*100) ELSE 0 END  RECOVERY_PER_OWN_TODAY,
CASE WHEN BOUGHTLEAF_TODAY_CY>0 THEN (((NVL(TEAMADE_BOUGHT_ORX_TODAY, 0)+NVL(TEAMADE_BOUGHT_CTC_TODAY, 0)+NVL(TEAMADE_BOUGHT_GTEA_TODAY, 0)) / NVL(BOUGHTLEAF_TODAY_CY, 0))*100) ELSE 0 END  RECOVERY_PER_BOUGHT_TODAY, 
CASE WHEN OWNLEAF_TODATE_CY>0 THEN ROUND(((NVL(TEAMADE_OWN_ORX_TODATE, 0)+NVL(TEAMADE_OWN_CTC_TODATE, 0)+NVL(TEAMADE_OWN_GTEA_TODATE, 0)) / NVL(OWNLEAF_TODATE_CY, 0))*100,2) ELSE 0 END RECOVERY_PER_OWN_TODATE,  
CASE WHEN BOUGHTLEAF_TODATE_CY>0 THEN (((NVL(TEAMADE_BOUGHT_ORX_TODATE, 0)+NVL(TEAMADE_BOUGHT_CTC_TODATE, 0)+NVL(TEAMADE_BOUGHT_GTEA_TODATE, 0)) / NVL(BOUGHTLEAF_TODATE_CY, 0))*100) ELSE 0 END RECOVERY_PER_BOUGHT_TODATE,  
'2020' SEASON_CY, '2019' SEASON_LY, 
NVL(CROP_OWN_UPTODT_CY, 0) CROP_OWN_UPTODT_CY, NVL(CROP_BOUGHT_UPTODT_CY, 0) CROP_BOUGHT_UPTODT_CY, 
NVL(CROP_OWN_MONTH_CY, 0) CROP_OWN_MONTH_CY, NVL(CROP_BOUGHT_MONTH_CY, 0) CROP_BOUGHT_MONTH_CY, 
NVL(CROP_OWN_UPTODT_LY, 0) CROP_OWN_UPTODT_LY, 
NVL(CROP_BOUGHT_UPTODT_LY, 0) CROP_BOUGHT_UPTODT_LY, NVL(CROP_OWN_MONTH_LY, 0) CROP_OWN_MONTH_LY, 
NVL(CROP_BOUGHT_MONTH_LY, 0) CROP_BOUGHT_MONTH_LY, NVL(OWNLEAF_TODAY_CY, 0) OWNLEAF_TODAY_CY, 
NVL(BOUGHTLEAF_TODAY_CY, 0) BOUGHTLEAF_TODAY_CY, 
NVL(TTL_GREEN_LEAF_TODAY_CY, 0) TTL_GREEN_LEAF_TODAY_CY, NVL(TEAMADEQTY_TODAY_CY, 0) TEAMADEQTY_TODAY_CY, 
NVL(RECV_PER_TODAY_CY, 0) RECV_PER_TODAY_CY, NVL(OWNLEAF_TODATE_CY, 0) OWNLEAF_TODATE_CY, 
NVL(BOUGHTLEAF_TODATE_CY, 0) BOUGHTLEAF_TODATE_CY, 
NVL(TTL_GREEN_LEAF_TODATE_CY, 0) TTL_GREEN_LEAF_TODATE_CY, NVL(TEAMADEQTY_TODATE_CY, 0) TEAMADEQTY_TODATE_CY, 
CASE WHEN OWNLEAF_TODATE_CY>0 THEN ROUND(((NVL(TEAMADE_OWN_ORX_TODATE, 0)+NVL(TEAMADE_OWN_CTC_TODATE, 0)+NVL(TEAMADE_OWN_GTEA_TODATE, 0)) / NVL(OWNLEAF_TODATE_CY, 0))*100,2) ELSE 0 END RECV_PER_TODATE_CY, NVL(OWNLEAF_TODAY_LY, 0) OWNLEAF_TODAY_LY, NVL(BOUGHTLEAF_TODAY_LY, 0) BOUGHTLEAF_TODAY_LY, 
NVL(TTL_GREEN_LEAF_TODAY_LY, 0) TTL_GREEN_LEAF_TODAY_LY, NVL(TEAMADEQTY_TODAY_LY, 0) TEAMADEQTY_TODAY_LY, 
ROUND(NVL(RECV_PER_TODAY_LY, 0),2) RECV_PER_TODAY_LY, NVL(OWNLEAF_TODATE_LY, 0) OWNLEAF_TODATE_LY, NVL(BOUGHTLEAF_TODATE_LY, 0) BOUGHTLEAF_TODATE_LY, 
NVL(TTL_GREEN_LEAF_TODATE_LY, 0) TTL_GREEN_LEAF_TODATE_LY, NVL(TEAMADEQTY_TODATE_LY, 0) TEAMADEQTY_TODATE_LY, 
ROUND(NVL(RECV_PER_TODATE_LY, 0),2) RECV_PER_TODATE_LY, NVL(OWNLEAF_TODAY_PY, 0) OWNLEAF_TODAY_PY, NVL(BOUGHTLEAF_TODAY_PY, 0) BOUGHTLEAF_TODAY_PY, 
NVL(TTL_GREEN_LEAF_TODAY_PY, 0) TTL_GREEN_LEAF_TODAY_PY, NVL(TEAMADEQTY_TODAY_PY, 0) TEAMADEQTY_TODAY_PY, NVL(RECV_PER_TODAY_PY, 0) RECV_PER_TODAY_PY, 
NVL(OWNLEAF_TODATE_PY, 0) OWNLEAF_TODATE_PY, NVL(BOUGHTLEAF_TODATE_PY, 0) BOUGHTLEAF_TODATE_PY, 
NVL(TTL_GREEN_LEAF_TODATE_PY, 0) TTL_GREEN_LEAF_TODATE_PY, NVL(TEAMADEQTY_TODATE_PY, 0) TEAMADEQTY_TODATE_PY, 
NVL(RECV_PER_TODATE_PY, 0) RECV_PER_TODATE_PY, NVL(TEA_PCKD_TODAY_CY, 0) TEA_PCKD_TODAY_CY, NVL(TEA_PCKD_TODATE_CY, 0) TEA_PCKD_TODATE_CY, 
NVL(TEA_PCKD_TODAY_LY, 0) TEA_PCKD_TODAY_LY, NVL(TEA_PCKD_TODATE_LY, 0) TEA_PCKD_TODATE_LY, NVL(TEA_PCKD_TODAY_PY, 0) TEA_PCKD_TODAY_PY, 
NVL(TEA_PCKD_TODATE_PY, 0) TEA_PCKD_TODATE_PY, NVL(TEA_DISPTCH_TODAY_CY, 0) TEA_DISPTCH_TODAY_CY, 
NVL(TEA_DISPTCH_TODATE_CY, 0) TEA_DISPTCH_TODATE_CY, NVL(TEA_DISPTCH_TODAY_LY, 0) TEA_DISPTCH_TODAY_LY, 
NVL(TEA_DISPTCH_TODATE_LY, 0) TEA_DISPTCH_TODATE_LY, NVL(TEA_DISPTCH_TODAY_PY, 0) TEA_DISPTCH_TODAY_PY, NVL(TEA_DISPTCH_TODATE_PY, 0) TEA_DISPTCH_TODATE_PY, 
0 ORTHODOX_TODAY_CY, 0 ORTHODOX_TODATE_CY, 0 GRN_TEA_TODAY_CY, 0 GRN_TEA_TODATE_CY, 0 ORTHODOX_TODAY_LY, 
0 ORTHODOX_TODATE_LY, 0 GRN_TEA_TODAY_LY, 0 GRN_TEA_TODATE_LY, 0 ORTHODOX_TODAY_PY, 0 ORTHODOX_TODATE_PY, 
0 GRN_TEA_TODAY_PY, 0 GRN_TEA_TODATE_PY, NULL INVOICENO, NVL(TEAMADE_OWN_ORX_TODAY, 0) TEAMADE_OWN_ORX_TODAY, 
NVL(TEAMADE_BOUGHT_ORX_TODAY, 0) TEAMADE_BOUGHT_ORX_TODAY, 
NVL(TEAMADE_OWN_CTC_TODAY, 0) TEAMADE_OWN_CTC_TODAY, NVL(TEAMADE_BOUGHT_CTC_TODAY, 0) TEAMADE_BOUGHT_CTC_TODAY, 
NVL(TEAMADE_OWN_GTEA_TODAY, 0) TEAMADE_OWN_GTEA_TODAY, NVL(TEAMADE_BOUGHT_GTEA_TODAY, 0) TEAMADE_BOUGHT_GTEA_TODAY, 
NVL(TEAMADE_OWN_ORX_TOMON, 0) TEAMADE_OWN_ORX_TOMON, NVL(TEAMADE_BOUGHT_ORX_TOMON, 0) TEAMADE_BOUGHT_ORX_TOMON, 
NVL(TEAMADE_OWN_CTC_TOMON, 0) TEAMADE_OWN_CTC_TOMON, NVL(TEAMADE_BOUGHT_CTC_TOMON, 0) TEAMADE_BOUGHT_CTC_TOMON, 
NVL(TEAMADE_OWN_GTEA_TOMON, 0) TEAMADE_OWN_GTEA_TOMON, NVL(TEAMADE_BOUGHT_GTEA_TOMON, 0) TEAMADE_BOUGHT_GTEA_TOMON, 
NVL(TEAMADE_OWN_ORX_TODATE, 0) TEAMADE_OWN_ORX_TODATE, NVL(TEAMADE_BOUGHT_ORX_TODATE, 0) TEAMADE_BOUGHT_ORX_TODATE, 
NVL(TEAMADE_OWN_CTC_TODATE, 0) TEAMADE_OWN_CTC_TODATE, NVL(TEAMADE_BOUGHT_CTC_TODATE, 0) TEAMADE_BOUGHT_CTC_TODATE, 
NVL(TEAMADE_OWN_GTEA_TODATE, 0) TEAMADE_OWN_GTEA_TODATE, NVL(TEAMADE_BOUGHT_GTEA_TODATE, 0) TEAMADE_BOUGHT_GTEA_TODATE, 
NULL COMPANYNAME, NULL DIVISIONNAME, NULL PRINTDATE, TO_CHAR(SYSDATE, 'DD/MM/YYYY HH:mm AM') RUNDATE,   
TO_CHAR(TO_DATE('31/07/2020', 'DD/MM/YYYY'), 'DAY') EX1, TO_CHAR(SUBSTR('2020-2021', 1, 4) -2) ||'-'||TO_CHAR(SUBSTR('2020-2021', 6, 4) -2) EX2, '31/07/2020' EX3, NVL(OWN_LEAF_PER, 0) EX4, NVL(BOUGHT_LEAF_PER, 0) EX5, NULL EX6  
FROM   
(  
/*====================================TEMPERATURE MAX-MIN START===========================*/
    SELECT COMPANYCODE, DIVISIONCODE, MAX(HOTAIRTEMP) TEMP_MAX, MIN(HOTAIRTEMP) TEMP_MIN  
    FROM PRODGREENLEAFWITHERDETAIL  
    WHERE PRODUCTIONDATE >= TO_DATE('01/04/2020', 'DD/MM/YYYY') 
    AND PRODUCTIONDATE <= TO_DATE('31/07/2020', 'DD/MM/YYYY')  
    AND SEASON = 2020
    AND SOURCEGARDEN = '0002' 
    AND COMPANYCODE = 'JT0069' 
    GROUP BY COMPANYCODE, DIVISIONCODE 
) Q1,  
/*====================================TEMPERATURE MAX-MIN END==========================*/
/*====================================WITHERED % START===========================*/
(  
    SELECT COMPANYCODE, DIVISIONCODE, MAX(WTHR_PER_OWN) WTHR_PER_OWN,MAX(WTHR_PER_BOUGHT) WTHR_PER_BOUGHT  
    , MAX(WLTOM_OWN) WLTOM_OWN,MAX(WLTOM_BOUGHT) WLTOM_BOUGHT  
    FROM   
    (  
        SELECT A.COMPANYCODE, A.DIVISIONCODE, 
        CASE WHEN A.RECEIPTTYPE = 'OWN' THEN SUM(NVL(A.WITHEREDQUANTITY, 0)) END WLTOM_OWN,  
        CASE WHEN A.RECEIPTTYPE = 'BOUGHT' THEN SUM(NVL(A.WITHEREDQUANTITY, 0)) END WLTOM_BOUGHT,  
        CASE WHEN A.RECEIPTTYPE = 'OWN' THEN ROUND(NVL (SUM (WITHEREDQUANTITY), 0) / nullif(NVL (SUM (QUANTITYFORWITHER), 0), 0) * 100,2) END WTHR_PER_OWN,  
        CASE WHEN A.RECEIPTTYPE = 'BOUGHT' THEN ROUND(NVL (SUM (WITHEREDQUANTITY), 0) / nullif(NVL (SUM (QUANTITYFORWITHER), 0), 0) * 100,2) END WTHR_PER_BOUGHT  
        FROM PRODGREENLEAFWITHERDETAIL A   
        WHERE A.PRODUCTIONDATE >= TO_DATE('31/07/2020', 'DD/MM/YYYY')  
        AND A.PRODUCTIONDATE <= TO_DATE('31/07/2020', 'DD/MM/YYYY')   
        AND A.SEASON = 2020
        AND A.COMPANYCODE = 'JT0069'  
        AND NVL(A.SOURCEGARDEN,A.DIVISIONCODE) = '0002' 
        GROUP BY A.COMPANYCODE, A.DIVISIONCODE, A.RECEIPTTYPE    
    )    
    GROUP BY COMPANYCODE, DIVISIONCODE  
) Q2,   
/*====================================WITHERED % START END===========================*/
/*====================================RECOVERY % START===========================*/
(   
    SELECT X2.COMPANYCODE, X2.DIVISIONCODE, ROUND(MAX(NVL(RECOVERY_PER_OWN_TODAY,0)),2) RECOVERY_PER_OWN_TODAY, 
    ROUND(MAX(NVL(RECOVERY_PER_BOUGHT_TODAY,0)),2) RECOVERY_PER_BOUGHT_TODAY,  
    ROUND(MAX(NVL(RECOVERY_PER_OWN_TODATE,0)),2) RECOVERY_PER_OWN_TODATE, 
    ROUND(MAX(NVL(RECOVERY_PER_BOUGHT_TODATE,0)),2) RECOVERY_PER_BOUGHT_TODATE  
    FROM   
    (   
        SELECT A.COMPANYCODE, A.DIVISIONCODE, 
        CASE WHEN A.RECEIPTTYPE = 'OWN' THEN (SUM(NVL(B.TEAMADEQTY, 0))/SUM(NVL(B.DRYERQTY, 0)))*100 END RECOVERY_PER_OWN_TODAY,  
        CASE WHEN A.RECEIPTTYPE = 'BOUGHT' THEN (SUM(NVL(B.TEAMADEQTY, 0))/SUM(NVL(B.DRYERQTY, 0)))*100 END RECOVERY_PER_BOUGHT_TODAY  
        FROM PRODGREENLEAFWITHERDETAIL A, PRODDAILYDRYERDETAILS B   
        WHERE A.COMPANYCODE = B.COMPANYCODE   
        AND A.DIVISIONCODE = B.DIVISIONCODE   
        AND A.BATCHNO = B.BATCHNO   
        AND A.PRODUCTIONDATE >=  TO_DATE('31/07/2020', 'DD/MM/YYYY')  
        AND A.PRODUCTIONDATE <= TO_DATE('31/07/2020', 'DD/MM/YYYY')   
        AND A.SEASON = 2020
        AND A.COMPANYCODE = 'JT0069'   
        AND A.SOURCEGARDEN = '0002' 
        GROUP BY A.COMPANYCODE, A.DIVISIONCODE, A.RECEIPTTYPE   
    ) X1,   
    (   
        SELECT A.COMPANYCODE, A.DIVISIONCODE, 
        CASE WHEN A.RECEIPTTYPE = 'OWN' THEN (SUM(NVL(B.TEAMADEQTY, 0))/SUM(NVL(B.DRYERQTY, 0)))*100 END RECOVERY_PER_OWN_TODATE,  
        CASE WHEN A.RECEIPTTYPE = 'BOUGHT' THEN (SUM(NVL(B.TEAMADEQTY, 0))/SUM(NVL(B.DRYERQTY, 0)))*100 END RECOVERY_PER_BOUGHT_TODATE  
        FROM PRODGREENLEAFWITHERDETAIL A, PRODDAILYDRYERDETAILS B  
        WHERE A.COMPANYCODE = B.COMPANYCODE  
        AND A.DIVISIONCODE = B.DIVISIONCODE  
        AND A.BATCHNO = B.BATCHNO  
        AND A.PRODUCTIONDATE >=  TO_DATE('01/04/2020', 'DD/MM/YYYY')  
        AND A.PRODUCTIONDATE <= TO_DATE('31/07/2020', 'DD/MM/YYYY')   
        AND A.SEASON = 2020
        AND A.COMPANYCODE = 'JT0069'   
        AND A.SOURCEGARDEN = '0002' 
        GROUP BY A.COMPANYCODE, A.DIVISIONCODE, A.RECEIPTTYPE   
    ) X2
    WHERE 1=1     
    AND X2.COMPANYCODE=X1.COMPANYCODE(+) 
    AND X2.DIVISIONCODE=X1.DIVISIONCODE(+)    
    GROUP BY X2.COMPANYCODE, X2.DIVISIONCODE   
) Q3,   
/*====================================RECOVERY % END===========================*/
/*====================================CROP START===========================*/
(      
    SELECT X1.COMPANYCODE, X1.DIVISIONCODE, CROP_OWN_UPTODT_CY, 
    CROP_BOUGHT_UPTODT_CY, CROP_OWN_MONTH_CY, CROP_BOUGHT_MONTH_CY,  
    CROP_OWN_UPTODT_LY, CROP_BOUGHT_UPTODT_LY, CROP_OWN_MONTH_LY, CROP_BOUGHT_MONTH_LY  
    FROM   
    (  
        SELECT A.COMPANYCODE, A.DIVISIONCODE, A.CROP_OWN_UPTODT_CY, 
        A.CROP_BOUGHT_UPTODT_CY, B.CROP_OWN_MONTH_CY, B.CROP_BOUGHT_MONTH_CY   
        FROM 
        (    
            SELECT COMPANYCODE, DIVISIONCODE, (SUM(CROP_OWN_UPTODT)+SUM(TEAMADE_CTC_EX_TODATE_CY)) CROP_OWN_UPTODT_CY,  
            SUM(CROP_BOUGHT_UPTODT) CROP_BOUGHT_UPTODT_CY   
            FROM  
            (   
                SELECT CASE WHEN OWNBOUGHT IN ('OWN') THEN SUM(NVL(TEAMADEQTY, 0)) END CROP_OWN_UPTODT,   
                CASE WHEN OWNBOUGHT IN ('BOUGHT') THEN SUM(NVL(TEAMADEQTY, 0)) END CROP_BOUGHT_UPTODT,   
                0 TEAMADE_CTC_EX_TODATE_CY, COMPANYCODE, DIVISIONCODE   
                FROM PRODDAILYDRYERDETAILS   
                WHERE PRODUCTIONDATE >= TO_DATE('01/04/2020', 'DD/MM/YYYY')    
                AND PRODUCTIONDATE <= TO_DATE('31/07/2020', 'DD/MM/YYYY')    
                AND SEASON = 2020
                AND DIVISIONCODE = '0002' 
                AND COMPANYCODE = 'JT0069'   
                GROUP BY OWNBOUGHT, COMPANYCODE, DIVISIONCODE   
            )   
            GROUP BY COMPANYCODE, DIVISIONCODE        
        ) A,   
        (          
            SELECT COMPANYCODE, DIVISIONCODE, (SUM(CROP_OWN_MONTH)+SUM(TEAMADE_CTC_EX_TOMON_CY)) CROP_OWN_MONTH_CY,  
            SUM(CROP_BOUGHT_MONTH) CROP_BOUGHT_MONTH_CY   
            FROM   
            (   
                SELECT CASE WHEN OWNBOUGHT IN ('OWN') THEN SUM(NVL(TEAMADEQTY, 0)) END CROP_OWN_MONTH,   
                 CASE WHEN OWNBOUGHT IN ('BOUGHT') THEN SUM(NVL(TEAMADEQTY, 0)) END CROP_BOUGHT_MONTH,   
                 0 TEAMADE_CTC_EX_TOMON_CY, COMPANYCODE, DIVISIONCODE   
                FROM PRODDAILYDRYERDETAILS  
                WHERE PRODUCTIONDATE >= TO_DATE('01/07/2020', 'DD/MM/YYYY')  
                AND PRODUCTIONDATE  <= TO_DATE('31/07/2020', 'DD/MM/YYYY')    
                AND SEASON = 2020
                AND DIVISIONCODE = '0002' 
                AND COMPANYCODE = 'JT0069'  
                GROUP BY OWNBOUGHT, COMPANYCODE, DIVISIONCODE   
            )   
            GROUP BY COMPANYCODE, DIVISIONCODE       
        ) B  
        WHERE A.COMPANYCODE = B.COMPANYCODE(+)   
        AND A.DIVISIONCODE = B.DIVISIONCODE(+)   
    ) X1,   
    (  
        SELECT A.COMPANYCODE, A.DIVISIONCODE, A.CROP_OWN_UPTODT_LY, A.CROP_BOUGHT_UPTODT_LY, 
        B.CROP_OWN_MONTH_LY, B.CROP_BOUGHT_MONTH_LY 
        FROM 
        (  
            SELECT COMPANYCODE, DIVISIONCODE, (SUM(CROP_OWN_UPTODT)+SUM(TEAMADE_CTC_EX_TODATE_LY)) CROP_OWN_UPTODT_LY,  
            SUM(CROP_BOUGHT_UPTODT) CROP_BOUGHT_UPTODT_LY 
            FROM  
            (  
                SELECT CASE WHEN OWNBOUGHT IN ('OWN') THEN SUM(NVL(TEAMADEQTY, 0)) END CROP_OWN_UPTODT,  
                CASE WHEN OWNBOUGHT IN ('BOUGHT') THEN SUM(NVL(TEAMADEQTY, 0)) END CROP_BOUGHT_UPTODT,  
                0 TEAMADE_CTC_EX_TODATE_LY, COMPANYCODE, DIVISIONCODE  
                FROM PRODDAILYDRYERDETAILS  
                WHERE PRODUCTIONDATE >= TO_DATE('01/04/2019', 'DD/MM/YYYY')  
                AND PRODUCTIONDATE <= TO_DATE('31/07/2019', 'DD/MM/YYYY') 
                AND SEASON = 2019
                AND DIVISIONCODE = '0002' 
                AND COMPANYCODE = 'JT0069'   
                GROUP BY OWNBOUGHT, COMPANYCODE, DIVISIONCODE  
            )  
            GROUP BY COMPANYCODE, DIVISIONCODE  
        ) A,  
        (  
            SELECT COMPANYCODE, DIVISIONCODE, (SUM(CROP_OWN_MONTH)+SUM(TEAMADE_CTC_EX_TOMON_LY)) CROP_OWN_MONTH_LY,  
            SUM(CROP_BOUGHT_MONTH) CROP_BOUGHT_MONTH_LY  
            FROM  
            (  
                SELECT CASE WHEN OWNBOUGHT IN ('OWN') THEN SUM(NVL(TEAMADEQTY, 0)) END CROP_OWN_MONTH,  
                CASE WHEN OWNBOUGHT IN ('BOUGHT') THEN SUM(NVL(TEAMADEQTY, 0)) END CROP_BOUGHT_MONTH,  
                0 TEAMADE_CTC_EX_TOMON_LY, COMPANYCODE, DIVISIONCODE  
                FROM PRODDAILYDRYERDETAILS  
                WHERE PRODUCTIONDATE >= TO_DATE('01/07/2019', 'DD/MM/YYYY')  
                AND PRODUCTIONDATE <= TO_DATE('31/07/2019','DD/MM/YYYY')   
                AND SEASON = 2019
                AND DIVISIONCODE = '0002' 
                AND COMPANYCODE = 'JT0069'   
                GROUP BY OWNBOUGHT, COMPANYCODE, DIVISIONCODE  
            )  
            GROUP BY COMPANYCODE, DIVISIONCODE      
        ) B   
        WHERE A.COMPANYCODE = B.COMPANYCODE(+)   
        AND A.DIVISIONCODE = B.DIVISIONCODE(+)   
    ) X2   
    WHERE X1.COMPANYCODE = X2.COMPANYCODE(+)  
    AND X1.DIVISIONCODE = X2.DIVISIONCODE(+)  
) Q4,   
/*====================================CROP END===============================*/
/*====================================GREENLEAF+TEA MADE START (CY)==============================*/
(  
    SELECT N.COMPANYCODE, N.DIVISIONCODE, N.SOURCEGARDEN, M.OWNLEAF_TODAY_CY, M.BOUGHTLEAF_TODAY_CY, 
    M.TTL_GREEN_LEAF_TODAY_CY, M.TEAMADEQTY_TODAY_CY, M.RECV_PER_TODAY_CY,  
    N.OWNLEAF_TODATE_CY, N.BOUGHTLEAF_TODATE_CY, N.TTL_GREEN_LEAF_TODATE_CY, N.TEAMADEQTY_TODATE_CY, N.RECV_PER_TODATE_CY   
    FROM 
    (    
        SELECT Y.OWNLEAF_TODAY OWNLEAF_TODAY_CY, Y.BOUGHTLEAF_TODAY BOUGHTLEAF_TODAY_CY, 
        SUM(NVL(Y.OWNLEAF_TODAY, 0)+NVL(Y.BOUGHTLEAF_TODAY, 0)) TTL_GREEN_LEAF_TODAY_CY,   
        X.TOTAL_TEAMADE_TODAY TEAMADEQTY_TODAY_CY, CASE WHEN (SUM(NVL(Y.OWNLEAF_TODAY, 0)+NVL(Y.BOUGHTLEAF_TODAY, 0)))>0 THEN (X.TOTAL_TEAMADE_TODAY/SUM(NVL(Y.OWNLEAF_TODAY, 0)+NVL(Y.BOUGHTLEAF_TODAY, 0)))*100 ELSE 0 END RECV_PER_TODAY_CY, 
        X.COMPANYCODE, X.DIVISIONCODE, Y.SOURCEGARDEN   
        FROM 
        (
            SELECT COMPANYCODE, DIVISIONCODE, (NVL(TEAMADE_OWN_ORX_TODAY,0)+NVL(TEAMADE_BOUGHT_ORX_TODAY,0)+ 
            NVL(TEAMADE_OWN_CTC_TODAY,0)+NVL(TEAMADE_BOUGHT_CTC_TODAY,0)+NVL(TEAMADE_OWN_GTEA_TODAY,0)+NVL(TEAMADE_BOUGHT_GTEA_TODAY,0)) TOTAL_TEAMADE_TODAY  
            FROM 
            (   
                SELECT COMPANYCODE, DIVISIONCODE, SUM(TEAMADE_OWN_ORX_TODAY) TEAMADE_OWN_ORX_TODAY, 
                SUM(TEAMADE_BOUGHT_ORX_TODAY) TEAMADE_BOUGHT_ORX_TODAY,  
                SUM(TEAMADE_OWN_CTC_TODAY) TEAMADE_OWN_CTC_TODAY, SUM(TEAMADE_BOUGHT_CTC_TODAY) TEAMADE_BOUGHT_CTC_TODAY,   
                SUM(TEAMADE_OWN_GTEA_TODAY) TEAMADE_OWN_GTEA_TODAY, SUM(TEAMADE_BOUGHT_GTEA_TODAY) TEAMADE_BOUGHT_GTEA_TODAY   
                FROM   
                (         
                    SELECT A.COMPANYCODE, A.DIVISIONCODE, CASE WHEN C.CATEGORYCODE = 'ORTHODOX' AND A.OWNBOUGHT = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_ORX_TODAY,  
                    CASE WHEN C.CATEGORYCODE = 'ORTHODOX' AND A.OWNBOUGHT = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_ORX_TODAY,  
                    CASE WHEN C.CATEGORYCODE = 'CTC' AND A.OWNBOUGHT = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_CTC_TODAY,   
                    CASE WHEN C.CATEGORYCODE = 'CTC' AND A.OWNBOUGHT = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_CTC_TODAY,   
                    CASE WHEN C.CATEGORYCODE = 'LEAF' AND A.OWNBOUGHT = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_GTEA_TODAY,   
                    CASE WHEN C.CATEGORYCODE = 'LEAF' AND A.OWNBOUGHT = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_GTEA_TODAY  
                    FROM PRODDAILYDRYERDETAILS A, SALESCATEGORYMASTER C   
                    WHERE 1=1    
                    AND A.COMPANYCODE = C.COMPANYCODE   
                    AND A.TEACATEGORYCODE = C.CATEGORYCODE    
                    AND A.PRODUCTIONDATE >= TO_DATE('31/07/2020', 'DD/MM/YYYY')     
                    AND A.PRODUCTIONDATE <=TO_DATE('31/07/2020', 'DD/MM/YYYY')   
                    AND A.COMPANYCODE = 'JT0069'  
                    AND A.DIVISIONCODE = '0002' 
                    GROUP BY A.COMPANYCODE, A.DIVISIONCODE,C.CATEGORYCODE, A.OWNBOUGHT    
                )   
                GROUP BY  COMPANYCODE, DIVISIONCODE    
            )   
        ) X, 
        (    
SELECT SUM(OWNLEAF_TODAY) OWNLEAF_TODAY, SUM(BOUGHTLEAF_TODAY) BOUGHTLEAF_TODAY, COMPANYCODE, DIVISIONCODE, SOURCEGARDEN
FROM 
( 
    SELECT SUM(NVL(QUANTITYFORWITHER,0)) OWNLEAF_TODAY, 0 BOUGHTLEAF_TODAY, COMPANYCODE, DIVISIONCODE, NVL(SOURCEGARDEN,DIVISIONCODE) SOURCEGARDEN
    FROM   PRODGREENLEAFWITHERDETAIL
    WHERE  DIVISIONCODE = '0002'
    AND COMPANYCODE ='JT0069' 
    AND RECEIPTTYPE = 'OWN'
    AND PRODUCTIONDATE >= TO_DATE('31/07/2020', 'DD/MM/YYYY')  
    AND PRODUCTIONDATE <= TO_DATE('31/07/2020', 'DD/MM/YYYY')  
    GROUP BY COMPANYCODE, DIVISIONCODE, SOURCEGARDEN 
    UNION ALL
    SELECT 0 OWNLEAF_TODAY, SUM(NVL(QUANTITYFORWITHER,0)) BOUGHTLEAF_TODAY, COMPANYCODE, DIVISIONCODE,DIVISIONCODE SOURCEGARDEN
    FROM   PRODGREENLEAFWITHERDETAIL
    WHERE  DIVISIONCODE = '0002'
    AND COMPANYCODE ='JT0069' 
    AND RECEIPTTYPE = 'BOUGHT'
    AND PRODUCTIONDATE >= TO_DATE('31/07/2020', 'DD/MM/YYYY')  
    AND PRODUCTIONDATE <= TO_DATE('31/07/2020', 'DD/MM/YYYY')  
    GROUP BY COMPANYCODE, DIVISIONCODE, SOURCEGARDEN 
)
GROUP BY COMPANYCODE, DIVISIONCODE, SOURCEGARDEN
        ) Y 
        WHERE 1=1  
        AND X.COMPANYCODE = Y.COMPANYCODE (+)
        AND X.DIVISIONCODE = Y.DIVISIONCODE  (+)
        GROUP BY Y.COMPANYCODE, Y.DIVISIONCODE, Y.SOURCEGARDEN, Y.OWNLEAF_TODAY, 
        Y.BOUGHTLEAF_TODAY, X.TOTAL_TEAMADE_TODAY, X.COMPANYCODE, X.DIVISIONCODE   
    ) M,   
    (     
        SELECT Y.OWNLEAF_TODATE OWNLEAF_TODATE_CY, Y.BOUGHTLEAF_TODATE BOUGHTLEAF_TODATE_CY, 
        SUM(NVL(Y.OWNLEAF_TODATE, 0)+NVL(Y.BOUGHTLEAF_TODATE, 0)) TTL_GREEN_LEAF_TODATE_CY,  
        X.TOTAL_TEAMADE_TODATE TEAMADEQTY_TODATE_CY, CASE WHEN (SUM(NVL(Y.OWNLEAF_TODATE, 0)+NVL(Y.BOUGHTLEAF_TODATE, 0)))>0 THEN (X.TOTAL_TEAMADE_TODATE/SUM(NVL(Y.OWNLEAF_TODATE, 0)+NVL(Y.BOUGHTLEAF_TODATE, 0)))*100 ELSE 0 END RECV_PER_TODATE_CY,  
        X.COMPANYCODE, X.DIVISIONCODE, Y.SOURCEGARDEN  
        FROM 
        (
            SELECT COMPANYCODE, DIVISIONCODE, (NVL(TEAMADE_OWN_ORX_TODATE,0)+NVL(TEAMADE_BOUGHT_ORX_TODATE,0)+ 
            NVL(TEAMADE_OWN_CTC_TODATE,0)+NVL(TEAMADE_BOUGHT_CTC_TODATE,0)+NVL(TEAMADE_OWN_GTEA_TODATE,0)+NVL(TEAMADE_BOUGHT_GTEA_TODATE,0)) TOTAL_TEAMADE_TODATE  
            FROM 
            (   
                SELECT COMPANYCODE, DIVISIONCODE, SUM(TEAMADE_OWN_ORX_TODATE) TEAMADE_OWN_ORX_TODATE, 
                SUM(TEAMADE_BOUGHT_ORX_TODATE) TEAMADE_BOUGHT_ORX_TODATE,  
                SUM(TEAMADE_OWN_CTC_TODATE) TEAMADE_OWN_CTC_TODATE, SUM(TEAMADE_BOUGHT_CTC_TODATE) TEAMADE_BOUGHT_CTC_TODATE,   
                SUM(TEAMADE_OWN_GTEA_TODATE) TEAMADE_OWN_GTEA_TODATE, SUM(TEAMADE_BOUGHT_GTEA_TODATE) TEAMADE_BOUGHT_GTEA_TODATE  
                FROM   
                (
                    SELECT A.COMPANYCODE, A.DIVISIONCODE, CASE WHEN C.CATEGORYCODE = 'ORTHODOX' AND A.OWNBOUGHT = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_ORX_TODATE,  
                    CASE WHEN C.CATEGORYCODE = 'ORTHODOX' AND A.OWNBOUGHT = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_ORX_TODATE,  
                    CASE WHEN C.CATEGORYCODE = 'CTC' AND A.OWNBOUGHT = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_CTC_TODATE,   
                    CASE WHEN C.CATEGORYCODE = 'CTC' AND A.OWNBOUGHT = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_CTC_TODATE,   
                    CASE WHEN C.CATEGORYCODE = 'LEAF' AND A.OWNBOUGHT = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_GTEA_TODATE,   
                    CASE WHEN C.CATEGORYCODE = 'LEAF' AND A.OWNBOUGHT = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_GTEA_TODATE  
                    FROM PRODDAILYDRYERDETAILS A, SALESCATEGORYMASTER C   
                    WHERE 1=1    
                    AND A.COMPANYCODE = C.COMPANYCODE   
                    AND A.TEACATEGORYCODE = C.CATEGORYCODE    
                    AND A.PRODUCTIONDATE >= TO_DATE('01/04/2020', 'DD/MM/YYYY')     
                    AND A.PRODUCTIONDATE <= TO_DATE('31/07/2020', 'DD/MM/YYYY')   
                    AND A.COMPANYCODE = 'JT0069'  
                    AND A.DIVISIONCODE  = '0002' 
                    GROUP BY A.COMPANYCODE, A.DIVISIONCODE,C.CATEGORYCODE, A.OWNBOUGHT    
                )   
                GROUP BY  COMPANYCODE, DIVISIONCODE    
            )   
        ) X, 
        (  
             SELECT SUM(OWNLEAF_TODATE) OWNLEAF_TODATE, SUM(BOUGHTLEAF_TODATE) BOUGHTLEAF_TODATE, COMPANYCODE, DIVISIONCODE,SOURCEGARDEN
             FROM 
             ( 
                 SELECT SUM(NVL(QUANTITYFORWITHER,0)) OWNLEAF_TODATE, 0 BOUGHTLEAF_TODATE, COMPANYCODE, DIVISIONCODE, NVL(SOURCEGARDEN,DIVISIONCODE)  SOURCEGARDEN
                 FROM   PRODGREENLEAFWITHERDETAIL
                 WHERE  DIVISIONCODE = '0002'
                 AND COMPANYCODE ='JT0069' 
                 AND RECEIPTTYPE = 'OWN'
                 AND PRODUCTIONDATE >= TO_DATE('01/04/2020', 'DD/MM/YYYY')  
                 AND PRODUCTIONDATE <= TO_DATE('31/07/2020', 'DD/MM/YYYY')  
                 GROUP BY COMPANYCODE, DIVISIONCODE, SOURCEGARDEN 
                 UNION ALL
                 SELECT 0 OWNLEAF_TODATE, SUM(NVL(QUANTITYFORWITHER,0)) BOUGHTLEAF_TODATE, COMPANYCODE, DIVISIONCODE,DIVISIONCODE SOURCEGARDEN
                 FROM   PRODGREENLEAFWITHERDETAIL
                 WHERE  DIVISIONCODE = '0002'
                 AND COMPANYCODE ='JT0069' 
                 AND RECEIPTTYPE = 'BOUGHT'
                 AND PRODUCTIONDATE >= TO_DATE('01/04/2020', 'DD/MM/YYYY')  
                 AND PRODUCTIONDATE <= TO_DATE('31/07/2020', 'DD/MM/YYYY')  
                 GROUP BY COMPANYCODE, DIVISIONCODE, SOURCEGARDEN 
             )
             GROUP BY COMPANYCODE, DIVISIONCODE, SOURCEGARDEN
        ) Y    
        WHERE X.COMPANYCODE = Y.COMPANYCODE   
        AND X.DIVISIONCODE = Y.DIVISIONCODE    
        GROUP BY Y.COMPANYCODE, Y.DIVISIONCODE, Y.SOURCEGARDEN, Y.OWNLEAF_TODATE, Y.BOUGHTLEAF_TODATE, 
        X.TOTAL_TEAMADE_TODATE, X.COMPANYCODE, X.DIVISIONCODE    
    ) N   
    WHERE M.COMPANYCODE(+) = N.COMPANYCODE   
    AND M.DIVISIONCODE(+) = N.DIVISIONCODE    
    AND N.COMPANYCODE = 'JT0069'  
    AND N.SOURCEGARDEN = '0002' 
) Q5,   
/*====================================GREENLEAF+TEA MADE END (CY)===============================*/
/*====================================GREENLEAF+TEA MADE START (LY)==============================*/
(     
    SELECT N.COMPANYCODE, N.DIVISIONCODE, N.SOURCEGARDEN, M.OWNLEAF_TODAY_LY, M.BOUGHTLEAF_TODAY_LY, M.TTL_GREEN_LEAF_TODAY_LY, 
    M.TEAMADEQTY_TODAY_LY, M.RECV_PER_TODAY_LY,  
    N.OWNLEAF_TODATE_LY, N.BOUGHTLEAF_TODATE_LY, N.TTL_GREEN_LEAF_TODATE_LY, N.TEAMADEQTY_TODATE_LY, N.RECV_PER_TODATE_LY  
    FROM 
    (   
        SELECT Y.OWNLEAF_TODAY OWNLEAF_TODAY_LY, Y.BOUGHTLEAF_TODAY BOUGHTLEAF_TODAY_LY, 
        SUM(NVL(Y.OWNLEAF_TODAY, 0)+NVL(Y.BOUGHTLEAF_TODAY, 0)) TTL_GREEN_LEAF_TODAY_LY,  
        X.TOTAL_TEAMADE_TODAY TEAMADEQTY_TODAY_LY, (X.TOTAL_TEAMADE_TODAY/SUM(NVL(Y.OWNLEAF_TODAY, 0)+NVL(Y.BOUGHTLEAF_TODAY, 0)))*100 RECV_PER_TODAY_LY,  
        X.COMPANYCODE, X.DIVISIONCODE, Y.SOURCEGARDEN  
        FROM 
        (
            SELECT COMPANYCODE, DIVISIONCODE, (NVL(TEAMADE_OWN_ORX_TODAY,0)+NVL(TEAMADE_BOUGHT_ORX_TODAY,0)+ 
            NVL(TEAMADE_OWN_CTC_TODAY,0)+NVL(TEAMADE_BOUGHT_CTC_TODAY,0)+NVL(TEAMADE_OWN_GTEA_TODAY,0)+NVL(TEAMADE_BOUGHT_GTEA_TODAY,0)) TOTAL_TEAMADE_TODAY  
            FROM 
            (   
                SELECT COMPANYCODE, DIVISIONCODE, SUM(TEAMADE_OWN_ORX_TODAY) TEAMADE_OWN_ORX_TODAY, 
                SUM(TEAMADE_BOUGHT_ORX_TODAY) TEAMADE_BOUGHT_ORX_TODAY,  
                SUM(TEAMADE_OWN_CTC_TODAY) TEAMADE_OWN_CTC_TODAY, SUM(TEAMADE_BOUGHT_CTC_TODAY) TEAMADE_BOUGHT_CTC_TODAY,   
                SUM(TEAMADE_OWN_GTEA_TODAY) TEAMADE_OWN_GTEA_TODAY, SUM(TEAMADE_BOUGHT_GTEA_TODAY) TEAMADE_BOUGHT_GTEA_TODAY   
                FROM   
                (
                    SELECT A.COMPANYCODE, A.DIVISIONCODE, CASE WHEN C.CATEGORYCODE = 'ORTHODOX' AND A.OWNBOUGHT = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_ORX_TODAY,  
                    CASE WHEN C.CATEGORYCODE = 'ORTHODOX' AND A.OWNBOUGHT = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_ORX_TODAY,  
                    CASE WHEN C.CATEGORYCODE = 'CTC' AND A.OWNBOUGHT = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_CTC_TODAY,   
                    CASE WHEN C.CATEGORYCODE = 'CTC' AND A.OWNBOUGHT = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_CTC_TODAY,   
                    CASE WHEN C.CATEGORYCODE = 'LEAF' AND A.OWNBOUGHT = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_GTEA_TODAY,   
                    CASE WHEN C.CATEGORYCODE = 'LEAF' AND A.OWNBOUGHT = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_GTEA_TODAY  
                    FROM PRODDAILYDRYERDETAILS A, SALESCATEGORYMASTER C   
                    WHERE A.COMPANYCODE = C.COMPANYCODE   
                    AND A.TEACATEGORYCODE = C.CATEGORYCODE    
                    AND A.PRODUCTIONDATE =  TO_DATE('31/07/2019', 'DD/MM/YYYY')    
                    AND A.COMPANYCODE = 'JT0069'  
                    AND A.DIVISIONCODE = '0002' 
                    GROUP BY A.COMPANYCODE, A.DIVISIONCODE,C.CATEGORYCODE, A.OWNBOUGHT    
                )   
                GROUP BY  COMPANYCODE, DIVISIONCODE    
            )   
        ) X, 
        (   
             SELECT SUM(OWNLEAF_TODAY) OWNLEAF_TODAY, SUM(BOUGHTLEAF_TODAY) BOUGHTLEAF_TODAY, COMPANYCODE, DIVISIONCODE,SOURCEGARDEN
             FROM 
             ( 
                 SELECT SUM(NVL(QUANTITYFORWITHER,0)) OWNLEAF_TODAY, 0 BOUGHTLEAF_TODAY, COMPANYCODE, DIVISIONCODE, NVL(SOURCEGARDEN,DIVISIONCODE)  SOURCEGARDEN
                 FROM   PRODGREENLEAFWITHERDETAIL
                 WHERE  DIVISIONCODE = '0002'
                 AND COMPANYCODE ='JT0069' 
                 AND RECEIPTTYPE = 'OWN'
                 AND PRODUCTIONDATE >= TO_DATE('31/07/2019', 'DD/MM/YYYY')  
                 AND PRODUCTIONDATE <= TO_DATE('31/07/2019', 'DD/MM/YYYY')  
                 GROUP BY COMPANYCODE, DIVISIONCODE, SOURCEGARDEN 
                 UNION ALL
                 SELECT 0 OWNLEAF_TODAY, SUM(NVL(QUANTITYFORWITHER,0)) BOUGHTLEAF_TODAY, COMPANYCODE, DIVISIONCODE,DIVISIONCODE SOURCEGARDEN
                 FROM   PRODGREENLEAFWITHERDETAIL
                 WHERE  DIVISIONCODE = '0002'
                 AND COMPANYCODE ='JT0069' 
                 AND RECEIPTTYPE = 'BOUGHT'
                 AND PRODUCTIONDATE >= TO_DATE('31/07/2019', 'DD/MM/YYYY')  
                 AND PRODUCTIONDATE <= TO_DATE('31/07/2019', 'DD/MM/YYYY')  
                 GROUP BY COMPANYCODE, DIVISIONCODE, SOURCEGARDEN 
             )
             GROUP BY COMPANYCODE, DIVISIONCODE, SOURCEGARDEN
        ) Y 
        WHERE 1=1  
        AND X.COMPANYCODE=Y.COMPANYCODE(+) 
        AND X.DIVISIONCODE=Y.DIVISIONCODE(+) 
        GROUP BY Y.COMPANYCODE, Y.DIVISIONCODE, Y.SOURCEGARDEN, Y.OWNLEAF_TODAY, Y.BOUGHTLEAF_TODAY, 
        X.TOTAL_TEAMADE_TODAY, X.COMPANYCODE, X.DIVISIONCODE   
    ) M,  
    (  
        SELECT Y.OWNLEAF_TODATE OWNLEAF_TODATE_LY, Y.BOUGHTLEAF_TODATE BOUGHTLEAF_TODATE_LY, 
        SUM(NVL(Y.OWNLEAF_TODATE, 0)+NVL(Y.BOUGHTLEAF_TODATE, 0)) TTL_GREEN_LEAF_TODATE_LY,  
        X.TOTAL_TEAMADE_TODATE TEAMADEQTY_TODATE_LY, (X.TOTAL_TEAMADE_TODATE/SUM(NVL(Y.OWNLEAF_TODATE, 0)+NVL(Y.BOUGHTLEAF_TODATE, 0)))*100 RECV_PER_TODATE_LY,  
        X.COMPANYCODE, X.DIVISIONCODE, Y.SOURCEGARDEN  
        FROM 
        (
            SELECT COMPANYCODE, DIVISIONCODE, (NVL(TEAMADE_OWN_ORX_TODATE,0)+NVL(TEAMADE_BOUGHT_ORX_TODATE,0)+ 
            NVL(TEAMADE_OWN_CTC_TODATE,0)+NVL(TEAMADE_BOUGHT_CTC_TODATE,0)+NVL(TEAMADE_OWN_GTEA_TODATE,0)+NVL(TEAMADE_BOUGHT_GTEA_TODATE,0)) TOTAL_TEAMADE_TODATE  
            FROM 
            (   
                SELECT COMPANYCODE, DIVISIONCODE, SUM(TEAMADE_OWN_ORX_TODATE) TEAMADE_OWN_ORX_TODATE, 
                SUM(TEAMADE_BOUGHT_ORX_TODATE) TEAMADE_BOUGHT_ORX_TODATE,  
                SUM(TEAMADE_OWN_CTC_TODATE) TEAMADE_OWN_CTC_TODATE, SUM(TEAMADE_BOUGHT_CTC_TODATE) TEAMADE_BOUGHT_CTC_TODATE,   
                SUM(TEAMADE_OWN_GTEA_TODATE) TEAMADE_OWN_GTEA_TODATE, SUM(TEAMADE_BOUGHT_GTEA_TODATE) TEAMADE_BOUGHT_GTEA_TODATE  
                FROM   
                (         
                    SELECT A.COMPANYCODE, A.DIVISIONCODE, CASE WHEN C.CATEGORYCODE = 'ORTHODOX' AND A.OWNBOUGHT = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_ORX_TODATE,  
                    CASE WHEN C.CATEGORYCODE = 'ORTHODOX' AND A.OWNBOUGHT = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_ORX_TODATE,  
                    CASE WHEN C.CATEGORYCODE = 'CTC' AND A.OWNBOUGHT = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_CTC_TODATE,   
                    CASE WHEN C.CATEGORYCODE = 'CTC' AND A.OWNBOUGHT = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_CTC_TODATE,   
                    CASE WHEN C.CATEGORYCODE = 'LEAF' AND A.OWNBOUGHT = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_GTEA_TODATE,   
                    CASE WHEN C.CATEGORYCODE = 'LEAF' AND A.OWNBOUGHT = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_GTEA_TODATE  
                    FROM PRODDAILYDRYERDETAILS A, SALESCATEGORYMASTER C   
                    WHERE A.COMPANYCODE = C.COMPANYCODE   
                    AND A.TEACATEGORYCODE = C.CATEGORYCODE    
                    AND A.PRODUCTIONDATE >= TO_DATE('01/04/2019', 'DD/MM/YYYY')    
                    AND A.PRODUCTIONDATE <= TO_DATE('31/07/2019', 'DD/MM/YYYY')    
                    AND A.COMPANYCODE = 'JT0069'  
                    AND A.DIVISIONCODE  = '0002' 
                    GROUP BY A.COMPANYCODE, A.DIVISIONCODE,C.CATEGORYCODE, A.OWNBOUGHT    
                )   
                GROUP BY  COMPANYCODE, DIVISIONCODE    
            )   
        ) X, 
        (  
             SELECT SUM(OWNLEAF_TODATE) OWNLEAF_TODATE, SUM(BOUGHTLEAF_TODATE) BOUGHTLEAF_TODATE, COMPANYCODE, DIVISIONCODE, SOURCEGARDEN
             FROM 
             ( 
                 SELECT SUM(NVL(QUANTITYFORWITHER,0)) OWNLEAF_TODATE, 0 BOUGHTLEAF_TODATE, COMPANYCODE, DIVISIONCODE,NVL(SOURCEGARDEN,DIVISIONCODE)  SOURCEGARDEN
                 FROM   PRODGREENLEAFWITHERDETAIL
                 WHERE  DIVISIONCODE = '0002'
                 AND COMPANYCODE ='JT0069' 
                 AND RECEIPTTYPE = 'OWN'
                 AND PRODUCTIONDATE >= TO_DATE('01/04/2019', 'DD/MM/YYYY')  
                 AND PRODUCTIONDATE <= TO_DATE('31/07/2019', 'DD/MM/YYYY')  
                 GROUP BY COMPANYCODE, DIVISIONCODE, SOURCEGARDEN 
                 UNION ALL
                 SELECT 0 OWNLEAF_TODATE, SUM(NVL(QUANTITYFORWITHER,0)) BOUGHTLEAF_TODATE, COMPANYCODE, DIVISIONCODE,DIVISIONCODE SOURCEGARDEN
                 FROM   PRODGREENLEAFWITHERDETAIL
                 WHERE  DIVISIONCODE = '0002'
                 AND COMPANYCODE ='JT0069' 
                 AND RECEIPTTYPE = 'BOUGHT'
                 AND PRODUCTIONDATE >= TO_DATE('01/04/2019', 'DD/MM/YYYY')  
                 AND PRODUCTIONDATE <= TO_DATE('31/07/2019', 'DD/MM/YYYY')  
                 GROUP BY COMPANYCODE, DIVISIONCODE, SOURCEGARDEN 
             )
             GROUP BY COMPANYCODE, DIVISIONCODE, SOURCEGARDEN
        ) Y  
        WHERE X.COMPANYCODE = Y.COMPANYCODE (+)
        AND X.DIVISIONCODE = Y.DIVISIONCODE  (+)
        GROUP BY Y.COMPANYCODE, Y.DIVISIONCODE, Y.SOURCEGARDEN, Y.OWNLEAF_TODATE, Y.BOUGHTLEAF_TODATE,  
        X.TOTAL_TEAMADE_TODATE, X.COMPANYCODE, X.DIVISIONCODE  
    ) N  
    WHERE M.COMPANYCODE(+) = N.COMPANYCODE  
    AND M.DIVISIONCODE(+) = N.DIVISIONCODE  
    AND N.COMPANYCODE = 'JT0069' 
    AND N.SOURCEGARDEN = '0002' 
) Q6,  
/*====================================GREENLEAF+TEA MADE END (LY)===============================*/
/*====================================GREENLEAF+TEA MADE START (PY)==============================*/
(  
    SELECT N.COMPANYCODE, N.DIVISIONCODE, N.SOURCEGARDEN, M.OWNLEAF_TODAY_PY, M.BOUGHTLEAF_TODAY_PY,  
    M.TTL_GREEN_LEAF_TODAY_PY, M.TEAMADEQTY_TODAY_PY, M.RECV_PER_TODAY_PY,  
    N.OWNLEAF_TODATE_PY, N.BOUGHTLEAF_TODATE_PY, N.TTL_GREEN_LEAF_TODATE_PY, 
    N.TEAMADEQTY_TODATE_PY, N.RECV_PER_TODATE_PY  
    FROM 
    (  
        SELECT Y.OWNLEAF_TODAY OWNLEAF_TODAY_PY, Y.BOUGHTLEAF_TODAY BOUGHTLEAF_TODAY_PY, 
        SUM(NVL(Y.OWNLEAF_TODAY, 0)+NVL(Y.BOUGHTLEAF_TODAY, 0)) TTL_GREEN_LEAF_TODAY_PY,  
        X.TOTAL_TEAMADE_TODAY TEAMADEQTY_TODAY_PY, (X.TOTAL_TEAMADE_TODAY/SUM(NVL(Y.OWNLEAF_TODAY, 0)+NVL(Y.BOUGHTLEAF_TODAY, 0)))*100 RECV_PER_TODAY_PY,  
        X.COMPANYCODE, X.DIVISIONCODE, Y.SOURCEGARDEN   
        FROM 
        (
            SELECT COMPANYCODE, DIVISIONCODE, (NVL(TEAMADE_OWN_ORX_TODAY,0)+NVL(TEAMADE_BOUGHT_ORX_TODAY,0)+ 
            NVL(TEAMADE_OWN_CTC_TODAY,0)+NVL(TEAMADE_BOUGHT_CTC_TODAY,0)+NVL(TEAMADE_OWN_GTEA_TODAY,0)+NVL(TEAMADE_BOUGHT_GTEA_TODAY,0)) TOTAL_TEAMADE_TODAY  
            FROM 
            (   
                SELECT COMPANYCODE, DIVISIONCODE, SUM(TEAMADE_OWN_ORX_TODAY) TEAMADE_OWN_ORX_TODAY, 
                SUM(TEAMADE_BOUGHT_ORX_TODAY) TEAMADE_BOUGHT_ORX_TODAY,  
                SUM(TEAMADE_OWN_CTC_TODAY) TEAMADE_OWN_CTC_TODAY, SUM(TEAMADE_BOUGHT_CTC_TODAY) TEAMADE_BOUGHT_CTC_TODAY,   
                SUM(TEAMADE_OWN_GTEA_TODAY) TEAMADE_OWN_GTEA_TODAY, SUM(TEAMADE_BOUGHT_GTEA_TODAY) TEAMADE_BOUGHT_GTEA_TODAY   
                FROM   
                (         
                    SELECT A.COMPANYCODE, A.DIVISIONCODE, CASE WHEN C.CATEGORYCODE = 'ORTHODOX' AND A.OWNBOUGHT = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_ORX_TODAY,  
                    CASE WHEN C.CATEGORYCODE = 'ORTHODOX' AND A.OWNBOUGHT = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_ORX_TODAY,  
                    CASE WHEN C.CATEGORYCODE = 'CTC' AND A.OWNBOUGHT = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_CTC_TODAY,   
                    CASE WHEN C.CATEGORYCODE = 'CTC' AND A.OWNBOUGHT = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_CTC_TODAY,   
                    CASE WHEN C.CATEGORYCODE = 'LEAF' AND A.OWNBOUGHT = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_GTEA_TODAY,   
                    CASE WHEN C.CATEGORYCODE = 'LEAF' AND A.OWNBOUGHT = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_GTEA_TODAY  
                    FROM PRODDAILYDRYERDETAILS A,  SALESCATEGORYMASTER C   
                    WHERE A.COMPANYCODE = C.COMPANYCODE   
                    AND A.TEACATEGORYCODE = C.CATEGORYCODE    
                    AND A.PRODUCTIONDATE >= TO_DATE(SUBSTR('31/07/2020', 1, 6) || TO_CHAR(SUBSTR('31/07/2020', -4) -2), 'DD/MM/YYYY')       
                    AND A.PRODUCTIONDATE <= TO_DATE(SUBSTR('31/07/2020', 1, 6) || TO_CHAR(SUBSTR('31/07/2020', -4) -2), 'DD/MM/YYYY')   
                    AND A.COMPANYCODE = 'JT0069'  
                    AND A.DIVISIONCODE = '0002' 
                    GROUP BY A.COMPANYCODE, A.DIVISIONCODE,C.CATEGORYCODE, A.OWNBOUGHT    
                )   
                GROUP BY  COMPANYCODE, DIVISIONCODE    
            )   
        ) X, 
        (   
             SELECT SUM(OWNLEAF_TODAY) OWNLEAF_TODAY, SUM(BOUGHTLEAF_TODAY) BOUGHTLEAF_TODAY, COMPANYCODE, DIVISIONCODE, SOURCEGARDEN
             FROM 
             ( 
                 SELECT SUM(NVL(QUANTITYFORWITHER,0)) OWNLEAF_TODAY, 0 BOUGHTLEAF_TODAY, COMPANYCODE, DIVISIONCODE, NVL(SOURCEGARDEN,DIVISIONCODE) SOURCEGARDEN
                 FROM   PRODGREENLEAFWITHERDETAIL
                 WHERE  DIVISIONCODE = '0002'
                 AND COMPANYCODE ='JT0069' 
                 AND RECEIPTTYPE = 'OWN'
                 AND PRODUCTIONDATE >= TO_DATE('31/07/2018', 'DD/MM/YYYY')  
                 AND PRODUCTIONDATE <= TO_DATE('31/07/2018', 'DD/MM/YYYY')  
                 GROUP BY COMPANYCODE, DIVISIONCODE, SOURCEGARDEN 
                 UNION ALL
                 SELECT 0 OWNLEAF_TODAY, SUM(NVL(QUANTITYFORWITHER,0)) BOUGHTLEAF_TODAY, COMPANYCODE, DIVISIONCODE,DIVISIONCODE SOURCEGARDEN
                 FROM   PRODGREENLEAFWITHERDETAIL
                 WHERE  DIVISIONCODE = '0002'
                 AND COMPANYCODE ='JT0069' 
                 AND RECEIPTTYPE = 'BOUGHT'
                 AND PRODUCTIONDATE >= TO_DATE('31/07/2018', 'DD/MM/YYYY')  
                 AND PRODUCTIONDATE <= TO_DATE('31/07/2018', 'DD/MM/YYYY')  
                 GROUP BY COMPANYCODE, DIVISIONCODE, SOURCEGARDEN 
             )
             GROUP BY COMPANYCODE, DIVISIONCODE, SOURCEGARDEN
        ) Y
        WHERE 1=1   
        GROUP BY Y.COMPANYCODE, Y.DIVISIONCODE, Y.SOURCEGARDEN, Y.OWNLEAF_TODAY, Y.BOUGHTLEAF_TODAY, 
        X.TOTAL_TEAMADE_TODAY, X.COMPANYCODE, X.DIVISIONCODE  
    ) M,
    (   
        SELECT Y.OWNLEAF_TODATE OWNLEAF_TODATE_PY, Y.BOUGHTLEAF_TODATE BOUGHTLEAF_TODATE_PY, 
        SUM(NVL(Y.OWNLEAF_TODATE, 0)+NVL(Y.BOUGHTLEAF_TODATE, 0)) TTL_GREEN_LEAF_TODATE_PY,   
        X.TOTAL_TEAMADE_TODATE TEAMADEQTY_TODATE_PY, (X.TOTAL_TEAMADE_TODATE/SUM(NVL(Y.OWNLEAF_TODATE, 0)+NVL(Y.BOUGHTLEAF_TODATE, 0)))*100 RECV_PER_TODATE_PY,   
        X.COMPANYCODE, X.DIVISIONCODE, Y.SOURCEGARDEN   
        FROM 
        (
            SELECT COMPANYCODE, DIVISIONCODE, (NVL(TEAMADE_OWN_ORX_TODATE,0)+NVL(TEAMADE_BOUGHT_ORX_TODATE,0)+ 
            NVL(TEAMADE_OWN_CTC_TODATE,0)+NVL(TEAMADE_BOUGHT_CTC_TODATE,0)+NVL(TEAMADE_OWN_GTEA_TODATE,0)+NVL(TEAMADE_BOUGHT_GTEA_TODATE,0)) TOTAL_TEAMADE_TODATE  
            FROM 
            (   
                SELECT COMPANYCODE, DIVISIONCODE, SUM(TEAMADE_OWN_ORX_TODATE) TEAMADE_OWN_ORX_TODATE, 
                SUM(TEAMADE_BOUGHT_ORX_TODATE) TEAMADE_BOUGHT_ORX_TODATE,  
                SUM(TEAMADE_OWN_CTC_TODATE) TEAMADE_OWN_CTC_TODATE, SUM(TEAMADE_BOUGHT_CTC_TODATE) TEAMADE_BOUGHT_CTC_TODATE,   
                SUM(TEAMADE_OWN_GTEA_TODATE) TEAMADE_OWN_GTEA_TODATE, SUM(TEAMADE_BOUGHT_GTEA_TODATE) TEAMADE_BOUGHT_GTEA_TODATE  
                FROM   
                (         
                    SELECT A.COMPANYCODE, A.DIVISIONCODE, CASE WHEN C.CATEGORYCODE = 'ORTHODOX' AND A.OWNBOUGHT = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_ORX_TODATE,  
                    CASE WHEN C.CATEGORYCODE = 'ORTHODOX' AND A.OWNBOUGHT = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_ORX_TODATE,  
                    CASE WHEN C.CATEGORYCODE = 'CTC' AND A.OWNBOUGHT = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_CTC_TODATE,   
                    CASE WHEN C.CATEGORYCODE = 'CTC' AND A.OWNBOUGHT = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_CTC_TODATE,   
                    CASE WHEN C.CATEGORYCODE = 'LEAF' AND A.OWNBOUGHT = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_GTEA_TODATE,   
                    CASE WHEN C.CATEGORYCODE = 'LEAF' AND A.OWNBOUGHT = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_GTEA_TODATE  
                    FROM PRODDAILYDRYERDETAILS A,  SALESCATEGORYMASTER C   
                    WHERE A.COMPANYCODE = C.COMPANYCODE   
                    AND A.TEACATEGORYCODE = C.CATEGORYCODE    
                    AND A.PRODUCTIONDATE >= TO_DATE(SUBSTR('01/04/2020', 1, 6) || TO_CHAR(SUBSTR('01/04/2020', -4) -2), 'DD/MM/YYYY')   
                    AND A.PRODUCTIONDATE <= TO_DATE(SUBSTR('31/07/2020', 1, 6) || TO_CHAR(SUBSTR('31/07/2020', -4) -2), 'DD/MM/YYYY')    
                    AND A.COMPANYCODE = 'JT0069'  
                    AND A.DIVISIONCODE  = '0002' 
                    GROUP BY A.COMPANYCODE, A.DIVISIONCODE,C.CATEGORYCODE, A.OWNBOUGHT    
                )   
                GROUP BY  COMPANYCODE, DIVISIONCODE    
            )   
        ) X, 
        (    
             SELECT SUM(OWNLEAF_TODATE) OWNLEAF_TODATE, SUM(BOUGHTLEAF_TODATE) BOUGHTLEAF_TODATE, COMPANYCODE, DIVISIONCODE, SOURCEGARDEN
             FROM 
             ( 
                 SELECT SUM(NVL(QUANTITYFORWITHER,0)) OWNLEAF_TODATE, 0 BOUGHTLEAF_TODATE, COMPANYCODE, DIVISIONCODE, NVL(SOURCEGARDEN,DIVISIONCODE) SOURCEGARDEN
                 FROM   PRODGREENLEAFWITHERDETAIL
                 WHERE  DIVISIONCODE = '0002'
                 AND COMPANYCODE ='JT0069' 
                 AND RECEIPTTYPE = 'OWN'
                 AND PRODUCTIONDATE >= TO_DATE('01/04/2018', 'DD/MM/YYYY')  
                 AND PRODUCTIONDATE <= TO_DATE('31/07/2018', 'DD/MM/YYYY')  
                 GROUP BY COMPANYCODE, DIVISIONCODE, SOURCEGARDEN 
                 UNION ALL
                 SELECT 0 OWNLEAF_TODATE, SUM(NVL(QUANTITYFORWITHER,0)) BOUGHTLEAF_TODATE, COMPANYCODE, DIVISIONCODE,DIVISIONCODE SOURCEGARDEN
                 FROM   PRODGREENLEAFWITHERDETAIL
                 WHERE  DIVISIONCODE = '0002'
                 AND COMPANYCODE ='JT0069' 
                 AND RECEIPTTYPE = 'BOUGHT'
                 AND PRODUCTIONDATE >= TO_DATE('01/04/2018', 'DD/MM/YYYY')  
                 AND PRODUCTIONDATE <= TO_DATE('31/07/2018', 'DD/MM/YYYY')  
                 GROUP BY COMPANYCODE, DIVISIONCODE, SOURCEGARDEN 
             )
             GROUP BY COMPANYCODE, DIVISIONCODE, SOURCEGARDEN
        ) Y   
        WHERE X.COMPANYCODE = Y.COMPANYCODE  
        AND X.DIVISIONCODE = Y.DIVISIONCODE  
        GROUP BY Y.COMPANYCODE, Y.DIVISIONCODE, Y.SOURCEGARDEN, Y.OWNLEAF_TODATE, Y.BOUGHTLEAF_TODATE, 
        X.TOTAL_TEAMADE_TODATE, X.COMPANYCODE, X.DIVISIONCODE   
    ) N  
    WHERE M.COMPANYCODE(+) = N.COMPANYCODE  
    AND M.DIVISIONCODE(+) = N.DIVISIONCODE  
    AND N.COMPANYCODE = 'JT0069'  
    AND N.SOURCEGARDEN = '0002' 
) Q7,  
/*====================================GREENLEAF+TEA MADE END (PY)===============================*/
/*===================================TEA PACKED START (CY)===============================*/
(   
    SELECT B.COMPANYCODE, B.DIVISIONCODE, A.TEA_PCKD_TODAY_CY, B.TEA_PCKD_TODATE_CY  
    FROM 
    (  
        SELECT COMPANYCODE, DIVISIONCODE, SUM(NVL(TOTALNETWEIGHT, 0)) TEA_PCKD_TODAY_CY   
        FROM SALESPACKINGDETAILS  
        WHERE GARDENINVOICEDATE >= TO_DATE('31/07/2020', 'DD/MM/YYYY')   
        AND GARDENINVOICEDATE <= TO_DATE('31/07/2020', 'DD/MM/YYYY')  
        AND ENTERDIVISIONCODE = '0002'  
        AND COMPANYCODE = 'JT0069'  
        AND DIVISIONCODE = '0002' 
        GROUP BY  COMPANYCODE, DIVISIONCODE  
    ) A,  
    (  
        SELECT COMPANYCODE, DIVISIONCODE, SUM(NVL(TOTALNETWEIGHT, 0)) TEA_PCKD_TODATE_CY  
        FROM SALESPACKINGDETAILS  
        WHERE GARDENINVOICEDATE >= TO_DATE('01/04/2020', 'DD/MM/YYYY')  
        AND GARDENINVOICEDATE <= TO_DATE('31/07/2020', 'DD/MM/YYYY')  
        AND ENTERDIVISIONCODE = '0002'  
        AND COMPANYCODE = 'JT0069'  
        AND DIVISIONCODE = '0002' 
        GROUP BY  COMPANYCODE, DIVISIONCODE  
    ) B  
    WHERE A.COMPANYCODE(+) = B.COMPANYCODE  
    AND  A.DIVISIONCODE(+) = B.DIVISIONCODE   
    AND B.COMPANYCODE = 'JT0069'  
    AND B.DIVISIONCODE = '0002' 
) Q8,  
/*===================================TEA PACKED END (CY)===============================*/
/*===================================TEA PACKED START (LY)===============================*/
(  
    SELECT B.COMPANYCODE, B.DIVISIONCODE, A.TEA_PCKD_TODAY_LY, B.TEA_PCKD_TODATE_LY  
    FROM 
    (   
        SELECT COMPANYCODE, DIVISIONCODE, SUM(NVL(TOTALNETWEIGHT, 0)) TEA_PCKD_TODAY_LY  
        FROM SALESPACKINGDETAILS  
        WHERE GARDENINVOICEDATE >= TO_DATE(SUBSTR('31/07/2020', 1, 6) || TO_CHAR(SUBSTR('31/07/2020', -4) -1), 'DD/MM/YYYY')  
        AND GARDENINVOICEDATE <= TO_DATE(SUBSTR('31/07/2020', 1, 6) || TO_CHAR(SUBSTR('31/07/2020', -4) -1), 'DD/MM/YYYY')  
        AND ENTERDIVISIONCODE = '0002'  
        AND COMPANYCODE = 'JT0069'  
        AND DIVISIONCODE = '0002' 
        GROUP BY  COMPANYCODE, DIVISIONCODE  
    ) A,    
    (  
        SELECT COMPANYCODE, DIVISIONCODE, SUM(NVL(TOTALNETWEIGHT, 0)) TEA_PCKD_TODATE_LY   
        FROM SALESPACKINGDETAILS  
        WHERE GARDENINVOICEDATE >= TO_DATE('01/04/2019', 'DD/MM/YYYY')   
        AND GARDENINVOICEDATE <= TO_DATE('31/07/2019', 'DD/MM/YYYY')  
        AND ENTERDIVISIONCODE = '0002'  
        AND COMPANYCODE = 'JT0069'  
        AND DIVISIONCODE = '0002' 
        GROUP BY  COMPANYCODE, DIVISIONCODE  
    ) B  
    WHERE A.COMPANYCODE(+) = B.COMPANYCODE  
    AND  A.DIVISIONCODE(+) = B.DIVISIONCODE  
    AND B.COMPANYCODE = 'JT0069'  
    AND B.DIVISIONCODE = '0002' 
) Q9,  
/*===================================TEA PACKED END (LY)===============================*/
/*===================================TEA PACKED START (PY)===============================*/
(  
    SELECT B.COMPANYCODE, B.DIVISIONCODE, A.TEA_PCKD_TODAY_PY, B.TEA_PCKD_TODATE_PY  
    FROM 
    (   
        SELECT COMPANYCODE, DIVISIONCODE, SUM(NVL(TOTALNETWEIGHT, 0)) TEA_PCKD_TODAY_PY  
        FROM SALESPACKINGDETAILS  
        WHERE GARDENINVOICEDATE >= TO_DATE(SUBSTR('31/07/2020', 1, 6) || TO_CHAR(SUBSTR('31/07/2020', -4) -2), 'DD/MM/YYYY')  
        AND GARDENINVOICEDATE <= TO_DATE(SUBSTR('31/07/2020', 1, 6) || TO_CHAR(SUBSTR('31/07/2020', -4) -2), 'DD/MM/YYYY')  
        AND ENTERDIVISIONCODE = '0002'  
        AND COMPANYCODE = 'JT0069'  
        AND DIVISIONCODE = '0002' 
        GROUP BY  COMPANYCODE, DIVISIONCODE  
    ) A,    
    (  
        SELECT COMPANYCODE, DIVISIONCODE, SUM(NVL(TOTALNETWEIGHT, 0)) TEA_PCKD_TODATE_PY   
        FROM SALESPACKINGDETAILS  
        WHERE GARDENINVOICEDATE >= TO_DATE(SUBSTR('01/04/2020', 1, 6) || TO_CHAR(SUBSTR('01/04/2020', -4) -2), 'DD/MM/YYYY')   
        AND GARDENINVOICEDATE <= TO_DATE(SUBSTR('31/07/2020', 1, 6) || TO_CHAR(SUBSTR('31/07/2020', -4) -2), 'DD/MM/YYYY')  
        AND ENTERDIVISIONCODE = '0002'  
        AND COMPANYCODE = 'JT0069'  
        AND DIVISIONCODE = '0002' 
        GROUP BY  COMPANYCODE, DIVISIONCODE  
    ) B  
    WHERE A.COMPANYCODE(+) = B.COMPANYCODE  
    AND A.DIVISIONCODE(+) = B.DIVISIONCODE  
    AND B.COMPANYCODE = 'JT0069'  
    AND B.DIVISIONCODE = '0002' 
) Q10,  
/*===================================TEA PACKED END (PY)===============================*/
/*==================================TEA DESPATCHED START (CY)===============================*/
(  
    SELECT B.COMPANYCODE, B.DIVISIONCODE, SUM(A.TEA_DISPTCH_TODAY_CY) TEA_DISPTCH_TODAY_CY, SUM(B.TEA_DISPTCH_TODATE_CY ) TEA_DISPTCH_TODATE_CY 
    FROM 
    (  
        SELECT A.COMPANYCODE, A.DIVISIONCODE, SUM(NVL(A.TOTALNETWEIGHT, 0)) TEA_DISPTCH_TODAY_CY  
        FROM SALESGARDENINVOICEDETAIL A, SALESGARDENINVOICEMASTER B  
        WHERE B.GATEPASSDATE  >=  TO_DATE('31/07/2020', 'DD/MM/YYYY')  
        AND B.GATEPASSDATE  <=  TO_DATE('31/07/2020', 'DD/MM/YYYY')  
        AND A.COMPANYCODE = B.COMPANYCODE  
        AND A.DIVISIONCODE = B.DIVISIONCODE  
        AND A.GARDENINVOICENO = B.GARDENINVOICENO  
        AND A.GARDENINVOICEDATE = B.GARDENINVOICEDATE  
        AND A.PACKINGTYPE = B.PACKINGTYPE  
        AND B.DIVISIONCODE = '0002' 
        GROUP BY  A.COMPANYCODE, A.DIVISIONCODE   
    ) A,  
    (     
        SELECT A.COMPANYCODE, A.DIVISIONCODE, SUM(NVL(A.TOTALNETWEIGHT, 0)) TEA_DISPTCH_TODATE_CY  
        FROM SALESGARDENINVOICEDETAIL A, SALESGARDENINVOICEMASTER B  
        WHERE B.GATEPASSDATE  >=  TO_DATE('01/04/2020', 'DD/MM/YYYY')  
        AND B.GATEPASSDATE  <=  TO_DATE('31/07/2020', 'DD/MM/YYYY')  
        AND A.COMPANYCODE = B.COMPANYCODE  
        AND A.DIVISIONCODE = B.DIVISIONCODE  
        AND A.GARDENINVOICENO = B.GARDENINVOICENO  
        AND A.GARDENINVOICEDATE = B.GARDENINVOICEDATE  
        AND A.PACKINGTYPE = B.PACKINGTYPE  
        AND B.DIVISIONCODE = '0002' 
        GROUP BY  A.COMPANYCODE, A.DIVISIONCODE   
    ) B  
    WHERE A.COMPANYCODE(+) = B.COMPANYCODE  
    AND A.DIVISIONCODE(+) = B.DIVISIONCODE  
    AND B.COMPANYCODE = 'JT0069'  
    AND B.DIVISIONCODE = '0002' 
    GROUP BY B.COMPANYCODE, B.DIVISIONCODE   
) Q11,    
/*===================================TEA DESPATCHED END (CY)==============================*/
/*==================================TEA DESPATCHED START (LY)===============================*/
(   
    SELECT B.COMPANYCODE, B.DIVISIONCODE, SUM(A.TEA_DISPTCH_TODAY_LY) TEA_DISPTCH_TODAY_LY, SUM(B.TEA_DISPTCH_TODATE_LY ) TEA_DISPTCH_TODATE_LY 
    FROM 
    (  
        SELECT A.COMPANYCODE, A.DIVISIONCODE, SUM(NVL(A.TOTALNETWEIGHT, 0)) TEA_DISPTCH_TODAY_LY  
        FROM SALESGARDENINVOICEDETAIL A, SALESGARDENINVOICEMASTER B  
        WHERE B.GATEPASSDATE  >=  TO_DATE('31/07/2019', 'DD/MM/YYYY')  
        AND B.GATEPASSDATE  <=  TO_DATE('31/07/2019', 'DD/MM/YYYY')  
        AND A.COMPANYCODE = B.COMPANYCODE  
        AND A.DIVISIONCODE = B.DIVISIONCODE  
        AND A.GARDENINVOICENO = B.GARDENINVOICENO  
        AND A.GARDENINVOICEDATE = B.GARDENINVOICEDATE  
        AND A.PACKINGTYPE = B.PACKINGTYPE  
        AND B.DIVISIONCODE = '0002' 
        GROUP BY  A.COMPANYCODE, A.DIVISIONCODE   
    ) A,  
    (     
        SELECT A.COMPANYCODE, A.DIVISIONCODE, SUM(NVL(A.TOTALNETWEIGHT, 0)) TEA_DISPTCH_TODATE_LY  
        FROM SALESGARDENINVOICEDETAIL A, SALESGARDENINVOICEMASTER B  
        WHERE B.GATEPASSDATE  >=  TO_DATE('01/04/2019', 'DD/MM/YYYY')  
        AND B.GATEPASSDATE  <=  TO_DATE('31/07/2019', 'DD/MM/YYYY')  
        AND A.COMPANYCODE = B.COMPANYCODE  
        AND A.DIVISIONCODE = B.DIVISIONCODE  
        AND A.GARDENINVOICENO = B.GARDENINVOICENO  
        AND A.GARDENINVOICEDATE = B.GARDENINVOICEDATE  
        AND A.PACKINGTYPE = B.PACKINGTYPE  
        AND B.DIVISIONCODE = '0002' 
        GROUP BY  A.COMPANYCODE, A.DIVISIONCODE   
    ) B  
    WHERE A.COMPANYCODE(+) = B.COMPANYCODE  
    AND A.DIVISIONCODE(+) = B.DIVISIONCODE  
    AND B.COMPANYCODE = 'JT0069'  
    AND B.DIVISIONCODE = '0002' 
    GROUP BY B.COMPANYCODE, B.DIVISIONCODE   
) Q12,       
/*===================================TEA DESPATCHED END (LY)==============================*/
/*==================================TEA DESPATCHED START (PY)===============================*/
(  
    SELECT B.COMPANYCODE, B.DIVISIONCODE, A.TEA_DISPTCH_TODAY_PY, B.TEA_DISPTCH_TODATE_PY  
    FROM 
    (  
        SELECT COMPANYCODE, DIVISIONCODE, SUM(NVL(TOTALNETWEIGHT, 0)) TEA_DISPTCH_TODAY_PY  
        FROM SALESGARDENINVOICEDETAIL  
        WHERE GARDENINVOICEDATE >= TO_DATE(SUBSTR('31/07/2020', 1, 6) || TO_CHAR(SUBSTR('31/07/2020', -4) -2), 'DD/MM/YYYY')  
        AND GARDENINVOICEDATE <=  TO_DATE(SUBSTR('31/07/2020', 1, 6) || TO_CHAR(SUBSTR('31/07/2020', -4) -2), 'DD/MM/YYYY')  
        GROUP BY  COMPANYCODE, DIVISIONCODE  
    ) A,  
    (    
        SELECT COMPANYCODE, DIVISIONCODE, SUM(NVL(TOTALNETWEIGHT, 0)) TEA_DISPTCH_TODATE_PY  
        FROM SALESGARDENINVOICEDETAIL  
        WHERE GARDENINVOICEDATE >=  TO_DATE(SUBSTR('01/04/2020', 1, 6) || TO_CHAR(SUBSTR('01/04/2020', -4) -2), 'DD/MM/YYYY')  
        AND GARDENINVOICEDATE <=  TO_DATE(SUBSTR('31/07/2020', 1, 6) || TO_CHAR(SUBSTR('31/07/2020', -4) -2), 'DD/MM/YYYY')  
        GROUP BY  COMPANYCODE, DIVISIONCODE  
    ) B   
    WHERE A.COMPANYCODE(+) = B.COMPANYCODE  
    AND  A.DIVISIONCODE(+) = B.DIVISIONCODE   
    AND B.COMPANYCODE = 'JT0069'   
    AND B.DIVISIONCODE = '0002' 
) Q13,        
/*===================================TEA DESPATCHED END (PY)==============================*/
/*===================================TEA MADE TODAY START===============================*/
(  
    SELECT COMPANYCODE, DIVISIONCODE, SUM(TEAMADE_OWN_ORX_TODAY) TEAMADE_OWN_ORX_TODAY, 
    SUM(TEAMADE_BOUGHT_ORX_TODAY) TEAMADE_BOUGHT_ORX_TODAY,  
    SUM(TEAMADE_OWN_CTC_TODAY) TEAMADE_OWN_CTC_TODAY, SUM(TEAMADE_BOUGHT_CTC_TODAY) TEAMADE_BOUGHT_CTC_TODAY,   
    SUM(TEAMADE_OWN_GTEA_TODAY) TEAMADE_OWN_GTEA_TODAY, SUM(TEAMADE_BOUGHT_GTEA_TODAY) TEAMADE_BOUGHT_GTEA_TODAY   
    FROM   
    (         
        SELECT A.COMPANYCODE, A.DIVISIONCODE, CASE WHEN C.CATEGORYCODE = 'ORTHODOX' AND B.RECEIPTTYPE = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_ORX_TODAY,  
        CASE WHEN C.CATEGORYCODE = 'ORTHODOX' AND B.RECEIPTTYPE = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_ORX_TODAY,  
        CASE WHEN C.CATEGORYCODE = 'CTC' AND B.RECEIPTTYPE = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_CTC_TODAY,   
        CASE WHEN C.CATEGORYCODE = 'CTC' AND B.RECEIPTTYPE = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_CTC_TODAY,   
        CASE WHEN C.CATEGORYCODE = 'LEAF' AND B.RECEIPTTYPE = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_GTEA_TODAY,   
        CASE WHEN C.CATEGORYCODE = 'LEAF' AND B.RECEIPTTYPE = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_GTEA_TODAY  
        FROM PRODDAILYDRYERDETAILS A, PRODGREENLEAFWITHERDETAIL B, SALESCATEGORYMASTER C   
        WHERE A.COMPANYCODE = B.COMPANYCODE    
        AND A.DIVISIONCODE = B.DIVISIONCODE   
        AND A.BATCHNO = B.BATCHNO    
        AND A.COMPANYCODE = C.COMPANYCODE   
        AND A.TEACATEGORYCODE = C.CATEGORYCODE    
        AND A.PRODUCTIONDATE >= TO_DATE('31/07/2020', 'DD/MM/YYYY')     
        AND A.PRODUCTIONDATE <=TO_DATE('31/07/2020', 'DD/MM/YYYY')   
        AND A.COMPANYCODE = 'JT0069'  
        AND NVL(B.SOURCEGARDEN, B.DIVISIONCODE)= '0002' 
        GROUP BY A.COMPANYCODE, A.DIVISIONCODE,C.CATEGORYCODE, B.RECEIPTTYPE    
    )   
    GROUP BY  COMPANYCODE, DIVISIONCODE    
) Q14,   
/*===================================TEA MADE TODAY END===============================*/
/*===================================TEA MADE TOMONTH START===============================*/
(  
    SELECT COMPANYCODE, DIVISIONCODE, SUM(TEAMADE_OWN_ORX_TOMON) TEAMADE_OWN_ORX_TOMON, 
    SUM(TEAMADE_BOUGHT_ORX_TOMON) TEAMADE_BOUGHT_ORX_TOMON,  
    SUM(TEAMADE_OWN_CTC_TOMON)+SUM(TEAMADE_CTC_EX_TOMON) TEAMADE_OWN_CTC_TOMON, SUM(TEAMADE_BOUGHT_CTC_TOMON) TEAMADE_BOUGHT_CTC_TOMON,   
    SUM(TEAMADE_OWN_GTEA_TOMON) TEAMADE_OWN_GTEA_TOMON, SUM(TEAMADE_BOUGHT_GTEA_TOMON) TEAMADE_BOUGHT_GTEA_TOMON  
    FROM   
    (         
        SELECT A.COMPANYCODE, A.DIVISIONCODE, CASE WHEN C.CATEGORYCODE = 'ORTHODOX' AND B.RECEIPTTYPE = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_ORX_TOMON,  
        CASE WHEN C.CATEGORYCODE = 'ORTHODOX' AND B.RECEIPTTYPE = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_ORX_TOMON,  
        CASE WHEN C.CATEGORYCODE = 'CTC' AND B.RECEIPTTYPE = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_CTC_TOMON,  0 TEAMADE_CTC_EX_TOMON,    
        CASE WHEN C.CATEGORYCODE = 'CTC' AND B.RECEIPTTYPE = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_CTC_TOMON,   
        CASE WHEN C.CATEGORYCODE = 'LEAF' AND B.RECEIPTTYPE = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_GTEA_TOMON,   
        CASE WHEN C.CATEGORYCODE = 'LEAF' AND B.RECEIPTTYPE = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_GTEA_TOMON  
        FROM PRODDAILYDRYERDETAILS A, PRODGREENLEAFWITHERDETAIL B, SALESCATEGORYMASTER C   
        WHERE A.COMPANYCODE = B.COMPANYCODE    
        AND A.DIVISIONCODE = B.DIVISIONCODE   
        AND A.BATCHNO = B.BATCHNO    
        AND A.COMPANYCODE = C.COMPANYCODE   
        AND A.TEACATEGORYCODE = C.CATEGORYCODE    
        AND A.PRODUCTIONDATE >= TO_DATE('01/'|| SUBSTR('31/07/2020', 4, 10), 'DD/MM/YYYY')     
        AND A.PRODUCTIONDATE <=TO_DATE('31/07/2020', 'DD/MM/YYYY')   
        AND A.COMPANYCODE = 'JT0069'  
        AND NVL(B.SOURCEGARDEN, B.DIVISIONCODE) = '0002' 
        GROUP BY A.COMPANYCODE, A.DIVISIONCODE,C.CATEGORYCODE, B.RECEIPTTYPE    
        UNION ALL  
        SELECT COMPANYCODE, DIVISIONCODE, 0 TEAMADE_OWN_ORX_TOMON,   
        0 TEAMADE_BOUGHT_ORX_TOMON, SUM(NVL(TEAMADEQTY,0)) TEAMADE_CTC_EX_TOMON,   
        0 TEAMADE_OWN_CTC_TOMON, 0 TEAMADE_BOUGHT_CTC_TOMON,   
        0 TEAMADE_OWN_GTEA_TOMON, 0 TEAMADE_BOUGHT_GTEA_TOMON  
        FROM PRODDAILYDRYERDETAILS   
        WHERE PRODUCTIONDATE >=  TO_DATE('01/'|| SUBSTR('31/07/2020', 4, 10), 'DD/MM/YYYY')   
        AND PRODUCTIONDATE <= TO_DATE('31/07/2020', 'DD/MM/YYYY')  
        AND DIVISIONCODE = '0002' 
        AND BATCHNO LIKE 'EXC%'  
        GROUP BY COMPANYCODE, DIVISIONCODE   
    )   
    GROUP BY  COMPANYCODE, DIVISIONCODE    
) Q15,   
/*===================================TEA MADE TOMONTH END===============================*/
/*===================================TEA MADE UPTODATE START===============================*/
(  
    SELECT COMPANYCODE, DIVISIONCODE, SUM(TEAMADE_OWN_ORX_TODATE) TEAMADE_OWN_ORX_TODATE, 
    SUM(TEAMADE_BOUGHT_ORX_TODATE) TEAMADE_BOUGHT_ORX_TODATE,  
    SUM(TEAMADE_OWN_CTC_TODATE)+SUM(TEAMADE_CTC_EX_TODATE) TEAMADE_OWN_CTC_TODATE, SUM(TEAMADE_BOUGHT_CTC_TODATE) TEAMADE_BOUGHT_CTC_TODATE,   
    SUM(TEAMADE_OWN_GTEA_TODATE) TEAMADE_OWN_GTEA_TODATE, SUM(TEAMADE_BOUGHT_GTEA_TODATE) TEAMADE_BOUGHT_GTEA_TODATE  
    FROM   
    (         
        SELECT A.COMPANYCODE, A.DIVISIONCODE, CASE WHEN C.CATEGORYCODE = 'ORTHODOX' AND B.RECEIPTTYPE = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_ORX_TODATE,  
        CASE WHEN C.CATEGORYCODE = 'ORTHODOX' AND B.RECEIPTTYPE = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_ORX_TODATE,  
        CASE WHEN C.CATEGORYCODE = 'CTC' AND B.RECEIPTTYPE = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_CTC_TODATE,  0 TEAMADE_CTC_EX_TODATE,    
        CASE WHEN C.CATEGORYCODE = 'CTC' AND B.RECEIPTTYPE = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_CTC_TODATE,   
        CASE WHEN C.CATEGORYCODE = 'LEAF' AND B.RECEIPTTYPE = 'OWN' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_OWN_GTEA_TODATE,   
        CASE WHEN C.CATEGORYCODE = 'LEAF' AND B.RECEIPTTYPE = 'BOUGHT' THEN SUM(NVL(A.TEAMADEQTY, 0)) END TEAMADE_BOUGHT_GTEA_TODATE  
        FROM PRODDAILYDRYERDETAILS A, PRODGREENLEAFWITHERDETAIL B, SALESCATEGORYMASTER C   
        WHERE A.COMPANYCODE = B.COMPANYCODE    
        AND A.DIVISIONCODE = B.DIVISIONCODE   
        AND A.BATCHNO = B.BATCHNO    
        AND A.COMPANYCODE = C.COMPANYCODE   
        AND A.TEACATEGORYCODE = C.CATEGORYCODE    
        AND A.PRODUCTIONDATE >= TO_DATE('01/04/2020', 'DD/MM/YYYY')     
        AND A.PRODUCTIONDATE <= TO_DATE('31/07/2020', 'DD/MM/YYYY')   
        AND A.COMPANYCODE = 'JT0069'  
        AND NVL(B.SOURCEGARDEN, B.DIVISIONCODE) = '0002' 
        GROUP BY A.COMPANYCODE, A.DIVISIONCODE,C.CATEGORYCODE, B.RECEIPTTYPE    
        UNION ALL  
        SELECT COMPANYCODE, DIVISIONCODE, 0 TEAMADE_OWN_ORX_TODATE,   
        0 TEAMADE_BOUGHT_ORX_TODATE, SUM(NVL(TEAMADEQTY,0)) TEAMADE_CTC_EX_TODATE,   
        0 TEAMADE_OWN_CTC_TODATE, 0 TEAMADE_BOUGHT_CTC_TODATE,   
        0 TEAMADE_OWN_GTEA_TODATE, 0 TEAMADE_BOUGHT_GTEA_TODATE  
        FROM PRODDAILYDRYERDETAILS   
        WHERE PRODUCTIONDATE >= TO_DATE('01/04/2020', 'DD/MM/YYYY')     
        AND PRODUCTIONDATE <= TO_DATE('31/07/2020', 'DD/MM/YYYY')   
        AND DIVISIONCODE = '0002' 
        AND BATCHNO LIKE 'EXC%'  
        GROUP BY COMPANYCODE, DIVISIONCODE   
    )   
    GROUP BY  COMPANYCODE, DIVISIONCODE    
) Q16,   
/*===================================TEA MADE UPTODATE END===============================*/
/*===================================TRAINFALL XX  TODAY START (CY)==============================*/
( 
    SELECT COMPANYCODE, DIVISIONCODE, AVG(RAINFALL) RAINFALL_TODAY_CY, AVG(MAXTEMP) TEMP_MAX_TDY_CY, AVG(MINTEMP) TEMP_MIN_TDY_CY  
    FROM PRODDAILYRAINFRALLRECORD  
    WHERE COMPANYCODE = 'JT0069'   
    AND DIVISIONCODE = '0002' 
    AND DATEFROM >= TO_DATE('31/07/2020', 'DD/MM/YYYY') 
    AND DATETO <= TO_DATE('31/07/2020', 'DD/MM/YYYY') 
    GROUP BY COMPANYCODE, DIVISIONCODE   
) Q17,  
/*===================================TRAINFALL XX  TODAY END (CY)==============================*/
/*===================================TRAINFALL XX  TODATE START (CY)==============================*/
( 
    SELECT COMPANYCODE, DIVISIONCODE, SUM(RAINFALL) RAINFALL_TODATE_CY, AVG(MAXTEMP) TEMP_MAX_TDT_CY, AVG(MINTEMP) TEMP_MIN_TDT_CY 
    FROM PRODDAILYRAINFRALLRECORD  
    WHERE COMPANYCODE = 'JT0069'   
    AND DIVISIONCODE = '0002' 
    AND DATEFROM >= TO_DATE('01/04/2020', 'DD/MM/YYYY') 
    AND DATETO <= TO_DATE('31/07/2020', 'DD/MM/YYYY') 
    GROUP BY COMPANYCODE, DIVISIONCODE   
) Q18,  
/*===================================TRAINFALL XX  TODATE END (CY)==============================*/
/*===================================TRAINFALL XX  TODAY START(LY)==============================*/
( 
    SELECT COMPANYCODE, DIVISIONCODE, SUM(RAINFALL) RAINFALL_TODAY_LY, AVG(MAXTEMP) TEMP_MAX_TDY_LY, AVG(MINTEMP) TEMP_MIN_TDY_LY  
    FROM PRODDAILYRAINFRALLRECORD  
    WHERE COMPANYCODE = 'JT0069'   
    AND DIVISIONCODE = '0002' 
    AND DATEFROM >= TO_DATE('31/07/2019', 'DD/MM/YYYY')  
    AND DATETO <= TO_DATE('31/07/2019', 'DD/MM/YYYY')  
    GROUP BY COMPANYCODE, DIVISIONCODE   
) Q19,  
/*===================================TRAINFALL XX  TODAY END (LY)==============================*/
/*===================================TRAINFALL XX  TODATE START (LY)==============================*/
( 
    SELECT COMPANYCODE, DIVISIONCODE, SUM(RAINFALL) RAINFALL_TODATE_LY, AVG(MAXTEMP) TEMP_MAX_TDT_LY, AVG(MINTEMP) TEMP_MIN_TDT_LY 
    FROM PRODDAILYRAINFRALLRECORD  
    WHERE COMPANYCODE = 'JT0069'   
    AND DIVISIONCODE = '0002' 
    AND DATEFROM >= TO_DATE('01/04/2019', 'DD/MM/YYYY')  
    AND DATETO <= TO_DATE('31/07/2019', 'DD/MM/YYYY')  
    GROUP BY COMPANYCODE, DIVISIONCODE   
) Q20,  
/*===================================TRAINFALL XX  TODATE END (LY)==============================*/
/*===================================TOTAL WITHEREDQTY FOR WLTOTM START==============================*/
(                      
    SELECT COMPANYCODE, DIVISIONCODE, SUM(WITHEREDQUANTITY) WITHEREDQUANTITY    
    FROM    
    (   
        SELECT A.COMPANYCODE, A.DIVISIONCODE, WITHEREDQUANTITY   
        FROM PRODGREENLEAFWITHERDETAIL A   
        WHERE A.PRODUCTIONDATE >= TO_DATE('01/04/2020', 'DD/MM/YYYY')  
        AND A.PRODUCTIONDATE <= TO_DATE('31/07/2020', 'DD/MM/YYYY')    
        AND A.SEASON = 2019   
        AND A.COMPANYCODE = 'JT0069'    
        AND A.SOURCEGARDEN = '0002' 
    )    
    GROUP BY COMPANYCODE, DIVISIONCODE    
) Q21,  
/*===================================TOTAL WITHEREDQTY FOR WLTOTM END==============================*/
/*===================================FINE % OF GREEN LEAF START==============================*/
(  
    SELECT ROUND(SUM(OWN_LEAF_PER),0) OWN_LEAF_PER, ROUND(SUM(BOUGHT_LEAF_PER),0) BOUGHT_LEAF_PER, COMPANYCODE, DIVISIONCODE             
    FROM 
    (   
        SELECT COMPANYCODE, DIVISIONCODE, AVG(FINELEAFPERCENT) OWN_LEAF_PER,0 BOUGHT_LEAF_PER   
        FROM PRODDAILYGRNLEAFPLKINGDETAILS   
        WHERE COMPANYCODE= 'JT0069'     
        AND DIVISIONCODE = '0002'     
        AND LEAFTYPE = 'OWN' 
        AND PLUCKDATE >= (SELECT MAX(PLUCKDATE) FROM PRODDAILYGRNLEAFPLKINGDETAILS WHERE PLUCKDATE < TO_DATE('31/07/2020', 'DD/MM/YYYY'))  
        AND PLUCKDATE <= (SELECT MAX(PLUCKDATE) FROM PRODDAILYGRNLEAFPLKINGDETAILS WHERE PLUCKDATE < TO_DATE('31/07/2020', 'DD/MM/YYYY'))  
        GROUP BY COMPANYCODE, DIVISIONCODE 
        UNION ALL 
        SELECT   COMPANYCODE, DIVISIONCODE ,0 OWN_LEAF_PER, AVG(FINELEAFPERCENTAGE) BOUGHT_LEAF_PER 
        FROM   GREENLEAFWBMEASUREMENT
        WHERE   DIVISIONCODE ='0002'
        AND COMPANYCODE ='JT0069' 
        AND WEIGHINGDATE >= (SELECT MAX(WEIGHINGDATE) FROM GREENLEAFWBMEASUREMENT WHERE WEIGHINGDATE < TO_DATE('31/07/2020', 'DD/MM/YYYY')  AND   DIVISIONCODE ='0002')
        AND WEIGHINGDATE <= (SELECT MAX(WEIGHINGDATE) FROM GREENLEAFWBMEASUREMENT WHERE WEIGHINGDATE < TO_DATE('31/07/2020', 'DD/MM/YYYY') AND   DIVISIONCODE ='0002')  
        GROUP BY COMPANYCODE, DIVISIONCODE   
    )  
    GROUP BY COMPANYCODE, DIVISIONCODE
) Q22    
/*======================================FINE % OF GREEN LEAF END=====================================*/
WHERE Q1.COMPANYCODE = Q2.COMPANYCODE(+)   
AND  Q1.DIVISIONCODE = Q2.DIVISIONCODE(+)   
AND  Q1.COMPANYCODE = Q3.COMPANYCODE(+)   
AND  Q1.DIVISIONCODE = Q3.DIVISIONCODE(+)   
AND  Q1.COMPANYCODE = Q4.COMPANYCODE(+)   
AND  Q1.DIVISIONCODE = Q4.DIVISIONCODE(+)   
AND  Q1.COMPANYCODE = Q5.COMPANYCODE(+)   
AND  Q1.DIVISIONCODE = Q5.DIVISIONCODE(+)   
AND  Q1.COMPANYCODE = Q6.COMPANYCODE(+)   
AND  Q1.DIVISIONCODE = Q6.DIVISIONCODE(+)   
AND  Q1.COMPANYCODE = Q7.COMPANYCODE(+)   
AND  Q1.DIVISIONCODE = Q7.DIVISIONCODE(+)  
AND  Q1.COMPANYCODE = Q8.COMPANYCODE(+)  
AND  Q1.DIVISIONCODE = Q8.DIVISIONCODE(+) 
AND  Q1.COMPANYCODE = Q9.COMPANYCODE(+) 
AND  Q1.DIVISIONCODE = Q9.DIVISIONCODE(+)  
AND  Q1.COMPANYCODE = Q10.COMPANYCODE(+)  
AND  Q1.DIVISIONCODE = Q10.DIVISIONCODE(+)  
AND  Q1.COMPANYCODE = Q11.COMPANYCODE(+)  
AND  Q1.DIVISIONCODE = Q11.DIVISIONCODE(+)  
AND  Q1.COMPANYCODE = Q12.COMPANYCODE(+)  
AND  Q1.DIVISIONCODE = Q12.DIVISIONCODE(+)  
AND  Q1.COMPANYCODE = Q13.COMPANYCODE(+)  
AND  Q1.DIVISIONCODE = Q13.DIVISIONCODE(+)  
AND  Q1.COMPANYCODE = Q14.COMPANYCODE(+)  
AND  Q1.DIVISIONCODE = Q14.DIVISIONCODE(+)  
AND  Q1.COMPANYCODE = Q15.COMPANYCODE(+)  
AND  Q1.DIVISIONCODE = Q15.DIVISIONCODE(+)  
AND  Q1.COMPANYCODE = Q16.COMPANYCODE(+)  
AND  Q1.DIVISIONCODE = Q16.DIVISIONCODE(+)  
AND  Q1.COMPANYCODE = Q17.COMPANYCODE(+)  
AND  Q1.DIVISIONCODE = Q17.DIVISIONCODE(+)  
AND  Q1.COMPANYCODE = Q18.COMPANYCODE(+)  
AND  Q1.DIVISIONCODE = Q18.DIVISIONCODE(+)  
AND  Q1.COMPANYCODE = Q19.COMPANYCODE(+)  
AND  Q1.DIVISIONCODE = Q19.DIVISIONCODE(+)  
AND  Q1.COMPANYCODE = Q20.COMPANYCODE(+)  
AND  Q1.DIVISIONCODE = Q20.DIVISIONCODE(+)  
AND  Q1.COMPANYCODE = Q21.COMPANYCODE(+)  
AND  Q1.DIVISIONCODE = Q21.DIVISIONCODE(+)  
AND  Q1.COMPANYCODE = Q22.COMPANYCODE(+)  
AND  Q1.DIVISIONCODE = Q22.DIVISIONCODE(+)  
