CREATE OR REPLACE PROCEDURE BIRLANEW.PROC_RPT_PTAXDEDN_TEXT
(
    P_COMPANYCODE VARCHAR2,
    P_DIVISIONCODE VARCHAR2,
    P_YEARCODE VARCHAR2,
    P_YEARMONTH VARCHAR2,
    P_UNIT VARCHAR2 DEFAULT NULL,
    P_CATEGORY VARCHAR2 DEFAULT NULL
)
AS 
    LV_SQLSTR           VARCHAR2(32000);  
    LV_INSERTSTR VARCHAR2(4000);


    LV_DATEFM1 VARCHAR2(4000);
    LV_DATEFM2 VARCHAR2(4000);

    P_INT1  NUMBER(20);
    P_BLOCKS  NUMBER(10);
    
    LV_LASTUNIT VARCHAR2(100);
    LV_LASTCATEGORY VARCHAR2(100);
    
    
    LV_COMPANYNAME VARCHAR2(100);
    LV_DIVISIONNAME VARCHAR2(100);
    
    g_pBoldOn VARCHAR2(20);
    g_tBoldOn VARCHAR2(20);
    g_pBoldOff VARCHAR2(20);
    g_tBoldOff VARCHAR2(20);
    g_CompOn VARCHAR2(20);
    g_CompOff VARCHAR2(20);
    g_Pg72Lines VARCHAR2(20);
    g_Pg66Lines VARCHAR2(20);
    g_Pg36Lines VARCHAR2(20);
    g_NewPage VARCHAR2(20);
    g_Normal VARCHAR2(20);
    g_Enlarge VARCHAR2(20);
    g_Condence VARCHAR2(20);
    g_CompSmall VARCHAR2(20);
    g_NormalSmall  VARCHAR2(20);
   
BEGIN


   g_pBoldOn := Chr(27)|| 'E';
   g_tBoldOn := Chr(27) || Chr(14);
   g_pBoldOff := Chr(27) || 'F';
   g_tBoldOff := Chr(27) || Chr(18);
   g_CompOn := Chr(27) || Chr(15);
   g_CompOff := Chr(27) || Chr(18);
   g_Pg72Lines := Chr(27) || 'C' || Chr(72);
   g_Pg66Lines := Chr(27) || 'C' || Chr(66);
   g_Pg36Lines := Chr(27) || 'C' || Chr(36);
   g_NewPage := Chr(12);
   g_Normal := Chr(18);
   g_Enlarge := Chr(14);
   g_Condence := Chr(15);
   g_CompSmall := Chr(27) || Chr(77) || Chr(15);
   g_NormalSmall := Chr(27) || Chr(77);

--EXEC PROC_RPT_PF_LOANDEDN_TEXT('DY0086','Y03','15/03/2020','28/03/2020','','','','')

    DELETE FROM GTT_PIS_PTAXDEDN_REP WHERE 1=1;
    
    SELECT COMPANYNAME, DIVISIONNAME INTO LV_COMPANYNAME, LV_DIVISIONNAME  FROM DIVISIONMASTER A, COMPANYMAST B
    WHERE A.COMPANYCODE=B.COMPANYCODE
    AND A.COMPANYCODE=P_COMPANYCODE
    AND A.DIVISIONCODE=P_DIVISIONCODE;
    
    LV_SQLSTR := NULL;
    
    
    LV_SQLSTR := LV_SQLSTR || 'INSERT INTO GTT_PIS_PTAXDEDN_REP' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '(' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    COMPANYCODE, DIVISIONCODE, STATENAME, SLABAMOUNTFROM, SLABAMOUNTTO, ARREAR_PTAX, PTAX_RATE, MEMCOUNT, TOTAL_PTAX ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || ')' || CHR(10);
    
    
    
    LV_SQLSTR := LV_SQLSTR || ' '|| chr(10) ;  
    LV_SQLSTR := LV_SQLSTR || 'SELECT A.COMPANYCODE, A.DIVISIONCODE, STATENAME,SLABAMOUNTFROM, SLABAMOUNTTO,  SUM(ARREAR_PTAX) ARREAR_PTAX,  '|| chr(10) ;  
    LV_SQLSTR := LV_SQLSTR || 'PTAX PTAX_RATE, COUNT(TOKENNO) MEMCOUNT, SUM(PTAX) TOTAL_PTAX  '|| chr(10) ;  
    LV_SQLSTR := LV_SQLSTR || 'FROM  '|| chr(10) ;  
    LV_SQLSTR := LV_SQLSTR || '( '|| chr(10) ;  
    LV_SQLSTR := LV_SQLSTR || '    SELECT A.COMPANYCODE, A.DIVISIONCODE, STATENAME, A.TOKENNO, PTAX, PTAX_GROSS,SLABAMOUNTFROM,SLABAMOUNTTO , 0 ARREAR_PTAX '|| chr(10) ;  
    LV_SQLSTR := LV_SQLSTR || '    FROM PISPAYTRANSACTION A , PTAXSLAB B, PISEMPLOYEEMASTER E '|| chr(10) ;  
    LV_SQLSTR := LV_SQLSTR || '    WHERE A.PTAX=B.PTAXAMOUNT  '|| chr(10) ;  
    LV_SQLSTR := LV_SQLSTR || '    AND A.COMPANYCODE=E.COMPANYCODE '|| chr(10) ;  
    LV_SQLSTR := LV_SQLSTR || '    AND A.DIVISIONCODE=E.DIVISIONCODE '|| chr(10) ;  
    LV_SQLSTR := LV_SQLSTR || '    AND A.WORKERSERIAL=E.WORKERSERIAL '|| chr(10) ;  
    LV_SQLSTR := LV_SQLSTR || '    AND A.TOKENNO=E.TOKENNO '|| chr(10) ;  
    LV_SQLSTR := LV_SQLSTR || '    AND E.PTAXSTATE=B.STATENAME '|| chr(10) ;  
    LV_SQLSTR := LV_SQLSTR || '    AND A.COMPANYCODE='''||P_COMPANYCODE||'''' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    AND A.DIVISIONCODE='''||P_DIVISIONCODE||'''' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    AND A.YEARCODE='''||P_YEARCODE||'''' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    AND A.YEARMONTH='''||P_YEARMONTH||'''' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    AND B.WITHEFFECTFROM = (SELECT MAX(WITHEFFECTFROM) FROM PTAXSLAB WHERE B.STATENAME=STATENAME) '|| chr(10) ;  
    LV_SQLSTR := LV_SQLSTR || ') A '|| chr(10) ;  
    LV_SQLSTR := LV_SQLSTR || 'GROUP BY  A.COMPANYCODE, A.DIVISIONCODE, STATENAME,SLABAMOUNTFROM, SLABAMOUNTTO, PTAX '|| chr(10) ;  
    LV_SQLSTR := LV_SQLSTR || 'ORDER BY SLABAMOUNTFROM '|| chr(10) ;  


    DBMS_OUTPUT.PUT_LINE(LV_SQLSTR);
    EXECUTE IMMEDIATE LV_SQLSTR ;
    

----------------------------------------------------------
----  start text report ---

    P_INT1  := 0;
    
    DELETE FROM GTT_TEXT_REPORT WHERE 1=1;
--    commit;
    
   
    P_INT1 := 0;
    P_BLOCKS := 0;
    
--    PROC_INSERT_TEXT_REPORT(g_CompSmall);
    FOR C1 IN 
    ( 
--        SELECT * FROM GTT_PAYSLIP_ASIANTEA WHERE rownum < 3
        SELECT * FROM (
            SELECT ROW_NUMBER() OVER (PARTITION BY COMPANYCODE ORDER BY SLABAMOUNTFROM) SLNO,  
            COMPANYCODE, DIVISIONCODE, STATENAME, SLABAMOUNTFROM, SLABAMOUNTTO, ARREAR_PTAX, PTAX_RATE, MEMCOUNT, TOTAL_PTAX
            FROM GTT_PIS_PTAXDEDN_REP 
            ORDER BY STATENAME, SLABAMOUNTFROM
        )
--        WHERE rownum < 11
    )
    LOOP 
    
        
        IF P_BLOCKS >= 50 THEN
        
            LV_INSERTSTR := '|--------------------------------------------------------------------------------------------|';
            P_INT1 := P_INT1 + 1;
            PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
          
            P_INT1 := P_INT1 + 1;
            PROC_INSERT_TEXT_REPORT(g_NewPage);
            P_BLOCKS := 0;
        END IF;
        
        P_BLOCKS := P_BLOCKS+1;

          
        IF P_BLOCKS = 1 THEN     


--            LV_INSERTSTR := FMTALIGN(C1.UNITSHORTDESC,30,'C')||' '|| FMTALIGN('STAFF(BIRLA INDUSTRIES) P.F. & LOAN DEDN. STATEMENT ',100,'C')||
--            FMTALIGN('MONTH - '||TO_CHAR(TO_DATE(P_YEARMONTH,'YYYYMM'),'MON-YYYY'),50,'C') ;
--            P_INT1 := P_INT1 + 1;
--            PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
--            
            
--            
----------------------------------------------------------------------------------------------
--SRL         WAGES SLAB        ARREAR AMOUNT       RATE OF TAX     NO.OF          AMT OF TAX
--NO          ( IN RS. )                                            EMPLOYEES      DEDUCTED
----------------------------------------------------------------------------------------------




            LV_INSERTSTR := ' '||LV_COMPANYNAME;
            P_INT1 := P_INT1 + 1;
            PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);

            LV_INSERTSTR := '  ';
            P_INT1 := P_INT1 + 1;
            PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);


            LV_INSERTSTR := ' '||LV_DIVISIONNAME;
            P_INT1 := P_INT1 + 1;
            PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);

            LV_INSERTSTR := '  ';
            P_INT1 := P_INT1 + 1;
            PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);



            LV_INSERTSTR := ' PROFESSIONAL TAX REGISTRATION CERTIFICATE NO : RWC 2045036 ';
            P_INT1 := P_INT1 + 1;
            PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
            

            LV_INSERTSTR := '   ';
            P_INT1 := P_INT1 + 1;
            PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
            

            LV_INSERTSTR := ' ENROLMENT CERTIFICATE NO : PFCN 0852295 ';
            P_INT1 := P_INT1 + 1;
            PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
            
            LV_INSERTSTR := '  ';
            P_INT1 := P_INT1 + 1;
            PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
            
            
            LV_INSERTSTR := '|--------------------------------------------------------------------------------------------|';
            P_INT1 := P_INT1 + 1;
            PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
            

            LV_INSERTSTR := ' SRL         WAGES SLAB        ARREAR AMOUNT       RATE OF TAX     NO.OF          AMT OF TAX |';
            P_INT1 := P_INT1 + 1;
            PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);

            LV_INSERTSTR := ' NO          ( IN RS. )                                            EMPLOYEES      DEDUCTED   |';
            P_INT1 := P_INT1 + 1;
            PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);

          
            LV_INSERTSTR := '|--------------------------------------------------------------------------------------------|';
            P_INT1 := P_INT1 + 1;
            PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);

--            
--            LV_LASTUNIT := C1.UNITCODE;
--            LV_LASTCATEGORY := C1.CATEGORYCODE;
        END IF;
        --LV_INSERTSTR := '|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|';

--        IF LV_LASTCATEGORY <> C1.CATEGORYCODE  OR LV_LASTUNIT <> C1.UNITCODE THEN
--            FOR C2 IN 
--            ( 
--        --        SELECT * FROM GTT_PAYSLIP_ASIANTEA WHERE rownum < 3
--                SELECT * FROM (
--                    SELECT SUM(PF_GROSS) PF_GROSS, SUM(PF_E) PF_E, SUM(VPF)VPF, SUM(PF_C) PF_C, SUM(FPF) FPF, 
--                    SUM(LOAN_PFL) LOAN_PFL, SUM(LINT_PFL) LINT_PFL, SUM(LNBL_PFL) LNBL_PFL,  
--                    SUM(LOANAMOUNT) LOANAMOUNT, SUM(PF_E_YTD) PF_E_YTD, SUM(VPF_YTD) VPF_YTD, SUM(PF_C_YTD) PF_C_YTD, SUM(FPF_YTD) FPF_YTD 
--                    FROM GTT_PIS_PF_LOANDEDN_REP 
--                    WHERE UNITCODE = LV_LASTUNIT
--                    AND CATEGORYCODE = LV_LASTCATEGORY
--                    --ORDER BY UNITCODE, CATEGORYCODE, DEPARTMENTCODE, TOKENNO
--                )
--        --        WHERE rownum < 11
--            )
--            LOOP
--             
--            LV_INSERTSTR := '|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|';
--            P_INT1 := P_INT1 + 1;
--            PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
--          
--            
--                LV_INSERTSTR := '          '||FMTALIGN('GROUP',46,'L')||' '||
--                                FMTALIGN(C2.PF_GROSS,12,'R',2)||' '||
--                                FMTALIGN(' ',6,'R',2)||' '||
--                                FMTALIGN(C2.VPF,10,'R',2)||' '||
--                                FMTALIGN(' ',6,'R',2)||' '||
--                                FMTALIGN(C2.VPF_YTD,10,'R',2)||' '||
--                                FMTALIGN(' ',5,'R',2)||' '||
--                                FMTALIGN((C2.PF_C_YTD+C2.FPF_YTD),12,'R',2)||' '||
--                                FMTALIGN(' ',10,'R',2)||' '||
--                                FMTALIGN(C2.LOANAMOUNT,12,'R',2)||' '||
--                                FMTALIGN(' ',8,'R',2)||' '||
--                                FMTALIGN(C2.LOAN_PFL,10,'R',2)||' '||
--                                FMTALIGN(' ',9,'R',2);
--                P_INT1 := P_INT1 + 1;
--                PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
--                LV_INSERTSTR := '          '||FMTALIGN('TOTAL',48,'L')||' '||
--                                FMTALIGN(' ',8,'R',2)||' '||
--                                FMTALIGN(C2.PF_E,10,'R',2)||' '||
--                                FMTALIGN(' ',6,'R',2)||' '||
--                                FMTALIGN(C2.PF_E_YTD,10,'R',2)||' '||
--                                FMTALIGN(' ',6,'R',2)||' '||
--                                FMTALIGN((C2.PF_C+C2.FPF),10,'R',2)||' '||
--                                FMTALIGN(' ',9,'R',2)||' '||
--                                FMTALIGN(' ',11,'R',2)||' '||
--                                FMTALIGN(' ',9,'R',2)||' '||
--                                FMTALIGN(C2.LNBL_PFL,12,'R',2)||' '||
--                                FMTALIGN(' ',6,'R',2)||' '||
--                                FMTALIGN(C2.LINT_PFL,11,'R',2);
--                P_INT1 := P_INT1 + 1;
--                PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
--            END LOOP;
--             
--            LV_INSERTSTR := '|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|';
--            P_INT1 := P_INT1 + 1;
--            PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
--            
--             LV_INSERTSTR := '|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|';
--            P_INT1 := P_INT1 + 1;
--            PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
--            LV_INSERTSTR := '  UNIT - ['||C1.UNITCODE||'] '||C1.UNITSHORTDESC||'        CATEGORY - ['||C1.CATEGORYCODE||'] '||C1.CATEGORYDESC;
--            P_INT1 := P_INT1 + 1;
--            PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
--            
--            LV_INSERTSTR := '|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|';
--            P_INT1 := P_INT1 + 1;
--            PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
--            
--            
--        END IF; 
        
        
--        STATENAME, SLABAMOUNTFROM, SLABAMOUNTTO, ARREAR_PTAX, PTAX_RATE, MEMCOUNT, TOTAL_PTAX
        
        
        
        LV_INSERTSTR := FMTALIGN(C1.SLNO,4,'R')||' '||
--                        FMTALIGN(C1.STATENAME,20,'R')||' '||
                        FMTALIGN(C1.SLABAMOUNTFROM||' - ',14,'R')||' '||
                        FMTALIGN(C1.SLABAMOUNTTO,7,'L')||' '||
                        FMTALIGN(C1.ARREAR_PTAX,14,'R',2)||' '||
                        FMTALIGN(C1.PTAX_RATE,18,'R',2)||' '||
                        FMTALIGN(C1.MEMCOUNT,10,'R',0)||' '||
                        FMTALIGN(C1.TOTAL_PTAX,18,'R',2);
                        
                        
                        
         P_INT1 := P_INT1 + 1;
        PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
     
--        LV_LASTUNIT := C1.UNITCODE;
--        LV_LASTCATEGORY := C1.CATEGORYCODE;
        
    END LOOP;
    
     LV_INSERTSTR := '|--------------------------------------------------------------------------------------------|';
     P_INT1 := P_INT1 + 1;
    PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);

  FOR C1 IN 
    ( 
--        SELECT * FROM GTT_PAYSLIP_ASIANTEA WHERE rownum < 3
        SELECT * FROM (
          SELECT  SUM(MEMCOUNT) MEMCOUNT,SUM(TOTAL_PTAX) TOTAL_PTAX
            FROM GTT_PIS_PTAXDEDN_REP 
        )
--        WHERE rownum < 11
    )
    LOOP 
    
        
        LV_INSERTSTR := FMTALIGN(' ',4,'R')||' '||
--                        FMTALIGN(C1.STATENAME,20,'R')||' '||
                        FMTALIGN('TOTAL ',20,'R')||' '||
--                        FMTALIGN(C1.SLABAMOUNTTO,16,'LT')||' '||
                        FMTALIGN(' ',14,'R',2)||' '||
                        FMTALIGN(' ', 20,'R',2)||' '||
                        FMTALIGN(C1.MEMCOUNT,10,'R',0)||' '||
                        FMTALIGN(C1.TOTAL_PTAX,18,'R',2);
                        
                        
                        
         P_INT1 := P_INT1 + 1;
        PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
     
    END LOOP;
    --     
    LV_INSERTSTR := '|--------------------------------------------------------------------------------------------|';
    P_INT1 := P_INT1 + 1;
    PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
         
    LV_INSERTSTR := ' ';
    P_INT1 := P_INT1 + 1;
    PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
         
    LV_INSERTSTR := ' ';
    P_INT1 := P_INT1 + 1;
    PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
        
    LV_INSERTSTR := ' INTEREST                                                                    TOTAL RETURN';
    P_INT1 := P_INT1 + 1;
    PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
        
    LV_INSERTSTR := ' ';
    P_INT1 := P_INT1 + 1;
    PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
        
    LV_INSERTSTR := ' DATE :';
    P_INT1 := P_INT1 + 1;
    PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
        
    LV_INSERTSTR := ' ';
    P_INT1 := P_INT1 + 1;
    PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
        
        
              
    LV_INSERTSTR := '                                                    SIGNATURE                    DESIGNATION';
    P_INT1 := P_INT1 + 1;
    PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
            
    LV_INSERTSTR := '|--------------------------------------------------------------------------------------------|';
    P_INT1 := P_INT1 + 1;
    PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
         

-------end text report----
     
END;
/
