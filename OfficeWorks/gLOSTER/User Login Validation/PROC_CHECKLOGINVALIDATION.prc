CREATE OR REPLACE PROCEDURE GLOSTER_WEB.PROC_CHECKLOGINVALIDATION
(
    P_COMPANYCODE VARCHAR, 
    P_LOGINUSER VARCHAR, 
    P_PASSWORD VARCHAR    
) AS
LV_RESULT VARCHAR2(100);
LV_CNT NUMBER(10);

LV_WRONGATTEMPT NUMBER(10);

LV_LOGIN_VALIDATION  VARCHAR2(100);
LV_STRONG_PASSLEN   VARCHAR2(100);
LV_MIN_PASSLEN  VARCHAR2(100);
LV_NOOFWRONGATTEMPT  VARCHAR2(100);
LV_MINIMUM_USERLEN   VARCHAR2(100);
LV_MAXIMUM_USERLEN VARCHAR2(100);


LV_ISADMIN VARCHAR2(10);

BEGIN
    LV_RESULT := '#SUCCESS';
    DELETE FROM SYS_GBL_PROCOUTPUT_INFO WHERE 1=1;

BEGIN        
    SELECT SUBSTR(PARAMETER_VALUE,1,1) PARAMETER_VALUE  INTO LV_LOGIN_VALIDATION
    FROM SYS_PARAMETER 
    WHERE PARAMETER_NAME = 'LOGIN VALIDATION' 
    AND ROWNUM=1;


--CREATE TABLE CHANGEPASSWORDMANAGER
--(
--  ADMINUSERNAME  VARCHAR2(30 BYTE)              NOT NULL,
--  LOGINUSERNAME  VARCHAR2(30 BYTE)              NOT NULL,
--  OLDPASSWORD    VARCHAR2(30 BYTE),
--  NEWPASSWORD    VARCHAR2(30 BYTE),
--  CHANGEDATE     DATE
--)

    IF LV_LOGIN_VALIDATION = 'Y' THEN

        SELECT COUNT(USERNAME) INTO LV_CNT FROM LOGIN
        WHERE COMPANYCODE = P_COMPANYCODE
        AND USERNAME = P_LOGINUSER;
        
        IF (LV_CNT = 0) THEN
            LV_RESULT := 'User Name not exist.';
            lv_cnt := 1/0;
        END IF;
        
        
        SELECT ISADMINISTRATOR INTO LV_ISADMIN FROM LOGIN
        WHERE COMPANYCODE = P_COMPANYCODE
        AND USERNAME = P_LOGINUSER;
        
        
        IF LV_ISADMIN = 'N' THEN
            SELECT COUNT(USERNAME) INTO LV_CNT FROM LOGIN
            WHERE COMPANYCODE = P_COMPANYCODE
            AND USERNAME = P_LOGINUSER
            AND ACTIVE = 'Y';
            
            IF (LV_CNT = 0) THEN
                LV_RESULT := 'User account is not active, contact administrator.';
                lv_cnt := 1/0;
            END IF;
        END IF;
        
        
        
        
        
        
        SELECT PARAMETER_VALUE  INTO LV_NOOFWRONGATTEMPT
        FROM SYS_PARAMETER 
        WHERE PARAMETER_NAME = 'NO OF WRONG PASSWORD ATTEMPT' 
        AND ROWNUM=1;
        
        SELECT COUNT(USERNAME)  INTO LV_CNT  FROM LOGIN
        WHERE COMPANYCODE = P_COMPANYCODE
        AND USERNAME = P_LOGINUSER
        AND PASSWORD = P_PASSWORD; 
        
        UPDATE LOGIN set NOOFWRONGATTEMPT = 0
        WHERE COMPANYCODE=P_COMPANYCODE
        AND USERNAME=P_LOGINUSER
        AND PASSWORD=P_PASSWORD;

        IF (LV_CNT = 0) THEN
        
            SELECT NVL(NOOFWRONGATTEMPT,0) into LV_WRONGATTEMPT  FROM LOGIN
            WHERE COMPANYCODE = P_COMPANYCODE
            AND USERNAME = P_LOGINUSER;
            
            LV_WRONGATTEMPT := nvl(LV_WRONGATTEMPT,0)+1;
            IF LV_WRONGATTEMPT > LV_NOOFWRONGATTEMPT THEN
            
                UPDATE LOGIN SET ACTIVE = 'N' , NOOFWRONGATTEMPT = 0
                WHERE COMPANYCODE=P_COMPANYCODE
                AND USERNAME=P_LOGINUSER; 
                LV_RESULT := LV_WRONGATTEMPT ||' time(s) wrong Password attempt, User account is Locked, contact the administrator.';
                lv_cnt := 1/0;
            else
                UPDATE LOGIN set NOOFWRONGATTEMPT = LV_WRONGATTEMPT
                WHERE COMPANYCODE=P_COMPANYCODE
                AND USERNAME=P_LOGINUSER;   

                LV_RESULT := LV_WRONGATTEMPT ||' time(s) wrong Password attempt, '||(LV_NOOFWRONGATTEMPT - LV_WRONGATTEMPT) ||' time(s) left.';
                lv_cnt := 1/0;  
            END IF;
        else
                UPDATE LOGIN set NOOFWRONGATTEMPT = 0
                WHERE COMPANYCODE=P_COMPANYCODE
                AND USERNAME=P_LOGINUSER
                AND PASSWORD=P_PASSWORD;
        END IF;
        
--        
--
--        SELECT PARAMETER_VALUE  INTO LV_MINIMUM_USERLEN
--        FROM SYS_PARAMETER 
--        WHERE PARAMETER_NAME = 'MINIMUM USERNAME LENGTH' 
--        AND ROWNUM=1;
--
--        SELECT PARAMETER_VALUE  INTO LV_MAXIMUM_USERLEN
--        FROM SYS_PARAMETER 
--        WHERE PARAMETER_NAME = 'MAXIMUM USERNAME LENGTH' 
--        AND ROWNUM=1;
--        
--        SELECT COUNT(NEWPASSWORD) INTO LV_CNT FROM 
--        (
--            SELECT NEWPASSWORD, CHANGEDATE 
--            FROM CHANGEPASSWORDMANAGER 
--            ORDER BY CHANGEDATE DESC
--        ) A
--        WHERE ROWNUM <= 3
--        AND NEWPASSWORD=P_NEWPASSWORD;
--        
--        IF LV_CNT > 0 THEN
--            LV_RESULT := 'New password should not match with last 3 passwords.';
--        ELSE
--            INSERT INTO CHANGEPASSWORDMANAGER (ADMINUSERNAME, LOGINUSERNAME, OLDPASSWORD, NEWPASSWORD, CHANGEDATE)
--            VALUES (P_ADMINUSER,P_LOGINUSER,P_OLDPASSWORD,P_NEWPASSWORD,SYSDATE);
--        END IF;
--        
    END IF;
EXCEPTION WHEN OTHERS THEN  null;
--    LV_RESULT := '#SUCCESS';
END;   
    INSERT INTO SYS_GBL_PROCOUTPUT_INFO SELECT LV_RESULT FROM DUAL;
END;
/