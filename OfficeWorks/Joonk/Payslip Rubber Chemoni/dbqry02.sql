INSERT INTO GTT_RUBBERREGISTER_FRM16 

SELECT /* ORDERED */ AA.COMPANYCODE,AA.COMPANYNAME,AA.DIVISIONCODE,AA.DIVISIONNAME, 
AA.CLUSTERCODE,AA.CLUSTERDESC , AA.CATEGORYCODE ,AA.CATEGORYDESC,AA.WORKERSERIAL, AA.TOKENNO,AA.EMPLOYEENAME,AA.FATHERNAME,AA.DATEOFBIRTH, 
AA.DATEOFJOINING,AA.SEX,AA.TOTAL_DAYS,NVL(BB.TAPDAYS,0) TAPDAYS, CASE WHEN AA.CLUSTERCODE NOT IN('CHEFT','PUDFT') THEN (NVL(AA.TOTAL_DAYS,0)-NVL(BB.TAPDAYS,0)) 
ELSE (NVL(AA.TOTAL_DAYS,0)-NVL(AA.FACTORY_DAYS,0)) END GEN_DAYS , CASE WHEN AA.CLUSTERCODE NOT IN('CHEFT','PUDFT') THEN AA.FACT_DAYS ELSE NVL(AA.FACTORY_DAYS,0) END FACT_DAYS,AA.CRUMB_DAYS,AA.JD_DAY, 
AA.LCP,AA.CUT 
,(CASE WHEN AA.CLUSTERCODE NOT IN ('CHEFT','PUDFT') THEN  
CASE WHEN NVL(BB.TAPDAYS,0)=0 THEN 
AA.MTR_BASIC WHEN NVL(BB.TAPDAYS,0)>0 THEN NVL(AA.MTR_BASIC,0)+0.22 
END 
ELSE  
NVL(AA.MTR_BASIC,0)+4.87 
END) MTR_BASIC 
,AA.GTR_BASIC,AA.DA, AA.CUMDAYS,AA.CUM_BON_AMT,AA.OUT_STAND_DED,AA.WAG_DIF, 
AA.PER_PAY,AA.LCP_WGS,AA.GEN_TAP_EARNINGS, AA.TOTAL_EARNINGS, AA.TOTAL_DEDUCTION,AA.HLD_WGS,AA.LEV_WGS,AA.CR_I,AA.B_F_CR, 
AA.EPF,AA.WK_CASH,AA.LIC,AA.PRD,AA.SPL_ADV,AA.FES_ADV,AA.OTR_ADV,AA.ELE,AA.B_F_DR, AA.COOP_SCTY,AA.OS_NET_AMT 
,ROUND(NVL(BB.CLASS_I,0),2) CLASS_I,ROUND(NVL(BB.LATEX_I,0),2) LATEX_I,ROUND(NVL(BB.SCRAP_I,0),2) SCRAP_I,ROUND(NVL(BB.TOTAL_I,0),2) TOTAL_I, 
ROUND(NVL(BB.STD_OUT_I,0),2) STD_OUT_I,ROUND(NVL(BB.LAT_OKG_I,0),2) LAT_OKG_I,ROUND(NVL(BB.SC_OKG_I,0),2) SC_OKG_I,ROUND(NVL(BB.SCR_OKG_I,0),2) SCR_OKG_I,ROUND(NVL(BB.STD_AMT_I,0),2) STD_AMT_I, 
ROUND(NVL(BB.LOK_AMT_I,0),2) LOK_AMT_I,ROUND(NVL(BB.SOK_AMT_I,0),2) SOK_AMT_I,  
AA.MDE_WGS_I,CASE WHEN NVL(BB.TAPDAYS,0)=0 THEN 0 WHEN NVL(BB.TAPDAYS,0)>0 THEN (NVL(AA.GTR_BASIC,0)*NVL(BB.TAPDAYS,0))+(NVL(AA.DA,0)*NVL(BB.TAPDAYS,0))  END GTR_DA_I, 
ROUND(NVL(BB.CRUMB_WAGES_I,0),2) CRUMB_WAGES_I,  
/*(CASE WHEN AA.CLUSTERCODE NOT IN ('CHEFT','PUDFT') THEN 
CASE WHEN NVL(BB.TAPDAYS,0)=0 THEN (NVL(AA.MTR_BASIC,0)*(NVL(AA.TOTAL_DAYS,0)-NVL(BB.TAPDAYS,0)))+(NVL(AA.DA,0)*(NVL(AA.TOTAL_DAYS,0)-NVL(BB.TAPDAYS,0))) WHEN NVL(BB.TAPDAYS,0)>0 THEN (NVL(AA.TOTAL_DAYS,0)-NVL(BB.TAPDAYS,0)) * (NVL(AA.MTR_BASIC,0) + NVL(AA.DA,0) +0.22)  END 
ELSE 
MTRBASIC+DA_PAY  +4.87
END)*/ AA.DAILYWAGES G_F_PAY_I  , 
ROUND(NVL(BB.CLASS_II,0),2) CLASS_II,ROUND(NVL(BB.LATEX_II,0),2) LATEX_II, 
ROUND(NVL(BB.SCRAP_II,0),2) SCRAP_II,ROUND(NVL(BB.TOTAL_II,0),2) TOTAL_II,ROUND(NVL(BB.STD_OUT_II,0),2) STD_OUT_II,ROUND(NVL(BB.LAT_OKG_II,0),2) LAT_OKG_II,ROUND(NVL(BB.SC_OKG_II,0),2) SC_OKG_II, 
ROUND(NVL(BB.SCR_OKG_II,0),2) SCR_OKG_II,ROUND(NVL(BB.STD_AMT_II,0),2) STD_AMT_II,ROUND(NVL(BB.LOK_AMT_II,0),2) LOK_AMT_II,ROUND(NVL(BB.SOK_AMT_II,0),2) SOK_AMT_II, 
ROUND(NVL(BB.MDE_WGS_II,0),2) MDE_WGS_II,ROUND(NVL(BB.GTR_DA_II,0),2) GTR_DA_II,ROUND(NVL(BB.CRUMB_WAGES_II,0),2) CRUMB_WAGES_II,ROUND(NVL(BB.G_F_PAY_II,0),2) G_F_PAY_II, 
ROUND(NVL(BB.CLASS_III,0),2) CLASS_III,ROUND(NVL(BB.LATEX_III,0),2) LATEX_III,ROUND(NVL(BB.SCRAP_III,0),2) SCRAP_III,ROUND(NVL(BB.TOTAL_III,0),2) TOTAL_III, 
ROUND(NVL(BB.STD_OUT_III,0),2) STD_OUT_III,ROUND(NVL(BB.LAT_OKG_III,0),2) LAT_OKG_III,ROUND(NVL(BB.SC_OKG_III,0),2) SC_OKG_III,ROUND(NVL(BB.SCR_OKG_III,0),2) SCR_OKG_III,ROUND(NVL(BB.STD_AMT_III,0),2) STD_AMT_III, 
ROUND(NVL(BB.LOK_AMT_III,0),2) LOK_AMT_III,ROUND(NVL(BB.SOK_AMT_III,0),2) SOK_AMT_III,ROUND(NVL(BB.MDE_WGS_III,0),2) MDE_WGS_III,ROUND(NVL(BB.GTR_DA_III,0),2) GTR_DA_III, 
ROUND(NVL(BB.CRUMB_WAGES_III,0),2) CRUMB_WAGES_III,ROUND(NVL(BB.G_F_PAY_III,0),2) G_F_PAY_III, 
ROUND(NVL(BB.CLASS_IV,0),2) CLASS_IV,ROUND(NVL(BB.LATEX_IV,0),2) LATEX_IV,ROUND(NVL(BB.SCRAP_IV,0),2) SCRAP_IV,ROUND(NVL(BB.TOTAL_IV,0),2) TOTAL_IV,
ROUND(NVL(BB.STD_OUT_IV,0),2) STD_OUT_IV,ROUND(NVL(BB.LAT_OKG_IV,0),2) LAT_OKG_IV,ROUND(NVL(BB.SC_OKG_IV,0),2) SC_OKG_IV,ROUND(NVL(BB.SCR_OKG_IV,0),2) SCR_OKG_IV,ROUND(NVL(BB.STD_AMT_IV,0),2) STD_AMT_IV, 
ROUND(NVL(BB.LOK_AMT_IV,0),2) LOK_AMT_IV,ROUND(NVL(BB.SOK_AMT_IV,0),2) SOK_AMT_IV,ROUND(NVL(BB.MDE_WGS_IV,0),2) MDE_WGS_IV,ROUND(NVL(BB.GTR_DA_IV,0),2) GTR_DA_IV, 
ROUND(NVL(BB.CRUMB_WAGES_IV,0),2) CRUMB_WAGES_IV,ROUND(NVL(BB.G_F_PAY_IV,0),2) G_F_PAY_IV,TO_CHAR(AA.PERIODFROM,'MON YYYY') MON_YEAR 
FROM   
(  
SELECT COMPANYCODE,COMPANYNAME,DIVISIONCODE,DIVISIONNAME, 
CLUSTERCODE,CLUSTERDESC , CATEGORYCODE ,CATEGORYDESC,WORKERSERIAL, TOKENNO,EMPLOYEENAME,FATHERNAME,DATEOFBIRTH, 
DATEOFJOINING,SEX,NVL(TOTAL_DAYS,0) TOTAL_DAYS, 0 AS FACT_DAYS,FACTORY_DAYS,0 AS CRUMB_DAYS,JD_DAY, 
0 LCP,0 CUT,MTR_BASIC,GTR_BASIC,MTRBASIC,DA,DA_PAY, 
CUMDAYS,CUM_BON_AMT,0 OUT_STAND_DED,WAG_DIF, 
PERPAY_ALLOW PER_PAY,0 LCP_WGS,(GROSSWAGES - (NVL(CR_I,0) + NVL(B_F_CR,0) + NVL(HLD_WGS,0))) GEN_TAP_EARNINGS, GROSSWAGES TOTAL_EARNINGS, GROSSDEDN TOTAL_DEDUCTION,( NVL(HLD_WGS,0)) HLD_WGS,PFGROSS LEV_WGS,CR_I,B_F_CR, 
PF_E EPF,DED_WGADV WK_CASH,DED_LIC LIC,0 PRD,0 SPL_ADV,FES_ADV,OTR_ADV,ELE,B_F_DR, COOP_SCTY,NETSALARY OS_NET_AMT,MDE_WGS_I,PERIODFROM, DAILYWAGES  FROM  
(SELECT K.COMPANYCODE,B.COMPANYNAME,K.DIVISIONCODE,C.DIVISIONNAME, 
K.CLUSTERCODE,D.CLUSTERDESC , K.CATEGORYCODE ,E.CATEGORYDESC,K.WORKERSERIAL, K.TOKENNO,F.EMPLOYEENAME,F.FATHERNAME,TO_CHAR(F.DATEOFBIRTH,'dd/MM/yyyy') DATEOFBIRTH, 
TO_CHAR(F.DATEOFJOINING,'dd/MM/yyyy') DATEOFJOINING,F.SEX,K.HAZIRA TOTAL_DAYS,NVL(G.JD_DAY,0) JD_DAY, 
0 LCP,0 CUT,ROUND(NVL(I.MTR_BASIC,0),2) MTR_BASIC,K.MTR_BASIC AS MTRBASIC,K.DA DA_PAY,ROUND(NVL(H.GTR_BASIC,0),2) GTR_BASIC ,J.DA, 
L.CUMDAYS,L.CUM_BON_AMT,ROUND(NVL(K.PERPAY_ALLOW,0),2) PERPAY_ALLOW,ROUND((NVL(K.PF_E,0)+NVL(JK.PFAMOUNT,0)),2) PF_E,ROUND(NVL(K.DED_WGADV,0),2) DED_WGADV, ROUND(NVL(K.DED_LIC,0),2) DED_LIC,ROUND(NVL(K.GROSSWAGES,0),2) GROSSWAGES, 
ROUND(NVL(K.GROSSDEDN,0),2) GROSSDEDN,ROUND(NVL(K.NETSALARY,0),2) NETSALARY ,ROUND(NVL(K.COINBF,0),2) COINBF ,ROUND(NVL(K.COINCF,0),2) COINCF, 
ROUND((NVL(K.LOAN_ADVFT,0)+NVL(K.LOAN_ONAM,0)+NVL(K.LOAN_BKID,0)+NVL(K.LOAN_XMASS,0)),2) FES_ADV, (ROUND(NVL(K.DED_WELFARE,0),2) + ROUND(NVL(K.DED_UNION,0),2) + ROUND(NVL(K.LOAN_ADVGN,0),2)+ ROUND(NVL(K.TEMP_DED,0),2)+ ROUND(NVL(K.DED_ITAX,0),2)+ ROUND(NVL(K.OTHER_DED,0),2))  OTR_ADV,  
ROUND((NVL(K.DED_ELEC,0) + NVL(K.PTAX,0)),2) ELE ,ROUND(NVL(K.HOLIDAY_WAGE,0),2) HLD_WGS,K.MDP_WAGES  MDE_WGS_I,K.PERIODFROM,NVL(K.LNBL_ADVGN,0)+NVL(K.LNBL_ADVFT,0)+NVL(K.LNBL_ADVOP,0) OUT_STAND_DED, 
K.POP WAG_DIF,NVL(K.LOAN_ADVCO,0) COOP_SCTY,N.FACTORY_DAYS,ROUND(NVL(K.EXTRA_ALLOW,0),2) CR_I,ROUND(NVL(K.NONPF_ALLOW,0),2) B_F_CR,  
ROUND(NVL(K.LOAN_ADVOP,0),2) B_F_DR, ROUND(NVL(K.DAILYWAGES,0),2) DAILYWAGES ,ROUND(NVL(JK.PFGROSS,0),2)  PFGROSS
FROM GPSDAILYPAYSHEETDETAILS A,COMPANYMAST B,DIVISIONMASTER C, GPSCLUSTERMASTER D,GPSCATEGORYMAST E, GPSEMPLOYEEMAST F, 
GPSCOMPONENTASSIGNMENT J, GPSPAYSHEETDETAILS K, 
( SELECT DET.COMPANYCODE,DET.DIVISIONCODE,DET.WORKERSERIAL,DET.TOKENNO,DET.CLUSTERCODE, NVL(SUM(DET.HAZIRA),0) JD_DAY 
FROM GPSDAILYPAYSHEETDETAILS DET , GPSOCCUPATIONMAST MST 
WHERE DET.COMPANYCODE = 'JT0069' 
AND DET.DIVISIONCODE = '0006' 
AND PROCESSTYPE = 'DAILY PROCESS' 
AND CLUSTERCODE IN( 'CHEFD' ) 
AND CATEGORYCODE IN( 'PERW' ) 
AND DET.OCCUPATIONCODE =MST.OCCUPATIONCODE 
AND DET.DIVISIONCODE = MST.DIVISIONCODE AND DET.COMPANYCODE = MST.COMPANYCODE 
AND  DET.ATTENDANCEDATE >=TO_DATE('01/11/2020','dd/MM/yyyy') 
AND  DET.ATTENDANCEDATE <=TO_DATE('30/11/2020','dd/MM/yyyy') 
AND DET.OCCUPATIONCODE IN (SELECT PARAM_ID FROM SYS_SWT_PARAMDETAILS 
WHERE COMPANYCODE = 'JT0069' 
AND DIVISIONCODE = '0006' 
AND PARAM_NAME = 'POP' 
AND EFFECTIVEDATE=(SELECT MAX(EFFECTIVEDATE) FROM SYS_SWT_PARAMDETAILS 
WHERE COMPANYCODE = 'JT0069' 
AND DIVISIONCODE = '0006' 
AND PARAM_NAME = 'POP' )) 
GROUP BY DET.COMPANYCODE,DET.DIVISIONCODE,DET.WORKERSERIAL,DET.TOKENNO,DET.CLUSTERCODE) G , 
(SELECT COMPANYCODE,DIVISIONCODE,PARAM_ID,PARAM_VALUE AS GTR_BASIC FROM SYS_SWT_PARAMDETAILS  
WHERE COMPANYCODE ='JT0069'  
AND DIVISIONCODE ='0006' 
AND PARAM_NAME = 'GTR_BASIC' 
AND PARAM_ID IN( 'PERW' ) AND EFFECTIVEDATE=(SELECT MAX(EFFECTIVEDATE) FROM SYS_SWT_PARAMDETAILS 
WHERE COMPANYCODE = 'JT0069' 
AND DIVISIONCODE = '0006' 
AND PARAM_NAME = 'GTR_BASIC' AND PARAM_ID IN ( 'PERW' ))) H, 
(SELECT COMPANYCODE,DIVISIONCODE,PARAM_ID,PARAM_VALUE AS MTR_BASIC FROM SYS_SWT_PARAMDETAILS 
WHERE COMPANYCODE ='JT0069' 
AND DIVISIONCODE = '0006' 
AND PARAM_NAME = 'MTR_BASIC' 
AND PARAM_ID IN( 'PERW' ) AND EFFECTIVEDATE=(SELECT MAX(EFFECTIVEDATE) FROM SYS_SWT_PARAMDETAILS 
WHERE COMPANYCODE = 'JT0069' 
AND DIVISIONCODE = '0006' 
AND PARAM_NAME = 'MTR_BASIC' AND PARAM_ID IN ( 'PERW' ))) I , 
(SELECT YEARCODE, COMPANYCODE,DIVISIONCODE,TOKENNO,CLUSTERCODE,CATEGORYCODE,SUM(NVL(HAZIRA,0)) CUMDAYS,SUM(NVL(GROSSWAGES,0)) CUM_BON_AMT FROM VW_BONDAYGROSS 
WHERE COMPANYCODE ='JT0069'   
AND DIVISIONCODE ='0006'  
AND CLUSTERCODE IN( 'CHEFD' ) 
AND CATEGORYCODE IN('PERW' ) 
AND YEARCODE='2020-2021' AND PERIODTO<=TO_DATE('30/11/2020','dd/MM/yyyy')  
AND PERIODTO>=TO_DATE(DECODE(TO_NUMBER(TO_CHAR(TO_DATE('01/11/2020','dd/MM/yyyy'),'MM')),1, 
'01/04/' || TO_CHAR(TO_NUMBER(TO_CHAR(TO_DATE('01/11/2020','dd/MM/yyyy'),'YYYY') )-1),2, 
'01/04/' || TO_CHAR(TO_NUMBER(TO_CHAR(TO_DATE('01/11/2020','dd/MM/yyyy'),'YYYY'))-1),3, 
'01/04/' || TO_CHAR(TO_NUMBER(TO_CHAR(TO_DATE('01/11/2020','dd/MM/yyyy'),'YYYY') )-1), 
'01/04/' || TO_CHAR(TO_NUMBER(TO_CHAR(TO_DATE('01/11/2020','dd/MM/yyyy'),'YYYY') ))),'DD/MM/YYYY') 
GROUP BY YEARCODE, COMPANYCODE,DIVISIONCODE,TOKENNO,CLUSTERCODE,CATEGORYCODE) L, 
(SELECT SGT.COMPANYCODE,SGT.DIVISIONCODE,SGT.CLUSTERCODE,SGT.CATEGORYCODE,SGT.WORKERSERIAL, SGT.TOKENNO FROM 
GPSDAILYPAYSHEETDETAILS SGT, GPSOCCUPATIONMAST OCCU 
WHERE SGT.OCCUPATIONCODE = OCCU.OCCUPATIONCODE 
AND SGT.COMPANYCODE = OCCU.COMPANYCODE 
AND SGT.DIVISIONCODE = OCCU.DIVISIONCODE  
AND SGT.COMPANYCODE='JT0069' AND SGT.DIVISIONCODE='0006' 
AND SGT.ATTENDANCEDATE>=TO_DATE('01/11/2020','dd/MM/yyyy') 
AND SGT.ATTENDANCEDATE<=TO_DATE('30/11/2020','dd/MM/yyyy') AND OCCU.OCCUPATIONTYPE ='PAID HOLIDAY' 
GROUP BY SGT.COMPANYCODE,SGT.DIVISIONCODE,SGT.CLUSTERCODE,SGT.CATEGORYCODE,SGT.WORKERSERIAL, SGT.TOKENNO) M, 
(SELECT NVL(COUNT(CLUSTERCODE),0) FACTORY_DAYS,TOKENNO,COMPANYCODE,DIVISIONCODE FROM GPSDAILYPAYSHEETDETAILS 
WHERE COMPANYCODE='JT0069' AND DIVISIONCODE='0006' 
AND PERIODFROM>=TO_DATE('01/11/2020','dd/MM/yyyy') AND PERIODTO<=TO_DATE('30/11/2020','dd/MM/yyyy') 
AND CLUSTERCODE IN ('CHEFT','PUDFT') AND PROCESSTYPE='DAILY PROCESS' 
GROUP BY TOKENNO,COMPANYCODE,DIVISIONCODE) N ,
(SELECT COMPANYCODE,DIVISIONCODE,WORKERSERIAL,PFGROSS,PFAMOUNT FROM GPSLEAVEPROCALCULATION 
WHERE COMPANYCODE='JT0069' AND DIVISIONCODE='0006'  AND PFDATE>=TO_DATE('01/11/2020','dd/MM/yyyy') AND PFDATE<=TO_DATE('30/11/2020','dd/MM/yyyy') ) JK
WHERE K.COMPANYCODE='JT0069' AND K.DIVISIONCODE='0006' AND K.CLUSTERCODE IN( 'CHEFD' ) AND K.CATEGORYCODE IN( 'PERW' ) 
AND K.PERIODFROM>=TO_DATE('01/11/2020','dd/MM/yyyy') AND K.PERIODTO <=TO_DATE('30/11/2020','dd/MM/yyyy') 
AND K.COMPANYCODE=B.COMPANYCODE 
AND K.COMPANYCODE=C.COMPANYCODE  
AND K.DIVISIONCODE=C.DIVISIONCODE  
AND K.COMPANYCODE=D.COMPANYCODE 
AND K.DIVISIONCODE=D.DIVISIONCODE  
AND K.CLUSTERCODE=D.CLUSTERCODE 
AND K.COMPANYCODE=E.COMPANYCODE 
AND K.DIVISIONCODE=E.DIVISIONCODE 
AND K.CATEGORYCODE=E.CATEGORYCODE  
AND K.COMPANYCODE=F.COMPANYCODE 
AND K.DIVISIONCODE=F.DIVISIONCODE 
AND K.TOKENNO=F.TOKENNO  
AND K.WORKERSERIAL=F.WORKERSERIAL 
AND K.COMPANYCODE=G.COMPANYCODE(+)  
AND K.DIVISIONCODE=G.DIVISIONCODE(+) 
AND K.TOKENNO=G.TOKENNO(+) 
AND K.WORKERSERIAL=G.WORKERSERIAL(+) 
AND K.COMPANYCODE=H.COMPANYCODE(+) 
AND K.DIVISIONCODE=H.DIVISIONCODE(+) 
AND K.CATEGORYCODE = H.PARAM_ID(+) 
AND K.COMPANYCODE=I.COMPANYCODE(+) 
AND K.DIVISIONCODE=I.DIVISIONCODE(+) 
AND K.CATEGORYCODE = I.PARAM_ID(+) 
AND K.COMPANYCODE=J.COMPANYCODE(+) 
AND K.DIVISIONCODE=J.DIVISIONCODE(+) 
AND K.WORKERSERIAL=J.WORKERSERIAL(+) 
AND K.TOKENNO=J.TOKENNO(+) 
AND J.DA>0  
AND J.EFFECTIVEDATE >= (  
                        SELECT MAX(EFFECTIVEDATE) FROM  GPSCOMPONENTASSIGNMENT  
                         WHERE DIVISIONCODE='0006'  AND TRANSACTIONTYPE = 'ASSIGNMENT'  
                         AND EFFECTIVEDATE<=TO_DATE('30/11/2020','dd/MM/yyyy') AND DA>0 AND BASIC=0 
                       )  
AND J.TRANSACTIONTYPE(+) = 'ASSIGNMENT'  
AND A.COMPANYCODE=K.COMPANYCODE(+) 
AND A.DIVISIONCODE=K.DIVISIONCODE(+) 
AND A.WORKERSERIAL=K.WORKERSERIAL(+) 
AND A.TOKENNO=K.TOKENNO(+) 
AND A.CLUSTERCODE=K.CLUSTERCODE(+) 
AND A.CATEGORYCODE=K.CATEGORYCODE(+) 
AND K.COMPANYCODE=L.COMPANYCODE(+) 
AND K.DIVISIONCODE=L.DIVISIONCODE(+) 
AND K.TOKENNO=L.TOKENNO(+) 
AND K.CLUSTERCODE=L.CLUSTERCODE(+) 
AND K.CATEGORYCODE=L.CATEGORYCODE(+) 
AND K.YEARCODE=L.YEARCODE(+) 
AND K.COMPANYCODE=M.COMPANYCODE(+) 
AND K.DIVISIONCODE=M.DIVISIONCODE(+) 
AND K.TOKENNO=M.TOKENNO(+) 
AND K.CLUSTERCODE=M.CLUSTERCODE(+) 
AND K.CATEGORYCODE=M.CATEGORYCODE(+) 
AND K.WORKERSERIAL=M.WORKERSERIAL(+) 
AND K.COMPANYCODE=N.COMPANYCODE  (+) 
AND K.DIVISIONCODE=N.DIVISIONCODE(+) 
AND K.TOKENNO=N.TOKENNO(+) 
 AND K.COMPANYCODE=JK.COMPANYCODE  (+) 
AND K.DIVISIONCODE=JK.DIVISIONCODE(+) 
AND K.WORKERSERIAL=JK.WORKERSERIAL(+) 
GROUP BY K.COMPANYCODE,B.COMPANYNAME,K.DIVISIONCODE,C.DIVISIONNAME, 
K.CLUSTERCODE,D.CLUSTERDESC , K.CATEGORYCODE ,E.CATEGORYDESC,K.WORKERSERIAL,K.TOKENNO, F.EMPLOYEENAME,F.FATHERNAME,F.DATEOFBIRTH, 
F.DATEOFJOINING,F.SEX,K.HAZIRA,G.JD_DAY,A.GTR_BASIC,K.MTR_BASIC,J.DA,K.DA, 
K.PERPAY_ALLOW,K.PF_E,K.DED_LIC,K.DED_WGADV,K.GROSSWAGES,K.GROSSDEDN,K.NETSALARY,K.COINBF ,K.COINCF,I.MTR_BASIC,H.GTR_BASIC,L.CUMDAYS, 
L.CUM_BON_AMT,K.LOAN_ADVFT,K.LOAN_ONAM,K.LOAN_BKID,K.LOAN_XMASS,K.LNBL_ADVCO,K.OTHER_DED,K.DED_ELEC,K.PTAX,NVL(K.HOLIDAY_WAGE,0),K.MDP_WAGES,K.PERIODFROM,K.LNBL_ADVGN,K.LNBL_ADVFT,K.LNBL_ADVOP,K.POP,K.LOAN_ADVCO,N.FACTORY_DAYS,NVL(K.EXTRA_ALLOW,0),NVL(K.NONPF_ALLOW,0), NVL(K.DED_WELFARE,0),NVL(K.DED_UNION,0),NVL(K.LOAN_ADVGN,0),NVL(K.TEMP_DED,0),NVL(K.DED_ITAX,0),NVL(K.OTHER_DED,0),NVL(K.LOAN_ADVOP,0),NVL(K.DAILYWAGES,0),NVL(JK.PFGROSS,0),NVL(JK.PFAMOUNT,0)) 
GROUP BY COMPANYCODE,COMPANYNAME,DIVISIONCODE,DIVISIONNAME,  
CLUSTERCODE,CLUSTERDESC , CATEGORYCODE ,CATEGORYDESC,WORKERSERIAL, TOKENNO,EMPLOYEENAME,FATHERNAME,DATEOFBIRTH, 
DATEOFJOINING,SEX,TOTAL_DAYS,JD_DAY,DED_WGADV,DED_LIC,MTR_BASIC,MTRBASIC,GTR_BASIC,DA,DA_PAY,PERPAY_ALLOW,GROSSWAGES,GROSSDEDN, 
CUMDAYS,CUM_BON_AMT,PF_E,NETSALARY,COINBF ,COINCF,FES_ADV,OTR_ADV,ELE,HLD_WGS, MDE_WGS_I,PERIODFROM,OUT_STAND_DED ,WAG_DIF,COOP_SCTY,FACTORY_DAYS,CR_I,B_F_CR,B_F_DR, DAILYWAGES ,PFGROSS 
) AA,  
(SELECT COMPANYCODE,DIVISIONCODE,CLUSTERCODE,CATEGORYCODE,WORKERSERIAL,TOKENNO, 
SUM(NVL(DECODE(TASKCODE,'1',HAZIRA),0)) CLASS_I, 
SUM(NVL(DECODE(TASKCODE,'1',TOT_LATEX),0)) LATEX_I, 
SUM(NVL(DECODE(TASKCODE,'1',TOT_SCRAP),0)) SCRAP_I,  
SUM(NVL(DECODE(TASKCODE,'1',TOT_LATEX),0)) + SUM(NVL(DECODE(TASKCODE,'1',TOT_SCRAP),0)) TOTAL_I,  
SUM(NVL(DECODE(TASKCODE,'1',TASK),0)) STD_OUT_I, SUM(NVL(DECODE(TASKCODE,'1',LOK_KG),0)) LAT_OKG_I,  
SUM(NVL(DECODE(TASKCODE,'1',SOK_KG),0)) SC_OKG_I,0 SCR_OKG_I, 
SUM(NVL(DECODE(TASKCODE,'1',STD_AMT),0)) STD_AMT_I, 
SUM(NVL(DECODE(TASKCODE,'1',LOK_AMT),0)) LOK_AMT_I, 
SUM(NVL(DECODE(TASKCODE,'1',SOK_AMT),0)) SOK_AMT_I, 
--0 MDE_WGS_I,--0 GTR_DA_I,  
0 CRUMB_WAGES_I,--0 G_F_PAY_I, 
SUM(NVL(DECODE(TASKCODE,'2',HAZIRA),0)) CLASS_II, 
SUM(NVL(DECODE(TASKCODE,'2',TOT_LATEX),0)) LATEX_II , 
SUM(NVL(DECODE(TASKCODE,'2',TOT_SCRAP),0)) SCRAP_II , 
SUM(NVL(DECODE(TASKCODE,'2',TOT_LATEX),0)) + SUM(NVL(DECODE(TASKCODE,'2',TOT_SCRAP),0)) TOTAL_II,  
SUM(NVL(DECODE(TASKCODE,'2',TASK),0)) STD_OUT_II,SUM(NVL(DECODE(TASKCODE,'2',LOK_KG),0)) LAT_OKG_II,   
SUM(NVL(DECODE(TASKCODE,'2',SOK_KG),0)) SC_OKG_II,0 SCR_OKG_II, 
SUM(NVL(DECODE(TASKCODE,'2',STD_AMT),0)) STD_AMT_II, 
SUM(NVL(DECODE(TASKCODE,'2',LOK_AMT),0)) LOK_AMT_II, 
SUM(NVL(DECODE(TASKCODE,'2',SOK_AMT),0)) SOK_AMT_II,0 MDE_WGS_II,0 GTR_DA_II,0 CRUMB_WAGES_II,0 G_F_PAY_II, 
SUM(NVL(DECODE(TASKCODE,'3',HAZIRA),0)) CLASS_III, 
SUM(NVL(DECODE(TASKCODE,'3',TOT_LATEX),0)) LATEX_III, 
SUM(NVL(DECODE(TASKCODE,'3',TOT_SCRAP),0)) SCRAP_III, 
SUM(NVL(DECODE(TASKCODE,'3',TOT_LATEX),0)) +SUM(NVL(DECODE(TASKCODE,'3',TOT_SCRAP),0)) TOTAL_III,  
SUM(NVL(DECODE(TASKCODE,'3',TASK),0)) STD_OUT_III, SUM(NVL(DECODE(TASKCODE,'3',LOK_KG),0)) LAT_OKG_III,   
SUM(NVL(DECODE(TASKCODE,'3',SOK_KG),0)) SC_OKG_III,0 SCR_OKG_III, 
SUM(NVL(DECODE(TASKCODE,'3',STD_AMT),0)) STD_AMT_III, 
SUM(NVL(DECODE(TASKCODE,'3',LOK_AMT),0)) LOK_AMT_III, 
SUM(NVL(DECODE(TASKCODE,'3',SOK_AMT),0)) SOK_AMT_III,0 MDE_WGS_III,0 GTR_DA_III,0 CRUMB_WAGES_III,0 G_F_PAY_III, 
SUM(NVL(DECODE(TASKCODE,'4',HAZIRA),0)) CLASS_IV, 
SUM(NVL(DECODE(TASKCODE,'4',TOT_LATEX),0)) LATEX_IV, 
SUM(NVL(DECODE(TASKCODE,'4',TOT_SCRAP),0)) SCRAP_IV, 
SUM(NVL(DECODE(TASKCODE,'4',TOT_LATEX),0)) +SUM(NVL(DECODE(TASKCODE,'4',TOT_SCRAP),0)) TOTAL_IV,   
SUM(NVL(DECODE(TASKCODE,'4',TASK),0)) STD_OUT_IV, SUM(NVL(DECODE(TASKCODE,'4',LOK_KG),0)) LAT_OKG_IV,   
SUM(NVL(DECODE(TASKCODE,'4',SOK_KG),0)) SC_OKG_IV,0 SCR_OKG_IV, 
SUM(NVL(DECODE(TASKCODE,'4',STD_AMT),0)) STD_AMT_IV, 
SUM(NVL(DECODE(TASKCODE,'4',LOK_AMT),0)) LOK_AMT_IV,  
SUM(NVL(DECODE(TASKCODE,'4',SOK_AMT),0)) SOK_AMT_IV,0 MDE_WGS_IV,0 GTR_DA_IV,0 CRUMB_WAGES_IV,0 G_F_PAY_IV, NVL(SUM(HAZIRA),0) TAPDAYS 
FROM GPSRUBBERINCENTIVE   
WHERE COMPANYCODE = 'JT0069' 
AND DIVISIONCODE = '0006' 
AND CLUSTERCODE  IN( 'CHEFD' )  
AND CATEGORYCODE IN( 'PERW' ) 
AND  PERIODFROM >=TO_DATE('01/11/2020','dd/MM/yyyy') 
AND  PERIODTO <=TO_DATE('30/11/2020','dd/MM/yyyy')  AND OCCUPATIONCODE='TA' 
GROUP BY COMPANYCODE,DIVISIONCODE,CLUSTERCODE,CATEGORYCODE,WORKERSERIAL,TOKENNO) BB 
WHERE AA.COMPANYCODE=BB.COMPANYCODE(+) 
AND AA.DIVISIONCODE =BB.DIVISIONCODE(+) 
AND AA.CLUSTERCODE=BB.CLUSTERCODE(+) 
AND AA.CATEGORYCODE=BB.CATEGORYCODE(+)  
AND AA.WORKERSERIAL=BB.WORKERSERIAL(+)  
AND AA.TOKENNO=BB.TOKENNO(+) 
ORDER BY AA.CLUSTERDESC , AA.CATEGORYCODE,AA.TOKENNO



