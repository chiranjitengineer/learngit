CREATE OR REPLACE PROCEDURE BENGALTEA_WEB.PROC_REIMBURSEMENT
(
    P_COMPANYCODE           VARCHAR2,
    P_DIVISIONCODE          VARCHAR2,
    P_YEARCODE              VARCHAR2,
    P_YEARMONTH             VARCHAR2,
    P_UNITCODE              VARCHAR2 DEFAULT NULL,
    P_CATEGORYCODE          VARCHAR2 DEFAULT NULL,
    P_GRADECODE             VARCHAR2 DEFAULT NULL,
    P_DEPARTMENTCODE        VARCHAR2 DEFAULT NULL,
    P_COMPONENTCODE        VARCHAR2 DEFAULT NULL,
    P_TOKENNO               VARCHAR2 DEFAULT NULL,
    P_MAXPREVYEAR         VARCHAR2 DEFAULT '1',
    P_OPERATIONMODE         VARCHAR2 DEFAULT 'A',
    P_WITHPREVIOUS         VARCHAR2 DEFAULT 'Y'
)
AS 
     
    LV_SQLSTR VARCHAR2(32000);      LV_PAYFORMULA  VARCHAR2(500 BYTE);
    LV_PREVYEARCODE VARCHAR2(20 BYTE);
    LV_PREVYEARMONTH VARCHAR2(20 BYTE);
    LV_CURRENT_FNY_STDT VARCHAR2(20 BYTE);
    LV_CURRENT_FNY_ENDT VARCHAR2(20 BYTE);
    LV_LAST_FNY_STDT VARCHAR2(20 BYTE);
    LV_LAST_FNY_ENDT VARCHAR2(20 BYTE);
    LAST_YR_END_MM  VARCHAR2(20 BYTE); --201903
    CURRENT_YR_START_MM  VARCHAR2(20 BYTE); --201904
    LAST_YR_START_MM  VARCHAR2(20 BYTE); --201804
     
    LV_MAXPREVYEAR NUMBER(10);

BEGIN

    DELETE FROM GTT_PISREIMBURSEMENT where 1=1; 

    LV_MAXPREVYEAR := TO_NUMBER(NVL(P_MAXPREVYEAR,'1'));
    
    PRC_PIS_LEAVEBALANCE(P_COMPANYCODE,P_DIVISIONCODE,P_YEARCODE,P_YEARMONTH);
    
--    LV_MAXPREVYEAR := 1;
   --PREVIOUS YEAR
   SELECT (TO_NUMBER(SUBSTR(P_YEARCODE,1,4))-LV_MAXPREVYEAR)||'-'||(TO_NUMBER(SUBSTR(P_YEARCODE,-4))-LV_MAXPREVYEAR) INTO LV_PREVYEARCODE FROM DUAL;
   
   
   --NEXT YEAR
   --SELECT (TO_NUMBER(SUBSTR('2019-2020',1,4))+1)||'-'||(TO_NUMBER(SUBSTR('2019-2020',-4))+1) C2 FROM DUAL
   
   
   --NEXT YEAR
           
    SELECT TO_CHAR(CASE WHEN MM >= 1 AND MM <=3 THEN YY-1 ELSE YY END||'03') INTO LV_PREVYEARMONTH
    FROM (
        SELECT (TO_NUMBER(SUBSTR(P_YEARMONTH,1,4))) YY,(TO_NUMBER(SUBSTR(P_YEARMONTH,-(LV_MAXPREVYEAR+1)))) MM FROM DUAL
    );
   
   
   --NEXT YEAR
           
    SELECT (CASE WHEN MM >= 1 AND MM <=3 THEN YY-1 ELSE YY END||'03') INTO LAST_YR_END_MM 
    FROM (
        SELECT (TO_NUMBER(SUBSTR(P_YEARMONTH,1,4))) YY,(TO_NUMBER(SUBSTR(P_YEARMONTH,-(LV_MAXPREVYEAR+1)))) MM FROM DUAL
    );
   
   SELECT (CASE WHEN MM >= 1 AND MM <=3 THEN YY-1 ELSE YY END||'04')  INTO CURRENT_YR_START_MM 
    FROM (
        SELECT (TO_NUMBER(SUBSTR(P_YEARMONTH,1,4))) YY,(TO_NUMBER(SUBSTR(P_YEARMONTH,-(LV_MAXPREVYEAR+1)))) MM FROM DUAL
    );
    
    
   SELECT (CASE WHEN MM >= 1 AND MM <=3 THEN YY-1 ELSE YY END||'04')  INTO LAST_YR_START_MM 
    FROM (
        SELECT (TO_NUMBER(SUBSTR(P_YEARMONTH,1,4))-(LV_MAXPREVYEAR)) YY,(TO_NUMBER(SUBSTR(P_YEARMONTH,-2))) MM FROM DUAL
    );
    
   
--   
--   SELECT TRUNC(TO_DATE('31-MAR-2019')-TO_DATE('01-APR-2018')) FROM DUAL
--   
--   SELECT (TRUNC(TO_DATE('31-DEC-2020')-TO_DATE('01-JAN-2020'))+1) yrdays FROM DUAL
   
    SELECT TO_CHAR(STARTDATE,'DD/MM/YYYY') , TO_CHAR(ENDDATE,'DD/MM/YYYY') INTO LV_CURRENT_FNY_STDT, LV_CURRENT_FNY_ENDT FROM FINANCIALYEAR
           WHERE COMPANYCODE=P_COMPANYCODE
           AND DIVISIONCODE=P_DIVISIONCODE
           AND YEARCODE=P_YEARCODE;
   
    SELECT TO_CHAR(ADD_MONTHS(STARTDATE,-(LV_MAXPREVYEAR*12)),'DD/MM/YYYY') , TO_CHAR(ADD_MONTHS(ENDDATE,-(LV_MAXPREVYEAR*12)),'DD/MM/YYYY') INTO LV_LAST_FNY_STDT, LV_LAST_FNY_ENDT FROM FINANCIALYEAR
           WHERE COMPANYCODE=P_COMPANYCODE
           AND DIVISIONCODE=P_DIVISIONCODE
           AND YEARCODE=P_YEARCODE;
   


    BEGIN
        SELECT PAYFORMULA INTO LV_PAYFORMULA FROM PISCOMPONENTMASTER
        WHERE COMPANYCODE=P_COMPANYCODE
        AND DIVISIONCODE=P_DIVISIONCODE
        AND COMPONENTCODE=P_COMPONENTCODE;
        
        LV_PAYFORMULA := REPLACE(LV_PAYFORMULA,'PISASSIGN','ASSIGN');
        LV_PAYFORMULA := REPLACE(LV_PAYFORMULA,'PISCOMP','P');
        
        
        IF P_COMPONENTCODE = 'BONUS' THEN
            
            
            
           LV_SQLSTR := 'NVL(( SELECT ROUND(SUM(PF_GROSS)/12,2) PREVCOMPAMT FROM PISPAYTRANSACTION'||CHR(10);
           LV_SQLSTR := LV_SQLSTR ||'WHERE YEARCODE= '''||LV_PREVYEARCODE||''' AND TOKENNO= P.TOKENNO'||CHR(10); --2019-2020'--LV_PREVYEARCODE
           LV_SQLSTR := LV_SQLSTR ||'),0)'||CHR(10);
                 
           LV_PAYFORMULA := REPLACE(LV_PAYFORMULA,'P.BASIC',LV_SQLSTR);       
                       
                       
        END IF;
        
    EXCEPTION WHEN OTHERS THEN
        LV_PAYFORMULA := NULL;
    END;
    
  LV_SQLSTR :=NULL;
LV_SQLSTR := LV_SQLSTR || '      INSERT INTO GTT_PISREIMBURSEMENT ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         SELECT A.COMPANYCODE, A.DIVISIONCODE,'''||P_YEARCODE||''' YEARCODE,'''||P_YEARCODE||''' FORYEARCODE,'''||P_YEARMONTH||''' YEARMONTH,A.WORKERSERIAL,A.TOKENNO,' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         A.EMPLOYEENAME,TO_CHAR(A.DATEOFJOIN,''DD/MM/YYYY'') DATEOFJOIN ,     A.CATEGORYCODE, A.GRADECODE, '''||P_COMPONENTCODE||''' COMPONENTCODE, ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         B.COMPONENTAMOUNT,'''||P_COMPONENTCODE||'''   TRANSACTIONTYPE,    ''ADD'' ADDLESS, ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         B.COMPONENTAMOUNT  BILLAMOUNT, NVL(D.PAIDAMOUNT,0) PAIDAMOUNT,''DETAILS'' TRANTYPE,   ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         (NVL(D2.PAIDAMOUNT,0)-NVL(D.PAIDAMOUNT,0)) AMOUNTTAKEN,NVL(C.LASTCOMPONENTAMOUNT,0) PREVCOMPONENTAMOUNT, (NVL(C.LASTCOMPONENTAMOUNT,0)-NVL(D3.PREVIOUSYRTAKEN,0)) PREVIOUSYRBALANCE,' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         NVL(D3.PREVIOUSYRTAKEN,0)  PREVIOUSYRTAKEN,(B.COMPONENTAMOUNT + (NVL(C.LASTCOMPONENTAMOUNT,0)-NVL(D3.PREVIOUSYRTAKEN,0)) -NVL(D2.PAIDAMOUNT,0)) TOTALDUE,DECODE('''||P_OPERATIONMODE||''',''A'', DECODE('''||P_COMPONENTCODE||''', ''BONUS'', B.COMPONENTAMOUNT ,0),NVL(D.PAIDAMOUNT,0))  AMOUNTCLAIMCURRENT,NVL(D4.AMOUNTCLAIMPREVIOUS,0) AMOUNTCLAIMPREVIOUS,' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '        (B.COMPONENTAMOUNT+(NVL(C.LASTCOMPONENTAMOUNT,0)-NVL(D3.PREVIOUSYRTAKEN,0)))-(NVL(D2.PAIDAMOUNT,0)) BALANCEAMOUNT , NVL(D5.LEAVEBALANCE,0)   LEAVEBALANCE , 0   LEAVEENCASHMENT  ' || CHR(10);
--LV_SQLSTR := LV_SQLSTR || '   --     BALANCE AMOUNT=(ELIGIBLEAMOUNT+PREVIOUSYRBALENCE)-(AMOUNTTAKEN+AMOUNTCLAIMCURRENT+AMOUNTCLAIMPREVIOUS)' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         FROM PISEMPLOYEEMASTER A ,' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         (' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             SELECT A.WORKERSERIAL, BASIC, DECODE(B.TOKENNO,NULL,A.BASIC,ROUND((A.BASIC/B.YEARDAYS)*B.NOWORKDAYS,2)) COMPONENTAMOUNT FROM ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '              (' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  SELECT P.COMPANYCODE, P.DIVISIONCODE,P.UNITCODE, P.GRADECODE, P.CATEGORYCODE, P.DEPARTMENTCODE, P.TOKENNO, P.WORKERSERIAL,  P.YEARMONTH , '||LV_PAYFORMULA||' BASIC' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  FROM PISCOMPONENTASSIGNMENT   P, PISASSIGN ASSIGN' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  WHERE 1=1 ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  AND P.TRANSACTIONTYPE=''ASSIGNMENT'' ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  AND P.YEARMONTH =  ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  (' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      SELECT MAX(YEARMONTH)  YEARMONTH ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      FROM PISCOMPONENTASSIGNMENT ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      WHERE TOKENNO=P.TOKENNO' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      AND TRANSACTIONTYPE=''ASSIGNMENT'' ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      AND COMPANYCODE='''||P_COMPANYCODE||'''' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      AND DIVISIONCODE='''||P_DIVISIONCODE||'''' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      AND YEARMONTH >= DECODE('''||P_COMPONENTCODE||''',''BONUS'','''||LAST_YR_START_MM||''','''||CURRENT_YR_START_MM||''')' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      AND YEARMONTH <= '''||P_YEARMONTH||'''' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  )-- TOKENNO WITH BASIC, YEARMONTH FOR LAST YEAR' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  AND P.COMPANYCODE=ASSIGN.COMPANYCODE(+)' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  AND P.DIVISIONCODE=ASSIGN.DIVISIONCODE(+)' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  AND P.YEARMONTH=ASSIGN.YEARMONTH  (+)    ' || CHR(10); 
LV_SQLSTR := LV_SQLSTR || '                  AND P.WORKERSERIAL=ASSIGN.WORKERSERIAL  (+)    ' || CHR(10); 
LV_SQLSTR := LV_SQLSTR || '              ) A,-- LAST YEAR COMPONENT AMOUNT ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '              (' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  SELECT TOKENNO, WORKERSERIAL, DATEOFJOIN, (TRUNC(B.ENDDATE-A.DATEOFJOIN)+1) NOWORKDAYS, (TRUNC(B.ENDDATE-B.STARTDATE)+1) YEARDAYS ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  FROM PISEMPLOYEEMASTER A,' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  (' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      SELECT STARTDATE, ENDDATE FROM FINANCIALYEAR' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      WHERE COMPANYCODE='''||P_COMPANYCODE||'''' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      AND DIVISIONCODE='''||P_DIVISIONCODE||'''' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      AND YEARCODE='''||P_YEARCODE||'''' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  ) B' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  WHERE DATEOFJOIN > B.STARTDATE' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  AND DATEOFJOIN < B.ENDDATE' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '              ) B' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '              WHERE A.WORKERSERIAL=B.WORKERSERIAL(+) --CALCULATE YEAR DAYS, NO OF DAYS WORKING FROM DATE OF JOINING FOR LAST YEAR' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         ) B,  -- TOKENNO WITH BASIC, YEARMONTH' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         (' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '              SELECT A.WORKERSERIAL, DECODE(B.TOKENNO,NULL,A.BASIC,ROUND((A.BASIC/B.YEARDAYS)*B.NOWORKDAYS,2)) LASTCOMPONENTAMOUNT FROM ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '              (' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  SELECT COMPANYCODE, DIVISIONCODE,UNITCODE, GRADECODE, CATEGORYCODE, DEPARTMENTCODE, TOKENNO, WORKERSERIAL,  YEARMONTH , BASIC' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  FROM PISCOMPONENTASSIGNMENT   P' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  WHERE 1=1 ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  AND TRANSACTIONTYPE=''ASSIGNMENT'' ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  AND YEARMONTH =  ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  (' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      SELECT MAX(YEARMONTH)  YEARMONTH ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      FROM PISCOMPONENTASSIGNMENT ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      WHERE TOKENNO=P.TOKENNO' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      AND TRANSACTIONTYPE=''ASSIGNMENT'' ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      AND COMPANYCODE='''||P_COMPANYCODE||'''' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      AND DIVISIONCODE='''||P_DIVISIONCODE||'''' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      AND YEARMONTH >= '''||LAST_YR_START_MM||'''' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      AND YEARMONTH <= '''||LAST_YR_END_MM||'''' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  )-- TOKENNO WITH BASIC, YEARMONTH FOR LAST YEAR' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '              ) A,-- LAST YEAR COMPONENT AMOUNT ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '              (' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  SELECT TOKENNO, WORKERSERIAL, DATEOFJOIN, (TRUNC(B.ENDDATE-A.DATEOFJOIN)+1) NOWORKDAYS, (TRUNC(B.ENDDATE-B.STARTDATE)+1) YEARDAYS ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  FROM PISEMPLOYEEMASTER A,' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  (' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      SELECT STARTDATE, ENDDATE FROM FINANCIALYEAR' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      WHERE COMPANYCODE='''||P_COMPANYCODE||'''' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      AND DIVISIONCODE='''||P_DIVISIONCODE||'''' || CHR(10);
--LV_SQLSTR := LV_SQLSTR || '                      AND YEARCODE='''||LV_PREVYEARCODE||'''' || CHR(10);
             
LV_SQLSTR := LV_SQLSTR || '                  ) B' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  WHERE DATEOFJOIN > B.STARTDATE' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                  AND DATEOFJOIN < B.ENDDATE' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '              ) B' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '              WHERE A.WORKERSERIAL=B.WORKERSERIAL(+) --CALCULATE YEAR DAYS, NO OF DAYS WORKING FROM DATE OF JOINING FOR LAST YEAR' || CHR(10);

IF (P_WITHPREVIOUS = 'N') THEN

LV_SQLSTR := LV_SQLSTR || '                      AND 1=2 ' || CHR(10);

END IF;

LV_SQLSTR := LV_SQLSTR || '         ) C, -- LAST YEAR COMPONENT AMOUNT ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         (' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             SELECT WORKERSERIAL, TOKENNO, SUM(PAIDAMOUNT)  PAIDAMOUNT' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             FROM PISREIMBURSEMENTDETAILS' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             WHERE YEARCODE = '''||P_YEARCODE||'''' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             AND COMPANYCODE='''||P_COMPANYCODE||'''' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             AND DIVISIONCODE='''||P_DIVISIONCODE||''' ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             AND COMPONENTCODE='''||P_COMPONENTCODE||''' ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             AND YEARMONTH='''||P_YEARMONTH||''' ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             GROUP BY WORKERSERIAL, TOKENNO ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         ) D, --CALCULATE  PAID AMOUNT THIS YEAR' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         (' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             SELECT WORKERSERIAL, TOKENNO, SUM(PAIDAMOUNT)  PAIDAMOUNT' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             FROM PISREIMBURSEMENTDETAILS' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             WHERE YEARCODE = '''||P_YEARCODE||'''' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             AND YEARMONTH >= '''||CURRENT_YR_START_MM||'''' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             AND YEARMONTH <= '''||P_YEARMONTH||'''' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             AND COMPANYCODE='''||P_COMPANYCODE||'''' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             AND DIVISIONCODE='''||P_DIVISIONCODE||''' ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             AND COMPONENTCODE='''||P_COMPONENTCODE||''' ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             GROUP BY WORKERSERIAL, TOKENNO' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         ) D2, --CALCULATE  PAID AMOUNT THIS YEAR ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         (' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             SELECT WORKERSERIAL, TOKENNO, SUM(PAIDAMOUNT)  PREVIOUSYRTAKEN' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             FROM PISREIMBURSEMENTDETAILS' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             WHERE 1=1--YEARCODE = '''||LV_PREVYEARCODE||'''' || CHR(10);


LV_SQLSTR := LV_SQLSTR || '             AND YEARCODE IN (' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                 SELECT (TO_NUMBER(SUBSTR('''||P_YEARCODE||''',1,4))-LX)||''-''||(TO_NUMBER(SUBSTR('''||P_YEARCODE||''',-4))-LX) XX  FROM ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                 (' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                     SELECT Level AS LX ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                     FROM Dual ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                     CONNECT BY Level <= '||LV_MAXPREVYEAR || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                 )' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             )' || CHR(10);




LV_SQLSTR := LV_SQLSTR || '             AND COMPANYCODE='''||P_COMPANYCODE||'''' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             AND DIVISIONCODE='''||P_DIVISIONCODE||''' ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             AND COMPONENTCODE='''||P_COMPONENTCODE||''' ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             GROUP BY WORKERSERIAL, TOKENNO' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         ) D3,--CALCULATE  PAID AMOUNT  FOR LAST YEAR ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         (' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             SELECT WORKERSERIAL, TOKENNO, PAIDAMOUNT  AMOUNTCLAIMPREVIOUS' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             FROM PISREIMBURSEMENTDETAILS P' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             WHERE 1=1 --YEARCODE = '''||LV_PREVYEARCODE||'''' || CHR(10);

--LV_SQLSTR := LV_SQLSTR || '             AND YEARCODE IN (' || CHR(10);
--LV_SQLSTR := LV_SQLSTR || '                 SELECT (TO_NUMBER(SUBSTR('''||P_YEARCODE||''',1,4))-LX)||''-''||(TO_NUMBER(SUBSTR('''||P_YEARCODE||''',-4))-LX) XX  FROM ' || CHR(10);
--LV_SQLSTR := LV_SQLSTR || '                 (' || CHR(10);
--LV_SQLSTR := LV_SQLSTR || '                     SELECT Level AS LX ' || CHR(10);
--LV_SQLSTR := LV_SQLSTR || '                     FROM Dual ' || CHR(10);
--LV_SQLSTR := LV_SQLSTR || '                     CONNECT BY Level <= '||LV_MAXPREVYEAR || CHR(10);
--LV_SQLSTR := LV_SQLSTR || '                 )' || CHR(10);
--LV_SQLSTR := LV_SQLSTR || '             )' || CHR(10);


LV_SQLSTR := LV_SQLSTR || '             AND YEARMONTH = ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             (' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      SELECT MAX(YEARMONTH)  YEARMONTH ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      FROM PISREIMBURSEMENTDETAILS ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                      WHERE TOKENNO=P.TOKENNO' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                     AND COMPANYCODE='''||P_COMPANYCODE||'''' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '                     AND DIVISIONCODE='''||P_DIVISIONCODE||''' ' || CHR(10);

LV_SQLSTR := LV_SQLSTR || '                      AND YEARMONTH < '''||P_YEARMONTH||'''' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             )' || CHR(10);
             
             


LV_SQLSTR := LV_SQLSTR || '             AND COMPANYCODE='''||P_COMPANYCODE||'''' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             AND DIVISIONCODE='''||P_DIVISIONCODE||''' ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             AND COMPONENTCODE='''||P_COMPONENTCODE||''' ' || CHR(10);
--LV_SQLSTR := LV_SQLSTR || '             GROUP BY WORKERSERIAL, TOKENNO' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         ) D4,' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         (' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             SELECT COMPANYCODE,DIVISIONCODE, TOKENNO, WORKERSERIAL, SUM(LV_BAL) LEAVEBALANCE ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             FROM GBL_PISLEAVEBALANCE' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '             GROUP BY COMPANYCODE,DIVISIONCODE, TOKENNO, WORKERSERIAL' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         ) D5' || CHR(10);
         
         
LV_SQLSTR := LV_SQLSTR || '         WHERE 1=1--A.COMPANYCODE=B.COMPANYCODE ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '   --      AND A.DIVISIONCODE=B.DIVISIONCODE ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         AND A.WORKERSERIAL=B.WORKERSERIAL ' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         AND A.WORKERSERIAL=C.WORKERSERIAL(+)' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         AND A.WORKERSERIAL=D.WORKERSERIAL(+)' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         AND A.WORKERSERIAL=D2.WORKERSERIAL(+)' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         AND A.WORKERSERIAL=D3.WORKERSERIAL(+)' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         AND A.WORKERSERIAL=D4.WORKERSERIAL(+)' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         AND A.WORKERSERIAL=D5.WORKERSERIAL(+)' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         AND B.COMPONENTAMOUNT > 0 ' || CHR(10);

IF P_OPERATIONMODE = 'A' THEN
    LV_SQLSTR := LV_SQLSTR || '         AND NVL(D.PAIDAMOUNT,0) = 0 ' || CHR(10);
ELSE
    LV_SQLSTR := LV_SQLSTR || '         AND NVL(D.PAIDAMOUNT,0) > 0 ' || CHR(10);
END IF; 

LV_SQLSTR := LV_SQLSTR || '         AND A.COMPANYCODE='''||P_COMPANYCODE||'''' || CHR(10);
LV_SQLSTR := LV_SQLSTR || '         AND A.DIVISIONCODE='''||P_DIVISIONCODE||''' ' || CHR(10);
 
    IF P_UNITCODE IS NOT NULL THEN
        LV_SQLSTR := LV_SQLSTR || '   AND A.UNITCODE='''||P_UNITCODE||'''' || CHR(10);
    END IF;
    
    IF P_CATEGORYCODE IS NOT NULL THEN
        LV_SQLSTR := LV_SQLSTR || '   AND A.CATEGORYCODE='''||P_CATEGORYCODE||'''' || CHR(10);
    END IF;
    
    IF P_GRADECODE IS NOT NULL THEN
        LV_SQLSTR := LV_SQLSTR || '   AND A.GRADECODE='''||P_GRADECODE||'''' || CHR(10);
    END IF;

    LV_SQLSTR := LV_SQLSTR || '         ORDER BY A.TOKENNO' || CHR(10);
   DBMS_OUTPUT.PUT_LINE(LV_SQLSTR);
   EXECUTE IMMEDIATE LV_SQLSTR;
  
END;
/
