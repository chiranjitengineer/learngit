CREATE OR REPLACE PROCEDURE JOONK.PROC_RUBBERREGISTER_FRM16
(
    p_companycode varchar2,
    p_divisioncode varchar2,
    p_fromdate varchar2,
    p_todate varchar2,
    p_clustercode varchar2,
    p_categorycode varchar2,
    p_yearcode varchar2
 
)
AS
    lv_sql varchar2(31000);
    lv_rundate varchar2(4000);
    lv_selection varchar2(4000);
    lv_last_fromdate varchar2(10);
        
BEGIN

    if(nvl(p_clustercode,'NA') <>'NA') THEN
    lv_selection := 'Division For '''|| p_clustercode||''' ' ;
    else
    lv_selection := 'Division For All ';
  end if;
  
   if(nvl(p_categorycode,'NA') <>'NA') THEN
    lv_selection := lv_selection || ', Category for '''||p_categorycode||''' ';
else
    lv_selection := lv_selection ||', Category For All ';
  end if;  
  
    DELETE FROM GTT_RUBBERREGISTER_FRM16 ;
    
    lv_sql:=  'INSERT INTO GTT_RUBBERREGISTER_FRM16 '|| chr(10) 
    || 'SELECT /* ORDERED */ AA.COMPANYCODE,AA.COMPANYNAME,AA.DIVISIONCODE,AA.DIVISIONNAME, '|| chr(10) 
    || 'AA.CLUSTERCODE,AA.CLUSTERDESC , AA.CATEGORYCODE ,AA.CATEGORYDESC,AA.WORKERSERIAL, AA.TOKENNO,AA.EMPLOYEENAME,AA.FATHERNAME,AA.DATEOFBIRTH, '|| chr(10) 
    || 'AA.DATEOFJOINING,AA.SEX,AA.TOTAL_DAYS,NVL(BB.TAPDAYS,0) TAPDAYS, CASE WHEN AA.CLUSTERCODE NOT IN(''CHEFT'',''PUDFT'') THEN (NVL(AA.TOTAL_DAYS,0)-NVL(BB.TAPDAYS,0)) '|| chr(10) 
    || 'ELSE (NVL(AA.TOTAL_DAYS,0)-NVL(AA.FACTORY_DAYS,0)) END GEN_DAYS , CASE WHEN AA.CLUSTERCODE NOT IN(''CHEFT'',''PUDFT'') THEN AA.FACT_DAYS ELSE NVL(AA.FACTORY_DAYS,0) END FACT_DAYS,AA.CRUMB_DAYS,AA.JD_DAY, '|| chr(10) 
    || 'AA.LCP,AA.CUT '|| chr(10)
    --|| ',CASE WHEN NVL(BB.TAPDAYS,0)=0 THEN AA.MTR_BASIC WHEN NVL(BB.TAPDAYS,0)>0 THEN NVL(AA.MTR_BASIC,0)+0.22 END MTR_BASIC '|| chr(10) 
    || ',(CASE WHEN AA.CLUSTERCODE NOT IN (''CHEFT'',''PUDFT'') THEN  '|| chr(10)
    || 'CASE WHEN NVL(BB.TAPDAYS,0)=0 THEN '|| chr(10)
    || 'AA.MTR_BASIC WHEN NVL(BB.TAPDAYS,0)>0 THEN NVL(AA.MTR_BASIC,0)+0.22 '|| chr(10)
    || 'END '|| chr(10)
    || 'ELSE  '|| chr(10)
    || 'NVL(AA.MTR_BASIC,0)+4.87 '|| chr(10)
    || 'END) MTR_BASIC '|| chr(10)   
    || ',AA.GTR_BASIC,AA.DA, AA.CUMDAYS,AA.CUM_BON_AMT,AA.OUT_STAND_DED,AA.WAG_DIF, '|| chr(10) 
    || 'AA.PER_PAY,AA.LCP_WGS,AA.GEN_TAP_EARNINGS, AA.TOTAL_EARNINGS, AA.TOTAL_DEDUCTION,AA.HLD_WGS,AA.LEV_WGS,AA.CR_I,AA.B_F_CR, '|| chr(10)
    || 'AA.EPF,AA.WK_CASH,AA.LIC,AA.PRD,AA.SPL_ADV,AA.FES_ADV,AA.OTR_ADV,AA.ELE,AA.B_F_DR, AA.COOP_SCTY,AA.OS_NET_AMT '|| chr(10)
    || ',ROUND(NVL(BB.CLASS_I,0),2) CLASS_I,ROUND(NVL(BB.LATEX_I,0),2) LATEX_I,ROUND(NVL(BB.SCRAP_I,0),2) SCRAP_I,ROUND(NVL(BB.TOTAL_I,0),2) TOTAL_I, '|| chr(10) 
    || 'ROUND(NVL(BB.STD_OUT_I,0),2) STD_OUT_I,ROUND(NVL(BB.LAT_OKG_I,0),2) LAT_OKG_I,ROUND(NVL(BB.SC_OKG_I,0),2) SC_OKG_I,ROUND(NVL(BB.SCR_OKG_I,0),2) SCR_OKG_I,ROUND(NVL(BB.STD_AMT_I,0),2) STD_AMT_I, '|| chr(10) 
    || 'ROUND(NVL(BB.LOK_AMT_I,0),2) LOK_AMT_I,ROUND(NVL(BB.SOK_AMT_I,0),2) SOK_AMT_I,  '|| chr(10)
    || 'AA.MDE_WGS_I,CASE WHEN NVL(BB.TAPDAYS,0)=0 THEN 0 WHEN NVL(BB.TAPDAYS,0)>0 THEN (NVL(AA.GTR_BASIC,0)*NVL(BB.TAPDAYS,0))+(NVL(AA.DA,0)*NVL(BB.TAPDAYS,0))  END GTR_DA_I, '|| chr(10)
    || 'ROUND(NVL(BB.CRUMB_WAGES_I,0),2) CRUMB_WAGES_I,  '|| chr(10)
    || '/*(CASE WHEN AA.CLUSTERCODE NOT IN (''CHEFT'',''PUDFT'') THEN '|| chr(10)   
    ||  'CASE WHEN NVL(BB.TAPDAYS,0)=0 THEN (NVL(AA.MTR_BASIC,0)*(NVL(AA.TOTAL_DAYS,0)-NVL(BB.TAPDAYS,0)))+(NVL(AA.DA,0)*(NVL(AA.TOTAL_DAYS,0)-NVL(BB.TAPDAYS,0))) WHEN NVL(BB.TAPDAYS,0)>0 THEN (NVL(AA.TOTAL_DAYS,0)-NVL(BB.TAPDAYS,0)) * (NVL(AA.MTR_BASIC,0) + NVL(AA.DA,0) +0.22)  END '|| chr(10)
    ||  'ELSE '|| chr(10) 
    ||  'MTRBASIC+DA_PAY  +4.87'|| chr(10) 
    ||  'END)*/ AA.DAILYWAGES G_F_PAY_I  , '|| chr(10)
    || 'ROUND(NVL(BB.CLASS_II,0),2) CLASS_II,ROUND(NVL(BB.LATEX_II,0),2) LATEX_II, '|| chr(10) 
    || 'ROUND(NVL(BB.SCRAP_II,0),2) SCRAP_II,ROUND(NVL(BB.TOTAL_II,0),2) TOTAL_II,ROUND(NVL(BB.STD_OUT_II,0),2) STD_OUT_II,ROUND(NVL(BB.LAT_OKG_II,0),2) LAT_OKG_II,ROUND(NVL(BB.SC_OKG_II,0),2) SC_OKG_II, '|| chr(10) 
    || 'ROUND(NVL(BB.SCR_OKG_II,0),2) SCR_OKG_II,ROUND(NVL(BB.STD_AMT_II,0),2) STD_AMT_II,ROUND(NVL(BB.LOK_AMT_II,0),2) LOK_AMT_II,ROUND(NVL(BB.SOK_AMT_II,0),2) SOK_AMT_II, '|| chr(10)
    || 'ROUND(NVL(BB.MDE_WGS_II,0),2) MDE_WGS_II,ROUND(NVL(BB.GTR_DA_II,0),2) GTR_DA_II,ROUND(NVL(BB.CRUMB_WAGES_II,0),2) CRUMB_WAGES_II,ROUND(NVL(BB.G_F_PAY_II,0),2) G_F_PAY_II, '|| chr(10)
    || 'ROUND(NVL(BB.CLASS_III,0),2) CLASS_III,ROUND(NVL(BB.LATEX_III,0),2) LATEX_III,ROUND(NVL(BB.SCRAP_III,0),2) SCRAP_III,ROUND(NVL(BB.TOTAL_III,0),2) TOTAL_III, '|| chr(10)
    || 'ROUND(NVL(BB.STD_OUT_III,0),2) STD_OUT_III,ROUND(NVL(BB.LAT_OKG_III,0),2) LAT_OKG_III,ROUND(NVL(BB.SC_OKG_III,0),2) SC_OKG_III,ROUND(NVL(BB.SCR_OKG_III,0),2) SCR_OKG_III,ROUND(NVL(BB.STD_AMT_III,0),2) STD_AMT_III, '|| chr(10) 
    || 'ROUND(NVL(BB.LOK_AMT_III,0),2) LOK_AMT_III,ROUND(NVL(BB.SOK_AMT_III,0),2) SOK_AMT_III,ROUND(NVL(BB.MDE_WGS_III,0),2) MDE_WGS_III,ROUND(NVL(BB.GTR_DA_III,0),2) GTR_DA_III, '|| chr(10)
    || 'ROUND(NVL(BB.CRUMB_WAGES_III,0),2) CRUMB_WAGES_III,ROUND(NVL(BB.G_F_PAY_III,0),2) G_F_PAY_III, '|| chr(10)
    || 'ROUND(NVL(BB.CLASS_IV,0),2) CLASS_IV,ROUND(NVL(BB.LATEX_IV,0),2) LATEX_IV,ROUND(NVL(BB.SCRAP_IV,0),2) SCRAP_IV,ROUND(NVL(BB.TOTAL_IV,0),2) TOTAL_IV,'|| chr(10) 
    || 'ROUND(NVL(BB.STD_OUT_IV,0),2) STD_OUT_IV,ROUND(NVL(BB.LAT_OKG_IV,0),2) LAT_OKG_IV,ROUND(NVL(BB.SC_OKG_IV,0),2) SC_OKG_IV,ROUND(NVL(BB.SCR_OKG_IV,0),2) SCR_OKG_IV,ROUND(NVL(BB.STD_AMT_IV,0),2) STD_AMT_IV, '|| chr(10) 
    || 'ROUND(NVL(BB.LOK_AMT_IV,0),2) LOK_AMT_IV,ROUND(NVL(BB.SOK_AMT_IV,0),2) SOK_AMT_IV,ROUND(NVL(BB.MDE_WGS_IV,0),2) MDE_WGS_IV,ROUND(NVL(BB.GTR_DA_IV,0),2) GTR_DA_IV, '|| chr(10)
    || 'ROUND(NVL(BB.CRUMB_WAGES_IV,0),2) CRUMB_WAGES_IV,ROUND(NVL(BB.G_F_PAY_IV,0),2) G_F_PAY_IV,TO_CHAR(AA.PERIODFROM,''MON YYYY'') MON_YEAR '|| chr(10)
    || 'FROM   '|| chr(10)
    || '(  '|| chr(10)
    || 'SELECT COMPANYCODE,COMPANYNAME,DIVISIONCODE,DIVISIONNAME, '|| chr(10) 
    || 'CLUSTERCODE,CLUSTERDESC , CATEGORYCODE ,CATEGORYDESC,WORKERSERIAL, TOKENNO,EMPLOYEENAME,FATHERNAME,DATEOFBIRTH, '|| chr(10) 
    || 'DATEOFJOINING,SEX,NVL(TOTAL_DAYS,0) TOTAL_DAYS, 0 AS FACT_DAYS,FACTORY_DAYS,0 AS CRUMB_DAYS,JD_DAY, '|| chr(10)
    || '0 LCP,0 CUT,MTR_BASIC,GTR_BASIC,MTRBASIC,DA,DA_PAY, '|| chr(10)
    || 'CUMDAYS,CUM_BON_AMT,0 OUT_STAND_DED,WAG_DIF, '|| chr(10)
    || 'PERPAY_ALLOW PER_PAY,0 LCP_WGS,(GROSSWAGES - (NVL(CR_I,0) + NVL(B_F_CR,0) + NVL(HLD_WGS,0))) GEN_TAP_EARNINGS, GROSSWAGES TOTAL_EARNINGS, GROSSDEDN TOTAL_DEDUCTION,( NVL(HLD_WGS,0)) HLD_WGS,PFGROSS LEV_WGS,CR_I,B_F_CR, '|| chr(10) 
    || 'PF_E EPF,DED_WGADV WK_CASH,DED_LIC LIC,0 PRD,0 SPL_ADV,FES_ADV,OTR_ADV,ELE,B_F_DR, COOP_SCTY,NETSALARY OS_NET_AMT,MDE_WGS_I,PERIODFROM, DAILYWAGES  FROM  '|| chr(10)
    || '(SELECT K.COMPANYCODE,B.COMPANYNAME,K.DIVISIONCODE,C.DIVISIONNAME, '|| chr(10)
    || 'K.CLUSTERCODE,D.CLUSTERDESC , K.CATEGORYCODE ,E.CATEGORYDESC,K.WORKERSERIAL, K.TOKENNO,F.EMPLOYEENAME,F.FATHERNAME,TO_CHAR(F.DATEOFBIRTH,''dd/MM/yyyy'') DATEOFBIRTH, '|| chr(10) 
    || 'TO_CHAR(F.DATEOFJOINING,''dd/MM/yyyy'') DATEOFJOINING,F.SEX,K.HAZIRA TOTAL_DAYS,NVL(G.JD_DAY,0) JD_DAY, '|| chr(10)
    || '0 LCP,0 CUT,ROUND(NVL(I.MTR_BASIC,0),2) MTR_BASIC,K.MTR_BASIC AS MTRBASIC,K.DA DA_PAY,ROUND(NVL(H.GTR_BASIC,0),2) GTR_BASIC ,J.DA, '|| chr(10)
    || 'L.CUMDAYS,L.CUM_BON_AMT,ROUND(NVL(K.PERPAY_ALLOW,0),2) PERPAY_ALLOW,ROUND((NVL(K.PF_E,0)+NVL(JK.PFAMOUNT,0)),2) PF_E,ROUND(NVL(K.DED_WGADV,0),2) DED_WGADV, ROUND(NVL(K.DED_LIC,0),2) DED_LIC,ROUND(NVL(K.GROSSWAGES,0),2) GROSSWAGES, '|| chr(10) 
    || 'ROUND(NVL(K.GROSSDEDN,0),2) GROSSDEDN,ROUND(NVL(K.NETSALARY,0),2) NETSALARY ,ROUND(NVL(K.COINBF,0),2) COINBF ,ROUND(NVL(K.COINCF,0),2) COINCF, '|| chr(10)
    || 'ROUND((NVL(K.LOAN_ADVFT,0)+NVL(K.LOAN_ONAM,0)+NVL(K.LOAN_BKID,0)+NVL(K.LOAN_XMASS,0)),2) FES_ADV, (ROUND(NVL(K.DED_WELFARE,0),2) + ROUND(NVL(K.DED_UNION,0),2) + ROUND(NVL(K.LOAN_ADVGN,0),2)+ ROUND(NVL(K.TEMP_DED,0),2)+ ROUND(NVL(K.DED_ITAX,0),2)+ ROUND(NVL(K.OTHER_DED,0),2))  OTR_ADV,  '||CHR(10)
    || 'ROUND((NVL(K.DED_ELEC,0) + NVL(K.PTAX,0)),2) ELE ,ROUND(NVL(K.HOLIDAY_WAGE,0),2) HLD_WGS,K.MDP_WAGES  MDE_WGS_I,K.PERIODFROM,NVL(K.LNBL_ADVGN,0)+NVL(K.LNBL_ADVFT,0)+NVL(K.LNBL_ADVOP,0) OUT_STAND_DED, '|| chr(10)
    || 'K.POP WAG_DIF,NVL(K.LOAN_ADVCO,0) COOP_SCTY,N.FACTORY_DAYS,ROUND(NVL(K.EXTRA_ALLOW,0),2) CR_I,ROUND(NVL(K.NONPF_ALLOW,0),2) B_F_CR,  '||CHR(10)
    || 'ROUND(NVL(K.LOAN_ADVOP,0),2) B_F_DR, ROUND(NVL(K.DAILYWAGES,0),2) DAILYWAGES ,ROUND(NVL(JK.PFGROSS,0),2)  PFGROSS'|| chr(10)
    || 'FROM GPSDAILYPAYSHEETDETAILS A,COMPANYMAST B,DIVISIONMASTER C, GPSCLUSTERMASTER D,GPSCATEGORYMAST E, GPSEMPLOYEEMAST F, '|| chr(10) 
    || 'GPSCOMPONENTASSIGNMENT J, GPSPAYSHEETDETAILS K, '|| chr(10)
    || '( SELECT DET.COMPANYCODE,DET.DIVISIONCODE,DET.WORKERSERIAL,DET.TOKENNO,DET.CLUSTERCODE, NVL(SUM(DET.HAZIRA),0) JD_DAY '|| chr(10) 
    || 'FROM GPSDAILYPAYSHEETDETAILS DET , GPSOCCUPATIONMAST MST '|| chr(10)
    || 'WHERE DET.COMPANYCODE = '''||p_companycode||''' '|| chr(10)
    || 'AND DET.DIVISIONCODE = '''||p_divisioncode||''' '|| chr(10)
    || 'AND PROCESSTYPE = ''DAILY PROCESS'' '|| chr(10)
    || 'AND CLUSTERCODE IN( '||p_clustercode||' ) '|| chr(10)
    || 'AND CATEGORYCODE IN( '||p_categorycode||' ) '|| chr(10)
    || 'AND DET.OCCUPATIONCODE =MST.OCCUPATIONCODE '|| chr(10) 
    || 'AND DET.DIVISIONCODE = MST.DIVISIONCODE AND DET.COMPANYCODE = MST.COMPANYCODE '|| chr(10)  
    || 'AND  DET.ATTENDANCEDATE >=TO_DATE('''||p_fromdate||''',''dd/MM/yyyy'') '|| chr(10)
    || 'AND  DET.ATTENDANCEDATE <=TO_DATE('''||p_todate||''',''dd/MM/yyyy'') '|| chr(10)
    || 'AND DET.OCCUPATIONCODE IN (SELECT PARAM_ID FROM SYS_SWT_PARAMDETAILS '|| chr(10)
    || 'WHERE COMPANYCODE = '''||p_companycode||''' '|| chr(10)
    || 'AND DIVISIONCODE = '''||p_divisioncode||''' '|| chr(10)
    || 'AND PARAM_NAME = ''POP'' '|| chr(10)
    || 'AND EFFECTIVEDATE=(SELECT MAX(EFFECTIVEDATE) FROM SYS_SWT_PARAMDETAILS '|| chr(10) 
    || 'WHERE COMPANYCODE = '''||p_companycode||''' '|| chr(10)
    || 'AND DIVISIONCODE = '''||p_divisioncode||''' '|| chr(10)
    || 'AND PARAM_NAME = ''POP'' )) '|| chr(10)
    || 'GROUP BY DET.COMPANYCODE,DET.DIVISIONCODE,DET.WORKERSERIAL,DET.TOKENNO,DET.CLUSTERCODE) G , '|| chr(10) 
    || '(SELECT COMPANYCODE,DIVISIONCODE,PARAM_ID,PARAM_VALUE AS GTR_BASIC FROM SYS_SWT_PARAMDETAILS  '|| chr(10)
    || 'WHERE COMPANYCODE ='''||p_companycode||'''  '|| chr(10)
    || 'AND DIVISIONCODE ='''||p_divisioncode||''' '|| chr(10)
    || 'AND PARAM_NAME = ''GTR_BASIC'' '|| chr(10)
    || 'AND PARAM_ID IN( '||p_categorycode||' ) AND EFFECTIVEDATE=(SELECT MAX(EFFECTIVEDATE) FROM SYS_SWT_PARAMDETAILS '|| chr(10) 
    || 'WHERE COMPANYCODE = '''||p_companycode||''' '|| chr(10)
    || 'AND DIVISIONCODE = '''||p_divisioncode||''' '|| chr(10)
    || 'AND PARAM_NAME = ''GTR_BASIC'' AND PARAM_ID IN ( '||p_categorycode||' ))) H, '|| chr(10) 
    || '(SELECT COMPANYCODE,DIVISIONCODE,PARAM_ID,PARAM_VALUE AS MTR_BASIC FROM SYS_SWT_PARAMDETAILS '|| chr(10)  
    || 'WHERE COMPANYCODE ='''||p_companycode||''' '|| chr(10)
    || 'AND DIVISIONCODE = '''||p_divisioncode||''' '|| chr(10)
    || 'AND PARAM_NAME = ''MTR_BASIC'' '|| chr(10)
    || 'AND PARAM_ID IN( '||p_categorycode||' ) AND EFFECTIVEDATE=(SELECT MAX(EFFECTIVEDATE) FROM SYS_SWT_PARAMDETAILS '|| chr(10) 
    || 'WHERE COMPANYCODE = '''||p_companycode||''' '|| chr(10)
    || 'AND DIVISIONCODE = '''||p_divisioncode||''' '|| chr(10)
    || 'AND PARAM_NAME = ''MTR_BASIC'' AND PARAM_ID IN ( '||p_categorycode||' ))) I , '|| chr(10) 
    || '(SELECT YEARCODE, COMPANYCODE,DIVISIONCODE,TOKENNO,CLUSTERCODE,CATEGORYCODE,SUM(NVL(HAZIRA,0)) CUMDAYS,SUM(NVL(GROSSWAGES,0)) CUM_BON_AMT FROM VW_BONDAYGROSS '|| chr(10) 
    || 'WHERE COMPANYCODE ='''||p_companycode||'''   '|| chr(10)
    || 'AND DIVISIONCODE ='''||p_divisioncode||'''  '|| chr(10)
    || 'AND CLUSTERCODE IN( '||p_clustercode||' ) '|| chr(10)
    || 'AND CATEGORYCODE IN('||p_categorycode||' ) '|| chr(10)
    || 'AND YEARCODE='''||p_yearcode||''' AND PERIODTO<=TO_DATE('''||p_todate||''',''dd/MM/yyyy'')  '|| chr(10)
    || 'AND PERIODTO>=TO_DATE(DECODE(TO_NUMBER(TO_CHAR(TO_DATE('''||p_fromdate||''',''dd/MM/yyyy''),''MM'')),1, '|| chr(10)
    || '''01/04/'' || TO_CHAR(TO_NUMBER(TO_CHAR(TO_DATE('''||p_fromdate||''',''dd/MM/yyyy''),''YYYY'') )-1),2, '|| chr(10)
    || '''01/04/'' || TO_CHAR(TO_NUMBER(TO_CHAR(TO_DATE('''||p_fromdate||''',''dd/MM/yyyy''),''YYYY''))-1),3, '|| chr(10)
    || '''01/04/'' || TO_CHAR(TO_NUMBER(TO_CHAR(TO_DATE('''||p_fromdate||''',''dd/MM/yyyy''),''YYYY'') )-1), '|| chr(10)
    || '''01/04/'' || TO_CHAR(TO_NUMBER(TO_CHAR(TO_DATE('''||p_fromdate||''',''dd/MM/yyyy''),''YYYY'') ))),''DD/MM/YYYY'') '|| chr(10)
    || 'GROUP BY YEARCODE, COMPANYCODE,DIVISIONCODE,TOKENNO,CLUSTERCODE,CATEGORYCODE) L, '|| chr(10)
    || '(SELECT SGT.COMPANYCODE,SGT.DIVISIONCODE,SGT.CLUSTERCODE,SGT.CATEGORYCODE,SGT.WORKERSERIAL, SGT.TOKENNO FROM '|| chr(10) 
    || 'GPSDAILYPAYSHEETDETAILS SGT, GPSOCCUPATIONMAST OCCU '|| chr(10)
    || 'WHERE SGT.OCCUPATIONCODE = OCCU.OCCUPATIONCODE '|| chr(10)
    || 'AND SGT.COMPANYCODE = OCCU.COMPANYCODE '|| chr(10)
    || 'AND SGT.DIVISIONCODE = OCCU.DIVISIONCODE  '|| chr(10)
    || 'AND SGT.COMPANYCODE='''||p_companycode||''' AND SGT.DIVISIONCODE='''||p_divisioncode||''' '|| chr(10) 
    || 'AND SGT.ATTENDANCEDATE>=TO_DATE('''||p_fromdate||''',''dd/MM/yyyy'') '|| chr(10)
    || 'AND SGT.ATTENDANCEDATE<=TO_DATE('''||p_todate||''',''dd/MM/yyyy'') AND OCCU.OCCUPATIONTYPE =''PAID HOLIDAY'' '|| chr(10) 
    || 'GROUP BY SGT.COMPANYCODE,SGT.DIVISIONCODE,SGT.CLUSTERCODE,SGT.CATEGORYCODE,SGT.WORKERSERIAL, SGT.TOKENNO) M, '|| chr(10)
    || '(SELECT NVL(COUNT(CLUSTERCODE),0) FACTORY_DAYS,TOKENNO,COMPANYCODE,DIVISIONCODE FROM GPSDAILYPAYSHEETDETAILS '|| chr(10) 
    || 'WHERE COMPANYCODE='''||p_companycode||''' AND DIVISIONCODE='''||p_divisioncode||''' '|| chr(10)
    || 'AND PERIODFROM>=TO_DATE('''||p_fromdate||''',''dd/MM/yyyy'') AND PERIODTO<=TO_DATE('''||p_todate||''',''dd/MM/yyyy'') '|| chr(10)
    || 'AND CLUSTERCODE IN (''CHEFT'',''PUDFT'') AND PROCESSTYPE=''DAILY PROCESS'' '|| chr(10)
    || 'GROUP BY TOKENNO,COMPANYCODE,DIVISIONCODE) N ,'|| chr(10)
|| '(SELECT COMPANYCODE,DIVISIONCODE,WORKERSERIAL,PFGROSS,PFAMOUNT FROM GPSLEAVEPROCALCULATION '|| chr(10)
|| 'WHERE COMPANYCODE='''||p_companycode||''' AND DIVISIONCODE='''||p_divisioncode||'''  AND PFDATE>=TO_DATE('''||p_fromdate||''',''dd/MM/yyyy'') AND PFDATE<=TO_DATE('''||p_todate||''',''dd/MM/yyyy'') ) JK'|| chr(10) 
    || 'WHERE K.COMPANYCODE='''||p_companycode||''' AND K.DIVISIONCODE='''||p_divisioncode||''' AND K.CLUSTERCODE IN( '||p_clustercode||' ) AND K.CATEGORYCODE IN( '||p_categorycode||' ) '|| chr(10) 
    --|| 'AND A.ATTENDANCEDATE>=TO_DATE('''||p_fromdate||''',''dd/MM/yyyy'') AND A.ATTENDANCEDATE <=TO_DATE('''||p_todate||''',''dd/MM/yyyy'') '|| chr(10)
    || 'AND K.PERIODFROM>=TO_DATE('''||p_fromdate||''',''dd/MM/yyyy'') AND K.PERIODTO <=TO_DATE('''||p_todate||''',''dd/MM/yyyy'') '|| chr(10)
    || 'AND K.COMPANYCODE=B.COMPANYCODE '|| chr(10)
    || 'AND K.COMPANYCODE=C.COMPANYCODE  '|| chr(10)
    || 'AND K.DIVISIONCODE=C.DIVISIONCODE  '|| chr(10)
    || 'AND K.COMPANYCODE=D.COMPANYCODE '|| chr(10)
    || 'AND K.DIVISIONCODE=D.DIVISIONCODE  '|| chr(10)
    || 'AND K.CLUSTERCODE=D.CLUSTERCODE '|| chr(10)
    || 'AND K.COMPANYCODE=E.COMPANYCODE '|| chr(10)
    || 'AND K.DIVISIONCODE=E.DIVISIONCODE '|| chr(10)
    || 'AND K.CATEGORYCODE=E.CATEGORYCODE  '|| chr(10)
    || 'AND K.COMPANYCODE=F.COMPANYCODE '|| chr(10)
    || 'AND K.DIVISIONCODE=F.DIVISIONCODE '|| chr(10)
    || 'AND K.TOKENNO=F.TOKENNO  '|| chr(10)
    || 'AND K.WORKERSERIAL=F.WORKERSERIAL '|| chr(10) 
    || 'AND K.COMPANYCODE=G.COMPANYCODE(+)  '|| chr(10)
    || 'AND K.DIVISIONCODE=G.DIVISIONCODE(+) '|| chr(10)
    || 'AND K.TOKENNO=G.TOKENNO(+) '|| chr(10)
    || 'AND K.WORKERSERIAL=G.WORKERSERIAL(+) '|| chr(10)
    || 'AND K.COMPANYCODE=H.COMPANYCODE(+) '|| chr(10)
    || 'AND K.DIVISIONCODE=H.DIVISIONCODE(+) '|| chr(10)
    || 'AND K.CATEGORYCODE = H.PARAM_ID(+) '|| chr(10)
    || 'AND K.COMPANYCODE=I.COMPANYCODE(+) '|| chr(10)
    || 'AND K.DIVISIONCODE=I.DIVISIONCODE(+) '|| chr(10)
    || 'AND K.CATEGORYCODE = I.PARAM_ID(+) '|| chr(10)
    || 'AND K.COMPANYCODE=J.COMPANYCODE(+) '|| chr(10)
    || 'AND K.DIVISIONCODE=J.DIVISIONCODE(+) '|| chr(10)
    || 'AND K.WORKERSERIAL=J.WORKERSERIAL(+) '|| chr(10)
    || 'AND K.TOKENNO=J.TOKENNO(+) '|| chr(10)
    || 'AND J.DA>0  '|| chr(10)
--    || 'AND J.EFFECTIVEDATE>=TO_DATE('''||p_fromdate||''',''dd/MM/yyyy'') '||CHR(10)
    || 'AND J.EFFECTIVEDATE >= (  '|| chr(10)
    || '                        SELECT MAX(EFFECTIVEDATE) FROM  GPSCOMPONENTASSIGNMENT  '|| chr(10)
    || '                         WHERE DIVISIONCODE='''||p_divisioncode||'''  AND TRANSACTIONTYPE = ''ASSIGNMENT''  '|| chr(10) 
    || '                         AND EFFECTIVEDATE<=TO_DATE(''' || p_todate || ''',''dd/MM/yyyy'') AND DA>0 AND BASIC=0 '|| chr(10) 
    || '                       )  '|| chr(10)
    || 'AND J.TRANSACTIONTYPE(+) = ''ASSIGNMENT''  '||CHR(10)
    || 'AND A.COMPANYCODE=K.COMPANYCODE(+) '|| chr(10) 
    || 'AND A.DIVISIONCODE=K.DIVISIONCODE(+) '|| chr(10)
    || 'AND A.WORKERSERIAL=K.WORKERSERIAL(+) '|| chr(10)
    || 'AND A.TOKENNO=K.TOKENNO(+) '|| chr(10)
    || 'AND A.CLUSTERCODE=K.CLUSTERCODE(+) '|| chr(10)
    || 'AND A.CATEGORYCODE=K.CATEGORYCODE(+) '|| chr(10)
    --|| 'AND K.PERIODFROM>=TO_DATE('''||p_fromdate||''',''dd/MM/yyyy'') AND K.PERIODTO<=TO_DATE('''||p_todate||''',''dd/MM/yyyy'') '|| chr(10)
    || 'AND K.COMPANYCODE=L.COMPANYCODE(+) '|| chr(10)
    || 'AND K.DIVISIONCODE=L.DIVISIONCODE(+) '|| chr(10)
    || 'AND K.TOKENNO=L.TOKENNO(+) '|| chr(10)
    || 'AND K.CLUSTERCODE=L.CLUSTERCODE(+) '|| chr(10)
    || 'AND K.CATEGORYCODE=L.CATEGORYCODE(+) '|| chr(10)
    || 'AND K.YEARCODE=L.YEARCODE(+) '|| chr(10)
    || 'AND K.COMPANYCODE=M.COMPANYCODE(+) '|| chr(10)
    || 'AND K.DIVISIONCODE=M.DIVISIONCODE(+) '|| chr(10)
    || 'AND K.TOKENNO=M.TOKENNO(+) '|| chr(10)
    || 'AND K.CLUSTERCODE=M.CLUSTERCODE(+) '|| chr(10)
    || 'AND K.CATEGORYCODE=M.CATEGORYCODE(+) '|| chr(10)
    || 'AND K.WORKERSERIAL=M.WORKERSERIAL(+) '|| chr(10)
    || 'AND K.COMPANYCODE=N.COMPANYCODE  (+) '|| chr(10)
    || 'AND K.DIVISIONCODE=N.DIVISIONCODE(+) '|| chr(10)
    || 'AND K.TOKENNO=N.TOKENNO(+) '|| chr(10)
    || ' AND K.COMPANYCODE=JK.COMPANYCODE  (+) '|| chr(10)
    || 'AND K.DIVISIONCODE=JK.DIVISIONCODE(+) '|| chr(10)
    || 'AND K.WORKERSERIAL=JK.WORKERSERIAL(+) '|| chr(10)
    || 'GROUP BY K.COMPANYCODE,B.COMPANYNAME,K.DIVISIONCODE,C.DIVISIONNAME, '|| chr(10) 
    || 'K.CLUSTERCODE,D.CLUSTERDESC , K.CATEGORYCODE ,E.CATEGORYDESC,K.WORKERSERIAL,K.TOKENNO, F.EMPLOYEENAME,F.FATHERNAME,F.DATEOFBIRTH, '|| chr(10) 
    || 'F.DATEOFJOINING,F.SEX,K.HAZIRA,G.JD_DAY,A.GTR_BASIC,K.MTR_BASIC,J.DA,K.DA, '|| chr(10)
    || 'K.PERPAY_ALLOW,K.PF_E,K.DED_LIC,K.DED_WGADV,K.GROSSWAGES,K.GROSSDEDN,K.NETSALARY,K.COINBF ,K.COINCF,I.MTR_BASIC,H.GTR_BASIC,L.CUMDAYS, '|| chr(10)
    || 'L.CUM_BON_AMT,K.LOAN_ADVFT,K.LOAN_ONAM,K.LOAN_BKID,K.LOAN_XMASS,K.LNBL_ADVCO,K.OTHER_DED,K.DED_ELEC,K.PTAX,NVL(K.HOLIDAY_WAGE,0),K.MDP_WAGES,K.PERIODFROM,K.LNBL_ADVGN,K.LNBL_ADVFT,K.LNBL_ADVOP,K.POP,K.LOAN_ADVCO,N.FACTORY_DAYS,NVL(K.EXTRA_ALLOW,0),NVL(K.NONPF_ALLOW,0), NVL(K.DED_WELFARE,0),NVL(K.DED_UNION,0),NVL(K.LOAN_ADVGN,0),NVL(K.TEMP_DED,0),NVL(K.DED_ITAX,0),NVL(K.OTHER_DED,0),NVL(K.LOAN_ADVOP,0),NVL(K.DAILYWAGES,0),NVL(JK.PFGROSS,0),NVL(JK.PFAMOUNT,0)) '|| chr(10) 
    || 'GROUP BY COMPANYCODE,COMPANYNAME,DIVISIONCODE,DIVISIONNAME,  '|| chr(10)
    || 'CLUSTERCODE,CLUSTERDESC , CATEGORYCODE ,CATEGORYDESC,WORKERSERIAL, TOKENNO,EMPLOYEENAME,FATHERNAME,DATEOFBIRTH, '|| chr(10) 
    || 'DATEOFJOINING,SEX,TOTAL_DAYS,JD_DAY,DED_WGADV,DED_LIC,MTR_BASIC,MTRBASIC,GTR_BASIC,DA,DA_PAY,PERPAY_ALLOW,GROSSWAGES,GROSSDEDN, '|| chr(10)
    || 'CUMDAYS,CUM_BON_AMT,PF_E,NETSALARY,COINBF ,COINCF,FES_ADV,OTR_ADV,ELE,HLD_WGS, MDE_WGS_I,PERIODFROM,OUT_STAND_DED ,WAG_DIF,COOP_SCTY,FACTORY_DAYS,CR_I,B_F_CR,B_F_DR, DAILYWAGES ,PFGROSS '|| chr(10)
    || ') AA,  '|| chr(10)
    || '(SELECT COMPANYCODE,DIVISIONCODE,CLUSTERCODE,CATEGORYCODE,WORKERSERIAL,TOKENNO, '|| chr(10)
    || 'SUM(NVL(DECODE(TASKCODE,''1'',HAZIRA),0)) CLASS_I, '|| chr(10)
    || 'SUM(NVL(DECODE(TASKCODE,''1'',TOT_LATEX),0)) LATEX_I, '|| chr(10)
    || 'SUM(NVL(DECODE(TASKCODE,''1'',TOT_SCRAP),0)) SCRAP_I,  '|| chr(10)
    || 'SUM(NVL(DECODE(TASKCODE,''1'',TOT_LATEX),0)) + SUM(NVL(DECODE(TASKCODE,''1'',TOT_SCRAP),0)) TOTAL_I,  '|| chr(10) 
    || 'SUM(NVL(DECODE(TASKCODE,''1'',TASK),0)) STD_OUT_I, SUM(NVL(DECODE(TASKCODE,''1'',LOK_KG),0)) LAT_OKG_I,  '||CHR(10)
    || 'SUM(NVL(DECODE(TASKCODE,''1'',SOK_KG),0)) SC_OKG_I,0 SCR_OKG_I, '|| chr(10) 
    || 'SUM(NVL(DECODE(TASKCODE,''1'',STD_AMT),0)) STD_AMT_I, '|| chr(10)
    || 'SUM(NVL(DECODE(TASKCODE,''1'',LOK_AMT),0)) LOK_AMT_I, '|| chr(10)
    || 'SUM(NVL(DECODE(TASKCODE,''1'',SOK_AMT),0)) SOK_AMT_I, '|| chr(10)
    || '--0 MDE_WGS_I,--0 GTR_DA_I,  '|| chr(10)
    || '0 CRUMB_WAGES_I,--0 G_F_PAY_I, '|| chr(10)
    || 'SUM(NVL(DECODE(TASKCODE,''2'',HAZIRA),0)) CLASS_II, '|| chr(10)
    || 'SUM(NVL(DECODE(TASKCODE,''2'',TOT_LATEX),0)) LATEX_II , '|| chr(10)
    || 'SUM(NVL(DECODE(TASKCODE,''2'',TOT_SCRAP),0)) SCRAP_II , '|| chr(10)
    || 'SUM(NVL(DECODE(TASKCODE,''2'',TOT_LATEX),0)) + SUM(NVL(DECODE(TASKCODE,''2'',TOT_SCRAP),0)) TOTAL_II,  '||CHR(10)
    || 'SUM(NVL(DECODE(TASKCODE,''2'',TASK),0)) STD_OUT_II,SUM(NVL(DECODE(TASKCODE,''2'',LOK_KG),0)) LAT_OKG_II,   '||CHR(10)
    || 'SUM(NVL(DECODE(TASKCODE,''2'',SOK_KG),0)) SC_OKG_II,0 SCR_OKG_II, '|| chr(10) 
    || 'SUM(NVL(DECODE(TASKCODE,''2'',STD_AMT),0)) STD_AMT_II, '|| chr(10)
    || 'SUM(NVL(DECODE(TASKCODE,''2'',LOK_AMT),0)) LOK_AMT_II, '|| chr(10)
    || 'SUM(NVL(DECODE(TASKCODE,''2'',SOK_AMT),0)) SOK_AMT_II,0 MDE_WGS_II,0 GTR_DA_II,0 CRUMB_WAGES_II,0 G_F_PAY_II, '|| chr(10) 
    || 'SUM(NVL(DECODE(TASKCODE,''3'',HAZIRA),0)) CLASS_III, '|| chr(10)
    || 'SUM(NVL(DECODE(TASKCODE,''3'',TOT_LATEX),0)) LATEX_III, '|| chr(10)
    || 'SUM(NVL(DECODE(TASKCODE,''3'',TOT_SCRAP),0)) SCRAP_III, '|| chr(10)
    || 'SUM(NVL(DECODE(TASKCODE,''3'',TOT_LATEX),0)) +SUM(NVL(DECODE(TASKCODE,''3'',TOT_SCRAP),0)) TOTAL_III,  '||CHR(10)
    || 'SUM(NVL(DECODE(TASKCODE,''3'',TASK),0)) STD_OUT_III, SUM(NVL(DECODE(TASKCODE,''3'',LOK_KG),0)) LAT_OKG_III,   '||CHR(10)
    || 'SUM(NVL(DECODE(TASKCODE,''3'',SOK_KG),0)) SC_OKG_III,0 SCR_OKG_III, '|| chr(10) 
    || 'SUM(NVL(DECODE(TASKCODE,''3'',STD_AMT),0)) STD_AMT_III, '|| chr(10)
    || 'SUM(NVL(DECODE(TASKCODE,''3'',LOK_AMT),0)) LOK_AMT_III, '|| chr(10)
    || 'SUM(NVL(DECODE(TASKCODE,''3'',SOK_AMT),0)) SOK_AMT_III,0 MDE_WGS_III,0 GTR_DA_III,0 CRUMB_WAGES_III,0 G_F_PAY_III, '|| chr(10) 
    || 'SUM(NVL(DECODE(TASKCODE,''4'',HAZIRA),0)) CLASS_IV, '|| chr(10)
    || 'SUM(NVL(DECODE(TASKCODE,''4'',TOT_LATEX),0)) LATEX_IV, '|| chr(10)
    || 'SUM(NVL(DECODE(TASKCODE,''4'',TOT_SCRAP),0)) SCRAP_IV, '|| chr(10)
    || 'SUM(NVL(DECODE(TASKCODE,''4'',TOT_LATEX),0)) +SUM(NVL(DECODE(TASKCODE,''4'',TOT_SCRAP),0)) TOTAL_IV,   '||CHR(10)
    || 'SUM(NVL(DECODE(TASKCODE,''4'',TASK),0)) STD_OUT_IV, SUM(NVL(DECODE(TASKCODE,''4'',LOK_KG),0)) LAT_OKG_IV,   '||CHR(10)
    || 'SUM(NVL(DECODE(TASKCODE,''4'',SOK_KG),0)) SC_OKG_IV,0 SCR_OKG_IV, '|| chr(10) 
    || 'SUM(NVL(DECODE(TASKCODE,''4'',STD_AMT),0)) STD_AMT_IV, '|| chr(10)
    || 'SUM(NVL(DECODE(TASKCODE,''4'',LOK_AMT),0)) LOK_AMT_IV,  '|| chr(10)
    || 'SUM(NVL(DECODE(TASKCODE,''4'',SOK_AMT),0)) SOK_AMT_IV,0 MDE_WGS_IV,0 GTR_DA_IV,0 CRUMB_WAGES_IV,0 G_F_PAY_IV, NVL(SUM(HAZIRA),0) TAPDAYS '|| chr(10) 
    || 'FROM GPSRUBBERINCENTIVE   '|| chr(10)
    || 'WHERE COMPANYCODE = '''||p_companycode||''' '|| chr(10)
    || 'AND DIVISIONCODE = '''||p_divisioncode||''' '|| chr(10)
    || 'AND CLUSTERCODE  IN( '||p_clustercode||' )  '|| chr(10)
    || 'AND CATEGORYCODE IN( '||p_categorycode||' ) '|| chr(10)
    || 'AND  PERIODFROM >=TO_DATE('''||p_fromdate||''',''dd/MM/yyyy'') '|| chr(10) 
    || 'AND  PERIODTO <=TO_DATE('''||p_todate||''',''dd/MM/yyyy'')  AND OCCUPATIONCODE=''TA'' '|| chr(10)
    || 'GROUP BY COMPANYCODE,DIVISIONCODE,CLUSTERCODE,CATEGORYCODE,WORKERSERIAL,TOKENNO) BB '|| chr(10) 
    || 'WHERE AA.COMPANYCODE=BB.COMPANYCODE(+) '|| chr(10)
    || 'AND AA.DIVISIONCODE =BB.DIVISIONCODE(+) '|| chr(10)
    || 'AND AA.CLUSTERCODE=BB.CLUSTERCODE(+) '|| chr(10) 
    || 'AND AA.CATEGORYCODE=BB.CATEGORYCODE(+)  '|| chr(10)
    || 'AND AA.WORKERSERIAL=BB.WORKERSERIAL(+)  '|| chr(10)
    || 'AND AA.TOKENNO=BB.TOKENNO(+) '|| chr(10)
    || 'ORDER BY AA.CLUSTERDESC , AA.CATEGORYCODE,AA.TOKENNO '|| chr(10);

    
--dbms_output.put_line(lv_sql);
execute immediate lv_sql;   

--EXEC PROC_LOANBLNC('JT0069','0006','01/11/2020','01/11/2020')

--ADDED ON 21/12/2020
 
    
PROC_LOANBLNC(p_companycode,p_divisioncode,p_fromdate,p_fromdate);

UPDATE GTT_RUBBERREGISTER_FRM16 A SET 
OUT_STAND_DED = 
(
    SELECT LOAN_BAL FROM
    (
        SELECT COMPANYCODE, DIVISIONCODE, WORKERSERIAL, TOKENNO, SUM(LOAN_BAL) LOAN_BAL 
        FROM GBL_LOANBLNC
        WHERE 1=1 
        AND LOANCODE <> 'ADVCO'
--        AND TOKENNO ='11359'
        GROUP BY COMPANYCODE, DIVISIONCODE, WORKERSERIAL, TOKENNO
    )
    WHERE A.COMPANYCODE=COMPANYCODE
    AND A.DIVISIONCODE=DIVISIONCODE
    AND A.WORKERSERIAL=WORKERSERIAL
    AND A.TOKENNO=TOKENNO
);



    select to_char(add_months(to_date(p_fromdate,'dd/mm/yyyy'),-1),'dd/mm/yyyy') into lv_last_fromdate from dual;
    
    
PROC_LOANBLNC(p_companycode,p_divisioncode,lv_last_fromdate,lv_last_fromdate);

UPDATE GTT_RUBBERREGISTER_FRM16 A SET 
B_F_DR  = 
(
    SELECT LOAN_BAL FROM
    (
        SELECT COMPANYCODE, DIVISIONCODE, WORKERSERIAL, TOKENNO, SUM(LOAN_BAL) LOAN_BAL 
        FROM GBL_LOANBLNC
        WHERE 1=1 
        AND LOANCODE <> 'ADVCO'
--        AND TOKENNO ='11359'
        GROUP BY COMPANYCODE, DIVISIONCODE, WORKERSERIAL, TOKENNO
    )
    WHERE A.COMPANYCODE=COMPANYCODE
    AND A.DIVISIONCODE=DIVISIONCODE
    AND A.WORKERSERIAL=WORKERSERIAL
    AND A.TOKENNO=TOKENNO
);

        
        
--ENDED ON 21/12/2020    
    
END;
/
