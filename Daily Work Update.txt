
---------------------------------------------------------------------------------------------
25/06/2020
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

Leave Entry for 
B/LVD/21/00002 DATED : 25/06/2020

Enter validation Leave Entry Interface.
Leave Encashment can't be more than 30 days.
At the time of leave encashment leave balance can't be less than 60.
Neagtive leave balance allowed based leave code in the master parameter.
Note :- Normal leave time balance may below 60.

GRADE - C
--------------------------------------------------
00473	PRADEEP KR.CHAUHAN	121	S4 LOOM	70	10
00490	GOUTAM ADHIKARY	320	BUILDING	70	10
00498	DEBANSU DATTA	342	SHOPPING BAG	70	10
00501	SUBHASH KUMAR PANDEY	112	SPINNING	70	10
00529	PREM PRAKASH DHAND	341	JUTE	70	10
00543	ANUPAM MITRA	344	TIME KEEPING	70	10
00548	RAJENDRA KR.SHUKLA	341	JUTE	70	10
00549	VIJAY KUMAR YADAV	343	ACCOUNTS	70	10
00587	KANCHAN MONDAL	131	MILL.MECH	70	10
00675	KULESH KUMAR JHA	115	WEAVING	70	10
00689	AMIT SAHA	345	WELFARE	70	10
00696	RAJESH KHANNA	611	HO PURCHASE RJ	70	10
00729	BALBIR KUMAR SINGH	132	FACT.MECH	70	10
00734	SUNIL KUMAR SHARMA	351	I.T	70	10

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

25/06/2020

---------------------------------------------------------------------------------------------


SELECT * FROM LOANTRANSACTION
WHERE TOKENNO='5173'


SELECT * FROM LOANBREAKUP
WHERE LOANCODE='ADVGN'
AND TOKENNO='5173' 
AND LOANDATE='21-JAN-2020'

FOR TOKEN NO - 5173 - MINU LOHAR 2 - LOAN - ADVGN
--------------------------------------------------
LOAN DATE - 21/01/2020
LOAN AMOUNT - 1900
LOAN DEDUCTION - UPTO 30/05/2020 - 1500 BALANCE = 1900-1500 = 400
REPAY MANUAL - ON 11/06/2020 - 400 (EFFECTFORTNIGHT - 13/06/2020 (WAGES PERIOD (31/05/2020-13/06/2020))

AGAIN TAKE ANOTHER LOAN ON 12/06/2020
LOAN AMOUNT - 1600
PREVIOS LOAN BALANCE (OR ADJUSTED AMOUNT)- 400 

---------------BECAUSE of IN THE PROC_LOANBLNC PROCEDURE TAKE EFFECTFORTNIGHT FOR CHECK
SELECT A.COMPANYCODE,A.DIVISIONCODE,A.WORKERSERIAL, A.LOANCODE, A.LOANDATE, 0 AMOUNT,  
(
    CASE WHEN TRANSACTIONTYPE ='INTEREST' THEN AMOUNT   
    WHEN TRANSACTIONTYPE ='REPAY' THEN REPAYINTEREST   
    WHEN TRANSACTIONTYPE ='REPAYINT' THEN AMOUNT   
    ELSE 0   
    END
)*(-1) INTERESTAMOUNT , 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT       
FROM LOANBREAKUP A,   
(   
    SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE, MAX(LOANDATE) LOANDATE  
    FROM LOANTRANSACTION   
    WHERE COMPANYCODE = 'JT0069'  
    AND LOANDATE <=  TO_DATE('12/06/2020','DD/MM/YYYY')   
    GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE  
) B   
WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE  
AND A.WORKERSERIAL = B.WORKERSERIAL  AND A.LOANCODE = B.LOANCODE AND A.LOANDATE = B.LOANDATE  
-----------------------check for effect fortnight date------------------------------
AND A.EFFECTFORTNIGHT <= TO_DATE('12/06/2020','DD/MM/YYYY')  
AND TRANSACTIONTYPE <> 'CAPITAL'  


---------------------------------------------------------------------------------------------
<<<<<<< HEAD
=======
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
exec PROC_RPT_LOANSUMMARY('JT0069','0002','31/03/2021','','''ADVGN''')

SELECT * FROM GTT_LOANSUMMARY
WHERE LOAN_BAL < 0

SELECT * FROM LOANTRANSACTION
WHERE TOKENNO='5173'


SELECT * FROM LOANBREAKUP
WHERE LOANCODE='ADVGN'
AND TOKENNO='5173' 

SELECT * FROM LOANTRANSACTION
WHERE TOKENNO='5690'
AND LOANDATE='12-MAR-2020'

SELECT * FROM LOANBREAKUP
WHERE LOANCODE='ADVGN'
AND TOKENNO='5690'
AND LOANDATE='12-MAR-2020'

LOANCODE


EXEC PROC_LOANBLNC('JT0069','0002','20/03/2020','20/03/2020','ADVGN')

AND A.WORKERSERIAL='0005179'


(
    P_COMPANYCODE  VARCHAR2,
    P_DIVISIONCODE VARCHAR2,
    P_STARTDATE    VARCHAR2,
    P_ENDDATE      VARCHAR2,    
    P_LOANCODE     VARCHAR2 DEFAULT NULL,
    P_WORKERSERIAL VARCHAR2 DEFAULT NULL,
    P_MODULE       VARCHAR2 DEFAULT 'GPS',
    P_WAGEPROCESS  VARCHAR2 DEFAULT 'NO', 
    P_TRANTYPE     VARCHAR2 DEFAULT 'SALARY' 
    
    
    20/03/2020	20/03/2020
21/03/2020	14/03/2020


FOR TOKENO - 5173
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

 
 SELECT B.COMPANYCODE, B.DIVISIONCODE, B.WORKERSERIAL, B.TOKENNO, B.MODULE, A.LOANCODE, A.LOANDATE, SUM(A.AMOUNT) LOAN_BAL, 
   CASE WHEN SUM(INTERESTAMOUNT) > 0 THEN SUM(INTERESTAMOUNT) ELSE 0 END LOAN_INT_BAL,  
   SUM(LN_CAP_DEDUCT) LN_CAP_DEDUCT, SUM(LN_INT_DEDUCT) LN_INT_DEDUCT, X.CAP_EMI, X.INT_EMI, X.TOT_EMI,  
 NVL(Y.CAP_STOP,'N') CAP_STOP,
 NVL(Y.INT_STOP,'N') INT_STOP
   FROM (   
           SELECT DISTINCT A.COMPANYCODE,A.DIVISIONCODE,A.WORKERSERIAL, A.LOANCODE, A.LOANDATE, AMOUNT, 0 INTERESTAMOUNT , 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT  
           FROM LOANTRANSACTION A,   
           (   
              SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE, MAX(LOANDATE) LOANDATE  
              FROM LOANTRANSACTION   
              WHERE COMPANYCODE = 'JT0069'  
              AND DIVISIONCODE = '0002'  
               AND LOANDATE <=  TO_DATE('19/03/2020','DD/MM/YYYY')  
               GROUP BY COMPANYCODE,DIVISIONCODE,COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE  
           ) B   
           WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE  
             AND A.WORKERSERIAL = B.WORKERSERIAL  AND A.LOANCODE = B.LOANCODE AND A.LOANDATE = B.LOANDATE  AND AMOUNT > 0  
           UNION ALL      
           SELECT A.COMPANYCODE,A.DIVISIONCODE,A.WORKERSERIAL, A.LOANCODE, A.LOANDATE,  
             (CASE WHEN TRANSACTIONTYPE ='CAPITAL' THEN AMOUNT   
                  WHEN TRANSACTIONTYPE ='REPAY' THEN REPAYCAPITAL   
                  WHEN TRANSACTIONTYPE ='REPAYCAP' THEN AMOUNT   
                  ELSE 0   
             END)*(-1) AMOUNT, 0 INTERESTAMOUNT  
             , 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT  
           FROM LOANBREAKUP A,   
           (   
               SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE, MAX(LOANDATE) LOANDATE  
               FROM LOANTRANSACTION   
               WHERE COMPANYCODE = 'JT0069'  
               AND DIVISIONCODE = '0002'  
               AND LOANDATE <=  TO_DATE('19/03/2020','DD/MM/YYYY')   
               GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE  
           ) B   
           WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE  
           AND A.WORKERSERIAL = B.WORKERSERIAL AND A.LOANCODE = B.LOANCODE AND A.LOANDATE = B.LOANDATE  
             AND A.EFFECTFORTNIGHT <=  TO_DATE('22/03/2020','DD/MM/YYYY')   
             AND TRANSACTIONTYPE <> 'INTEREST'   
           UNION ALL   
           SELECT DISTINCT A.COMPANYCODE,A.DIVISIONCODE,A.WORKERSERIAL,A.LOANCODE, A.LOANDATE, 0 AMOUNT, SUM(NVL(C.INTERESTAMOUNT,0)) INTERESTAMOUNT  
           , 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT   
           FROM ( SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE, LOANDATE  
                  FROM LOANTRANSACTION  
                  WHERE COMPANYCODE = 'JT0069'   
                  AND DIVISIONCODE = '0002'   
                ) A,  
              (   
                   SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE, MAX(LOANDATE) LOANDATE  
                  FROM LOANTRANSACTION   
                  WHERE COMPANYCODE = 'JT0069'  /*AND DIVISIONCODE = '0001' */  
                  AND LOANDATE <=  TO_DATE('19/03/2020','DD/MM/YYYY')   
                  GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE  
              ) B, LOANINTEREST C   
           WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE AND A.DIVISIONCODE=C.DIVISIONCODE  
           AND A.WORKERSERIAL = B.WORKERSERIAL  AND A.LOANCODE = B.LOANCODE AND A.LOANDATE = B.LOANDATE  
           AND A.WORKERSERIAL = C.WORKERSERIAL AND A.LOANDATE = C.LOANDATE AND A.LOANCODE = C.LOANCODE   
           AND C.FORTNIGHTENDDATE <= TO_DATE('19/03/2020','DD/MM/YYYY')  
           AND C.TRANSACTIONTYPE = 'ADD'   
           GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.WORKERSERIAL, A.LOANCODE, A.LOANDATE  
           UNION ALL   
           SELECT A.COMPANYCODE,A.DIVISIONCODE,A.WORKERSERIAL, A.LOANCODE, A.LOANDATE, 0 AMOUNT,  
             (CASE WHEN TRANSACTIONTYPE ='INTEREST' THEN AMOUNT   
                  WHEN TRANSACTIONTYPE ='REPAY' THEN REPAYINTEREST   
                  WHEN TRANSACTIONTYPE ='REPAYINT' THEN AMOUNT   
                  ELSE 0   
             END)*(-1) INTERESTAMOUNT  
             , 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT       
           FROM LOANBREAKUP A,   
           (   
               SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE, MAX(LOANDATE) LOANDATE  
               FROM LOANTRANSACTION   
               WHERE COMPANYCODE = 'JT0069'  /*AND DIVISIONCODE = '0001' */  
                 AND LOANDATE <=  TO_DATE('19/03/2020','DD/MM/YYYY')   
               GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE  
           ) B   
           WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE  
           AND A.WORKERSERIAL = B.WORKERSERIAL  AND A.LOANCODE = B.LOANCODE AND A.LOANDATE = B.LOANDATE  
           AND A.EFFECTFORTNIGHT <= TO_DATE('19/03/2020','DD/MM/YYYY')  
           AND TRANSACTIONTYPE <> 'CAPITAL'  
           UNION ALL  
           SELECT A.COMPANYCODE,A.DIVISIONCODE,A.WORKERSERIAL, A.LOANCODE, A.LOANDATE, 0 AMOUNT,  0 INTERESTAMOUNT,  
           DECODE(TRANSACTIONTYPE,'CAPITAL',AMOUNT,0) LN_CAP_DEDUCT, DECODE(TRANSACTIONTYPE,'INTEREST',AMOUNT,0) LN_INT_DEDUCT  
           FROM LOANBREAKUP A,   
           (   
               SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE, MAX(LOANDATE) LOANDATE  
               FROM LOANTRANSACTION   
               WHERE COMPANYCODE = 'JT0069'  /*AND DIVISIONCODE = '0001' */  
               AND LOANDATE <=  TO_DATE('19/03/2020','DD/MM/YYYY')  
               GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE  
           ) B   
           WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE  
             AND A.WORKERSERIAL = B.WORKERSERIAL  AND A.LOANCODE = B.LOANCODE AND A.LOANDATE = B.LOANDATE  
             AND A.EFFECTFORTNIGHT <= TO_DATE('19/03/2020','DD/MM/YYYY') 
             AND TRANSACTIONTYPE IN ('CAPITAL','INTEREST')   
       ) A, WORKERVIEW B,  
       (  
          SELECT M.COMPANYCODE,M.DIVISIONCODE,M.WORKERSERIAL, M.LOANCODE, M.LOANDATE,  
          NVL(M.CAPITALINSTALLMENTAMT,0) CAP_EMI,  
          NVL(M.INTERESTINSTALLMENTAMT,0) INT_EMI, NVL(M.TOTALEMIAMOUNT,0) TOT_EMI  
          FROM LOANTRANSACTION M, ( SELECT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE, MAX(LOANDATE) LOANDATE  
                                    FROM LOANTRANSACTION  
                                    WHERE LOANDATE <= TO_DATE('19/03/2020','DD/MM/YYYY')  
                                    GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL,LOANCODE  
                                  ) N   
          WHERE M.COMPANYCODE=N.COMPANYCODE AND M.DIVISIONCODE=N.DIVISIONCODE  
           AND M.WORKERSERIAL = N.WORKERSERIAL AND M.LOANCODE = N.LOANCODE AND M.LOANDATE = N.LOANDATE  
       )  X,      
     ( 
         SELECT COMPANYCODE,DIVISIONCODE, WORKERSERIAL, TOKENNO, LOANCODE, LOANDATE, 
         LOANSTOPFROMDATE, LOANSTOPTODATE, CAPITAL CAP_STOP, INTEREST INT_STOP, FULLMILL 
         FROM LOANDEDUCTIONSTOP 
         WHERE COMPANYCODE = 'JT0069' AND DIVISIONCODE = '0002' 
           AND LOANSTOPFROMDATE <= TO_DATE('19/03/2020','DD/MM/YYYY') 
           AND LOANSTOPTODATE >= TO_DATE('19/03/2020','DD/MM/YYYY') 
           AND NVL(FULLMILL,'N') <> 'Y' 
     ) Y 
   WHERE A.COMPANYCODE=B.COMPANYCODE AND A.COMPANYCODE=X.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE AND A.DIVISIONCODE=X.DIVISIONCODE  
   AND A.WORKERSERIAL = B.WORKERSERIAL  
   AND B.MODULE = 'GPS'  
     AND A.WORKERSERIAL = X.WORKERSERIAL AND A.LOANCODE = X.LOANCODE AND A.LOANDATE = X.LOANDATE  
     AND A.COMPANYCODE=Y.COMPANYCODE (+)  
     AND A.DIVISIONCODE=Y.DIVISIONCODE (+)  
     AND A.WORKERSERIAL = Y.WORKERSERIAL (+)  
     AND A.LOANCODE = 'ADVGN' 
     AND A.WORKERSERIAL='0005179'
    GROUP BY B.COMPANYCODE, B.DIVISIONCODE,B.WORKERSERIAL, B.TOKENNO, B.MODULE,A.LOANCODE, A.LOANCODE, A.LOANDATE, X.CAP_EMI, X.INT_EMI, X.TOT_EMI, Y.CAP_STOP, Y.INT_STOP  


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

select * from loantransaction
where tokenno='5173'


select * from loanbreakup
where tokenno='5173'
and loandate=to_date('21/01/2020','dd/mm/yyyy')


exec proc_loanblnc('JT0069','0002','12/06/2020','12/06/2020','ADVGN')

SELECT * FROM GBL_LOANBLNC
where tokenno='5173'

P_COMPANYCODE  VARCHAR2,
    P_DIVISIONCODE VARCHAR2,
    P_STARTDATE    VARCHAR2,
    P_ENDDATE      VARCHAR2,    
    P_LOANCODE     VARCHAR2 DEFAULT NULL,
    P_WORKERSERIAL VARCHAR2 DEFAULT NULL,
    P_MODULE       VARCHAR2 DEFAULT 'GPS',
    P_WAGEPROCESS  VARCHAR2 DEFAULT 'NO', 
    P_TRANTYPE     VARCHAR2 DEFAULT 'SALARY' 
	
	
	
	
---------------------------------------------------------------------------------------------
PIS BIRLA LEAVE ENTITLEMENT


---------------------------------------------------------------------------------------------

SELECT * FROM MENUMASTER_RND
WHERE MENUCODE=''

SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%LEAVE%')

SELECT * FROM ROLEDETAILS
WHERE MENUCODE=''

SELECT * FROM REPORTPARAMETERMASTER
WHERE REPORTTAG=''


prcLeave_Bf_MainSave


delete PISLEAVEAPPLICATION

select * from  PISLEAVEAPPLICATION

    INSERT INTO GBL_PISLEAVEAPPLICATION_TEST
    
    
    SELECT * FROM GBL_PISLEAVEAPPLICATION_TEST;
    
    
     
         SELECT (LV_BAL-LEAVECNT)  FROM 
         (
             SELECT * FROM GBL_PISLEAVEBALANCE
             WHERE TOKENNO='00473'
             AND LEAVECODE='PL'
             AND COMPANYCODE='BJ0056'
             AND DIVISIONCODE='0001'
         ) A,
         (
            SELECT COUNT(*) LEAVECNT 
            FROM GBL_PISLEAVEAPPLICATION_TEST
            where LEAVEENCASHED='Y'
         )B
         WHERE 1=1;
         
         
    
 exec PRC_PIS_LEAVEBALANCE ('BJ0056','0001','2020-2021','202006','00473')
 
 SELECT (LV_BAL+LV_BAL) FROM 
 (
     select * from GBL_PISLEAVEBALANCE
     where tokenno='00597'
 ) A,
 (
    SELECT COUNT(*) LEAVECNT FROM GBL_PISLEAVEAPPLICATION_TEST
 )B
 
 
 pisleavemaster
 
 ALLOWNEGATIVELEAVES
 
 SELECT * FROM SYS_TFMAP
 WHERE SYS_TABLE_SEQUENCIER=''
 
 SELECT * FROM SYS_TFMAP
 WHERE SYS_TABLENAME_ACTUAL='PISLEAVEAPPLICATION'
 
 SELECT * FROM SYS_TFMAP
 WHERE SYS_TABLENAME_TEMP=''
 
 exec proc_create_gbl_tmp_tables(10008,0)
 
---------------------------------------------------------------------------------------------


Insert into PISALLPARAMETER
   (COMPANYCODE, DIVISIONCODE, YEARMONTH, ROUNDOFFRS, PAYMENTROUNDTYPE, 
    SUPERANNUATIONAGEMALE, SUPERANNUATIONAGEFEMALE, MINIMUMSALARYPAYABLE, ESIQUALIFIEDAMOUNT, BANKADVICETO, 
    CUMPFMONTHBETWEEN, PF_E_PERCENTAGE, ESI_E_PERCENT, ESI_C_PERCENT, ESIDEDUCTIONCHECKMONTH, 
    LWFDEDUCTIONMONTH, LOANAMOUNTROUNDOFF, LOANDEDUCTAPPLICABLEWORKDAYS, LOANDEDUCTAPPLICABLECOMPNENT, BONUSPERCENTAGE, 
    BONUSGROSSLIMIT, BONUSAMOUNTLIMIT, BONUSAMOUNTROUNDOFF, NEGATIVELEAVEALLOWED, MAXIMUMPENSIONGROSS, 
    PENSION_PERCENTAGE)
 Values
   ('BJ0056', '0001', '202004', 1, 'BANK', 
    58, 55, 1, 21000, 'XX', 
    '02-03', 10, 1.75, 4.75, '04-10', 
    '06-12', 1, 0, NULL, 20, 
    21000, 7000, 10, 'NO', 15000, 
    8.33);
COMMIT;



---------------------------------------------------------------------------------------------

select * from dynamicwebpage
where menucode='01070206'

select * from userwise_component

pgPISLeaveApplicationEntryWithGridDet_Common





SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%MONTH%')
and PROJECTNAME='PIS'
AND ACTIVE ='Y'



SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%EMPLOYEE%')
and PROJECTNAME='PIS'
AND ACTIVE ='Y'


SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%LEAVE%')
and PROJECTNAME='PIS'
AND ACTIVE ='Y'




UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Transaction/pgPISLeaveApplicationEntryWithGridDet_Common.aspx'
WHERE MENUCODE='0107020402'


UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Transaction/pgPISLeaveApplicationEntryWithGridDet_Common.aspx'
WHERE MENUCODE='0107020403'


UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Transaction/pgPISLeaveApplicationEntryWithGridDet_Common.aspx'
WHERE MENUCODE='0107020403'

PIS/PAGES/Master/pgEmployeeMast_Rate.aspx

UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Master/pgEmployeeMast_Birla.aspx'
WHERE MENUCODE='0107010111'


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10014'


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='PISEMPLOYEEMASTER'


MARITIALSTATUS

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10014'
AND SYS_COLUMNNAME IN ('SUPERANUATIONNUMBER','SUPERANUATIONDATE','CONVEYANCE','RELIGION','PRANNUMBER','GRATUITYNUMBER','FREEUNITELECTRICITY')



EXEC PROC_CREATE_GBL_TMP_TABLES(10014,0)


UPDATE MENUMASTER_RND SET
MENUTAG1 = 'EXTRAINFO'
WHERE MENUCODE='01070202'

EXTRAINFO

SELECT * FROM
PISLEAVEENTITLEMENT

00794

01171

DELETE FROM
PISLEAVEENTITLEMENT

DELETE FROM PISLEAVEAPPLICATION

SELECT * FROM PISLEAVEAPPLICATION


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='PISLEAVEAPPLICATION'

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10008'

GBL_PISLEAVEAPPLICATION

EXEC PROC_CREATE_GBL_TMP_TABLES(10008,0)

 B/LVD/21/00001 DATED : 24/06/2020
 
 B/LVD/21/00002 DATED : 24/06/2020
 
 
 
 SELECT * FROM MENUMASTER_RND
 WHERE UPPER(MENUDESC) LIKE UPPER('%LEAVE%')
 
 
 PIS/PAGES/Transaction/pgPISLeaveApplicationEntry.aspx
 
 0107020403+
 
 
 

UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Transaction/pgPISLeaveApplicationEntryWithGridDet_Common.aspx'
WHERE MENUCODE='0107020403'




SELECT * FROM PFEMPLOYEEMASTER
WHERE DATEOFJOINING=PFJOINDATE

UPDATE PFEMPLOYEEMASTER SET PFJOINDATE=DATEOFJOINING


SELECT * FROM PISEMPLOYEEMASTER
WHERE TOKENNO='00415'

SELECT * FROM PFEMPLOYEEMASTER
WHERE TOKENNO='00415' --28/07/1986


SELECT * FROM PISEMPLOYEEMASTER



UPDATE PFEMPLOYEEMASTER A 
SET PFJOINDATE = 
(
    SELECT PFENTITLEDATE FROM PISEMPLOYEEMASTER WHERE TOKENNO=A.TOKENNO
)
WHERE TOKENNO IN (SELECT DISTINCT TOKENNO FROM PISEMPLOYEEMASTER)




SELECT * FROM SYS_TFMAP
WHERE SYS_COLUMNNAME='PER_ALLOW'


GBL_PISCOMPONENTASSIGNMENT

PISPAYTRANSACTION_SWT


---------------------------------------------------------------------------------------------

Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'GRATUITYNUMBER', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtGRATUITYNUMBER', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'PRANNUMBER', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtPRANNUMBER', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'RELIGION', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtRELIGION', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'SUPERANUATIONDATE', 0, 
    'DATE', 10, 0, 'N', 'mskSUPERANUATIONDATE', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'SUPERANUATIONNUMBER', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtSUPERANUATIONNUMBER', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
COMMIT;



---------------------------------------------------------------------------------------------
DROP TABLE BIRLANEW.USERWISE_COMPONENT CASCADE CONSTRAINTS;

CREATE TABLE USERWISE_COMPONENT
(
  COMPANYCODE      VARCHAR2(10 BYTE),
  DIVISIONCODE     VARCHAR2(10 BYTE),
  ACCESS_USRNAME   VARCHAR2(30 BYTE),
  COMPONENTCODE    VARCHAR2(30 BYTE),
  SYSROWID         VARCHAR2(50 BYTE),
  LASTMODIFIED     DATE                         DEFAULT SYSDATE,
  ISACTIVE         VARCHAR2(1 BYTE)             DEFAULT 'Y',
  USERNAME         VARCHAR2(50 BYTE),
  TRANSACTIONTYPE  VARCHAR2(50 BYTE)
)

SELECT * FROM PIS_GTT_SWT_PHASE_DEDN



---------------------------------------------------------------------------------------------
SELECT SYS_COLUMNNAME FROM SYS_TFMAP WHERE SYS_TABLE_SEQUENCIER = 10013
MINUS 
SELECT COMPONENTCODE FROM PISCOMPONENTMASTER

HRA_FIXED
MISC_DEDN
TOTDEDN

select table_name from cols where COLUMN_NAME='PER_ALLOW'







drop table pisothertransaction  

create table  pisothertransaction as select * from pispaytransaction where 1=2
---------------------------------------------------------------------------------------------
select * from menumaster_rnd
where menudesc like 'Employee %aster'

PIS/PAGES/Master/pgPISEmployeeMast.aspx

pisemployeemaster

select * from pisemployeemaster
where esiapplicable='N'



select * from sys_tfmap
where SYS_TABLENAME_ACTUAL='PISEMPLOYEEMASTER'

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10014'


Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE, IS_EDITABLE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'ESIAPPLICABLE', 0, 
    'VARCHAR2', 1, 0, 'N', 'txtESIAPPLICABLE', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL, 'Y');
COMMIT;

EXEC PROC_CREATE_GBL_TMP_TABLES(10014,0)


---------------------------------------------------------------------------------------------

SELECT  NVL(L_A.SL_LWP,'N') AS SL_LWP ,  NVL(L_A.PL_LWP,'N') AS PL_LWP,EMPMAST.COMPANYCODE,EMPMAST.DIVISIONCODE,ATTN.SYSROWID,ASSIGN.YEARCODE,ASSIGN.YEARMONTH,EMPMAST.UNITCODE,EMPMAST.CATEGORYCODE,EMPMAST.GRADECODE,EMPMAST.WORKERSERIAL,EMPMAST.TOKENNO,EMPMAST.EMPLOYEENAME,EMPMAST.DEPARTMENTCODE,DEPT.DEPARTMENTDESC,CASE WHEN TO_NUMBER(TO_CHAR(EMPMAST.DATEOFJOIN,'YYYYMM'))=TO_NUMBER('202004') THEN (LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')) - EMPMAST.DATEOFJOIN)+1 ELSE TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')),'DD')) END TOTALDAYS,DECODE(NVL(C.CALCULATIONDAYS,0),0,TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')),'DD')),C.CALCULATIONDAYS)  CALCULATIONFACTORDAYS,NVL(ATTN.PRESENTDAYS,NVL(ATTN.SALARYDAYS,CASE WHEN TO_NUMBER(TO_CHAR(EMPMAST.DATEOFJOIN,'YYYYMM'))=TO_NUMBER('202004') THEN (LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')) - EMPMAST.DATEOFJOIN)+1 ELSE DECODE(NVL(C.CALCULATIONDAYS,0),0,TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')),'DD')),C.CALCULATIONDAYS) END  - CASE WHEN ATTN.WITHOUTPAYDAYS IS NULL THEN 0 ELSE NVL(ATTN.WITHOUTPAYDAYS,0) END ) - (NVL(L_A.SL,0) + NVL(L_A.PL,0)) - NVL(ATTN.HOLIDAYS,fn_RtnNoOfApplicableHolidays('BJ0056', '0001', '202004','10','A',EMPMAST.WORKERSERIAL))) AS PRESENTDAYS,NVL(ATTN.SALARYDAYS,CASE WHEN TO_NUMBER(TO_CHAR(EMPMAST.DATEOFJOIN,'YYYYMM'))=TO_NUMBER('202004') THEN (LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')) - EMPMAST.DATEOFJOIN)+1 ELSE DECODE(NVL(DECODE(NVL(C.CALCULATIONDAYS,0),0,TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')),'DD')),C.CALCULATIONDAYS) ,0),0,TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')),'DD')),DECODE(NVL(C.CALCULATIONDAYS,0),0,TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')),'DD')),C.CALCULATIONDAYS) ) END - CASE WHEN ATTN.WITHOUTPAYDAYS IS NULL THEN 0 ELSE NVL(ATTN.WITHOUTPAYDAYS,0) END )  SALARYDAYS,NVL(ATTN.HOLIDAYS,fn_RtnNoOfApplicableHolidays('BJ0056', '0001', '202004','10','A',EMPMAST.WORKERSERIAL)) HOLIDAYS,L.LV_ENCASH_DAYS,ATTN.WITHOUTPAYDAYS,L_A.PL,L_A.SL 
  FROM PISEMPLOYEEMASTER EMPMAST, PISDEPARTMENTMASTER DEPT, PISCATEGORYMASTER C, 
       ( 
        SELECT * 
          FROM PISCOMPONENTASSIGNMENT 
         WHERE COMPANYCODE='BJ0056' 
           AND DIVISIONCODE='0001' 
           AND TRANSACTIONTYPE='ATTENDANCE' 
           AND WORKERSERIAL||YEARMONTH IN ( 
                                            SELECT WORKERSERIAL||MAX(YEARMONTH) FROM PISCOMPONENTASSIGNMENT 
                                             WHERE COMPANYCODE='BJ0056' AND DIVISIONCODE='0001' 
                                               AND TO_NUMBER(YEARMONTH)=TO_NUMBER('202004') 
                                               AND TRANSACTIONTYPE='ATTENDANCE' 
                                            GROUP BY WORKERSERIAL 
                                          ) 
       ) ASSIGN, PISMONTHATTENDANCE ATTN, 
       ( 
         SELECT WORKERSERIAL, TOKENNO, SUM(LEAVEDAYS) LV_ENCASH_DAYS 
           FROM PISLEAVEAPPLICATION 
          WHERE COMPANYCODE='BJ0056'  
           AND DIVISIONCODE='0001' 
           AND NVL(LEAVEENCASHED,'N')='Y' 
           AND TO_NUMBER(TO_CHAR(LEAVEDATE,'YYYYMM'))=TO_NUMBER('202004') 
         GROUP BY WORKERSERIAL, TOKENNO 
       ) L,
        ( 
          SELECT A.WORKERSERIAL,
         SUM(DECODE(A.LEAVECODE,'PL',A.LEAVEDAYS,0))PL,MAX(DECODE(A.LEAVECODE,'PL',M.WITHOUTPAYLEAVE,'N'))PL_LWP,SUM(DECODE(A.LEAVECODE,'SL',A.LEAVEDAYS,0))SL,MAX(DECODE(A.LEAVECODE,'SL',M.WITHOUTPAYLEAVE,'N'))SL_LWP,TOKENNO
            FROM PISLEAVEAPPLICATION A, PISLEAVEMASTER M
           WHERE A.COMPANYCODE='BJ0056'  
            AND A.DIVISIONCODE='0001' 
            AND A.LEAVESANCTIONEDON IS NOT NULL
            AND TO_NUMBER(TO_CHAR(A.LEAVEDATE,'YYYYMM'))=TO_NUMBER('202004') 
            AND A.COMPANYCODE=M.COMPANYCODE
            AND A.DIVISIONCODE=M.DIVISIONCODE
            AND A.LEAVECODE=M.LEAVECODE
           AND NVL(LEAVEENCASHED,'N')<>'Y' 
          GROUP BY WORKERSERIAL, TOKENNO 
        ) L_A
 WHERE EMPMAST.COMPANYCODE=DEPT.COMPANYCODE 
   AND EMPMAST.DIVISIONCODE=DEPT.DIVISIONCODE 
   AND EMPMAST.DEPARTMENTCODE=DEPT.DEPARTMENTCODE 
   AND EMPMAST.COMPANYCODE=ASSIGN.COMPANYCODE(+) 
   AND EMPMAST.DIVISIONCODE=ASSIGN.DIVISIONCODE(+) 
   AND EMPMAST.TOKENNO=ASSIGN.TOKENNO(+) 
   AND EMPMAST.WORKERSERIAL=ASSIGN.WORKERSERIAL(+) 
   AND EMPMAST.TOKENNO=L.TOKENNO(+) 
   AND EMPMAST.WORKERSERIAL=L.WORKERSERIAL(+) 
   AND EMPMAST.COMPANYCODE=ATTN.COMPANYCODE(+) 
   AND EMPMAST.DIVISIONCODE=ATTN.DIVISIONCODE(+) 
   AND EMPMAST.TOKENNO=ATTN.TOKENNO(+)  
   AND EMPMAST.WORKERSERIAL=ATTN.WORKERSERIAL(+) 
   AND ATTN.YEARMONTH(+)='202004' 
   AND EMPMAST.COMPANYCODE='BJ0056' 
   AND EMPMAST.DIVISIONCODE='0001' 
   AND EMPMAST.COMPANYCODE=C.COMPANYCODE(+) 
   AND EMPMAST.DIVISIONCODE=C.DIVISIONCODE(+) 
   AND EMPMAST.CATEGORYCODE=C.CATEGORYCODE(+)  
   AND EMPMAST.TOKENNO=L_A.TOKENNO(+)  
   AND EMPMAST.WORKERSERIAL=L_A.WORKERSERIAL(+)   
   AND EMPMAST.UNITCODE='01' 
   AND EMPMAST.CATEGORYCODE='10' 
   AND EMPMAST.GRADECODE='A' 
   AND TO_NUMBER(TO_CHAR(EMPMAST.DATEOFJOIN,'YYYYMM'))<=TO_NUMBER('202004') 
   AND TO_NUMBER(NVL(TO_CHAR(EMPMAST.EXTENDEDRETIREDATE,'YYYYMM'),NVL(TO_CHAR(EMPMAST.STATUSDATE,'YYYYMM'),'202004')))>=TO_NUMBER('202004') 
   AND EMPMAST.EMPLOYEESTATUS = 'ACTIVE'   
   
   
   
SELECT * FROM PISLEAVEAPPLICATION

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='PISLEAVEAPPLICATION'

 SELECT A.WORKERSERIAL,
         SUM(DECODE(A.LEAVECODE,'PL',A.LEAVEDAYS,0))PL,MAX(DECODE(A.LEAVECODE,'PL',M.WITHOUTPAYLEAVE,'N'))PL_LWP,SUM(DECODE(A.LEAVECODE,'SL',A.LEAVEDAYS,0))SL,MAX(DECODE(A.LEAVECODE,'SL',M.WITHOUTPAYLEAVE,'N'))SL_LWP,TOKENNO
            FROM PISLEAVEAPPLICATION A, PISLEAVEMASTER M
           WHERE A.COMPANYCODE='BJ0056'  
            AND A.DIVISIONCODE='0001' 
            AND A.LEAVESANCTIONEDON IS NOT NULL
            AND TO_NUMBER(TO_CHAR(A.LEAVEDATE,'YYYYMM'))=TO_NUMBER('202004') 
            AND A.COMPANYCODE=M.COMPANYCODE
            AND A.DIVISIONCODE=M.DIVISIONCODE
            AND A.LEAVECODE=M.LEAVECODE
--           AND NVL(LEAVEENCASHED,'N')<>'Y' 
          GROUP BY WORKERSERIAL, TOKENNO 
          
          
          
		  
		  
---------------------------------------------------------------------------------------------

SELECT MAXIMUMPENSIONGROSS, PENSION_PERCENTAGE, ESI_C_PERCENT 
    INTO lv_MaxPensionGrossAmt, lv_PensionPercentage, lv_ESI_C_Percentage
    FROM PISALLPARAMETER
    WHERE COMPANYCODE = P_COMPCODE AND DIVISIONCODE = P_DIVCODE;
	
---------------------------------------------------------------------------------------------

select * from dynamicwebpage
where menucode='01070206'

select * from userwise_component

pgPISLeaveApplicationEntryWithGridDet_Common





SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%MONTH%')
and PROJECTNAME='PIS'
AND ACTIVE ='Y'


SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%LEAVE%')
and PROJECTNAME='PIS'
AND ACTIVE ='Y'




UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Transaction/pgPISLeaveApplicationEntryWithGridDet_Common.aspx'
WHERE MENUCODE='0107020402'


UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Transaction/pgPISMonthAttendanceWithLeave.aspx'
WHERE MENUCODE='01070202'




UPDATE MENUMASTER_RND SET
MENUTAG1 = 'EXTRAINFO'
WHERE MENUCODE='01070202'

EXTRAINFO

SELECT * FROM
PISLEAVEENTITLEMENT

00794

01171

DELETE FROM
PISLEAVEENTITLEMENT

DELETE FROM PISLEAVEAPPLICATION

SELECT * FROM PISLEAVEAPPLICATION


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='PISLEAVEAPPLICATION'

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10008'

GBL_PISLEAVEAPPLICATION

EXEC PROC_CREATE_GBL_TMP_TABLES(10008,0)

 B/LVD/21/00001 DATED : 24/06/2020
 
 B/LVD/21/00002 DATED : 24/06/2020
 
 
 
 SELECT * FROM MENUMASTER_RND
 WHERE UPPER(MENUDESC) LIKE UPPER('%LEAVE%')
 
 
 PIS/PAGES/Transaction/pgPISLeaveApplicationEntry.aspx
 
 0107020403+
 
 
 

UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Transaction/pgPISLeaveApplicationEntryWithGridDet_Common.aspx'
WHERE MENUCODE='0107020403'


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='PISEMPLOYEEMASTER'

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10014'
AND SYS_COLUMNNAME IN ('SUPERANUATIONNUMBER','SUPERANUATIONDATE','CONVEYANCE','RELIGION','PRANNUMBER','GRATUITYNUMBER','FREEUNITELECTRICITY')

SUPERANUATIONNUMBER, SUPERANUATIONDATE, CONVEYANCE, RELIGION, PRANNUMBER, GRATUITYNUMBER, FREEUNITELECTRICITY

EXEC PROC_CREATE_GBL_TMP_TABLES(10014,0)




Insert into PISALLPARAMETER
   (COMPANYCODE, DIVISIONCODE, YEARMONTH, ROUNDOFFRS, PAYMENTROUNDTYPE, 
    SUPERANNUATIONAGEMALE, SUPERANNUATIONAGEFEMALE, MINIMUMSALARYPAYABLE, ESIQUALIFIEDAMOUNT, BANKADVICETO, 
    CUMPFMONTHBETWEEN, PF_E_PERCENTAGE, ESI_E_PERCENT, ESI_C_PERCENT, ESIDEDUCTIONCHECKMONTH, 
    LWFDEDUCTIONMONTH, LOANAMOUNTROUNDOFF, LOANDEDUCTAPPLICABLEWORKDAYS, LOANDEDUCTAPPLICABLECOMPNENT, BONUSPERCENTAGE, 
    BONUSGROSSLIMIT, BONUSAMOUNTLIMIT, BONUSAMOUNTROUNDOFF, NEGATIVELEAVEALLOWED, MAXIMUMPENSIONGROSS, 
    PENSION_PERCENTAGE)
 Values
   ('BJ0056', '0001', '202004', 1, 'BANK', 
    58, 55, 1, 21000, 'XX', 
    '02-03', 10, 1.75, 4.75, '04-10', 
    '06-12', 1, 0, NULL, 20, 
    21000, 7000, 10, 'NO', 15000, 
    8.33);
COMMIT;



---------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
AMBOOTIA ABSENT STATEMENT NOT WORKING
---------------------------------------------------------------------------------------------
DROP TABLE GTT_ABSENTSTATEMENT CASCADE CONSTRAINTS;

CREATE GLOBAL TEMPORARY TABLE GTT_ABSENTSTATEMENT
(
  TOKENNO       VARCHAR2(20 BYTE),
  EMPLOYEENAME  VARCHAR2(500 BYTE),
  PERIOD        VARCHAR2(100 BYTE),
  ABSENT        NUMBER(10,2),
  COMPANYNAME   VARCHAR2(100 BYTE),
  DIVISIONNAME  VARCHAR2(100 BYTE),
  FROMDATE      DATE,
  TODATE        DATE,
  EX1           VARCHAR2(1000 BYTE),
  EX2           VARCHAR2(1000 BYTE),
  EX3           NUMBER(10,2),
  EX4           NUMBER(10,2),
  EX5           VARCHAR2(100 BYTE),
  EX6           VARCHAR2(100 BYTE)
)
ON COMMIT PRESERVE ROWS
NOCACHE;

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
Debasis Dutta call me 

1. In Flexi Division (003) Month 
2. Add ESI Applicable field default value 'Y'

>>>>>>> f7fd4c5a259a5e41cf81b1d3efca6caeddb09ea3
---------------------------------------------------------------------------------------------

SELECT * FROM USERWISE_COMPONENT


ALTER TABLE USERWISE_COMPONENT
ADD TRANSACTIONTYPE VARCHAR2(50)

SELECT * FROM DIVISIONMASTER

INSERT INTO USERWISE_COMPONENT(
COMPANYCODE,DIVISIONCODE,ACCESS_USRNAME,COMPONENTCODE
)
VALUES
(
    'BJ0056','0001','SWT','DA'
)


EXEC PROC_CREATE_SYSTFMAP('')

FN_USERWISE_DATA_ACCESS

USERWISE_DATA_ACCESS

CREATE TABLE USERWISE_DATA_ACCESS
(
  COMPANYCODE    VARCHAR2(10 BYTE),
  DIVISIONCODE   VARCHAR2(10 BYTE),
  MENUCODE       VARCHAR2(50 BYTE),
  LOGINID        VARCHAR2(10 BYTE),
  KEYFIELD       VARCHAR2(30 BYTE),
  KEYFIELDVALUE  VARCHAR2(100 BYTE),
  USERNAME       VARCHAR2(50 BYTE),
  LASTMODIFIED   DATE                           DEFAULT SYSDATE,
  SYSROWID       VARCHAR2(50 BYTE)
)


SELECT WM_CONCAT(''''||COMPONENTCODE||'''') FROM USERWISE_COMPONENT WHERE ACCESS_USRNAME='SWT'


SELECT * FROM USERWISE_COMPONENT


SELECT 'Y' SELECTED,COMPONENTCODE FROM
(
    SELECT * FROM PISCOMPONENTMASTER
    WHERE COMPANYCODE='BJ0056'
    AND DIVISIONCODE='0001'
)



SELECT USERNAME FROM LOGIN

SELECT * FROM DYNAMICWEBPAGE



USERWISE_COMPONENT

delete from sys_tfmap
where SYS_TABLE_SEQUENCIER = 15013


EXEC PROC_CREATE_SYSTFMAP('USERWISE_COMPONENT', 'COMPANYCODE, DIVISIONCODE, ACCESS_USRNAME')

SELECT * FROM SYS_TFMAP WHERE  SYS_TABLE_SEQUENCIER = 15013


EXEC PROC_CREATE_GBL_TMP_TABLES(15013,0)


---------------------------------------------------------------------------------------------

SET DEFINE OFF;
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070205', 'ddlDemo', 'DropDownList', 'width:100px;', '100', 
    NULL, 2, 2, 2, NULL, 
    NULL, NULL, 'SELECT DISTINCT USERNAME FROM LOGIN', 'alert($(''[ID*=ddlDemo]'').val());', NULL, 
    NULL, NULL, NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070205', 'txtDemo', 'TextBox', 'width:100px;', '100', 
    NULL, 1, 2, 1, NULL, 
    NULL, NULL, NULL, NULL, NULL, 
    NULL, 'alert($(''[ID*=txtDemo]'').val());', NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070205', 'lblDemo', 'Label', NULL, '120', 
    NULL, 1, 1, 1, NULL, 
    'Token No', NULL, NULL, NULL, NULL, 
    NULL, NULL, NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070205', 'txtDemo1', 'TextBox', 'width:200px;background-color="#FFCCCC";', '200', 
    NULL, 1, 3, 1, NULL, 
    NULL, NULL, NULL, NULL, NULL, 
    NULL, NULL, 3);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070205', 'lblDemo1', 'Label', NULL, '120', 
    NULL, 2, 1, 1, NULL, 
    'User Name', NULL, NULL, NULL, NULL, 
    NULL, NULL, NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070205', 'btnDemo', 'Button', 'width:100px; ', '200', 
    NULL, 2, 3, 1, NULL, 
    'Get Data', NULL, NULL, NULL, 'FetchGridData();return false;', 
    NULL, NULL, NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070205', 'dataTable', 'Div', 'overflow: auto; border: 1px solid olive; width: 500px; height: 300px;', NULL, 
    NULL, 3, 1, 1, NULL, 
    NULL, NULL, NULL, NULL, 'alert($(''[ID*=txtDemo]'').val());', 
    NULL, NULL, 5);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070205', 'chkDemo', 'CheckBox', NULL, '200', 
    NULL, 2, 5, 1, NULL, 
    'Check Box', NULL, NULL, 'OnChange(this);'||CHR(13)||CHR(10)||'', 'FetchGridData();return false;', 
    NULL, NULL, NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070205', 'lblSelectAll', 'Label', NULL, '200', 
    NULL, 2, 4, 1, NULL, 
    'Select All', NULL, NULL, NULL, NULL, 
    NULL, NULL, NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070206', 'lblUserName', 'Label', NULL, '120', 
    NULL, 1, 1, 1, NULL, 
    'User Name', NULL, NULL, NULL, NULL, 
    NULL, NULL, NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070206', 'ddlUserName', 'DropDownList', 'width:100px;', '100', 
    NULL, 1, 2, 2, NULL, 
    NULL, NULL, 'SELECT DISTINCT USERNAME FROM LOGIN', NULL, NULL, 
    NULL, NULL, NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070206', 'btnGetData', 'Button', 'width:100px; ', '200', 
    NULL, 1, 3, 3, NULL, 
    'Get Data', NULL, NULL, NULL, 'FetchGridData();return false;', 
    NULL, NULL, NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070206', 'lblSelectAll', 'Label', NULL, '200', 
    NULL, 3, 1, 1, NULL, 
    'Select All', NULL, NULL, NULL, NULL, 
    NULL, NULL, NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070206', 'chkDemo', 'CheckBox', NULL, '200', 
    NULL, 3, 2, 4, NULL, 
    'Check Box', NULL, NULL, 'OnChange(this);', NULL, 
    NULL, NULL, NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070206', 'dataTable', 'Div', 'overflow: auto; border: 1px solid olive; width: 500px; height: 300px;', NULL, 
    NULL, 4, 1, 1, NULL, 
    NULL, NULL, NULL, NULL, NULL, 
    NULL, NULL, 3);
COMMIT;

---------------------------------------------------------------------------------------------
DROP TABLE BIRLANEW.DYNAMICWEBPAGE CASCADE CONSTRAINTS;

CREATE TABLE BIRLANEW.DYNAMICWEBPAGE
(
  MENUCODE       VARCHAR2(30 BYTE),
  CONTROLID      VARCHAR2(100 BYTE),
  CONTROLTYPE    VARCHAR2(50 BYTE),
  PROPS          VARCHAR2(2000 BYTE),
  CLASSNAME      VARCHAR2(200 BYTE),
  WIDTH          VARCHAR2(10 BYTE),
  HEIGHT         VARCHAR2(10 BYTE),
  COLSPAN        NUMBER(10),
  ROWINDEX       NUMBER(10),
  COLINDEX       NUMBER(10),
  TABINDEX       NUMBER(10),
  PAGESRC        VARCHAR2(300 BYTE),
  TEXTCAPTION    VARCHAR2(2000 BYTE),
  READONLY       VARCHAR2(2000 BYTE),
  DEFAULTVALUE   VARCHAR2(2000 BYTE),
  ONCHANGE       VARCHAR2(2000 BYTE),
  ONCLICK        VARCHAR2(2000 BYTE),
  ONBLUR         VARCHAR2(2000 BYTE),
  SEARCHKEYDOWN  VARCHAR2(2000 BYTE)
)

---------------------------------------------------------------------------------------------

DROP TABLE ASIANTEA.GTT_PFFORM5_RESULT CASCADE CONSTRAINTS;

CREATE TABLE ASIANTEA.GTT_PFFORM5_RESULT
(
  COMPANYCODE          VARCHAR2(10 BYTE),
  DIVISIONCODE         VARCHAR2(10 BYTE),
  PFREGNO              VARCHAR2(10 BYTE),
  TOKENNO              VARCHAR2(10 BYTE),
  WORKERSERIAL              VARCHAR2(10 BYTE),
  EMPLOYEENAME         VARCHAR2(100 BYTE),
  CATEGORYCODE              VARCHAR2(10 BYTE),
  PFNO                 VARCHAR2(30 BYTE),
  PREVOPENNING         NUMBER,
  CREDIT_BAL_INCOMING  NUMBER,
  CONTRIBUTION         NUMBER,
  INTEREST             NUMBER,
  REFUND_ADV           NUMBER,
  ADVANCEMADE          NUMBER,
  BAL_CARRIED_OVER     NUMBER,
  SETTLEMENTS          NUMBER,
  CREDIT_BAL_OUTGOING  NUMBER,
  LAPSED_CONTRIBUTION  NUMBER,
  BAL_CARRIED_FORWARD  NUMBER
)

---------------------------------------------------------------------------------------------

DROP TABLE ASIANTEA.GPSFORM5TRANSACTION CASCADE CONSTRAINTS;

CREATE TABLE GPSFORM5TRANSACTION
(
  COMPANYCODE          VARCHAR2(10 BYTE),
  DIVISIONCODE         VARCHAR2(10 BYTE),
  YEARCODE             VARCHAR2(10 BYTE),
  PFREGNO              VARCHAR2(10 BYTE),
  CATEGORYCODE         VARCHAR2(10 BYTE),
  TOKENNO         VARCHAR2(20 BYTE),
  WORKERSERIAL         VARCHAR2(20 BYTE),
  EMPLOYEENAME         VARCHAR2(100 BYTE),
  PFCODE               VARCHAR2(10 BYTE),
  PREVOPENNING         NUMBER(15,2)             DEFAULT 0,
  CREDIT_BAL_INCOMING  NUMBER(15,2)             DEFAULT 0,
  CONTRIBUTION         NUMBER(15,2)             DEFAULT 0,
  INTEREST             NUMBER(15,2)             DEFAULT 0,
  REFUND_ADV           NUMBER(15,2)             DEFAULT 0,
  ADVANCEMADE          NUMBER(15,2)             DEFAULT 0,
  BAL_CARRIED_OVER     NUMBER(15,2)             DEFAULT 0,
  SETTLEMENTS          NUMBER(15,2)             DEFAULT 0,
  CREDIT_BAL_OUTGOING  NUMBER(15,2)             DEFAULT 0,
  LAPSED_CONTRIBUTION  NUMBER(15,2)             DEFAULT 0,
  BAL_CARRIED_FORWARD  NUMBER(15,2)             DEFAULT 0,
  REMARKS              VARCHAR2(100 BYTE),
  TRANDATE             DATE,
  ENTEREDBY            VARCHAR2(25 BYTE),
  ENTEREDON            DATE,
  PFFINSTARTDATE       DATE,
  ACTIVE               VARCHAR2(10 BYTE),
  SETTLEMENTTYPE       VARCHAR2(25 BYTE),
  LASTPROCESSDATE      DATE,
  DATEOFSETTLEMENT     DATE,
  VPFAMOUNT            NUMBER(15,2)             DEFAULT 0,
  LOCKED               VARCHAR2(1 BYTE)         DEFAULT 'N',
  MINLAPSEYEAR         NUMBER(5)                DEFAULT 0,
  MINLAPSEAMOUNT       NUMBER(15,2)             DEFAULT 0,
  SYSROWID             VARCHAR2(50 BYTE),
  WAGEPERIODFROM       DATE,
  WAGEPERIODTO         DATE,
  SALARYPERIODFROM     DATE,
  SALARYPERIODTO       DATE,
  LASTMODIFIED       DATE DEFAULT SYSDATE
)


---------------------------------------------------------------------------------------------


SELECT LEVEL SEQ_INDX, trim(regexp_substr('Err1, Err2, Err3', '[^,]+', 1, LEVEL)) str_2_tab
  FROM dual
CONNECT BY LEVEL <= regexp_count('Err1, Err2, Err3', ',')+1


---------------------------------------------------------------------------------------------

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER=''

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='GPSFORM5TRANSACTION'


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='GPSEMPLOYEEMAST'

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_TEMP=''

SELECT * FROM COLS 
WHERE TABLE_NAME='GPSFORM5TRANSACTION'


SELECT 10009 SYS_TABLE_SEQUENCIER,TABLE_NAME SYS_TABLENAME_ACTUAL,'GBL_'||TABLE_NAME SYS_TABLENAME_TEMP,COLUMN_NAME SYS_COLUMNNAME, 
0 SYS_COLUMN_SEQUENCE,DATA_TYPE SYS_DATATYPE,DATA_LENGTH SYS_COLUMN_LENGTH,DATA_PRECISION SYS_COLUMN_PRECISION,'N' SYS_KEYCOLUMN, 
COLUMN_NAME SYS_MAPFIELD,SYSDATE SYS_TIMESTAMP,'Y' SYS_USEMAP,NULL SYS_DEFAULT,NULL TDSCODE FROM
(
SELECT TABLE_NAME,COLUMN_NAME,DATA_TYPE,DATA_LENGTH,DATA_PRECISION  FROM COLS 
WHERE TABLE_NAME='GPSFORM5TRANSACTION'
) A

SELECT MAX(SYS_TABLE_SEQUENCIER)+1 FROM SYS_TFMAP

 SELECT 20279 SYS_TABLE_SEQUENCIER,TABLE_NAME SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP,COLUMN_NAME SYS_COLUMNNAME, 
        NVL(B.SEQ_INDX,0) SYS_COLUMN_SEQUENCE,DATA_TYPE SYS_DATATYPE,DATA_LENGTH SYS_COLUMN_LENGTH,DATA_PRECISION SYS_COLUMN_PRECISION,NVL(B.KEYCOLUMN, 'N') SYS_KEYCOLUMN, 
        COLUMN_NAME SYS_MAPFIELD,SYSDATE SYS_TIMESTAMP,'Y' SYS_USEMAP,NULL SYS_DEFAULT,NULL TDSCODE FROM
        (
            SELECT TABLE_NAME,'GBL_'||TABLE_NAME SYS_TABLENAME_TEMP,COLUMN_NAME,DATA_TYPE,DECODE(DATA_TYPE,'NUMBER',DATA_PRECISION,DATA_LENGTH) DATA_LENGTH,DECODE(DATA_TYPE,'NUMBER',DATA_SCALE,DATA_PRECISION) DATA_PRECISION  FROM COLS 
            WHERE TABLE_NAME='GPSFORM5TRANSACTION'
            UNION ALL
            SELECT 'NONE' , 'GBL_GPSFORM5TRANSACTION', 'OPERATIONMODE' COLUMN_NAME,'VARCHAR2' DATA_TYPE,1 DATA_LENGTH,NULL DATA_PRECISION  FROM DUAL 
        ) A,
        (
            SELECT LEVEL SEQ_INDX,'Y' KEYCOLUMN, trim(regexp_substr('COMPANYCODE, DIVISIONCODE,PFREGNO, CATEGORYCODE, EMPLOYEECODE', '[^,]+', 1, LEVEL)) COLNAME
            FROM dual
            CONNECT BY LEVEL <= regexp_count('COMPANYCODE, DIVISIONCODE,PFREGNO, CATEGORYCODE, EMPLOYEECODE', ',')+1
        )B
        WHERE A.COLUMN_NAME=B.COLNAME(+)
        
        SELECT LEVEL SEQ_INDX,'Y' KEYCOLUMN, trim(regexp_substr('COMPANYCODE, DIVISIONCODE, YEARCODE, PFREGNO, CATEGORYCODE, EMPLOYEECODE', '[^,]+', 1, LEVEL)) COLNAME
        FROM dual
        CONNECT BY LEVEL <= regexp_count('COMPANYCODE, DIVISIONCODE, YEARCODE, PFREGNO, CATEGORYCODE, EMPLOYEECODE', ',')+1
        
        
EXEC PROC_CREATE_SYSTFMAP('GPSFORM5TRANSACTION','COMPANYCODE, DIVISIONCODE, YEARCODE, PFREGNO, CATEGORYCODE, TOKENNO') 

DELETE FROM SYS_TFMAP_TEST

WHERE SYS_TABLE_SEQUENCIER = 20279


DELETE FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER = 20279

DELETE FROM SYS_TFMAP
WHERE SYS_TABLENAME_TEMP = 'GBL_GPSFORM5TRANSACTION'


SELECT * FROM SYS_TFMAP WHERE SYS_TABLE_SEQUENCIER = 20279

SYS_TABLE_SEQUENCIER : 20279


EXEC PROC_CREATE_GBL_TMP_TABLES(20279,0)

SELECT * FROM SYS_TFMAP WHERE  SYS_TABLE_SEQUENCIER = 20279

EXEC PROC_CREATE_GBL_TMP_TABLES(20279,0)


---------------------------------------------------------------------------------------------


CREATE TABLE GTT_PFFORM5_RESULT AS
SELECT COMPANYCODE, DIVISIONCODE,PFREGNO,  TOKENNO,EMPLOYEENAME,PFNO,
0 PREVOPENNING,0 CREDIT_BAL_INCOMING,0 CONTRIBUTION,0 INTEREST,0 REFUND_ADV,0 ADVANCEMADE,0 BAL_CARRIED_OVER, 
0 SETTLEMENTS,0 CREDIT_BAL_OUTGOING,0 LAPSED_CONTRIBUTION,0 BAL_CARRIED_FORWARD 
FROM GPSEMPLOYEEMAST

SELECT COMPANYCODE, DIVISIONCODE, TOKENNO,LOAN_PF,PF_E,PF_C,FPF FROM
GPSPAYSHEETDETAILS

SELECT * FROM 
GPSFORM5TRANSACTION

COMPANYCODE, DIVISIONCODE, YEARCODE, PFREGNO, CATEGORYCODE, EMPLOYEECODE, EMPLOYEENAME, PFCODE, 
PREVOPENNING, CREDIT_BAL_INCOMING, CONTRIBUTION, INTEREST, REFUND_ADV, ADVANCEMADE, BAL_CARRIED_OVER, 
SETTLEMENTS, CREDIT_BAL_OUTGOING, LAPSED_CONTRIBUTION, BAL_CARRIED_FORWARD, REMARKS, TRANDATE, 
ENTEREDBY, ENTEREDON, PFFINSTARTDATE, ACTIVE, SETTLEMENTTYPE, LASTPROCESSDATE, DATEOFSETTLEMENT, 
VPFAMOUNT, LOCKED, MINLAPSEYEAR, MINLAPSEAMOUNT, SYSROWID, WAGEPERIODFROM, WAGEPERIODTO, SALARYPERIODFROM, SALARYPERIODTO

SELECT DISTINCT EMPLOYEESTATUS FROM GPSEMPLOYEEMAST

SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT
FROM PFLOANBREAKUP A, GPSCATEGORYMAST B
WHERE A.COMPANYCODE=B.COMPANYCODE
AND A.DIVISIONCODE=B.DIVISIONCODE
AND A.CATEGORYCODE=B.CATEGORYCODE
AND B.CATEGORYTYPE='WORKER'
AND A.COMPANYCODE='DY0080'
AND A.DIVISIONCODE='0002'
AND PAIDON >= TO_DATE('18/05/2020','DD/MM/YYYY')
AND PAIDON <= TO_DATE('24/05/2020','DD/MM/YYYY')
GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO
UNION ALL
SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT
FROM PFLOANBREAKUP A, GPSCATEGORYMAST B
WHERE A.COMPANYCODE=B.COMPANYCODE
AND A.DIVISIONCODE=B.DIVISIONCODE
AND A.CATEGORYCODE=B.CATEGORYCODE
AND B.CATEGORYTYPE<>'WORKER'
AND A.COMPANYCODE='DY0080'
AND A.DIVISIONCODE='0002'
AND PAIDON >= TO_DATE('18/05/2020','DD/MM/YYYY')
AND PAIDON <= TO_DATE('24/05/2020','DD/MM/YYYY')
GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO


SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT 
from PFLOANTRANSACTION A, GPSCATEGORYMAST B
WHERE A.COMPANYCODE=B.COMPANYCODE
AND A.DIVISIONCODE=B.DIVISIONCODE
AND A.CATEGORYCODE=B.CATEGORYCODE
AND B.CATEGORYTYPE='WORKER'
AND A.COMPANYCODE='DY0080'
AND A.DIVISIONCODE='0002'
AND A.LOANDATE >= TO_DATE('18/05/2020','DD/MM/YYYY')
AND A.LOANDATE <= TO_DATE('24/05/2020','DD/MM/YYYY')
GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO
UNION ALL
SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT 
from PFLOANTRANSACTION A, GPSCATEGORYMAST B
WHERE A.COMPANYCODE=B.COMPANYCODE
AND A.DIVISIONCODE=B.DIVISIONCODE
AND A.CATEGORYCODE=B.CATEGORYCODE
AND B.CATEGORYTYPE<>'WORKER'
AND A.COMPANYCODE='DY0080'
AND A.DIVISIONCODE='0002'
AND A.LOANDATE >= TO_DATE('18/05/2020','DD/MM/YYYY')
AND A.LOANDATE <= TO_DATE('24/05/2020','DD/MM/YYYY')
GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO


DELETE FROM 
GPSFORM5TRANSACTION

SELECT * FROM 
GPSFORM5TRANSACTION


SELECT COMPANYCODE, DIVISIONCODE, TOKENNO,CATEGORYCODE, 
SUM(NVL(LOAN_PF,0)) LOAN_PF,SUM(NVL(PF_E,0)) PF_E,SUM(NVL(PF_C,0)) PF_C,SUM(NVL(FPF,0)) FPF 
FROM GPSPAYSHEETDETAILS 
WHERE COMPANYCODE='DY0080'
AND DIVISIONCODE='0002'
AND CATEGORYTYPE = 'WORKER'
AND PERIODFROM >= TO_DATE('18/05/2020','DD/MM/YYYY')
AND PERIODTO <= TO_DATE('24/05/2020','DD/MM/YYYY')
GROUP BY COMPANYCODE,DIVISIONCODE,TOKENNO,CATEGORYCODE
UNION ALL
SELECT COMPANYCODE, DIVISIONCODE, TOKENNO,CATEGORYCODE, 
SUM(NVL(LOAN_PF,0)) LOAN_PF,SUM(NVL(PF_E,0)) PF_E,SUM(NVL(PF_C,0)) PF_C,SUM(NVL(FPF,0)) FPF 
FROM GPSPAYSHEETDETAILS 
WHERE COMPANYCODE='DY0080'
AND DIVISIONCODE='0002'
AND CATEGORYTYPE <> 'WORKER'
AND PERIODFROM >= TO_DATE('18/05/2020','DD/MM/YYYY')
AND PERIODTO <= TO_DATE('24/05/2020','DD/MM/YYYY')
GROUP BY COMPANYCODE,DIVISIONCODE,TOKENNO,CATEGORYCODE


PERIODFROM	PERIODTO
18/05/2020	24/05/2020


SELECT * FROM GPSPAYSHEETDETAILS

SELECT DISTINCT PERIODFROM,PERIODTO FROM GPSPAYSHEETDETAILS
WHERE COMPANYCODE='DY0080'
AND DIVISIONCODE='0002'
AND CATEGORYTYPE = 'WORKER'




SELECT A.COMPANYCODE, A.DIVISIONCODE,A.PFREGNO,  A.TOKENNO,EMPLOYEENAME,PFNO,
0 PREVOPENNING,0 CREDIT_BAL_INCOMING,B.CONTRIBUTION CONTRIBUTION,0 INTEREST,
NVL(D.AMOUNT,0) REFUND_ADV,NVL(C.AMOUNT,0) ADVANCEMADE,0 BAL_CARRIED_OVER, 
0 SETTLEMENTS,0 CREDIT_BAL_OUTGOING,0 LAPSED_CONTRIBUTION,0 BAL_CARRIED_FORWARD 
FROM GPSEMPLOYEEMAST A,
(
    SELECT COMPANYCODE, DIVISIONCODE, TOKENNO,CATEGORYCODE, 
    SUM(NVL(LOAN_PF,0)) LOAN_PF,SUM(NVL(PF_E,0)) PF_E,SUM(NVL(PF_C,0)) PF_C,SUM(NVL(FPF,0)) FPF ,
    (SUM(NVL(PF_E,0)) + SUM(NVL(PF_C,0)) + SUM(NVL(FPF,0))) CONTRIBUTION
    FROM GPSPAYSHEETDETAILS 
    WHERE COMPANYCODE='DY0080'
    AND DIVISIONCODE='0002'
    AND CATEGORYTYPE = 'WORKER'
    AND PERIODFROM >= TO_DATE('18/05/2020','DD/MM/YYYY')
    AND PERIODTO <= TO_DATE('24/05/2020','DD/MM/YYYY')
    GROUP BY COMPANYCODE,DIVISIONCODE,TOKENNO,CATEGORYCODE
    UNION ALL
    SELECT COMPANYCODE, DIVISIONCODE, TOKENNO,CATEGORYCODE, 
    SUM(NVL(LOAN_PF,0)) LOAN_PF,SUM(NVL(PF_E,0)) PF_E,SUM(NVL(PF_C,0)) PF_C,SUM(NVL(FPF,0)) FPF ,
    (SUM(NVL(PF_E,0)) + SUM(NVL(PF_C,0)) + SUM(NVL(FPF,0))) CONTRIBUTION
    FROM GPSPAYSHEETDETAILS 
    WHERE COMPANYCODE='DY0080'
    AND DIVISIONCODE='0002'
    AND CATEGORYTYPE <> 'WORKER'
    AND PERIODFROM >= TO_DATE('01/05/2020','DD/MM/YYYY')
    AND PERIODTO <= TO_DATE('31/05/2020','DD/MM/YYYY')
    GROUP BY COMPANYCODE,DIVISIONCODE,TOKENNO,CATEGORYCODE
) B,
(
    SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT 
    FROM PFLOANTRANSACTION A, GPSCATEGORYMAST B
    WHERE A.COMPANYCODE=B.COMPANYCODE
    AND A.DIVISIONCODE=B.DIVISIONCODE
    AND A.CATEGORYCODE=B.CATEGORYCODE
    AND B.CATEGORYTYPE='WORKER'
    AND A.COMPANYCODE='DY0080'
    AND A.DIVISIONCODE='0002'
    AND A.LOANDATE >= TO_DATE('18/05/2020','DD/MM/YYYY')
    AND A.LOANDATE <= TO_DATE('24/05/2020','DD/MM/YYYY')
    GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO
    UNION ALL
    SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT 
    FROM PFLOANTRANSACTION A, GPSCATEGORYMAST B
    WHERE A.COMPANYCODE=B.COMPANYCODE
    AND A.DIVISIONCODE=B.DIVISIONCODE
    AND A.CATEGORYCODE=B.CATEGORYCODE
    AND B.CATEGORYTYPE<>'WORKER'
    AND A.COMPANYCODE='DY0080'
    AND A.DIVISIONCODE='0002'
    AND A.LOANDATE >= TO_DATE('01/05/2020','DD/MM/YYYY')
    AND A.LOANDATE <= TO_DATE('31/05/2020','DD/MM/YYYY')
    GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO
) C,
(
    SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT
    FROM PFLOANBREAKUP A, GPSCATEGORYMAST B
    WHERE A.COMPANYCODE=B.COMPANYCODE
    AND A.DIVISIONCODE=B.DIVISIONCODE
    AND A.CATEGORYCODE=B.CATEGORYCODE
    AND B.CATEGORYTYPE='WORKER'
    AND A.COMPANYCODE='DY0080'
    AND A.DIVISIONCODE='0002'
    AND PAIDON >= TO_DATE('18/05/2020','DD/MM/YYYY')
    AND PAIDON <= TO_DATE('24/05/2020','DD/MM/YYYY')
    GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO
    UNION ALL
    SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT
    FROM PFLOANBREAKUP A, GPSCATEGORYMAST B
    WHERE A.COMPANYCODE=B.COMPANYCODE
    AND A.DIVISIONCODE=B.DIVISIONCODE
    AND A.CATEGORYCODE=B.CATEGORYCODE
    AND B.CATEGORYTYPE<>'WORKER'
    AND A.COMPANYCODE='DY0080'
    AND A.DIVISIONCODE='0002'
    AND PAIDON >= TO_DATE('01/05/2020','DD/MM/YYYY')
    AND PAIDON <= TO_DATE('31/05/2020','DD/MM/YYYY')
    GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO
) D
WHERE A.COMPANYCODE=B.COMPANYCODE
AND A.DIVISIONCODE=B.DIVISIONCODE
AND A.TOKENNO=B.TOKENNO
AND A.COMPANYCODE=C.COMPANYCODE(+)
AND A.DIVISIONCODE=C.DIVISIONCODE(+)
AND A.TOKENNO=C.TOKENNO(+)
AND A.COMPANYCODE=D.COMPANYCODE(+)
AND A.DIVISIONCODE=D.DIVISIONCODE(+)
AND A.TOKENNO=D.TOKENNO(+)



SELECT COMPANYCODE, DIVISIONCODE, TOKENNO,CATEGORYCODE, 
    SUM(NVL(LOAN_PF,0)) LOAN_PF,SUM(NVL(PF_E,0)) PF_E,SUM(NVL(PF_C,0)) PF_C,SUM(NVL(FPF,0)) FPF ,
    (SUM(NVL(PF_E,0)) + SUM(NVL(PF_C,0)) + SUM(NVL(FPF,0))) CONTRIBUTION
    FROM GPSPAYSHEETDETAILS 
    WHERE COMPANYCODE='DY0080'
    AND DIVISIONCODE='0002'
    AND CATEGORYTYPE = 'WORKER'
    AND PERIODFROM >= TO_DATE('18/05/2020','DD/MM/YYYY')
    AND PERIODTO <= TO_DATE('24/05/2020','DD/MM/YYYY')
    GROUP BY COMPANYCODE,DIVISIONCODE,TOKENNO,CATEGORYCODE
    UNION ALL
    SELECT COMPANYCODE, DIVISIONCODE, TOKENNO,CATEGORYCODE, 
    SUM(NVL(LOAN_PF,0)) LOAN_PF,SUM(NVL(PF_E,0)) PF_E,SUM(NVL(PF_C,0)) PF_C,SUM(NVL(FPF,0)) FPF ,
    (SUM(NVL(PF_E,0)) + SUM(NVL(PF_C,0)) + SUM(NVL(FPF,0))) CONTRIBUTION
    FROM GPSPAYSHEETDETAILS 
    WHERE COMPANYCODE='DY0080'
    AND DIVISIONCODE='0002'
    AND CATEGORYTYPE <> 'WORKER'
    AND PERIODFROM >= TO_DATE('01/05/2020','DD/MM/YYYY')
    AND PERIODTO <= TO_DATE('31/05/2020','DD/MM/YYYY')
    GROUP BY COMPANYCODE,DIVISIONCODE,TOKENNO,CATEGORYCODE
    
    
    
    EXEC PROC_INSERT_PFFORM5('DY0080','0002','2020-2021','C-36','01/05/2020','31/05/2020','01/05/2020','31/05/2020','18/05/2020','24/05/2020')
	
	
---------------------------------------------------------------------------------------------
SELECT A.COMPANYCODE, A.DIVISIONCODE,A.PFREGNO,  A.TOKENNO,EMPLOYEENAME,PFNO,
0 PREVOPENNING,0 CREDIT_BAL_INCOMING,B.CONTRIBUTION CONTRIBUTION,0 INTEREST,
NVL(D.AMOUNT,0) REFUND_ADV,NVL(C.AMOUNT,0) ADVANCEMADE,0 BAL_CARRIED_OVER, 
0 SETTLEMENTS,0 CREDIT_BAL_OUTGOING,0 LAPSED_CONTRIBUTION,0 BAL_CARRIED_FORWARD 
FROM GPSEMPLOYEEMAST A,
(
    SELECT COMPANYCODE, DIVISIONCODE, TOKENNO,CATEGORYCODE, 
    SUM(NVL(LOAN_PF,0)) LOAN_PF,SUM(NVL(PF_E,0)) PF_E,SUM(NVL(PF_C,0)) PF_C,SUM(NVL(FPF,0)) FPF ,
    (SUM(NVL(PF_E,0)) + SUM(NVL(PF_C,0)) + SUM(NVL(FPF,0))) CONTRIBUTION
    FROM GPSPAYSHEETDETAILS 
    WHERE COMPANYCODE='DY0080'
    AND DIVISIONCODE='0002'
    AND CATEGORYTYPE = 'WORKER'
    AND PERIODFROM >= TO_DATE('18/05/2020','DD/MM/YYYY')
    AND PERIODTO <= TO_DATE('24/05/2020','DD/MM/YYYY')
    GROUP BY COMPANYCODE,DIVISIONCODE,TOKENNO,CATEGORYCODE
    UNION ALL
    SELECT COMPANYCODE, DIVISIONCODE, TOKENNO,CATEGORYCODE, 
    SUM(NVL(LOAN_PF,0)) LOAN_PF,SUM(NVL(PF_E,0)) PF_E,SUM(NVL(PF_C,0)) PF_C,SUM(NVL(FPF,0)) FPF ,
    (SUM(NVL(PF_E,0)) + SUM(NVL(PF_C,0)) + SUM(NVL(FPF,0))) CONTRIBUTION
    FROM GPSPAYSHEETDETAILS 
    WHERE COMPANYCODE='DY0080'
    AND DIVISIONCODE='0002'
    AND CATEGORYTYPE <> 'WORKER'
    AND PERIODFROM >= TO_DATE('01/05/2020','DD/MM/YYYY')
    AND PERIODTO <= TO_DATE('31/05/2020','DD/MM/YYYY')
    GROUP BY COMPANYCODE,DIVISIONCODE,TOKENNO,CATEGORYCODE
) B,
(
    SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT 
    FROM PFLOANTRANSACTION A, GPSCATEGORYMAST B
    WHERE A.COMPANYCODE=B.COMPANYCODE
    AND A.DIVISIONCODE=B.DIVISIONCODE
    AND A.CATEGORYCODE=B.CATEGORYCODE
    AND B.CATEGORYTYPE='WORKER'
    AND A.COMPANYCODE='DY0080'
    AND A.DIVISIONCODE='0002'
    AND A.LOANDATE >= TO_DATE('18/05/2020','DD/MM/YYYY')
    AND A.LOANDATE <= TO_DATE('24/05/2020','DD/MM/YYYY')
    GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO
    UNION ALL
    SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT 
    FROM PFLOANTRANSACTION A, GPSCATEGORYMAST B
    WHERE A.COMPANYCODE=B.COMPANYCODE
    AND A.DIVISIONCODE=B.DIVISIONCODE
    AND A.CATEGORYCODE=B.CATEGORYCODE
    AND B.CATEGORYTYPE<>'WORKER'
    AND A.COMPANYCODE='DY0080'
    AND A.DIVISIONCODE='0002'
    AND A.LOANDATE >= TO_DATE('01/05/2020','DD/MM/YYYY')
    AND A.LOANDATE <= TO_DATE('31/05/2020','DD/MM/YYYY')
    GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO
) C,
(
    SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT
    FROM PFLOANBREAKUP A, GPSCATEGORYMAST B
    WHERE A.COMPANYCODE=B.COMPANYCODE
    AND A.DIVISIONCODE=B.DIVISIONCODE
    AND A.CATEGORYCODE=B.CATEGORYCODE
    AND B.CATEGORYTYPE='WORKER'
    AND A.COMPANYCODE='DY0080'
    AND A.DIVISIONCODE='0002'
    AND PAIDON >= TO_DATE('18/05/2020','DD/MM/YYYY')
    AND PAIDON <= TO_DATE('24/05/2020','DD/MM/YYYY')
    GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO
    UNION ALL
    SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT
    FROM PFLOANBREAKUP A, GPSCATEGORYMAST B
    WHERE A.COMPANYCODE=B.COMPANYCODE
    AND A.DIVISIONCODE=B.DIVISIONCODE
    AND A.CATEGORYCODE=B.CATEGORYCODE
    AND B.CATEGORYTYPE<>'WORKER'
    AND A.COMPANYCODE='DY0080'
    AND A.DIVISIONCODE='0002'
    AND PAIDON >= TO_DATE('01/05/2020','DD/MM/YYYY')
    AND PAIDON <= TO_DATE('31/05/2020','DD/MM/YYYY')
    GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO
) D
WHERE A.COMPANYCODE=B.COMPANYCODE
AND A.DIVISIONCODE=B.DIVISIONCODE
AND A.TOKENNO=B.TOKENNO
AND A.COMPANYCODE=C.COMPANYCODE(+)
AND A.DIVISIONCODE=C.DIVISIONCODE(+)
AND A.TOKENNO=C.TOKENNO(+)
AND A.COMPANYCODE=D.COMPANYCODE(+)
AND A.DIVISIONCODE=D.DIVISIONCODE(+)
AND A.TOKENNO=D.TOKENNO(+)
---------------------------------------------------------------------------------------------

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER=''

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='GPSFORM5TRANSACTION'


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='GPSEMPLOYEEMAST'

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_TEMP=''

SELECT * FROM COLS 
WHERE TABLE_NAME='GPSFORM5TRANSACTION'


SELECT 10009 SYS_TABLE_SEQUENCIER,TABLE_NAME SYS_TABLENAME_ACTUAL,'GBL_'||TABLE_NAME SYS_TABLENAME_TEMP,COLUMN_NAME SYS_COLUMNNAME, 
0 SYS_COLUMN_SEQUENCE,DATA_TYPE SYS_DATATYPE,DATA_LENGTH SYS_COLUMN_LENGTH,DATA_PRECISION SYS_COLUMN_PRECISION,'N' SYS_KEYCOLUMN, 
COLUMN_NAME SYS_MAPFIELD,SYSDATE SYS_TIMESTAMP,'Y' SYS_USEMAP,NULL SYS_DEFAULT,NULL TDSCODE FROM
(
SELECT TABLE_NAME,COLUMN_NAME,DATA_TYPE,DATA_LENGTH,DATA_PRECISION  FROM COLS 
WHERE TABLE_NAME='GPSFORM5TRANSACTION'
) A

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

Add fields in Employee Master (PIS) - Religion, Pran No., Gratuity No. Super annuation No. Super Annuation Date.

txtRELIGION
txtPRANNUMBER
txtGRATUITYNUMBER
txtSUPERANUATIONNUMBER
mskSUPERANUATIONDATE

SUPERANUATIONNUMBER, SUPERANUATIONDATE, RELIGION, PRANNUMBER, GRATUITYNUMBER

Note :- Prepare Another Page for Birla (Copy from exsiting page)


---------------------------------------------------------------------------------------------

SELECT * FROM MENUMASTER_RND
WHERE MENUCODE='0107010111'

SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%employee mas%')

SELECT * FROM ROLEDETAILS
WHERE MENUCODE=''

SELECT * FROM REPORTPARAMETERMASTER
WHERE REPORTTAG=''

update MENUMASTER_RND SET
URLSRC='PIS/PAGES/Master/pgEmployeeMast_Birla.aspx'
WHERE MENUCODE='0107010111'


select * from 
pisemployeemaster

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='PISEMPLOYEEMASTER'


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_TEMP='PISEMPLOYEEMASTER'

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10014'



txtRELIGION
txtPRANNUMBER
txtGRATUITYNUMBER
txtSUPERANUATIONNUMBER
mskSUPERANUATIONDATE

 SET DEFINE OFF;
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'RELIGION', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtRELIGION', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
COMMIT;

 SET DEFINE OFF;
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'PRANNUMBER', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtPRANNUMBER', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
COMMIT;


 SET DEFINE OFF;
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'GRATUITYNUMBER', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtGRATUITYNUMBER', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
COMMIT;


 SET DEFINE OFF;
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'SUPERANUATIONNUMBER', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtSUPERANUATIONNUMBER', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
COMMIT;

SET DEFINE OFF;
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'SUPERANUATIONDATE', 0, 
    'DATE', 10, 0, 'N', 'mskSUPERANUATIONDATE', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
COMMIT;



exec proc_create_gbl_tmp_tables(10014,0)
---------------------------------------------------------------------------------------------


--dtVoucherPrint

 Select  COMPANYCODE, DIVISIONCODE, YEARCODE, 
 fn_Generate_VoucherPrefix(A.companycode,A.divisioncode,A.yearcode,A.systemvoucherno) as VOUCHERNO,
 VOUCHERDATE, VOUCHERTYPE, SYSTEMVOUCHERNO, SYSTEMVOUCHERDATE, 
 CASHBANKACCODE, CHEQUENO, CHEQUEDATE, CHEQUEDRAWNON, PARTY, CHEQUEPRINTEDBY, CHEQUEPRINTDATE, 
 REALIZATIONDATE, VOUCHERAMOUNT, NARRATION, AUTOMANUALMARK, REFVOUCHERNO, REFVOUCHERDATE, REFVOUCHERTYPE, 
 REFSYSTEMVOUCHERNO, PREPAREDBY, CHECKEDBY, EDITEDBY, PRINTEDBY, PREPAREDDATE, CHECKEDDATE, EDITEDDATE, 
 PRINTEDDATE, LASTMODIFIED, SYNCHRONIZED, CONTROLVOUCHER, REFMEMORANDUMVOUCHERNO, MODULENAME, DOCUMENTTYPE, 
 INSTRUCTIONNO, MANUALVOUCHERNO, MANUALVOUCHERDATE, VOUCHERPAYMENTRECEIPTTYPE, CHEQUEISSUEDON, SYSROWID, 
 USERNAME, CHEQUEBOOKSLNO, LIABILITYTYPE, VOUCHERNATURE,
 REPLACE(REPLACE(REPLACE(A.NARRATION,CHR(9),' '),CHR(10),' '),CHR(13),' ') PRINTNARRATION, DECODE(A.VOUCHERTYPE,'PURCHASE BILL','LIABILITY BILL',A.VOUCHERTYPE) VOUCHERTYPE2, CASE WHEN A.VOUCHERTYPE ='PAYMENTS' THEN 'PAID TO : '||A.PARTY ELSE CASE WHEN A.VOUCHERTYPE ='RECEIPTS' THEN 'RECEIVED FROM : '||A.PARTY ELSE '' END END PAIDTORECEIVEDFROM  
 From AcVoucher A 
 Where A.CompanyCode = '0001'  
   And A.DivisionCode = '002' 
   And A.YearCode = '2020-2021' 
   And A.SystemVoucherNo IN ('BA0001/002-RVB/2021/00000008') 
   
   
--   strAddress
SELECT CASE WHEN INSTR(D.DIVISIONNAME,'MILL')>0 THEN D.DIVISIONADDRESS ||' '|| D.DIVISIONADDRESS1 ELSE D.DIVISIONADDRESS ||' '|| D.DIVISIONADDRESS1 END ADDRESS 
  FROM COMPANYMAST C, DIVISIONMASTER D 
 WHERE C.COMPANYCODE='0001' 
   AND C.COMPANYCODE=D.COMPANYCODE 
   AND DIVISIONCODE='002' 
   
   
   
Select B.ACHEAD || CASE WHEN A.divisioncode <> A.DIVISIONCODEFOR THEN ' [UNIT : ' || d.divisionname || ']' else '' end as ACHEAD, A.* 
  From ACVOUCHERDETAILS_ENTRY A, ACACLEDGER B, DIVISIONMASTER D 
 Where A.CompanyCode = B.CompanyCode 
   And A.ACCODEFOR = B.AcCode 
   And A.CompanyCode = D.CompanyCode 
   And A.divisioncodefor = d.divisioncode 
   And A.CompanyCode = '0001' 
   And A.DivisionCode = '002' 
   And A.YearCode = '2020-2021' 
   And A.SystemVoucherNo IN ('BA0001/002-RVB/2021/00000008') 
 Order By A.SystemVoucherNo,A.SERIALNO  
 
 
 
Select a.*,  
 case when a.TRANSACTIONTYPE='ADVANCE PAYMENT REVERSAL' then 'ADV-PYMT-REV' 
        when a.TRANSACTIONTYPE='ADVANCE PAYMENT ADJUSTMENT' then 'ADV-PYMT-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL ADJUSTMENT' then 'LIB-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL ADJUSTMENT REVERSAL' then 'LIB-ADJ-REV'
        when a.TRANSACTIONTYPE='PURCHASE BILL' then 'LIB'
        when a.TRANSACTIONTYPE='SALES BILL' then 'SB'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT ADJUSTMENT' then 'ADV-RCPT-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL REVERSAL' then 'LIB-REV'
        when a.TRANSACTIONTYPE='SALES BILL ADJUSTMENT ADJUSTMENT' then 'SB-ADJ'
        when a.TRANSACTIONTYPE='ADVANCE PAYMENT' then 'ADV-PYMT'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT' then 'ADV-RCPT'
        when a.TRANSACTIONTYPE='SALES BILL ADJUSTMENT' then 'SB-ADJ'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT REVERSAL' then 'ADV-RCPT-REV'
        else 'REF'
       end reftranstype 
       From ACBILLDETAILS_ENTRY a 
 Where a.CompanyCode = '0001'  
   And a.DivisionCode = '002' 
   And a.YearCode = '2020-2021' 
   And a.SystemVoucherNo IN ('BA0001/002-RVB/2021/00000008') 
 Order By SYSROWID  
 
 
Select B.COSTCENTRENAME, A.* From AcCostCentreDetails A, ACCOSTCENTREMAST B 
 Where A.CompanyCode = '0001'  
   And A.DivisionCode = '002' 
   And A.YearCode = '2020-2021' 
   And A.SystemVoucherNo IN ('BA0001/002-RVB/2021/00000008') 
   And A.CompanyCode = B.CompanyCode 
   And A.DIVISIONCODE = B.LOCATIONCODE  
   And A.CostCentreCode = B.CostCentreCode  
 Order By A.SystemVoucherNo 

---------------------------------------------------------------------------------------------
--    VOUCHER PRINTING


Select a.*,  
 case when a.TRANSACTIONTYPE='ADVANCE PAYMENT REVERSAL' then 'ADV-PYMT-REV' 
        when a.TRANSACTIONTYPE='ADVANCE PAYMENT ADJUSTMENT' then 'ADV-PYMT-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL ADJUSTMENT' then 'LIB-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL ADJUSTMENT REVERSAL' then 'LIB-ADJ-REV'
        when a.TRANSACTIONTYPE='PURCHASE BILL' then 'LIB'
        when a.TRANSACTIONTYPE='SALES BILL' then 'SB'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT ADJUSTMENT' then 'ADV-RCPT-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL REVERSAL' then 'LIB-REV'
        when a.TRANSACTIONTYPE='SALES BILL ADJUSTMENT ADJUSTMENT' then 'SB-ADJ'
        when a.TRANSACTIONTYPE='ADVANCE PAYMENT' then 'ADV-PYMT'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT' then 'ADV-RCPT'
        when a.TRANSACTIONTYPE='SALES BILL ADJUSTMENT' then 'SB-ADJ'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT REVERSAL' then 'ADV-RCPT-REV'
        else 'REF'
       end reftranstype
       From AcBillDetails a 
 Where a.CompanyCode = '0001'  
   And a.DivisionCode = '002' 
   And a.YearCode = '2020-2021' 
   And a.SystemVoucherNo =  'BA0001/002-RVB/2021/00000057' 
   And a.ACCODE= 'S000930' 
-- Order By sysrowid  

BA0001/002-RVB/2021/00000057

BA0001/004-RVB/2021/00000008

SELECT * FROM ACBILLDETAILS_ENTRY
WHERE SYSTEMVOUCHERNO LIKE '%RVB%'

SELECT * from AcBillDetails
WHERE SYSTEMVOUCHERNO LIKE '%RVB%'


SELECT * from AcBillDetails
WHERE SYSTEMVOUCHERNO LIKE 'BA0001/003-RPA/2021/00249599'



SELECT * FROM DIVISIONMASTER


SELECT * from acvoucher
where REFSYSTEMVOUCHERNO='BA0001/002-RVB/2021/00000008'


Select a.*,  
 case when a.TRANSACTIONTYPE='ADVANCE PAYMENT REVERSAL' then 'ADV-PYMT-REV' 
        when a.TRANSACTIONTYPE='ADVANCE PAYMENT ADJUSTMENT' then 'ADV-PYMT-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL ADJUSTMENT' then 'LIB-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL ADJUSTMENT REVERSAL' then 'LIB-ADJ-REV'
        when a.TRANSACTIONTYPE='PURCHASE BILL' then 'LIB'
        when a.TRANSACTIONTYPE='SALES BILL' then 'SB'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT ADJUSTMENT' then 'ADV-RCPT-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL REVERSAL' then 'LIB-REV'
        when a.TRANSACTIONTYPE='SALES BILL ADJUSTMENT ADJUSTMENT' then 'SB-ADJ'
        when a.TRANSACTIONTYPE='ADVANCE PAYMENT' then 'ADV-PYMT'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT' then 'ADV-RCPT'
        when a.TRANSACTIONTYPE='SALES BILL ADJUSTMENT' then 'SB-ADJ'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT REVERSAL' then 'ADV-RCPT-REV'
        else 'REF'
       end reftranstype
       From AcBillDetails a 
 Where a.CompanyCode = '0001'  
   And a.DivisionCode = '002' 
   And a.YearCode = '2020-2021' 
   And a.SystemVoucherNo =  'BA0001/002-RVB/2021/00000057' 
   And a.ACCODE= 'S000757' 
 Order By sysrowid  
 
 BA0001/002-RVB/2021/00000057
 
 
 
 

---------------------------------------------------------------------------------------------

 Select  COMPANYCODE, DIVISIONCODE, YEARCODE, 
 fn_Generate_VoucherPrefix(A.companycode,A.divisioncode,A.yearcode,A.systemvoucherno) as VOUCHERNO,
 VOUCHERDATE, VOUCHERTYPE, SYSTEMVOUCHERNO, SYSTEMVOUCHERDATE, 
 CASHBANKACCODE, CHEQUENO, CHEQUEDATE, CHEQUEDRAWNON, PARTY, CHEQUEPRINTEDBY, CHEQUEPRINTDATE, 
 REALIZATIONDATE, VOUCHERAMOUNT, NARRATION, AUTOMANUALMARK, REFVOUCHERNO, REFVOUCHERDATE, REFVOUCHERTYPE, 
 REFSYSTEMVOUCHERNO, PREPAREDBY, CHECKEDBY, EDITEDBY, PRINTEDBY, PREPAREDDATE, CHECKEDDATE, EDITEDDATE, 
 PRINTEDDATE, LASTMODIFIED, SYNCHRONIZED, CONTROLVOUCHER, REFMEMORANDUMVOUCHERNO, MODULENAME, DOCUMENTTYPE, 
 INSTRUCTIONNO, MANUALVOUCHERNO, MANUALVOUCHERDATE, VOUCHERPAYMENTRECEIPTTYPE, CHEQUEISSUEDON, SYSROWID, 
 USERNAME, CHEQUEBOOKSLNO, LIABILITYTYPE, VOUCHERNATURE,
 REPLACE(REPLACE(REPLACE(A.NARRATION,CHR(9),' '),CHR(10),' '),CHR(13),' ') PRINTNARRATION, DECODE(A.VOUCHERTYPE,'PURCHASE BILL','LIABILITY BILL',A.VOUCHERTYPE) VOUCHERTYPE2, CASE WHEN A.VOUCHERTYPE ='PAYMENTS' THEN 'PAID TO : '||A.PARTY ELSE CASE WHEN A.VOUCHERTYPE ='RECEIPTS' THEN 'RECEIVED FROM : '||A.PARTY ELSE '' END END PAIDTORECEIVEDFROM  
 From AcVoucher A 
 Where A.CompanyCode = '0001'  
   And A.DivisionCode = '002' 
   And A.YearCode = '2020-2021' 
   And A.SystemVoucherNo IN (A0001/002-RVB/2021/00000006) 
---------------------------------------------------------------------------------------------

--BAGGAGE COMPONENT ASSIGNMENT NOT WORKING 

--CORRECTION BY AMALESH SIR

-- BELOW FUNCTION CORRECTTION
FN_USERWISE_DATA_ACCESS

select * from VW_AUTO_DYNAMICGRID

select * from login

LOGIN WITH USER NAME : MISHRA, AND PASSWORD : BMPL123

FN_USERWISE_DATA_ACCESS



---------------------------------------------------------------------------------------------


SELECT COMPANYCODE,DIVISIONCODE,SYSROWID,YEARCODE,YEARMONTH,UNITCODE,CATEGORYCODE,GRADECODE,
WORKERSERIAL,TOKENNO,EMPLOYEENAME,DEPARTMENTCODE,DEPARTMENTDESC,BASIC,BASIC_RT,HRA_PER,
SOFT_ALLW,SERV_ALLW,CONV_ALLW,CHILD_ALLW,PERS_ALLW,OTH_ALLW,FIX_ALW,OTH_ALLW2
  FROM ( 
         SELECT * FROM (SELECT EMPMAST.COMPANYCODE,EMPMAST.DIVISIONCODE,ASSIGN.SYSROWID,ASSIGN.YEARCODE,
         ASSIGN.YEARMONTH,EMPMAST.UNITCODE,EMPMAST.CATEGORYCODE,EMPMAST.GRADECODE,EMPMAST.WORKERSERIAL,
         EMPMAST.TOKENNO,EMPMAST.EMPLOYEENAME,EMPMAST.DEPARTMENTCODE,DEPT.DEPARTMENTDESC,ASSIGN.BASIC,
         ASSIGN.BASIC_RT,ASSIGN.HRA_PER,ASSIGN.SOFT_ALLW,ASSIGN.SERV_ALLW,ASSIGN.CONV_ALLW,ASSIGN.CHILD_ALLW,
         ASSIGN.PERS_ALLW,ASSIGN.OTH_ALLW,ASSIGN.FIX_ALW,ASSIGN.OTH_ALLW2   
         FROM PISEMPLOYEEMASTER EMPMAST, PISDEPARTMENTMASTER DEPT,         
         (         
             SELECT *           
             FROM PISCOMPONENTASSIGNMENT          
             WHERE COMPANYCODE='0001'            
             AND DIVISIONCODE='001'            
             AND TRANSACTIONTYPE='ASSIGNMENT'            
             AND WORKERSERIAL||YEARMONTH IN 
             (                                             
                 SELECT WORKERSERIAL||MAX(YEARMONTH) 
                 FROM PISCOMPONENTASSIGNMENT                                              
                 WHERE COMPANYCODE='0001' AND DIVISIONCODE='001'                                                
                 AND TO_NUMBER(YEARMONTH)<=TO_NUMBER('202004')                                                
                 AND TRANSACTIONTYPE='ASSIGNMENT'                                             
                 GROUP BY WORKERSERIAL                                           
            )        
         ) ASSIGN  
         WHERE EMPMAST.COMPANYCODE=DEPT.COMPANYCODE    
         AND EMPMAST.DIVISIONCODE=DEPT.DIVISIONCODE    
         AND EMPMAST.DEPARTMENTCODE=DEPT.DEPARTMENTCODE    
         AND EMPMAST.COMPANYCODE=ASSIGN.COMPANYCODE(+)    
         AND EMPMAST.DIVISIONCODE=ASSIGN.DIVISIONCODE(+)    
         AND EMPMAST.TOKENNO=ASSIGN.TOKENNO(+)    
         AND EMPMAST.WORKERSERIAL=ASSIGN.WORKERSERIAL(+)    
         AND EMPMAST.COMPANYCODE='0001'    
         AND EMPMAST.DIVISIONCODE='001'    
         AND EMPMAST.EMPLOYEESTATUS='ACTIVE'    
         AND EMPMAST.UNITCODE='001'    
         AND EMPMAST.CATEGORYCODE='01'    
         AND EMPMAST.GRADECODE='CIV'    
         AND TO_NUMBER(TO_CHAR(EMPMAST.DATEOFJOIN,'YYYYMM'))<=TO_NUMBER('202004')    
         AND TO_NUMBER(NVL(TO_CHAR(EMPMAST.STATUSDATE,'YYYYMM'),NVL(TO_CHAR(EMPMAST.EXTENDEDRETIREDATE,'YYYYMM'),'202004')))>=TO_NUMBER('202004') ) 
         ORDER BY TOKENNO 
       ) 
       
       
       ----------------------------------------------------
       
       
        
         SELECT * FROM (SELECT EMPMAST.COMPANYCODE,EMPMAST.DIVISIONCODE,ASSIGN.SYSROWID,ASSIGN.YEARCODE,
         ASSIGN.YEARMONTH,EMPMAST.UNITCODE,EMPMAST.CATEGORYCODE,EMPMAST.GRADECODE,EMPMAST.WORKERSERIAL,
         EMPMAST.TOKENNO,EMPMAST.EMPLOYEENAME,EMPMAST.DEPARTMENTCODE,DEPT.DEPARTMENTDESC,ASSIGN.BASIC,
         ASSIGN.BASIC_RT,ASSIGN.HRA_PER,ASSIGN.SOFT_ALLW,ASSIGN.SERV_ALLW,ASSIGN.CONV_ALLW,ASSIGN.CHILD_ALLW,
         ASSIGN.PERS_ALLW,ASSIGN.OTH_ALLW,ASSIGN.FIX_ALW,ASSIGN.OTH_ALLW2   
         FROM PISEMPLOYEEMASTER EMPMAST, PISDEPARTMENTMASTER DEPT,         
         (         
             SELECT *           
             FROM PISCOMPONENTASSIGNMENT          
             WHERE COMPANYCODE='0001'            
             AND DIVISIONCODE='001'            
             AND TRANSACTIONTYPE='ASSIGNMENT'            
             AND WORKERSERIAL||YEARMONTH IN 
             (                                             
                 SELECT WORKERSERIAL||MAX(YEARMONTH) 
                 FROM PISCOMPONENTASSIGNMENT                                              
                 WHERE COMPANYCODE='0001' AND DIVISIONCODE='001'                                                
                 AND TO_NUMBER(YEARMONTH)<=TO_NUMBER('202004')                                                
                 AND TRANSACTIONTYPE='ASSIGNMENT'                                             
                 GROUP BY WORKERSERIAL                                           
            )        
         ) ASSIGN  
         WHERE EMPMAST.COMPANYCODE=DEPT.COMPANYCODE    
         AND EMPMAST.DIVISIONCODE=DEPT.DIVISIONCODE    
         AND EMPMAST.DEPARTMENTCODE=DEPT.DEPARTMENTCODE    
         AND EMPMAST.COMPANYCODE=ASSIGN.COMPANYCODE(+)    
         AND EMPMAST.DIVISIONCODE=ASSIGN.DIVISIONCODE(+)    
         AND EMPMAST.TOKENNO=ASSIGN.TOKENNO(+)    
         AND EMPMAST.WORKERSERIAL=ASSIGN.WORKERSERIAL(+)    
         AND EMPMAST.COMPANYCODE='0001'    
         AND EMPMAST.DIVISIONCODE='001'    
         AND EMPMAST.EMPLOYEESTATUS='ACTIVE'    
         AND EMPMAST.UNITCODE='002'    
         AND EMPMAST.CATEGORYCODE='01'    
         AND EMPMAST.GRADECODE='CIV'    
         AND TO_NUMBER(TO_CHAR(EMPMAST.DATEOFJOIN,'YYYYMM'))<=TO_NUMBER('202004')    
         AND TO_NUMBER(NVL(TO_CHAR(EMPMAST.STATUSDATE,'YYYYMM'),NVL(TO_CHAR(EMPMAST.EXTENDEDRETIREDATE,'YYYYMM'),'202004')))>=TO_NUMBER('202004') ) 
         ORDER BY TOKENNO 
         
         
         
         
         SELECT * FROM MENUMASTER_RND
         WHERE UPPER(MENUDESC) LIKE UPPER('%component%')
		 
		 
---------------------------------------------------------------------------------------------

--MULTIPLE LOAN REPAY ENTRY
---------------------------------------------------------------------------------------------
--PF LOAN ENTRY

EXEC PROC_PFLOANBLNC('DT0078','0009','23/02/2020','23/02/2020','PF','1050','GPS')

EXEC PROC_PFLOANBLNC('DT0078','0009','17/06/2020','17/06/2020','PF','1050','GPS')

SELECT * FROM GPSPAYSHEETDETAILS
WHERE DIVISIONCODE='0009'
AND TOKENNO='J0028'

SELECT * FROM GBL_PFLOANBLNC

DELETE FROM GPS_ERROR_LOG


SELECT * FROM GPS_ERROR_LOG


SELECT  NVL(PFLOAN_BAL,0) PFLOAN_BAL, NVL(PFLOAN_INT_BAL,0) PFLOAN_INT_BAL FROM GBL_PFLOANBLNC

WHERE TOKENNO='J0028'


SELECT * FROM GPSEMPLOYEEMAST
WHERE PFNO='1050'

---------------------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE DHUNSERI_STRU.PROC_PFLOANREPAY(P_COMPCODE VARCHAR2, 
                                                  P_DIVCODE VARCHAR2,
                                                  P_YEARCODE VARCHAR2,
                                                  P_MODULENAME VARCHAR2,
                                                  P_FNSTDT VARCHAR2, 
                                                  P_FNENDT VARCHAR2,
                                                  P_PAIDDATE VARCHAR2,
                                                  P_PAIDPAMT VARCHAR2 DEFAULT 0,
                                                  P_PAIDINTAMT VARCHAR2 DEFAULT 0,
                                                  P_PFNO VARCHAR2 DEFAULT NULL
                                                  )
AS
LV_FN_STDT DATE := TO_DATE(P_FNSTDT,'DD/MM/YYYY');
LV_FN_ENDT DATE := TO_DATE(P_FNENDT,'DD/MM/YYYY');
LV_TABLENAME        VARCHAR2(50);
LV_REMARKS          VARCHAR2(1000) := 'PROC_PFLOANREPAY --REPAYMENT DONE THROUGH MANUAL INPUT';

LV_COMPCOL          VARCHAR2(1000) := '';
LV_SQLSTR      VARCHAR2(4000) := '';
LV_PARVALUES        VARCHAR2(500) := P_FNSTDT||'-'||P_FNENDT;
LV_SQLERRM          VARCHAR2(500) := '';
LV_WORKERSERIAL     VARCHAR2(10) := '';
LV_TOKENNO          VARCHAR2(10) := '';
LV_TOPTALPAID       NUMBER(12,2) := 0;
lv_error_remark     VARCHAR2(1000):='';
LV_ATTNDATE         DATE := TO_DATE(P_FNSTDT,'DD/MM/YYYY');
BEGIN

    --PROC_PFLOANBLNC(P_COMPCODE,P_DIVCODE,P_FNSTDT,P_FNENDT,'PFLN','','WPS','NO');
    DELETE FROM PFLOANBREAKUP 
    WHERE EFFECTFORTNIGHT=TO_DATE(P_FNSTDT,'DD/MM/YYYY')
      AND TRANSACTIONTYPE= 'REPAY'
      AND PFNO=P_PFNO
      AND COMPANYCODE=P_COMPCODE---ADDED BY CHIRANJIT
      AND DIVISIONCODE=P_DIVCODE---ADDED BY CHIRANJIT
      AND NVL(ISCASHREPAYMENT,'N') = 'Y';
        
   LV_TOPTALPAID :=TO_NUMBER(NVL(P_PAIDPAMT,0)) + TO_NUMBER(NVL(P_PAIDINTAMT,0));
   ----DBMS_OUTPUT.PUT_LINE (LV_TOPTALPAID);
   IF NVL(TO_NUMBER(LV_TOPTALPAID),0) >0 THEN
        LV_SQLSTR := ' INSERT INTO PFLOANBREAKUP ( COMPANYCODE, DIVISIONCODE, EMPLOYEECOMPANYCODE, EMPLOYEEDIVISIONCODE, YEARCODE, YEARMONTH, CATEGORYCODE, GRADECODE, PFNO, TOKENNO, WORKERSERIAL, LOANCODE, LOANDATE, EFFECTYEARMONTH, INTERESTPERCENTAGE, AMOUNT, TRANSACTIONTYPE, EFFECTFORTNIGHT, PAIDON, ISPAID, DEDUCTEDAMT, ADJUSTMENTTAG, REMARKS, REPAYAMOUNT, REPAYCAPITAL, REPAYINTEREST, REPAYREBATE, FINALSETTLEMENTTAG, REPAYDATE, MODULE, DELETERESION, VOUCHERNO, VOUCHERDATE, SYSTEMVOUCHERNO, SYSTEMVOUCHERDATE, CHEQUENO, CHEQUEDATE, SYSROWID, USERNAME, LASTMODIFIED, ISCASHREPAYMENT  ) '||CHR(10)
         ||'  SELECT '''||P_COMPCODE||''', '''||P_DIVCODE||''','''||P_COMPCODE||''', '''||P_DIVCODE||''', '''||P_YEARCODE||''',  '||CHR(10)
         ||'  TO_CHAR(TO_DATE('''||P_FNSTDT||''',''DD/MM/YYYY''),''YYYYMM''),CATEGORYCODE,NULL,A.PFNO,B.TOKENNO,B.WORKERSERIAL,''PF'', LOANDATE,TO_CHAR(TO_DATE('''||P_FNSTDT||''',''DD/MM/YYYY''),''YYYYMM''),NULL,'||CHR(10)
         ||'  '''||LV_TOPTALPAID||''', ''REPAY'',TO_DATE('''||P_FNSTDT||''',''DD/MM/YYYY'') FORTNIGHTSTARTDATE,TO_DATE('''||P_PAIDDATE||''',''DD/MM/YYYY'') PAIDON,  '||CHR(10) 
         ||' ''Y'' ISPAID,NULL, NULL, ''REPAYMENT DONE THROUGH MANUAL INPUT'','''||LV_TOPTALPAID||''','''||P_PAIDPAMT||''','''||P_PAIDINTAMT||''',   '||CHR(10) 
         ||' NULL, NULL, TO_DATE('''||P_PAIDDATE||''',''DD/MM/YYYY'') REPAYDATE, ''GPS'' ,NULL, NULL, NULL, NULL, NULL,NULL, NULL,A.PFNO||B.DIVISIONCODE||TO_CHAR(SYSDATE,''YYYYMMDDHHMISS''),''SWT'',SYSDATE,''Y'' '||CHR(10)
         ||'  FROM GBL_PFLOANBLNC A, GPSEMPLOYEEMAST B '||CHR(10)
         ||' WHERE A.PFNO='''||P_PFNO||''' '||CHR(10)
         ||'   AND A.COMPANYCODE=B.COMPANYCODE '||CHR(10)---ADDED
         ||'   AND A.DIVISIONCODE=B.DIVISIONCODE '||CHR(10)---ADDED
         ||'   AND A.COMPANYCODE='''||P_COMPCODE||''' '||CHR(10) ---ADDED
         ||'   AND A.DIVISIONCODE='''||P_DIVCODE||''' '||CHR(10)---ADDED
         ||'   AND A.DIVISIONCODE=B.DIVISIONCODE '||CHR(10);
     --  --DBMS_OUTPUT.PUT_LINE (LV_SQLSTR);
       EXECUTE IMMEDIATE LV_SQLSTR;COMMIT;
   END IF;
   COMMIT;
EXCEPTION
WHEN OTHERS THEN
 --INSERT INTO ERROR_LOG(PROC_NAME,ORA_ERROR_MESSG,ERROR_QUERY,PAR_VALUES,REMARKS ) VALUES( 'ERROR SQL',LV_SQLSTR,LV_SQLSTR,LV_PARVALUES,LV_REMARKS);
 LV_SQLERRM := SQLERRM ;
 ----DBMS_OUTPUT.PUT_LINE(LV_SQLERRM);
 INSERT INTO GPS_ERROR_LOG(PROC_NAME,ORA_ERROR_MESSG,ERROR_QUERY,PAR_VALUES,FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS ) VALUES( 'PROC_PFLOANREPAY',LV_SQLERRM,LV_SQLSTR,LV_PARVALUES,LV_FN_STDT,LV_FN_ENDT, LV_REMARKS);

END ;
/
---------------------------------------------------------------------------------------------

--LOAN BALANCE QUERY



SELECT DISTINCT A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE, AMOUNT, 0 INTERESTAMOUNT , 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT 
FROM PFLOANTRANSACTION A,  
(  
    SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, MAX(LOANDATE) LOANDATE  
    FROM PFLOANTRANSACTION  
    WHERE COMPANYCODE = 'DT0078' AND DIVISIONCODE = '0009' 
    AND LOANDATE <=  TO_DATE('23/02/2020','DD/MM/YYYY')
    AND LOANTYPE ='REFUNDABLE'
    GROUP BY COMPANYCODE,DIVISIONCODE,PFNO  
) B  
WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE AND A.PFNO = B.PFNO AND A.LOANDATE = B.LOANDATE  AND AMOUNT > 0 

UNION ALL     

SELECT A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE,   
(
CASE WHEN TRANSACTIONTYPE ='CAPITAL' THEN CASE WHEN EFFECTFORTNIGHT < TO_DATE('23/02/2020','DD/MM/YYYY') THEN AMOUNT ELSE 0 END  
WHEN TRANSACTIONTYPE ='REPAY' THEN REPAYCAPITAL  
WHEN TRANSACTIONTYPE ='REPAYCAP' THEN AMOUNT  
ELSE 0  
END
)*(-1) AMOUNT, 0 INTERESTAMOUNT , 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT     
FROM PFLOANBREAKUP A,  
(  
    SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, MAX(LOANDATE) LOANDATE  
    FROM PFLOANTRANSACTION  
    WHERE COMPANYCODE = 'DT0078' AND DIVISIONCODE ='0009' 
    AND LOANDATE <=  TO_DATE('23/02/2020','DD/MM/YYYY')  
    AND LOANTYPE ='REFUNDABLE'                     
    GROUP BY COMPANYCODE,DIVISIONCODE,PFNO  
) B  
WHERE A.COMPANYCODE=B.COMPANYCODE 
AND A.DIVISIONCODE=B.DIVISIONCODE 
AND A.PFNO = B.PFNO 
AND A.LOANDATE = B.LOANDATE  
AND A.EFFECTFORTNIGHT <=  TO_DATE('23/02/2020','DD/MM/YYYY')  
AND TRANSACTIONTYPE <> 'INTEREST'  
AND A.PFNO='1050'
AND A.COMPANYCODE = 'DT0078' AND A.DIVISIONCODE ='0009' 


UNION ALL  

SELECT DISTINCT A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE, 0 AMOUNT, SUM(NVL(C.INTERESTAMOUNT,0)) INTERESTAMOUNT 
, 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT  
FROM 
( 
    SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, LOANCODE, LOANDATE 
    FROM PFLOANTRANSACTION 
    WHERE COMPANYCODE ='DT0078' AND DIVISIONCODE = '0009'
) A, 
(  
    SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, MAX(LOANDATE) LOANDATE 
    FROM PFLOANTRANSACTION  
    WHERE COMPANYCODE = 'DT0078' AND DIVISIONCODE = '0009'  
    AND LOANDATE <=  TO_DATE('23/02/2020','DD/MM/YYYY')  
    AND LOANTYPE ='REFUNDABLE'
    GROUP BY COMPANYCODE,DIVISIONCODE,PFNO  
) B, PFLOANINTEREST C  
WHERE A.COMPANYCODE = 'DT0078' AND A.DIVISIONCODE = '0009' AND A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE AND A.PFNO = B.PFNO AND A.LOANDATE = B.LOANDATE  
AND A.PFNO = C.PFNO AND A.LOANDATE = C.LOANDATE AND A.LOANCODE = C.LOANCODE  
AND C.FORTNIGHTENDDATE <= TO_DATE('23/02/2020','DD/MM/YYYY') 
AND C.TRANSACTIONTYPE = 'ADD'  
GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE  

UNION ALL  

SELECT A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE, 0 AMOUNT,   
(CASE WHEN TRANSACTIONTYPE ='INTEREST' THEN CASE WHEN EFFECTFORTNIGHT < TO_DATE('23/02/2020','DD/MM/YYYY') THEN AMOUNT ELSE 0 END  
WHEN TRANSACTIONTYPE ='REPAY' THEN REPAYINTEREST  
WHEN TRANSACTIONTYPE ='REPAYINT' THEN AMOUNT  
ELSE 0  
END)*(-1) INTERESTAMOUNT 
, 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT      
FROM PFLOANBREAKUP A,  
(  
SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, MAX(LOANDATE) LOANDATE  
FROM PFLOANTRANSACTION  
WHERE COMPANYCODE = 'DT0078' AND DIVISIONCODE = '0009'  
AND LOANDATE <=  TO_DATE('23/02/2020','DD/MM/YYYY')  
AND LOANTYPE ='REFUNDABLE'
GROUP BY COMPANYCODE,DIVISIONCODE,PFNO  
) B  
WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE AND A.PFNO = B.PFNO AND A.LOANDATE = B.LOANDATE  
AND A.EFFECTFORTNIGHT <= TO_DATE('23/02/2020','DD/MM/YYYY') 
AND TRANSACTIONTYPE <> 'CAPITAL' 

UNION ALL 

SELECT A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE, 0 AMOUNT,  0 INTERESTAMOUNT,  
DECODE(TRANSACTIONTYPE,'CAPITAL',AMOUNT,0) LN_CAP_DEDUCT, DECODE(TRANSACTIONTYPE,'INTEREST',AMOUNT,0) LN_INT_DEDUCT 
FROM PFLOANBREAKUP A,  
(  
SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, MAX(LOANDATE) LOANDATE  
FROM PFLOANTRANSACTION  
WHERE COMPANYCODE = 'DT0078' AND DIVISIONCODE = '0009'  
AND LOANDATE <=  TO_DATE('23/02/2020','DD/MM/YYYY') 
AND LOANTYPE ='REFUNDABLE'
GROUP BY COMPANYCODE,DIVISIONCODE,PFNO  
) B  
WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE AND A.PFNO = B.PFNO AND A.LOANDATE = B.LOANDATE  
AND A.EFFECTFORTNIGHT <= TO_DATE('23/02/2020','DD/MM/YYYY')
AND TRANSACTIONTYPE IN ('CAPITAL','INTEREST') 

---------------------------------------------------------------------------------------------

I:\OFFICE\PROJECTS\SWT_Jute\swterp\swterp\PIS\Pages\Report\Transaction\rptCOMPONENTASSIGNMENTSTATUS.rdlc
--baggage
SELECT * FROM  ACVOUCHER
WHERE SYSTEMVOUCHERNO='BA0001/002-RVB/2021/00000008'

WHERE VOUCHERTYPE IN ('RECEIPTS','PAYMENTS')

SELECT * FROM  ACVOUCHERDETAILS_ENTRY

WHERE VOUCHERTYPE IN ('RECEIPTS','PAYMENTS')


SELECT * FROM ACBILLDETAILS_ENTRY
WHERE SYSTEMVOUCHERNO LIKE '%RVB%'


---------------------------------------------------------------------------------------------

SELECT 'BJ0056' COMPANYCODE, '0001' DIVISIONCODE,'2020-2021' YEARCODE, '202004'YEARMONTH, UNITCODE, CATEGORYCODE, 
GRADECODE, DEPARTMENTCODE,EMPCODE,'ASSIGNMENT' TRANSACTIONTYPE, SYS_GUID() SYSROWID, SYSDATE LASTMODIFIED, 
'SWT' USERNAME,
BASIC,DA,ADHOC,PERSONAL_PAY,VPF_PERCENT
FROM bjm_emp_mast



---------------------------------------------------------------------------------------------

--ESI GROSS
CASE WHEN PISCOMP.ESI_RATE>=21000 THEN 0 ELSE (PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.SPL_ALLOW+PISCOMP.NS_ALLOW+PISCOMP.OT_AMT+PISCOMP.SERV_ALW+PISCOMP.OE_NPF+PISCOMP.CONV_ALOW+PISCOMP.OEPF+PISCOMP.ESI_ADJERN+PISCOMP.HRA+PISCOMP.PROF_BONUS+PISCOMP.ADHOC_NPF+PISCOMP.ATN_INCAMT) END

CASE WHEN PISCOMP.ESI_RATE>=21000 THEN 0 ELSE 
(PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.SPL_ALLOW+PISCOMP.NS_ALLOW+PISCOMP.OT_AMT+PISCOMP.SERV_ALW+PISCOMP.OE_NPF+PISCOMP.CONV_ALOW+PISCOMP.OEPF+PISCOMP.ESI_ADJERN+PISCOMP.HRA+PISCOMP.PROF_BONUS+PISCOMP.ADHOC_NPF+PISCOMP.ATN_INCAMT) END


SELECT 
CASE WHEN PISCOMP.ESI_RATE>=21000 THEN 0 ELSE 
(
    PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.SPL_ALLOW+
    PISCOMP.NS_ALLOW+PISCOMP.OT_AMT+PISCOMP.OE_NPF+
    PISCOMP.CONV_ALOW+PISCOMP.OEPF+PISCOMP.ESI_ADJERN+PISCOMP.HRA+
    PISCOMP.PROF_BONUS+PISCOMP.ATN_INCAMT
) END
FROM PISCOMPONENTASSIGNMENT PISCOMP


SELECT 


CASE WHEN PISCOMP.ESI_RATE>=21000 THEN 0 ELSE (PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.SPL_ALLOW+PISCOMP.OT_AMT+PISCOMP.OE_NPF+PISCOMP.CONV_ALOW+PISCOMP.OEPF+PISCOMP.HRA+PISCOMP.ATN_INCAMT) END
FROM PISCOMPONENTASSIGNMENT PISCOMP
 
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------


--PF GROSS
PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.NS_ALLOW+ PISCOMP.OEPF
PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.NS_ALLOW+ PISCOMP.OEPF


CASE WHEN PISMAST.CATEGORYCODE= 'SS' THEN PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.NS_ALLOW+ PISCOMP.OEPF 
ELSE 
	CASE WHEN (PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.NS_ALLOW+ PISCOMP.OEPF) > 15000 THEN 15000 
		 ELSE (PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.NS_ALLOW+ PISCOMP.OEPF) 
	END 
END

CASE WHEN (PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.OEPF) > 15000 THEN 15000 ELSE (PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.OEPFCOMP.OEPF) END 


PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.OEPF


--HRA GROSS
PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.NS_ALLOW+PISCOMP.OEPF

PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.OEPF
 
 
---------------------------------------------------------------------------------------------

--ADDED HELP QUERY FROM GLOSTER
Insert into SYS_HELP_QRY
   (QRY_ID, QRY_STRING, PARAMETER_STRING, QRY_SHORTDESC, QRY_RETURN_TABLE_NAME, 
    WEB_QRY_STRING, SEARCH_COLUMNLIST, MODULENAME)
 Values
   (7041, '""', 'COMPANYCODE~DIVISIONCODE~EMPLOYEECODE~LEAVECODE~PATTERN', 'PIS EMPLOYEE LEAVE INFORMATION', NULL, 
    'SELECT DISTINCT DOCUMENTNO, TOKENNO, LEAVECODE, TO_CHAR(LEAVEAPPLIEDON) LEAVEAPPLIEDON'||CHR(13)||CHR(10)||' FROM PISLEAVEAPPLICATION A'||CHR(13)||CHR(10)||'    WHERE A.COMPANYCODE=<<COMPANYCODE>>'||CHR(13)||CHR(10)||'    AND A.DIVISIONCODE=<<DIVISIONCODE>>'||CHR(13)||CHR(10)||'    AND A.TOKENNO=<<EMPLOYEECODE>>'||CHR(13)||CHR(10)||'    AND A.LEAVECODE=<<LEAVECODE>>'||CHR(13)||CHR(10)||'   ORDER BY DOCUMENTNO'||CHR(10)||'', 'DOCUMENTNO~TOKENNO~LEAVECODE~LEAVEAPPLIEDON'||CHR(10)||'', 'PIS');
COMMIT;

I:\OFFICE\PROJECTS\SWT_Jute\swterp\swterp\PIS\Pages\Report\Transaction\rptCOMPONENTSALARYREGISTER.rdlc

---------------------------------------------------------------------------------------------

--BAGGAGE

select * from pis_error_log

DELETE FROM pis_error_log


proc_componentassinreport

EXEC PROC_RPT_PIS_PTAXSTATEMENT('0001','001','2020-2021','202004','','','','','','','','','SWT20200616_021821PM','WEST BENGAL')

EXEC PROC_RPT_PIS_PTAXSTATEMENT('0001','001','2020-2021','202004','','','','','SWT20200616_021821PM','''WEST BENGAL''');

PROC_RPT_PIS_PTAXSTATEMENT('0001','001','2020-2021','202004','','','','','SWT20200616_025234PM','''WEST BENGAL''')
 


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
work update on 15/06/2020
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------

SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%month att%')


update menumaster_rnd
set URLSRC ='PIS/PAGES/Transaction/pgPISMonthAttendanceWithLeave.aspx'
where menucode = '01070202'


update menumaster_rnd
set URLSRC ='PIS/PAGES/Transaction/pgPISMonthAttendance.aspx'
where menucode = '01070202'

URLSRC

---------------------------------------------------------------------------------------------

--ATTENDANCE CODE
select rtrim(xmlagg(xmlelement(e,x.componentcode||',') order by srl).extract('//text()'),',') xx 
  from ( 
        select srl, columnname componentcode from pistagwisefixedcolumnshow 
         where companycode='BJ0056' 
           and divisioncode='0001' 
           and tagtype='ATTENDANCE' 
        union all 
        select 50+nvl(phase,999)+nvl(calculationindex,9999) srl, 'ASSIGN.'||A.componentcode componentcode from piscomponentmaster A
        ,(
            SELECT DISTINCT COMPONENTCODE FROM PISGRADECOMPONENTMAPPING
            WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001' 
            AND YEARMONTH = (
                                SELECT MAX(YEARMONTH) FROM PISGRADECOMPONENTMAPPING
                                WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001' 
                            )
            AND CATEGORYCODE = '10'
            AND GRADECODE ='11' 
            AND APPLICABLE LIKE 'Y%' 
        ) B 
         where companycode='BJ0056' 
           and divisioncode='0001' 
           and A.componentcode||yearmonth in ( 
                                            select distinct componentcode||max(yearmonth) from piscomponentmaster 
                                             where companycode='BJ0056' 
                                               and divisioncode='0001' 
                                               and to_number(yearmonth)<=to_number('202004') 
                                             group by componentcode 
                                           ) 
          AND A.COMPONENTCODE = B.COMPONENTCODE
           and nvl(userentryapplicable,'N')='Y' 
           and nvl(attendanceentryapplicable,'N')='Y' 
        union all 
        select (SELECT MAX(srl) FROM pistagwisefixedcolumnshow where companycode='BJ0056' 
           and divisioncode='0001' 
           and tagtype='ATTENDANCE' )  srl, 'L_A.'||leavecode componentcode from PISLEAVEMASTER
         where companycode='BJ0056' 
           and divisioncode='0001' 
        union all 
        select 0 srl,  'DYLEAVE' componentcode from dual
       ) x 
	   
---------------------------------------------------------------------------------------------

--FUNCTION TAKEN FROM GLOSTER 
--ADDED TO BIRLA
CREATE OR REPLACE function fn_RtnNoOfApplicableHolidays(P_COMPCODE VARCHAR2, P_DIVCODE VARCHAR2, P_YEARMONTH VARCHAR2, P_CATEGORYCODE VARCHAR2,P_GRADECODE VARCHAR2,P_WORKERSERIAL  VARCHAR2, P_MODULE VARCHAR2 DEFAULT 'PIS') return number
AS 
lv_Cnt      number(5,2):=0;
begin
    if P_MODULE = 'PIS' THEN
        SELECT COUNT(*) INTO lv_Cnt
        FROM PISHOLIDAYMASTER A, PISEMPLOYEEMASTER E
        WHERE A.COMPANYCODE = P_COMPCODE AND A.DIVISIONCODE = P_DIVCODE
          AND TO_CHAR(A.HOLIDAYDATE,'YYYYMM') = P_YEARMONTH
          AND NVL(A.ISPAID,'N') = 'Y'
          AND A.COMPANYCODE=E.COMPANYCODE
          AND A.DIVISIONCODE=E.DIVISIONCODE
          AND NVL(A.CATEGORYCODE,'N')=E.CATEGORYCODE
          AND NVL(A.GRADECODE,'N')=E.GRADECODE
          AND A.HOLIDAYDATE>=E.DATEOFJOIN
          AND E.WORKERSERIAL=P_WORKERSERIAL;
    
    END IF;
    return lv_Cnt;
end;
/

---------------------------------------------------------------------------------------------
procedure

prcAssignment_Bf_MainSave

--IF SUM OF BASIC AMOUNT IS ZERO 
    select sum(nvl(basic,0))
    into lv_cnt
    from GBL_PISCOMPONENTASSIGNMENT;
    
    if lv_cnt = 0 then
        lv_error_remark := 'Validation Failure : [No row found in Component Assignment with Proper Data to Entry]';
        raise_application_error(to_number(FN_DISPLAY_ERROR( 'COMMON')),FN_DISPLAY_ERROR( 'COMMON',6,lv_error_remark));
    end if;
    
	
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------


----COMPONENT CODE FROM PISCOMPONENT ASSIGNMENT 

SELECT DISTINCT COMPONENTCODE FROM PISCOMPONENTMASTER
MINUS
SELECT SYS_COLUMNNAME FROM SYS_TFMAP WHERE SYS_TABLENAME_ACTUAL='PISCOMPONENTASSIGNMENT'


----ALL COMPONENTCODE FROM PISCOMPONENTMASTER

SELECT WM_CONCAT(COMPONENTCODE) COMPONENTCODE FROM
(
SELECT DISTINCT COMPONENTCODE FROM PISCOMPONENTMASTER
)


----ALL SYS_COLUMNNAME / COMPONENTCODE FROM PISCOMPONENTMASTER
SELECT WM_CONCAT(SYS_COLUMNNAME) COMPONENTCODE FROM
(
SELECT SYS_COLUMNNAME FROM SYS_TFMAP WHERE SYS_TABLENAME_ACTUAL='PISCOMPONENTASSIGNMENT'
)


--PISCOMPONENTMASTER
CONV_ALOW,GROSSEARN,HRA_GROSS,HRA_PERC,LIBL_FEADV,LIBL_SA,LINT_PJADV,LINT_SPL,LOAN_PFL,LTP,NETSALARY,OE_NPF,OTHR_DEDN,TOTEARN,
ATN_INCNT,LIBL_PFL,LIBL_STADV,
LINT_FEADV,LNBL_OTADV,LOAN_OTADV,ATN_INCAMT,ATTN_LDAY,CUMM_DAYS,DA,LDAY_PL,
LDAY_SL,LIBL_SPL1,LINT_STADV,LNBL_OLADV,LNBL_STADV,OT_AMT,ACT_PF_GRS,
ELECTRIC,ESI_RATE,LDAY_CL,LNBL_SA,LOAN_PJADV,LOAN_SA,PF_E,PF_GROSS,
PTAX,RT_BASIC,ADHOC,ESI_GROSS,GROSSDEDN,HRA,ITAX,LEAVE_ENC,
LIBL_OLADV,LINT_OTADV,LINT_SPL1,LNBL_FEADV,MESS,PEN_GROSS,
SUSP_DEDN,VPF,LIBL_PJADV,LIBL_SPL,LIC,LINT_OLADV,LNBL_PFL,
LNBL_SPL,MEDICAL,MISC_DEDN,PTAX_GROSS,ATTN_HOLD,ATTN_SALD,
CUMM_PF_E,CUMM_VPF,CUM_PFGROS,LIBL_OTADV,LINT_PFL,LNBL_PJADV,
LOAN_STADV,LWF,ATTN_WRKD,BASIC,CLUB,CUMM_PF_C,ESI_E,LINT_SA,LNBL_SPL1,
LOAN_FEADV,LOAN_OLADV,LOAN_SPL,LOAN_SPL1,LTA,OEPF,SPL_ALLOW,VPF_PERC


--PISCOMPONENTASSIGNMENT SYSTF
ADHOC,BASIC,CATEGORYCODE,CLUB,COMPANYCODE,CONV_ALOW,DA,DEPARTMENTCODE,DIVISIONCODE,
EDU_ALLOW,ELEC_CHRG,ESI_E,ESI_RT,FIRE_ALLOW,FPF,FUEL_ALLOW,GRADECODE,HRA_FIXED,
HRA_PER,HR_ALLOW,HR_DEDN,H_WAGES,ITAX,LAUN_ALLOW,LV_ENCASH,LWF,MESS,ME_1,ME_2,ME_3,ME_4,ME_5,ME_6,
MISC_DEDN,NETSALARY,NS_ALLOW,NS_B_RATE,NS_C_RATE,OT_AMT,OT_HRS,PARA_ALLOW,PEN_GROSS,
PFL_EARN,PF_E,PF_GROSS,PTAX,PTAX_GROSS,SAL_ADV,SERV_CHRG,SE_DEPOSIT,SFT_B_DAYS,
SFT_C_DAYS,SICK_ALLOW,SPL_ALLOW,SWEEPER,SYSROWID,TIFFIN,TOKENNO,TOTDEDN,TRANSACTIONTYPE,
UNITCODE,USERNAME,VPF,VPF_PERC,WORKERSERIAL,YEARCODE,YEARMONTH


--PISCOMPONENTASSIGNMENT SYSTF
ADHOC,BASIC,CATEGORYCODE,CLUB,COMPANYCODE,CONV_ALOW,DA,DEPARTMENTCODE,DIVISIONCODE,
ESI_E,GRADECODE,
HRA_PER,HR_DEDN,ITAX,LWF,MESS
MISC_DEDN,NETSALARY,OT_AMT,PEN_GROSS,
PF_E,PF_GROSS,PTAX,PTAX_GROSS,
SPL_ALLOW,SYSROWID,TOKENNO,TOTDEDN,TRANSACTIONTYPE,
UNITCODE,USERNAME,VPF,VPF_PERC,WORKERSERIAL,YEARCODE,YEARMONTH

--PISCOMPONENTASSIGNMENT SYSTF  DELETED

EDU_ALLOW,ELEC_CHRG,ESI_RT,FIRE_ALLOW,FPF,FUEL_ALLOW,
HR_ALLOW,H_WAGES,LAUN_ALLOW,LV_ENCASH,ME_1,ME_2,ME_3,ME_4,ME_5,ME_6,
NS_ALLOW,NS_B_RATE,NS_C_RATE,OT_HRS,PARA_ALLOW,
PFL_EARN,SAL_ADV,SERV_CHRG,SE_DEPOSIT,SFT_B_DAYS,
SFT_C_DAYS,SICK_ALLOW,

SELECT * FROM SYS_TFMAP
WHERE SYS_COLUMNNAME
IN  (
'EDU_ALLOW','ELEC_CHRG','ESI_RT','FIRE_ALLOW','FPF','FUEL_ALLOW',
'HR_ALLOW','H_WAGES','LAUN_ALLOW','LV_ENCASH','ME_1','ME_2','ME_3','ME_4','ME_5','ME_6',
'NS_ALLOW','NS_B_RATE','NS_C_RATE','OT_HRS','PARA_ALLOW','PFL_EARN','SAL_ADV','SERV_CHRG','SE_DEPOSIT','SFT_B_DAYS',
'SFT_C_DAYS','SICK_ALLOW'
)
AND  SYS_TABLENAME_ACTUAL='PISCOMPONENTASSIGNMENT'
AND  SYS_TABLE_SEQUENCIER='10013'


SELECT * FROM SYS_TFMAP WHERE SYS_TABLENAME_ACTUAL='PISCOMPONENTASSIGNMENT'



SELECT * FROM COLS WHERE TABLE_NAME='PISCOMPONENTASSIGNMENT'


GBL_PISCOMPONENTASSIGNMENT


COMPANYCODE, DIVISIONCODE, YEARCODE, YEARMONTH, UNITCODE, DEPARTMENTCODE, CATEGORYCODE, GRADECODE, 
WORKERSERIAL, TOKENNO, TRANSACTIONTYPE, SYSROWID, LASTMODIFIED, USERNAME, BASIC, DA, HRA_GROSS, 
HRA_PER, HRA, PF_GROSS, PEN_GROSS, ESI_GROSS, PTAX_GROSS, PF_E, PF_C, FPF, VPF_PERC, VPF, ESI_E, 
ESI_C, PTAX, LWF, SARR_ARRE, SARR_ARRD, SARR_PF_GROSS, SARR_NPF_GROSS, GROSSEARN, GROSSDEDN, 
MISC_BF, MISC_CF, TOTEARN, TOTDEDN, NETSALARY, LOAN_PFLN, LINT_PFLN, LOAN_SADV, LINT_SADV, 
LOAN_VADV, LINT_VADV, LOAN_HLOAN, LINT_HLOAN, EPF, ITAX, FUEL, OTH_ALLOW, CHILD_ALOW, 
CONV_ALOW, HRA_FIXED, MISC_EARN, ESI_RT, MISC_DEDN, LTA, ADHOC, SPL_ALLOW, NS_HRS, 
OT_HRS, OT_DAYS, NS_ALLOW, OT_AMT, SERV_PERC, SERV_ALW, CONV_PERC, OEPF, OE_NPF, 
ESI_ADJERN, HRA_PERC, ACT_PF_GRS, LIC, ELECTRIC, MESS, LTP, SUSP_DEDN, HRA_AMT, 
ADHOC_NPF, OTHR_DEDN, PROF_BONUS, MEDICAL, LVENCSH_DAYS, LEAVE_ENC, ATN_INCNT, 
ATN_INCAMT, CLUB, CUMM_DAYS, CUM_PFGROS, ESI_RATE, CUMMPFEBAL, CUMMPFCBAL, 
CUMMVPFBAL, RT_BASIC

COMPANYCODE, DIVISIONCODE, YEARCODE, YEARMONTH, UNITCODE, DEPARTMENTCODE, CATEGORYCODE, GRADECODE, 
WORKERSERIAL, TOKENNO, TRANSACTIONTYPE, SYSROWID, OPERATIONMODE, USERNAME, BASIC, PFL_EARN, 
DA, HRA_PER, HR_ALLOW, PF_GROSS, PF_E, ESI_E, ADHOC, SPL_ALLOW,  MESS, OT_HRS, OT_AMT, PEN_GROSS, 
PTAX_GROSS, LWF, VPF_PERC, CLUB, ITAX, HR_DEDN, SERV_CHRG, SE_DEPOSIT, ELEC_CHRG, 
 CONV_ALOW, TOTDEDN, NETSALARY,  FPF, PTAX, 
VPF, MISC_DEDN, SAL_ADV, FIRE_ALLOW, HRA_FIXED, ESI_RT

FIRE_ALLOW,ELEC_CHRG,HR_DEDN, SERV_CHRG, SE_DEPOSIT, EDU_ALLOW, LAUN_ALLOW, 
SFT_B_DAYS, SFT_C_DAYS, NS_B_RATE, NS_C_RATE, NS_ALLOW, H_WAGES
SICK_ALLOW, ME_1, ME_2, ME_3, ME_4, ME_5, ME_6
TIFFIN,SWEEPER, LV_ENCASH, PARA_ALLOW,
SAL_ADV, FIRE_ALLOW, HRA_FIXED, 


'SICK_ALLOW',' ME_1',' ME_2',' ME_3',' ME_4',' ME_5',
'ME_6','TIFFIN','SWEEPER',' LV_ENCASH',' PARA_ALLOW',
'SAL_ADV',' FIRE_ALLOW',' HRA_FIXED'


-------------------------------------------

PRCASSIGNMENT_BF_MAINSAVE
---------------------------------------------------------------------------------------------

LIBL_FEADV
LIBL_OLADV
LIBL_OTADV
LIBL_PFL
LIBL_PJADV
LIBL_SA
LIBL_SPL
LIBL_SPL1
LIBL_STADV
LIC
LINT_SPL
LNBL_FEADV
LNBL_OLADV
LNBL_OTADV
LNBL_PFL
LNBL_PJADV
LNBL_SA
LNBL_SPL
LNBL_SPL1
LNBL_STADV
LOAN_SPL


---------------------------------------------------------------------------------------------

DECLARE 
    LV_STR VARCHAR2(4000);
    LV_STR1 VARCHAR2(4000);
    LV_SQL VARCHAR2(4000);
    LV_TABLENAME VARCHAR2(30);
BEGIN

LV_TABLENAME := 'PISPAYTRANSACTION';

    LV_STR :='ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,ELECTRIC,ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LIBL_FEADV,LIBL_OLADV,LIBL_OTADV,LIBL_PFL,LIBL_PJADV,LIBL_SA,LIBL_SPL,LIBL_SPL1,LIBL_STADV,LIC,LINT_SPL,LNBL_FEADV,LNBL_OLADV,LNBL_OTADV,LNBL_PFL,LNBL_PJADV,LNBL_SA,LNBL_SPL,LNBL_SPL1,LNBL_STADV,LOAN_SPL,LTA,MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,SUSP_DEDN,TOTEARN,VPF,VPF_PERC';
    
    LV_STR1 :='ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,ELECTRIC,ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LTA,MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,SUSP_DEDN,TOTEARN,VPF,VPF_PERC';

DELETE FROM PISCOMPONENTMASTER
WHERE COMPONENTCODE IN 
(
    SELECT COMPCODE FROM
    (
        SELECT COMPCODE FROM (
            select regexp_substr(LV_STR,'[^,]+', 1, level) COMPCODE
            from dual
            connect BY regexp_substr(LV_STR, '[^,]+', 1, level)
            is not null
            ORDER BY COMPCODE
        ) 
        MINUS
        SELECT COMPCODE FROM (
            select regexp_substr(LV_STR1,'[^,]+', 1, level) COMPCODE
            from dual
            connect BY regexp_substr(LV_STR1, '[^,]+', 1, level)
            is not null
            ORDER BY COMPCODE
        )
    )
);

    FOR C1 IN (  
        SELECT WM_CONCAT(COLNAME) COLNAME FROM
        (
            SELECT COLNAME FROM (
                select regexp_substr(LV_STR,'[^,]+', 1, level) COLNAME
                from dual
                connect BY regexp_substr(LV_STR, '[^,]+', 1, level)
                is not null
                ORDER BY COLNAME
            ) 
            MINUS
            SELECT COLNAME FROM (
                select regexp_substr(LV_STR1,'[^,]+', 1, level) COLNAME
                from dual
                connect BY regexp_substr(LV_STR1, '[^,]+', 1, level)
                is not null
                ORDER BY COLNAME
            )
        )
    )
    LOOP
    LV_SQL := 'ALTER TABLE '||LV_TABLENAME||CHR(10);
    LV_SQL := 'DROP ( '||C1.COLNAME||')'||CHR(10);
    
        DBMS_OUTPUT.PUT_LINE(C1.COLNAME);
    END LOOP;
END;


---------------------------------------------------------------------------------------------

SELECT WM_CONCAT(COMPONENTCODE) 
FROM PISCOMPONENTMASTER
ORDER BY COMPANYCODE

ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,
BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,ELECTRIC,
ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,
ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LIBL_FEADV,LIBL_OLADV,LIBL_OTADV,LIBL_PFL,
LIBL_PJADV,LIBL_SA,LIBL_SPL,LIBL_SPL1,LIBL_STADV,LIC,LINT_SPL,LNBL_FEADV,LNBL_OLADV,
LNBL_OTADV,LNBL_PFL,LNBL_PJADV,LNBL_SA,LNBL_SPL,LNBL_SPL1,LNBL_STADV,LOAN_SPL,LTA,
MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,
PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,
SUSP_DEDN,TOTEARN,VPF,VPF_PERC


ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,
BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,ELECTRIC,
ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,
ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LTA,
MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,
PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,
SUSP_DEDN,TOTEARN,VPF,VPF_PERC


------------------------------------------------------
--NEW COMPONENTS
--------------------------------------------------------

ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,
BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,ELECTRIC,
ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,
ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LTA,MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,
OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,
SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,SUSP_DEDN,TOTEARN,VPF,VPF_PERC



select regexp_substr('A1,A2,A4','[^,]+', 1, level)
from dual
connect BY regexp_substr('A1,A2,A4', '[^,]+', 1, level)
is not null;

-------------------------------

ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,
BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,
ELECTRIC,ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,
ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LTA,MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,
OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,
SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,SUSP_DEDN,TOTEARN,VPF,VPF_PERC


---------------------------------------------------------------------------------------------

pisemployeemaster


SELECT * FROM PISCOMPONENTMASTER WHERE COMPONENTTYPE='DEDUCTION'


SELECT * FROM PISCOMPONENTMASTER WHERE COMPONENTTYPE='EARNING'

SELECT * FROM PISCOMPONENTMASTER WHERE PHASE<=5
ORDER BY PHASE, CALCULATIONINDEX

DELETE  fROM PISCOMPONENTMASTER
WHERE COMPONENTCODE IN (
'NS_HRS','OT_HRS','OT_DAYS','SERV_PERC','CONV_PERC','ESI_ADJERN','HRA_AMT','NS_ALLOW','PROF_BONUS','SERV_ALW','ADHOC_NPF'
)



NS_HRS,
OT_HRS,
OT_DAYS,
SERV_PERC,
CONV_PERC
ESI_ADJERN
HRA_AMT
NS_ALLOW
PROF_BONUS
SERV_ALW
ADHOC_NPF


SELECT * FROM PISCOMPONENTMASTER

----------------------------------------------------------------

 
DELETE  fROM PISCOMPONENTMASTER
WHERE COMPONENTCODE IN (
'LWF','MESS','LTP','LOAN_STADV','LINT_STADV','LOAN_OTADV','LINT_OTADV','LOAN_PJADV','LINT_PJADV',
'LOAN_SA','LINT_SA','LOAN_FEADV','LINT_FEADV','LOAN_OLADV','LINT_OLADV','CLUB','LOAN_PFL','LINT_PFL','LOAN_SPL1','LINT_SPL1'
)




LWF
MESS
LTP
LOAN_STADV
LINT_STADV
LOAN_OTADV
LINT_OTADV
LOAN_PJADV
LINT_PJADV
LOAN_SA
LINT_SA
LOAN_FEADV
LINT_FEADV
LOAN_OLADV
LINT_OLADV
CLUB
LOAN_PFL
LINT_PFL
LOAN_SPL1
LINT_SPL1






SELECT * FROM
PISPAYTRANSACTION

ALTER TABLE PISPAYTRANSACTION
DROP COLUMN LINT_SPL1


ALTER TABLE PISPAYTRANSACTION
DROP (LOAN_PFL,LINT_PFL)
 

ALTER TABLE PISPAYTRANSACTION
DROP (
LWF,
MESS,
LTP,
LOAN_STADV,
LINT_STADV,
LOAN_OTADV,
LINT_OTADV,
LOAN_PJADV,
LINT_PJADV,
LOAN_SA,
LINT_SA,
LOAN_FEADV,
LINT_FEADV,
LOAN_OLADV,
LINT_OLADV,
CLUB,
LOAN_PFL,
LINT_PFL,
LOAN_SPL1,
LINT_SPL1)


ALTER TABLE PISCOMPONENTASSIGNMENT
DROP (
LWF,
MESS,
LTP,
LOAN_STADV,
LINT_STADV,
LOAN_OTADV,
LINT_OTADV,
LOAN_PJADV,
LINT_PJADV,
LOAN_SA,
LINT_SA,
LOAN_FEADV,
LINT_FEADV,
LOAN_OLADV,
LINT_OLADV,
CLUB,
LOAN_PFL,
LINT_PFL)




COMPANYCODE, DIVISIONCODE, YEARCODE, YEARMONTH, EFFECT_YEARMONTH, UNITCODE, DEPARTMENTCODE, 
CATEGORYCODE, GRADECODE, WORKERSERIAL, TOKENNO, TRANSACTIONTYPE, PAYMODE, 
ATTN_SALD, ATTN_WPAY, ATTN_ADJD, ATTN_TOTD, ATTN_LDAY, ATTN_CALCF, ATTN_OFFD, ATTN_HOLD, ATTN_WRKD, 
LDAY_CL, LDAY_PL, LDAY_SL, LVBL_CL, LVBL_PL, LVBL_SL, LV_ENCASH_DAYS, LV_ENCASH, 
BASIC, DA, HRA_GROSS, HRA_PER, HRA, PF_GROSS, PEN_GROSS, ESI_GROSS, PTAX_GROSS, 
PF_E, PF_C, FPF, VPF_PERC, VPF, ESI_E, ESI_C, PTAX, ITAX, ESI_RT, 
SARR_ARRE, SARR_ARRD, SARR_PFARRE, SARR_NPFARRE, 
GROSSEARN, GROSSDEDN, MISC_BF, MISC_CF, TOTEARN, TOTDEDN, NETSALARY, SYSROWID, LASTMODIFIED, 
USERNAME, 
ADHOC, SPL_ALLOW, NS_HRS, OT_HRS, OT_DAYS, NS_ALLOW, OT_AMT, SERV_PERC, SERV_ALW, CONV_PERC, 
CONV_ALOW, OEPF, OE_NPF, ESI_ADJERN, HRA_PERC, ACT_PF_GRS, LIC, ELECTRIC, SUSP_DEDN, 
MISC_DEDN, HRA_AMT, ADHOC_NPF, OTHR_DEDN, PROF_BONUS, MEDICAL, LTA, LOAN_SPL, LINT_SPL, 
LNBL_SPL, LIBL_SPL, LNBL_STADV, LIBL_STADV, LNBL_OTADV, LIBL_OTADV, LNBL_PJADV, LIBL_PJADV, 
LNBL_SA, LIBL_SA, LNBL_FEADV, LIBL_FEADV, LNBL_OLADV, LIBL_OLADV, LVENCSH_DAYS, LEAVE_ENC, EPF, 
ATN_INCNT, ATN_INCAMT, CUMM_DAYS, CUM_PFGROS, ESI_RATE, LNBL_PFL, LIBL_PFL, LOAN_SPL1, LNBL_SPL1, 
LIBL_SPL1, CUMM_PF_E, CUMM_PF_C, CUMM_VPF, RT_BASIC, LDAY_CS


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------