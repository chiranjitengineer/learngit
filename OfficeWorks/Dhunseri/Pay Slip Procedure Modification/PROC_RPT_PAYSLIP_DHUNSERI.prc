CREATE OR REPLACE PROCEDURE DHUNSERI.PROC_RPT_PAYSLIP_DHUNSERI
(
    P_COMPANYCODE VARCHAR2,
    P_DIVISIONCODE VARCHAR2,
    P_FROMDATE     VARCHAR2,
    P_TODATE       VARCHAR2,
    P_CATEGORY       VARCHAR2 DEFAULT NULL,
    P_CLUSTER       VARCHAR2 DEFAULT NULL,
    P_ATTNBOOK       VARCHAR2 DEFAULT NULL,
    P_TOKENNO       VARCHAR2 DEFAULT NULL
)
AS 
    LV_SQLSTR           VARCHAR2(32000);  
    LV_INSERTSTR VARCHAR2(4000);

    P_INT1  NUMBER(20);
    P_BLOCKS  NUMBER(10);
    
    g_pBoldOn VARCHAR2(20);
    g_tBoldOn VARCHAR2(20);
    g_pBoldOff VARCHAR2(20);
    g_tBoldOff VARCHAR2(20);
    g_CompOn VARCHAR2(20);
    g_CompOff VARCHAR2(20);
    g_Pg72Lines VARCHAR2(20);
    g_Pg66Lines VARCHAR2(20);
    g_Pg36Lines VARCHAR2(20);
    g_NewPage VARCHAR2(20);
    g_Normal VARCHAR2(20);
    g_Enlarge VARCHAR2(20);
    g_Condence VARCHAR2(20);
    g_CompSmall VARCHAR2(20);
    g_NormalSmall  VARCHAR2(20);
   
BEGIN

   g_pBoldOn := Chr(27)|| 'E';
   g_tBoldOn := Chr(27) || Chr(14);
   g_pBoldOff := Chr(27) || 'F';
   g_tBoldOff := Chr(27) || Chr(18);
   g_CompOn := Chr(27) || Chr(15);
   g_CompOff := Chr(27) || Chr(18);
   g_Pg72Lines := Chr(27) || 'C' || Chr(72);
   g_Pg66Lines := Chr(27) || 'C' || Chr(66);
   g_Pg36Lines := Chr(27) || 'C' || Chr(36);
   g_NewPage := Chr(12);
   g_Normal := Chr(18);
   g_Enlarge := Chr(14);
   g_Condence := Chr(15);
   g_CompSmall := Chr(27) || Chr(77) || Chr(15);
   g_NormalSmall := Chr(27) || Chr(77);

   DELETE FROM GTT_PAYSLIP_DHUNSERI WHERE 1=1; 
        
    LV_SQLSTR := LV_SQLSTR ||   'INSERT INTO GTT_PAYSLIP_DHUNSERI'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   '('|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   '    COMPANYCODE, COMPANYNAME, DIVISIONCODE, DIVISIONNAME, WORKERSERIAL, TOKENNO, '|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   '    CATEGORYCODE, TYPEOFCATEGORY, CATEGORYDESC, ATTNBOOKCODE, ATTNBOOKDESC, OCCUPATIONCODE, '|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   '    CLUSTERCODE, CLUSTERDESC,PAYDAYS, RATIONCARDNO, PF,GENERAL,PFADVDED,MADVDED,PFINT, '|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   '    COINBF, COINCF, RATION, GROSSEARN,OTWAGES, RICE, LIC, OTHERDED, TOTDED,WHEAT,ACMS, '|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   '    LBWELF,NETEARN'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   ')'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'SELECT A.COMPANYCODE,G.COMPANYNAME, A.DIVISIONCODE,H.DIVISIONNAME, A.WORKERSERIAL, A.TOKENNO, '|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'A.CATEGORYCODE, C.TYPEOFCATEGORY,C.CATEGORYDESC, A.ATTNBOOKCODE, E.ATTNBOOKDESC, A.OCCUPATIONCODE, A.CLUSTERCODE, F.CLUSTERDESC,'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'NVL(HAZIRA,0)+NVL(EXTRAHAZIRA,0) PAYDAYS,NVL(B.RATION_FAMILY_NO,0) RATIONCARDNO,NVL(PF_E,0) PF,NVL(LOAN_ADVGN,0) GENERAL,'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'NVL(LOAN_PF,0) PFADVDED,NVL(LOAN_MD,0) MADVDED,NVL(ATTN_ALLOW,0) PFINT,NVL(COINBF,0) COINBF,NVL(COINCF,0) COINCF,'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'NVL(A.RAT_DED,0) RATION,NVL(GROSSWAGES,0) GROSSEARN,NVL(OT_AMOUNT,0) OTWAGES,'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'NVL(B.TOTALRICEKG,0) RICE,NVL(DED_LIC,0) LIC,NVL(OTHER_DED,0) OTHERED,NVL(GROSSDEDN,0) TOTDED,'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'NVL(B.TOTALATTAKG,0) WHEAT,NVL(DED_UNION,0) ACMS,NVL(DED_WELFARE,0) LBWELF,NVL(NETSALARY,0) NETEARN'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'FROM GPSPAYSHEETDETAILS A, GPSRATIONDETAILS B,GPSCATEGORYMAST C,'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'GPSATTNBOOKMAST E, GPSCLUSTERMASTER F, COMPANYMAST G, DIVISIONMASTER H'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'WHERE 1=1'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'AND A.COMPANYCODE='''||P_COMPANYCODE||''' '|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'AND A.DIVISIONCODE='''||P_DIVISIONCODE||''''|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   '--AND A.TOKENNO=''10002'''|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'AND A.PERIODFROM>=TO_DATE('''||P_FROMDATE||''',''DD/MM/YYYY'')'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'AND A.PERIODFROM<=TO_DATE('''||P_TODATE||''',''DD/MM/YYYY'')'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'AND A.COMPANYCODE=B.COMPANYCODE(+)'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'AND A.DIVISIONCODE=B.DIVISIONCODE(+)'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'AND A.WORKERSERIAL=B.WORKERSERIAL(+)'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'AND A.PERIODFROM=B.PERIODFROM(+)'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'AND A.COMPANYCODE=C.COMPANYCODE'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'AND A.DIVISIONCODE=C.DIVISIONCODE'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'AND A.CATEGORYCODE=C.CATEGORYCODE'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'AND A.COMPANYCODE=E.COMPANYCODE'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'AND A.DIVISIONCODE=E.DIVISIONCODE'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'AND A.ATTNBOOKCODE=E.ATTNBOOKCODE'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'AND A.COMPANYCODE=F.COMPANYCODE'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'AND A.DIVISIONCODE=F.DIVISIONCODE'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'AND A.CLUSTERCODE=F.CLUSTERCODE'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'AND A.COMPANYCODE=G.COMPANYCODE'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'AND A.COMPANYCODE=H.COMPANYCODE'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR ||   'AND A.DIVISIONCODE=H.DIVISIONCODE'|| CHR(10);

    IF P_CATEGORY IS NOT NULL THEN
        LV_SQLSTR := LV_SQLSTR ||   '           AND A.CATEGORYCODE  IN ('|| P_CATEGORY ||')' || CHR(10);
    END IF;
                    
    IF P_CLUSTER IS NOT NULL THEN
        LV_SQLSTR := LV_SQLSTR || '             AND A.CLUSTERCODE  IN ('|| P_CLUSTER ||')' || CHR(10);
    END IF;
                    
    IF P_ATTNBOOK IS NOT NULL THEN
        LV_SQLSTR := LV_SQLSTR || '             AND A.ATTNBOOKCODE  IN ('|| P_ATTNBOOK ||')' || CHR(10);
    END IF;
                    
    IF P_TOKENNO IS NOT NULL THEN
        LV_SQLSTR := LV_SQLSTR || '             AND A.TOKENNO  IN ('|| P_TOKENNO ||')' || CHR(10);
    END IF;
                        
    LV_SQLSTR := LV_SQLSTR ||   '  ORDER BY   A.TOKENNO' || CHR(10);
                    
    DBMS_OUTPUT.PUT_LINE(LV_SQLSTR);
    EXECUTE IMMEDIATE LV_SQLSTR;
  
    UPDATE GTT_PAYSLIP_DHUNSERI A
    SET (EMPLOYEENAME)=
    (
        SELECT  EMPLOYEENAME
        FROM GPSEMPLOYEEMAST
        WHERE A.COMPANYCODE=COMPANYCODE
        AND A.DIVISIONCODE=DIVISIONCODE
        AND A.WORKERSERIAL=WORKERSERIAL
    ),
    DATEFROM=P_FROMDATE,
    DATETO = P_TODATE
    WHERE 1=1;
       
    
    
        
        
    --ADDED ON 29/10/2020 BY CHIRANJIT GHOSH   
    UPDATE GTT_PAYSLIP_DHUNSERI A
    SET PAYDAYS = NVL((
        SELECT SUM(HAZIRA) PRESENTDAYS FROM GPSATTENDANCEDETAILS
        WHERE ATTENDANCEDATE BETWEEN TO_DATE(P_FROMDATE,'DD/MM/YYYY')  AND TO_DATE(P_TODATE,'DD/MM/YYYY')
        AND OCCOUPATIONTYPE IN ('TUBE FILLING','PLUCKING','OTHERS')
        AND WORKERSERIAL =  A.WORKERSERIAL
    ),0)
    WHERE 1=1;  
    --ADDED ON 29/10/2020 BY CHIRANJIT GHOSH
    
    
----------------------------------------------------------
----  start text report ---
    
    DELETE FROM GTT_TEXT_REPORT WHERE 1=1;
--    commit;
   
    P_INT1 := 0;
    P_BLOCKS := 0;
    
--    PROC_INSERT_TEXT_REPORT(g_CompSmall);
    FOR C1 IN 
    ( 
        SELECT * FROM (
            SELECT DISTINCT TOKENNO, EMPLOYEENAME, DIVISIONNAME,TYPEOFCATEGORY, CLUSTERDESC,ATTNBOOKDESC,PAYDAYS,RATIONCARDNO,PF,GENERAL,PFADVDED,MADVDED,PFINT,
            COINCF, COINBF, RATION,GROSSEARN, OTWAGES,RICE,LIC, OTHERDED, TOTDED, WHEAT,ACMS,LBWELF,NETEARN,FN_NUM_TO_WORDS(NETEARN,'RS') RS_WORD
            FROM GTT_PAYSLIP_DHUNSERI 
            ORDER BY TOKENNO
        )
    )
    LOOP 
    
        
        IF P_BLOCKS >= 5 THEN
            P_INT1 := P_INT1 + 1;
            PROC_INSERT_TEXT_REPORT(g_NewPage);
            P_BLOCKS := 0;
        END IF;
        
        P_BLOCKS := P_BLOCKS+1;

--        PROC_INSERT_TEXT_REPORT(g_CompOn);
--        PROC_INSERT_TEXT_REPORT(g_CompSmall);
        LV_INSERTSTR := g_NormalSmall||'|------------------------------------------------------------------------------------------------------|';
        P_INT1 := P_INT1 + 1;
        PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
        
        
        LV_INSERTSTR := '|'||FMTALIGN(C1.DIVISIONNAME,35,'L')||FMTALIGN(P_FROMDATE||' TO '||P_TODATE,30,'L')||FMTALIGN('WORKERTYPE:'|| C1.TYPEOFCATEGORY,39,'R')||'|' ;
        P_INT1 := P_INT1 + 1;
        PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
        
        LV_INSERTSTR := '|'||FMTALIGN('Token No:',9,'L')||FMTALIGN(C1.TOKENNO,11,'R')||FMTALIGN(' ',2,'R')||FMTALIGN('Name:',5,'L')||FMTALIGN(C1.EMPLOYEENAME,30,'L')||FMTALIGN(' ',47,'R')||'|' ;
        P_INT1 := P_INT1 + 1;
        PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
        
        LV_INSERTSTR := '|'||FMTALIGN('Pay Days:',11,'L',2)||FMTALIGN(C1.PAYDAYS,11,'R',2)||FMTALIGN(' ',2,'R')||FMTALIGN('M Adv Ded:',10,'L',2)||FMTALIGN(C1.MADVDED,8,'R',2)||FMTALIGN(' ',62,'R')||'|';
        P_INT1 := P_INT1 + 1;
        PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
        
        LV_INSERTSTR := '|'||FMTALIGN('Ration Card No:',16,'L',2)||FMTALIGN(C1.RATIONCARDNO,6,'R',2)||FMTALIGN(' ',2,'R')||FMTALIGN('PF Int:',7,'L',2)||FMTALIGN(C1.PFINT,11,'R',2)||FMTALIGN(' ',2,'R')||FMTALIGN('Ration:',7,'L',2)||FMTALIGN(C1.RATION,11,'R',2)||FMTALIGN(' ',42,'R')||'|';
        P_INT1 := P_INT1 + 1;
        PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
        
        LV_INSERTSTR := '|'||FMTALIGN('PF:',5,'L',2)||FMTALIGN(C1.PF,17,'R',2)||FMTALIGN(' ',2,'R')||FMTALIGN('Coin BF:',8,'L',2)||FMTALIGN(C1.COINBF,10,'R',2)||FMTALIGN(' ',2,'R')||FMTALIGN('Gross Earn:',11,'L',2)||FMTALIGN(C1.GROSSEARN,7,'R',2)||FMTALIGN(' ',2,'R')||FMTALIGN('LIC:',4,'L',2)||FMTALIGN(C1.LIC,14,'R',2)||FMTALIGN(' ',22,'R')||'|';
        P_INT1 := P_INT1 + 1;
        PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
        
        LV_INSERTSTR := '|'||FMTALIGN('General:',8,'L',2)||FMTALIGN(C1.GENERAL,14,'R',2)||FMTALIGN(' ',2,'L')||FMTALIGN('Coin CF:',8,'L',2)||FMTALIGN(C1.COINCF,10,'R',2)||FMTALIGN(' ',2,'R')||FMTALIGN('OT Wages:',9,'L',2)||FMTALIGN(C1.OTWAGES,9,'R',2)||FMTALIGN(' ',2,'R')||FMTALIGN('Other Ded:',10,'L',2)||FMTALIGN(C1.OTHERDED,8,'R',2)||FMTALIGN(' ',2,'R')||FMTALIGN('ACMS:',5,'L',2)||FMTALIGN(C1.ACMS,15,'R',2)||'|';
        P_INT1 := P_INT1 + 1;
        PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
        
        LV_INSERTSTR := '|'||FMTALIGN('PF Adv Ded:',13,'L',2)||FMTALIGN(C1.PFADVDED,9,'R',2)||FMTALIGN(' ',2,'R')||FMTALIGN(' ',40,'R')||FMTALIGN('Tot Ded:',8,'L',2)||FMTALIGN(C1.TOTDED,10,'R',2)||FMTALIGN(' ',2,'R')||FMTALIGN('LB Welf:',8,'L',2)||FMTALIGN(C1.LBWELF,12,'R',2)||'|';
        P_INT1 := P_INT1 + 1;
        PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
        
        LV_INSERTSTR := '|'||FMTALIGN(C1.RS_WORD,80,'L')||FMTALIGN('Net Earn:',11,'L',2)||FMTALIGN(C1.NETEARN,13,'R',2)||'|';
        P_INT1 := P_INT1 + 1;
        PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
--        ||g_CompOff
--        PROC_INSERT_TEXT_REPORT(g_CompOff);

        
        LV_INSERTSTR := '|--------------------------------------------------------------------------------------------------------|';
        P_INT1 := P_INT1 + 1;
        PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
        LV_INSERTSTR := '|                                                 Tear Off                                               |';
        P_INT1 := P_INT1 + 1;
        PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
        LV_INSERTSTR := '|--------------------------------------------------------------------------------------------------------|';
        P_INT1 := P_INT1 + 1;
        PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);
        
        
    END LOOP;
    
    LV_INSERTSTR := '|------------------------------------------------------------------------------------------------------------|';
    P_INT1 := P_INT1 + 1;
    PROC_INSERT_TEXT_REPORT(LV_INSERTSTR);

--commit;

-------end text report----
     
END;
/