CREATE OR REPLACE PROCEDURE BIRLANEW.PROC_RPT_ATMCONTROL_EXL
(
    P_COMPANYCODE VARCHAR2,
    P_DIVISIONCODE VARCHAR2,
    P_YEARCODE VARCHAR2,
    P_YEARMONTH VARCHAR2,
    P_UNIT VARCHAR2 DEFAULT NULL,
    P_CATEGORY VARCHAR2 DEFAULT NULL
)
AS 
     
  
    LV_SQLSTR VARCHAR2(32000);    
       
    REPMONTH VARCHAR2(20);
    
    LV_ROWINDEX NUMBER(20);
    LV_EXCELROWTYPE VARCHAR2(50);  
    LV_EXCELROWSTYLE VARCHAR2(2000);  
    LV_EXCELVALUES VARCHAR2(2000);  
    LV_EXCELTAG VARCHAR2(2000);
    
    LV_FLAG VARCHAR2(10);
    
     
    LV_TOPHEADER  VARCHAR2(5000);  
    LV_COLUMNHEADER  VARCHAR2(5000);  
    LV_REPORTHEADER VARCHAR2(5000);  
    LV_COMPANYNAME VARCHAR2(500);  
    LV_DIVISIONNAME VARCHAR2(500);  
    LV_CHR VARCHAR2(10);
--    LV_SQLSTRNEW           VARCHAR2(9000);

BEGIN

      --THIS LINE FOR GPS_ERROR_LOG
    LV_SQLSTR := 'PROC_RPT_ATMCONTROL_EXL('''||P_COMPANYCODE||''','''||P_DIVISIONCODE||''','''||P_YEARCODE||''','''||P_YEARMONTH||''')';
     
--     DELETE FROM PIS_ERROR_LOG
--     WHERE PROC_NAME='PROC_RPT_ITAXCOMPUTATION_EXL';
--     
--     insert into PIS_ERROR_LOG
--     (
--        COMPANYCODE, DIVISIONCODE, PROC_NAME, ORA_ERROR_MESSG, ERROR_DATE, ERROR_QUERY, PAR_VALUES, FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS
--     )
--     values
--     (
--        P_COMPANYCODE, P_DIVISIONCODE, LV_SQLSTR, TO_DATE(P_FROMDATE,'DD/MM/YYYY'), TO_DATE(P_TODATE,'DD/MM/YYYY'),NULL , LV_SQLSTR, 'PROC_INSERT_PFFORM5', 'SCRIPT ADDED'
--     );
     
     LV_SQLSTR := NULL;
    -- EXEC PROC_RPT_ITAXCOMPUTATION_EXL('0001','0002','2019-2020','00378')
  

    SELECT COMPANYNAME, DIVISIONNAME 
    INTO LV_COMPANYNAME, LV_DIVISIONNAME
    FROM COMPANYMAST C, DIVISIONMASTER D
    WHERE D.COMPANYCODE=C.COMPANYCODE
    AND C.COMPANYCODE=P_COMPANYCODE
    AND D.DIVISIONCODE=P_DIVISIONCODE;
    
            
    DELETE FROM GTT_PIS_ATMCONTROL_REP WHERE 1=1;
    
    LV_SQLSTR := NULL;
    LV_SQLSTR := LV_SQLSTR || 'INSERT INTO GTT_PIS_ATMCONTROL_REP' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '(' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    COMPANYCODE, DIVISIONCODE, UNITCODE, UNITSHORTDESC, CATEGORYCODE, ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    CATEGORYDESC, PAYMODE, GROSSEARN, GROSSDEDN, NETSALARY' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || ')' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'SELECT A.COMPANYCODE, A.DIVISIONCODE, A.UNITCODE,B.UNITSHORTDESC, A.CATEGORYCODE, ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'C.CATEGORYDESC, A.PAYMODE, GROSSEARN,GROSSDEDN,NETSALARY ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'FROM ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '(' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    SELECT COMPANYCODE, DIVISIONCODE, UNITCODE, CATEGORYCODE, PAYMODE,' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    SUM(GROSSEARN) GROSSEARN,SUM(GROSSDEDN) GROSSDEDN,SUM(NETSALARY)  NETSALARY' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    FROM PISPAYTRANSACTION' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    WHERE COMPANYCODE='''||P_COMPANYCODE||'''' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    AND DIVISIONCODE='''||P_DIVISIONCODE||'''' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    AND YEARCODE='''||P_YEARCODE||'''' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    AND YEARMONTH='''||P_YEARMONTH||'''' || CHR(10);

    IF P_UNIT IS NOT NULL THEN
    LV_SQLSTR := LV_SQLSTR || '    AND UNITCODE IN ('||P_UNIT||')' || CHR(10);
    END IF;

    IF P_CATEGORY IS NOT NULL THEN
    LV_SQLSTR := LV_SQLSTR || '    AND CATEGORYCODE IN ('||P_CATEGORY||')' || CHR(10);
    END IF;

    LV_SQLSTR := LV_SQLSTR || '    GROUP BY COMPANYCODE, DIVISIONCODE, UNITCODE, CATEGORYCODE, PAYMODE' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || ') A, PISUNITMASTER B, PISCATEGORYMASTER C' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'WHERE A.COMPANYCODE=B.COMPANYCODE' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'AND A.DIVISIONCODE=B.DIVISIONCODE' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'AND A.UNITCODE=B.UNITCODE' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'AND A.COMPANYCODE=C.COMPANYCODE' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'AND A.DIVISIONCODE=C.DIVISIONCODE' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'AND A.CATEGORYCODE=C.CATEGORYCODE' || CHR(10);


    DBMS_OUTPUT.PUT_LINE(LV_SQLSTR);

    EXECUTE IMMEDIATE LV_SQLSTR ;




---START EXCEL REPORT GTT_EXCEL_REPORT

DELETE FROM GTT_EXCEL_REPORT WHERE 1=1;

    LV_ROWINDEX := 0;

    LV_EXCELROWSTYLE := NULL;
    
    LV_CHR := 'F';

FOR C1 IN 
( 
    SELECT COMPANYCODE, DIVISIONCODE, UNITCODE, UNITSHORTDESC, CATEGORYCODE, CATEGORYDESC, 
    PAYMODE, GROSSEARN, GROSSDEDN, NETSALARY FROM GTT_PIS_ATMCONTROL_REP ORDER BY UNITCODE
)
LOOP


    LV_EXCELVALUES := NULL;
    LV_EXCELTAG := NULL;
        
        
    LV_ROWINDEX := LV_ROWINDEX + 1;
    
    IF LV_ROWINDEX = 1 THEN
        
    --START TOP HEADER
        LV_EXCELROWTYPE := 'TOPHEADER';
        
        LV_EXCELVALUES := LV_COMPANYNAME;    
      
        
        LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':'||LV_CHR||LV_ROWINDEX||'~BORDER.BOTTOM.STYLE~THIN~HORIZONTALALIGNMENT~LEFT~VERTICALALIGNMENT~CENTER~FONT.BOLD~TRUE~FONT.SIZE~10~FONT.NAME~Tahoma';

        PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);
        
        LV_ROWINDEX := LV_ROWINDEX + 1;
     


        LV_EXCELROWTYPE := 'REPORTHEADER';
    
        LV_EXCELVALUES := LV_DIVISIONNAME;    
      
        
        LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':'||LV_CHR||LV_ROWINDEX||'~BORDER.BOTTOM.STYLE~THIN~HORIZONTALALIGNMENT~LEFT~VERTICALALIGNMENT~CENTER~FONT.BOLD~TRUE~FONT.SIZE~10~FONT.NAME~Tahoma';

        PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);
        
        LV_ROWINDEX := LV_ROWINDEX + 1;
        
        LV_EXCELROWTYPE := 'REPORTHEADER';
    
        LV_EXCELVALUES := 'STAFF/SUB-STAFF VOUCHER AND ATM LIST CHECKING FOR MONTH OF '||TO_CHAR(TO_DATE(P_YEARMONTH,'YYYYMM'),'MON-YYYY');    
      
        
        LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':'||LV_CHR||LV_ROWINDEX||'~BORDER.BOTTOM.STYLE~THIN~HORIZONTALALIGNMENT~LEFT~VERTICALALIGNMENT~CENTER~FONT.BOLD~TRUE~FONT.SIZE~9~FONT.NAME~Tahoma';

        PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);
        
        LV_ROWINDEX := LV_ROWINDEX + 1;
        
   

    --END TOP HEADER
    
    
    --START COLUMN HEADER
    
        LV_EXCELROWTYPE := 'COLUMNHEADER';
        
        
       -- LV_EXCELVALUES := 'NAME OF WORKER~HORIZONTALALIGNMENT~LEFT^DAYS^PLAN^REAL^DAILY WAGE^SUNDAY^TOTAL^BONUS KGS^BONUS VALUE^DISCOUNT KG^DISCOUNT VALUE^GROSS SALARY^INSS^OTM^NET SALARY^ADVANCE^AMOUNT PAYABLE^SIGNATURE';
          
--        SELECT WM_CONCAT(NVL(COLUMNATTRIBUTE, NVL(SHORTDESCRIPTION,'COL_'||COLUMNNO))) INTO LV_EXCELVALUES
--         FROM
--        (
--            SELECT DISTINCT A.COLUMNNO, A.COLUMNATTRIBUTE,A.SHORTDESCRIPTION 
--            FROM PISITAXPARAM A
--            WHERE 1=1
--            AND A.COMPANYCODE= P_COMPANYCODE
--            AND A.DIVISIONCODE= P_DIVISIONCODE
--            AND A.YEARCODE= P_YEARCODE
--            AND A.INCLUDEINFORM16 ='Y'
--            ORDER BY A.COLUMNNO
--        );
        LV_EXCELVALUES := 'UNIT^CATEGORY^PAYMODE^EARNING^DEDUCTION^NETPAY';
        
        --LV_EXCELROWSTYLE := 'RANGE~A'||LV_ROWINDEX||':R'||LV_ROWINDEX||'~BORDER.BOTTOM.STYLE~THIN~HORIZONTALALIGNMENT~CENTERCONTINUOUS~VERTICALALIGNMENT~CENTER~FONT.SIZE~10';

        PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);

        LV_ROWINDEX := LV_ROWINDEX + 1;
   
        
    END IF;
    
    LV_EXCELROWTYPE := 'COLUMNVALUE';
  
    LV_EXCELVALUES := C1.UNITSHORTDESC||'^'||C1.CATEGORYDESC||'^'||C1.PAYMODE||'^'||C1.GROSSEARN||'^'||C1.GROSSDEDN||'^'||C1.NETSALARY;

    LV_EXCELROWSTYLE := 'RANGE~D'||LV_ROWINDEX||':'||LV_CHR||LV_ROWINDEX||'~FONT.SIZE~10~HORIZONTALALIGNMENT~RIGHT~NUMBERFORMAT~##,##,##0.00';
    
    PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);
END LOOP;
 

FOR C1 IN 
( 
    SELECT SUM(GROSSEARN) GROSSEARN, SUM(GROSSDEDN) GROSSDEDN, SUM(NETSALARY) NETSALARY 
    FROM GTT_PIS_ATMCONTROL_REP
)
LOOP
    LV_ROWINDEX := LV_ROWINDEX + 1;
    LV_EXCELROWTYPE := 'COLUMNVALUE';
  
    LV_EXCELVALUES := 'TOTAL^^^'||C1.GROSSEARN||'^'||C1.GROSSDEDN||'^'||C1.NETSALARY;

    LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':C'||LV_ROWINDEX||'~FONT.BOLD~TRUE~RANGE~D'||LV_ROWINDEX||':'||LV_CHR||LV_ROWINDEX||'~FONT.SIZE~10~FONT.BOLD~TRUE~HORIZONTALALIGNMENT~RIGHT~NUMBERFORMAT~##,##,##0.00';
    
    PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);
END LOOP;


    LV_ROWINDEX := LV_ROWINDEX + 1;
    LV_EXCELROWTYPE := 'COLUMNVALUE';
  
    LV_EXCELVALUES := 'RUN DATE '|| TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI:SS')||'^^^^^';

    LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':F'||LV_ROWINDEX||'~FONT.BOLD~TRUE~FONT.SIZE~10';
    
    PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);


END;
/
