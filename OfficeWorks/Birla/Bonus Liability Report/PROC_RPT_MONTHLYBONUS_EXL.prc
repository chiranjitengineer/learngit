CREATE OR REPLACE PROCEDURE BIRLANEW.PROC_RPT_MONTHLYBONUS_EXL
(
    P_COMPANYCODE VARCHAR2,
    P_DIVISIONCODE VARCHAR2,
    P_YEARCODE VARCHAR2,
--    P_FROMDATE VARCHAR2,
--    P_TODATE VARCHAR2,
    P_UNIT VARCHAR2 DEFAULT NULL,
    P_CATEGORY VARCHAR2 DEFAULT NULL
)
AS 
--     EXEC PROC_RPT_MONTHLYBONUS_EXL('0001','0002','2020-2021','01/04/2020','31/03/2021')
  
    LV_SQLSTR VARCHAR2(32000);    
       
    REPMONTH VARCHAR2(20);
    
    LV_ROWINDEX NUMBER(20);
    LV_EXCELROWTYPE VARCHAR2(50);  
    LV_EXCELROWSTYLE VARCHAR2(2000);  
    LV_EXCELVALUES VARCHAR2(2000);  
    LV_EXCELTAG VARCHAR2(2000);
    
    LV_FLAG VARCHAR2(10);
    
     
    LV_TOPHEADER  VARCHAR2(5000);  
    LV_COLUMNHEADER  VARCHAR2(5000);  
    LV_REPORTHEADER VARCHAR2(5000);  
    LV_COMPANYNAME VARCHAR2(500);  
    LV_DIVISIONNAME VARCHAR2(500);  
    LV_CHR VARCHAR2(10);
    
    LV_MONTHS VARCHAR2(1000);
--    LV_SQLSTRNEW           VARCHAR2(9000);

    LV_YEARCODE VARCHAR2(10);
    LV_FROMDATE VARCHAR2(10);

BEGIN

    LV_FROMDATE := '01/04/2020';

    LV_YEARCODE := P_YEARCODE;
      --THIS LINE FOR GPS_ERROR_LOG
--    LV_SQLSTR := 'PROC_RPT_MONTHLYBONUS_EXL('''||P_COMPANYCODE||''','''||P_DIVISIONCODE||''','''||P_YEARCODE||''','''||P_FROMDATE||''','''||P_TODATE||''')';

    SELECT WM_CONCAT(''''||YYYYMM||'''  '||MM)  INTO LV_MONTHS
    FROM 
    (
        SELECT TO_CHAR(MM,'YYYYMM') YYYYMM,TO_CHAR(MM,'MON') MM 
        FROM 
        (
            SELECT ADD_MONTHS(TO_DATE(LV_FROMDATE,'DD/MM/YYYY'), LEVEL-1) MM 
            FROM DUAL CONNECT BY LEVEL <= 12
        )
    );
     
     LV_SQLSTR := NULL; 
  

    SELECT COMPANYNAME, DIVISIONNAME 
    INTO LV_COMPANYNAME, LV_DIVISIONNAME
    FROM COMPANYMAST C, DIVISIONMASTER D
    WHERE D.COMPANYCODE=C.COMPANYCODE
    AND C.COMPANYCODE=P_COMPANYCODE
    AND D.DIVISIONCODE=P_DIVISIONCODE;
    
    
            
    DELETE FROM GTT_MONTHLY_BONUS WHERE 1=1;
    
    LV_SQLSTR := NULL;
    LV_SQLSTR := LV_SQLSTR || 'INSERT INTO GTT_MONTHLY_BONUS' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '(' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    WORKERSERIAL, TOKENNO, APR_AMT, MAY_AMT, JUN_AMT, JUL_AMT, AUG_AMT, SEP_AMT, OCT_AMT, NOV_AMT, DEC_AMT, JAN_AMT, FEB_AMT, MAR_AMT' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || ')' || CHR(10);
    
    LV_SQLSTR := LV_SQLSTR || 'SELECT * FROM ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '(' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    SELECT WORKERSERIAL, TOKENNO,YEARMONTH,NVL(BASIC,0) BASIC FROM PISPAYTRANSACTION' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    WHERE 1=1 ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    AND YEARCODE='''||LV_YEARCODE||''''|| CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    ORDER BY YEARMONTH'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR || ')'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'PIVOT '|| CHR(10);
    LV_SQLSTR := LV_SQLSTR || '('|| CHR(10);
    LV_SQLSTR := LV_SQLSTR || '   SUM(BASIC)'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR || '   FOR YEARMONTH IN ('||LV_MONTHS||')'|| CHR(10);
    LV_SQLSTR := LV_SQLSTR || ')'|| CHR(10);


    DBMS_OUTPUT.PUT_LINE(LV_SQLSTR);

    EXECUTE IMMEDIATE LV_SQLSTR ;

UPDATE GTT_MONTHLY_BONUS SET
APR_BONUS = CASE WHEN APR_AMT > 7000 THEN 7000 ELSE APR_AMT END,
MAY_BONUS = CASE WHEN MAY_AMT > 7000 THEN 7000 ELSE MAY_AMT END,
JUN_BONUS = CASE WHEN JUN_AMT > 7000 THEN 7000 ELSE JUN_AMT END,
JUL_BONUS = CASE WHEN JUL_AMT > 7000 THEN 7000 ELSE JUL_AMT END,
AUG_BONUS = CASE WHEN AUG_AMT > 7000 THEN 7000 ELSE AUG_AMT END,
SEP_BONUS = CASE WHEN SEP_AMT > 7000 THEN 7000 ELSE SEP_AMT END,
OCT_BONUS = CASE WHEN OCT_AMT > 7000 THEN 7000 ELSE OCT_AMT END,
NOV_BONUS = CASE WHEN NOV_AMT > 7000 THEN 7000 ELSE NOV_AMT END,
DEC_BONUS = CASE WHEN DEC_AMT > 7000 THEN 7000 ELSE DEC_AMT END,
JAN_BONUS = CASE WHEN JAN_AMT > 7000 THEN 7000 ELSE JAN_AMT END,
FEB_BONUS = CASE WHEN FEB_AMT > 7000 THEN 7000 ELSE FEB_AMT END,
MAR_BONUS = CASE WHEN MAR_AMT > 7000 THEN 7000 ELSE MAR_AMT END;


---START EXCEL REPORT GTT_EXCEL_REPORT

DELETE FROM GTT_EXCEL_REPORT WHERE 1=1;

    LV_ROWINDEX := 0;

    LV_EXCELROWSTYLE := NULL;
    
    LV_CHR := 'AI';

FOR C1 IN 
( 
    SELECT B.COMPANYCODE,B.DIVISIONCODE,B.UNITCODE, B.CATEGORYCODE,B.GRADECODE,
    B.DEPARTMENTCODE,B.EMPLOYEENAME,TO_CHAR(B.DATEOFRETIRE,'DD/MM/YYYY') DATEOFRETIRE,
    A.WORKERSERIAL, A.TOKENNO,C.WORKDAYS, 
    A.APR_AMT, A.MAY_AMT, A.JUN_AMT, A.JUL_AMT, A.AUG_AMT, A.SEP_AMT, 
    A.OCT_AMT, A.NOV_AMT, A.DEC_AMT, A.JAN_AMT, A.FEB_AMT, A.MAR_AMT,
    (NVL(A.APR_AMT,0) + NVL(A.MAY_AMT,0) + NVL(A.JUN_AMT,0) + NVL(A.JUL_AMT,0) + NVL(A.AUG_AMT,0) + NVL(A.SEP_AMT,0) + 
    NVL(A.OCT_AMT,0) + NVL(A.NOV_AMT,0) + NVL(A.DEC_AMT,0) + NVL(A.JAN_AMT,0) + NVL(A.FEB_AMT,0) + NVL(A.MAR_AMT,0)) TOT_EARN,
    A.APR_BONUS, A.MAY_BONUS, A.JUN_BONUS, A.JUL_BONUS, A.AUG_BONUS, A.SEP_BONUS, 
    A.OCT_BONUS, A.NOV_BONUS, A.DEC_BONUS, A.JAN_BONUS, A.FEB_BONUS, A.MAR_BONUS,
    (NVL(A.APR_BONUS,0) + NVL(A.MAY_BONUS,0) + NVL(A.JUN_BONUS,0) + NVL(A.JUL_BONUS,0) + NVL(A.AUG_BONUS,0) + NVL(A.SEP_BONUS,0) + 
    NVL(A.OCT_BONUS,0) + NVL(A.NOV_BONUS,0) + NVL(A.DEC_BONUS,0) + NVL(A.JAN_BONUS,0) + NVL(A.FEB_BONUS,0) + NVL(A.MAR_BONUS,0)) TOT_EARN_BONUS
    FROM GTT_MONTHLY_BONUS A, PISEMPLOYEEMASTER B,
    (
        SELECT WORKERSERIAL, SUM(ATTN_SALD) WORKDAYS FROM PISPAYTRANSACTION
        WHERE YEARCODE=P_YEARCODE
        GROUP BY WORKERSERIAL
    ) C
    WHERE A.WORKERSERIAL=B.WORKERSERIAL
    AND A.WORKERSERIAL=C.WORKERSERIAL
)
LOOP


    LV_EXCELVALUES := NULL;
    LV_EXCELTAG := NULL;
        
        
    LV_ROWINDEX := LV_ROWINDEX + 1;
    
    IF LV_ROWINDEX = 1 THEN
        
    --START TOP HEADER
        LV_EXCELROWTYPE := 'TOPHEADER';
        
        LV_EXCELVALUES := LV_COMPANYNAME;    
      
        
        LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':'||LV_CHR||LV_ROWINDEX||'~BORDER.BOTTOM.STYLE~THIN~HORIZONTALALIGNMENT~LEFT~VERTICALALIGNMENT~CENTER~FONT.BOLD~TRUE~FONT.SIZE~10~FONT.NAME~Tahoma';

        PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);
        
        LV_ROWINDEX := LV_ROWINDEX + 1;
     


        LV_EXCELROWTYPE := 'REPORTHEADER';
    
        LV_EXCELVALUES := LV_DIVISIONNAME;    
      
        
        LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':'||LV_CHR||LV_ROWINDEX||'~BORDER.BOTTOM.STYLE~THIN~HORIZONTALALIGNMENT~LEFT~VERTICALALIGNMENT~CENTER~FONT.BOLD~TRUE~FONT.SIZE~10~FONT.NAME~Tahoma';

        PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);
        
        LV_ROWINDEX := LV_ROWINDEX + 1;
        
        LV_EXCELROWTYPE := 'REPORTHEADER';
    
        LV_EXCELVALUES := 'MONTH WISE BONUS LIABILITY REPORT FOR THE FINANCIAL YEAR '||P_YEARCODE;    
      
        
        LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':'||LV_CHR||LV_ROWINDEX||'~BORDER.BOTTOM.STYLE~THIN~HORIZONTALALIGNMENT~LEFT~VERTICALALIGNMENT~CENTER~FONT.BOLD~TRUE~FONT.SIZE~9~FONT.NAME~Tahoma';

        PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);
        
        LV_ROWINDEX := LV_ROWINDEX + 1;
        
    
    
        LV_EXCELROWTYPE := 'COLUMNHEADER';
         
        LV_EXCELVALUES := 'ACC_YEAR^EMP_CD^EMP_NAME^RETIREDCD^RETIRED DATE^UNIT CD^DEPT_CD^WORK_DYS^APR_AMT^MAY_AMT^JUN_AMT^JUL_AMT^AUG_AMT^SEP_AMT^OCT_AMT^NOV_AMT^DEC_AMT^JAN_AMT^FEB_AMT^MAR_AMT^TOT_ERN^BON_APR_AMT^BON_MAY_AMT^BON_JUN_AMT^BON_JUL_AMT^BON_AUG_AMT^BON_SEP_AMT^BON_OCT_AMT^BON_NOV_AMT^BON_DEC_AMT^BON_JAN_AMT^BON_FEB_AMT^BON_MAR_AMT^TOT_BON_ERN^BNS_AMT';
        

        PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);

        LV_ROWINDEX := LV_ROWINDEX + 1;
   
        
    END IF;
    
    LV_EXCELROWTYPE := 'COLUMNVALUE';
  
    LV_EXCELVALUES := P_YEARCODE||'^'||C1.TOKENNO||'^'||C1.EMPLOYEENAME||'^^'||C1.DATEOFRETIRE||'^'||C1.UNITCODE||'^'||
    C1.DEPARTMENTCODE||'^'||C1.WORKDAYS||'^'||
    C1.APR_AMT||'^'||C1.MAY_AMT||'^'||C1.JUN_AMT||'^'||C1.JUL_AMT||'^'||C1.AUG_AMT||'^'||C1.SEP_AMT||'^'||
    C1.OCT_AMT||'^'||C1.NOV_AMT||'^'||C1.DEC_AMT||'^'||C1.JAN_AMT||'^'||C1.FEB_AMT||'^'||C1.MAR_AMT||'^'||C1.TOT_EARN||'^'||
    C1.APR_BONUS||'^'||C1.MAY_BONUS||'^'||C1.JUN_BONUS||'^'||C1.JUL_BONUS||'^'||C1.AUG_BONUS||'^'||C1.SEP_BONUS||'^'||
    C1.OCT_BONUS||'^'||C1.NOV_BONUS||'^'||C1.DEC_BONUS||'^'||C1.JAN_BONUS||'^'||C1.FEB_BONUS||'^'||C1.MAR_BONUS||'^'||C1.TOT_EARN_BONUS||'^'||C1.TOT_EARN_BONUS*0.0833;

    LV_EXCELROWSTYLE := 'RANGE~I'||LV_ROWINDEX||':'||LV_CHR||LV_ROWINDEX||'~FONT.SIZE~10~HORIZONTALALIGNMENT~RIGHT~NUMBERFORMAT~##,##,##0.00';
    
    PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);
END LOOP;
 



--FOR C1 IN 
--( 
--    SELECT SUM(GROSSEARN) GROSSEARN, SUM(GROSSDEDN) GROSSDEDN, SUM(NETSALARY) NETSALARY 
--    FROM GTT_PIS_ATMCONTROL_REP
--)
--LOOP
--    LV_ROWINDEX := LV_ROWINDEX + 1;
--    LV_EXCELROWTYPE := 'COLUMNVALUE';
--  
--    LV_EXCELVALUES := 'TOTAL^^^'||C1.GROSSEARN||'^'||C1.GROSSDEDN||'^'||C1.NETSALARY;

--    LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':C'||LV_ROWINDEX||'~FONT.BOLD~TRUE~RANGE~D'||LV_ROWINDEX||':'||LV_CHR||LV_ROWINDEX||'~FONT.SIZE~10~FONT.BOLD~TRUE~HORIZONTALALIGNMENT~RIGHT~NUMBERFORMAT~##,##,##0.00';
--    
--    PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);
--END LOOP;


    LV_ROWINDEX := LV_ROWINDEX + 1;
    LV_EXCELROWTYPE := 'COLUMNVALUE';
  
    LV_EXCELVALUES := 'RUN DATE '|| TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI:SS')||'^^^^^';

    LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':F'||LV_ROWINDEX||'~FONT.BOLD~TRUE~FONT.SIZE~10';
    
    PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);


END;
/
