CREATE OR REPLACE PROCEDURE BIRLANEW.PROC_RPT_VARIABLECHECKLST_EXL
(
    P_COMPANYCODE VARCHAR2,
    P_DIVISIONCODE VARCHAR2,
    P_YEARCODE VARCHAR2,
    P_YEARMONTH VARCHAR2,
    P_UNIT VARCHAR2 DEFAULT NULL,
    P_CATEGORY VARCHAR2 DEFAULT NULL
)
AS 
     
  
    LV_SQLSTR VARCHAR2(32000);    
       
    REPMONTH VARCHAR2(20);
    
    LV_ROWINDEX NUMBER(20);
    LV_EXCELROWTYPE VARCHAR2(50);  
    LV_EXCELROWSTYLE VARCHAR2(2000);  
    LV_EXCELVALUES VARCHAR2(2000);  
    LV_EXCELTAG VARCHAR2(2000);
    
    LV_FLAG VARCHAR2(10);
    
     
    LV_TOPHEADER  VARCHAR2(5000);  
    LV_COLUMNHEADER  VARCHAR2(5000);  
    LV_REPORTHEADER VARCHAR2(5000);  
    LV_COMPANYNAME VARCHAR2(500);  
    LV_DIVISIONNAME VARCHAR2(500);  
    LV_CHR VARCHAR2(10);
    
--    LV_LASTC1 GTT_PIS_ESISTATEMENT_REP%ROWTYPE;
    
    LV_LAST_UNIT VARCHAR2(100);
    LV_LAST_CATEGORY VARCHAR2(100);
--    LV_SQLSTRNEW           VARCHAR2(9000);

BEGIN

LV_LAST_UNIT := NULL;
LV_LAST_CATEGORY := NULL;
--EXEC PROC_RPT_EPSSTATEMENT_EXL('BJ0056','0001','2020-2021','202004','','')


      --THIS LINE FOR GPS_ERROR_LOG
    LV_SQLSTR := 'PROC_RPT_EPSSTATEMENT_EXL('''||P_COMPANYCODE||''','''||P_DIVISIONCODE||''','''||P_YEARCODE||''','''||P_YEARMONTH||''')';
     
--     DELETE FROM PIS_ERROR_LOG
--     WHERE PROC_NAME='PROC_RPT_ITAXCOMPUTATION_EXL';
--     
--     insert into PIS_ERROR_LOG
--     (
--        COMPANYCODE, DIVISIONCODE, PROC_NAME, ORA_ERROR_MESSG, ERROR_DATE, ERROR_QUERY, PAR_VALUES, FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS
--     )
--     values
--     (
--        P_COMPANYCODE, P_DIVISIONCODE, LV_SQLSTR, TO_DATE(P_FROMDATE,'DD/MM/YYYY'), TO_DATE(P_TODATE,'DD/MM/YYYY'),NULL , LV_SQLSTR, 'PROC_INSERT_PFFORM5', 'SCRIPT ADDED'
--     );
     
     LV_SQLSTR := NULL; 

    SELECT COMPANYNAME, DIVISIONNAME 
    INTO LV_COMPANYNAME, LV_DIVISIONNAME
    FROM COMPANYMAST C, DIVISIONMASTER D
    WHERE D.COMPANYCODE=C.COMPANYCODE
    AND C.COMPANYCODE=P_COMPANYCODE
    AND D.DIVISIONCODE=P_DIVISIONCODE;
    
            
    
    SELECT COMPANYNAME, DIVISIONNAME INTO LV_COMPANYNAME, LV_DIVISIONNAME  FROM DIVISIONMASTER A, COMPANYMAST B
    WHERE A.COMPANYCODE=B.COMPANYCODE
    AND A.COMPANYCODE=P_COMPANYCODE
    AND A.DIVISIONCODE=P_DIVISIONCODE;
    
    LV_SQLSTR := NULL;
    
    
     
--    LV_SQLSTR := LV_SQLSTR || 'INSERT INTO GTT_AXIXBANKPAYROLL' || CHR(10);
--    LV_SQLSTR := LV_SQLSTR || '(' || CHR(10);
--    LV_SQLSTR := LV_SQLSTR || '    TOKENNO, BANKACCNUMBER, EMPLOYEENAME, NETSALARY ' || CHR(10);
--    LV_SQLSTR := LV_SQLSTR || ')' || CHR(10);
--    
--     
--    LV_SQLSTR := LV_SQLSTR || 'SELECT A.TOKENNO, BANKACCNUMBER, EMPLOYEENAME, NETSALARY'|| chr(10) ;  
--    LV_SQLSTR := LV_SQLSTR || 'FROM PISEMPLOYEEMASTER A, '|| chr(10) ;  
--    LV_SQLSTR := LV_SQLSTR || '('|| chr(10) ;  
--    LV_SQLSTR := LV_SQLSTR || '    SELECT WORKERSERIAL, TOKENNO, NETSALARY FROM PISPAYTRANSACTION WHERE YEARMONTH='''||P_YEARMONTH||'''';
--    LV_SQLSTR := LV_SQLSTR || '    AND  COMPANYCODE='''||P_COMPANYCODE||'''' || CHR(10);
--    LV_SQLSTR := LV_SQLSTR || '    AND  DIVISIONCODE='''||P_DIVISIONCODE||'''' || CHR(10);
--    LV_SQLSTR := LV_SQLSTR || ')B'|| chr(10) ;  
--    LV_SQLSTR := LV_SQLSTR || 'WHERE A.WORKERSERIAL=B.WORKERSERIAL     '|| chr(10) ;  
--    LV_SQLSTR := LV_SQLSTR || 'AND ( IFSCCODE LIKE ''UCBA0000306'' OR LENGTH(BANKACCNUMBER)=14)'|| chr(10) ;     
--    LV_SQLSTR := LV_SQLSTR || '    AND A.COMPANYCODE='''||P_COMPANYCODE||'''' || CHR(10);
--    LV_SQLSTR := LV_SQLSTR || '    AND A.DIVISIONCODE='''||P_DIVISIONCODE||'''' || CHR(10);


    DELETE FROM GTT_VARIABLECHECKLIST_REP WHERE 1=1;

    INSERT INTO GTT_VARIABLECHECKLIST_REP
    (
        COMPANYCODE, DIVISIONCODE, UNITCODE, COMPONENTCODE, COMPONENTDESC, COMPONENTAMT
    )
    SELECT COMPANYCODE,DIVISIONCODE,UNITCODE, A.COMPONENTCODE,COMPONENTDESC, COMPONENTAMT FROM 
    (
        SELECT UNITCODE,COMPONENTCODE,COMPONENTAMT  FROM 
        (
            SELECT UNITCODE,SUM(ESI_E) ESI_E,SUM(PF_E) PF_E,SUM(PTAX) PTAX,SUM(LWF) LWF,SUM(VPF) VPF,
            SUM(ITAX) ITAX,SUM(LIC) LIC,SUM(ELECTRIC) ELECTRIC,SUM(OTHR_DEDN) OTHR_DEDN,
            SUM(LOAN_BL) LOAN_BL,SUM(LINT_BL) LINT_BL,SUM(LOAN_STADV) LOAN_STADV,SUM(LINT_STADV) LINT_STADV,
            SUM(LOAN_SA) LOAN_SA,SUM(LINT_SA) LINT_SA,SUM(CAR) CAR,SUM(CHOWKIDARI) CHOWKIDARI,
            SUM(FURNITURE) FURNITURE,SUM(CLUB) CLUB,SUM(LOAN_PFL) LOAN_PFL,SUM(LINT_PFL) LINT_PFL,
            SUM(LOTTERY) LOTTERY,SUM(RECREATION) RECREATION,SUM(GAMES) GAMES,SUM(SCHOOL_BUS) SCHOOL_BUS,
            SUM(DAIRY) DAIRY,SUM(LIBRARY) LIBRARY,SUM(LADIESCLUB) LADIESCLUB,SUM(SUBSCRIPTION) SUBSCRIPTION,
            SUM(HR_DEDN) HR_DEDN,SUM(SAL_ADV) SAL_ADV,SUM(LOAN_HPF) LOAN_HPF,SUM(LINT_HPF) LINT_HPF,SUM(COMPSAVING) COMPSAVING
            FROM PISPAYTRANSACTION 
            WHERE 1=1-- TOKENNO ='11004'
            AND COMPANYCODE=P_COMPANYCODE
            AND DIVISIONCODE=P_DIVISIONCODE
            AND YEARMONTH=P_YEARMONTH
            GROUP BY UNITCODE
        )
        UNPIVOT(
            COMPONENTAMT
            FOR COMPONENTCODE IN
            (
                ESI_E,PF_E,PTAX,LWF,VPF,ITAX,LIC,ELECTRIC,OTHR_DEDN,LOAN_BL,LINT_BL,LOAN_STADV,LINT_STADV,
                LOAN_SA,LINT_SA,CAR,CHOWKIDARI,FURNITURE,CLUB,LOAN_PFL,LINT_PFL,LOTTERY,RECREATION,GAMES,
                SCHOOL_BUS,DAIRY,LIBRARY,LADIESCLUB,SUBSCRIPTION,HR_DEDN,SAL_ADV,LOAN_HPF,LINT_HPF,COMPSAVING
            )
        )
    ) A, PISCOMPONENTMASTER B
    WHERE A.COMPONENTCODE=B.COMPONENTCODE
    AND COMPONENTAMT > 0;

--    DBMS_OUTPUT.PUT_LINE(LV_SQLSTR);
--    EXECUTE IMMEDIATE LV_SQLSTR ;
    



---START EXCEL REPORT GTT_EXCEL_REPORT

    DELETE FROM GTT_EXCEL_REPORT WHERE 1=1;

    LV_ROWINDEX := 0;

    LV_EXCELROWSTYLE := NULL;
    
    LV_CHR := 'D'; -- EXCEL CELL REF

FOR C1 IN 
( 
    SELECT * FROM 
    (
        SELECT ROW_NUMBER() OVER (PARTITION BY A.UNITCODE ORDER BY A.UNITCODE,A.COMPONENTCODE) SLNO,
        A.COMPANYCODE, A.DIVISIONCODE, A.UNITCODE,B.UNITSHORTDESC, A.COMPONENTCODE, COMPONENTDESC, COMPONENTAMT 
        FROM GTT_VARIABLECHECKLIST_REP A, PISUNITMASTER B
        WHERE A.COMPANYCODE = B.COMPANYCODE
        AND A.DIVISIONCODE=B.DIVISIONCODE
        AND A.UNITCODE=B.UNITCODE
        ORDER BY UNITCODE, COMPONENTCODE 
    )
)
LOOP

   
    LV_EXCELVALUES := NULL;
    LV_EXCELTAG := NULL;
        
        
    LV_ROWINDEX := LV_ROWINDEX + 1;
    
    IF LV_ROWINDEX = 1 THEN
        
    --START TOP HEADER
        LV_EXCELROWTYPE := 'TOPHEADER';
        
        LV_EXCELVALUES := LV_COMPANYNAME;    
      
        
        LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':'||LV_CHR||LV_ROWINDEX||'~BORDER.BOTTOM.STYLE~THIN~HORIZONTALALIGNMENT~LEFT~VERTICALALIGNMENT~CENTER~FONT.BOLD~TRUE~FONT.SIZE~10~FONT.NAME~Tahoma';

        PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);
        
        LV_ROWINDEX := LV_ROWINDEX + 1;
     


        LV_EXCELROWTYPE := 'REPORTHEADER';
    
        LV_EXCELVALUES := 'MONTHLY VARIABLE CHECKLIST FOR THE MONTH OF '||TO_CHAR(TO_DATE(P_YEARMONTH,'YYYYMM'),'MON-YY');
       
        LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':'||LV_CHR||LV_ROWINDEX||'~BORDER.BOTTOM.STYLE~THIN~HORIZONTALALIGNMENT~LEFT~VERTICALALIGNMENT~CENTER~FONT.BOLD~TRUE~FONT.SIZE~10~FONT.NAME~Tahoma';

        PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);
        
        LV_ROWINDEX := LV_ROWINDEX + 1;
        

--        LV_EXCELROWTYPE := 'COLUMNHEADER';
--        
--        LV_EXCELVALUES := 'SL. NO.^DEDUCTION HEAD^DESCRIPTION^AMOUNT';
--         
--        LV_EXCELROWSTYLE := 'RANGE~A'||LV_ROWINDEX||':D'||LV_ROWINDEX||'~BORDER.BOTTOM.STYLE~THIN~HORIZONTALALIGNMENT~CENTERCONTINUOUS~VERTICALALIGNMENT~CENTER~FONT.SIZE~10';

--        PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);

--        LV_ROWINDEX := LV_ROWINDEX + 1;


        
    END IF;
    
    IF NVL(LV_LAST_UNIT,'NA') <> C1.UNITCODE THEN
    
        IF LV_LAST_UNIT IS NOT NULL THEN
        
--    COMPONENTCODE, COMPONENTDESC, COMPONENTAMT    
            FOR C2 IN 
            ( 
                SELECT * FROM 
                (
                    SELECT SUM(COMPONENTAMT) COMPONENTAMT
                    FROM GTT_VARIABLECHECKLIST_REP 
                    WHERE UNITCODE = LV_LAST_UNIT
                )
            )
            LOOP
                

                LV_EXCELROWTYPE := 'COLUMNVALUE';
              

                LV_EXCELVALUES := 'TOTAL^^^'||C2.COMPONENTAMT||'~FONT.BOLD~TRUE~NUMBERFORMAT~##,##,##0.00';

        --        LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':D'||LV_ROWINDEX||'~FONT.SIZE~10~HORIZONTALALIGNMENT~LEFT';
                LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':C'||LV_ROWINDEX||'~BORDER.BOTTOM.STYLE~THIN~HORIZONTALALIGNMENT~RIGHT~VERTICALALIGNMENT~CENTER~FONT.BOLD~TRUE~FONT.SIZE~10~FONT.NAME~Tahoma';

                PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);
                
                LV_ROWINDEX := LV_ROWINDEX + 1;
            END LOOP;
        END IF; 
    
--        LV_ROWINDEX := LV_ROWINDEX + 1;

        LV_EXCELROWTYPE := 'COLUMNHEADER';
        
        LV_EXCELVALUES := '^^^';
         
        LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':D'||LV_ROWINDEX||'~BORDER.BOTTOM.STYLE~THIN~HORIZONTALALIGNMENT~CENTERCONTINUOUS~VERTICALALIGNMENT~CENTER~FONT.SIZE~10';

        PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);

        LV_ROWINDEX := LV_ROWINDEX + 1;
        
         

        LV_EXCELROWTYPE := 'COLUMNHEADER';
        
        LV_EXCELVALUES := 'UNIT : ['||C1.UNITCODE||'] '||C1.UNITSHORTDESC||'^^^';
         
        LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':D'||LV_ROWINDEX||'~BORDER.BOTTOM.STYLE~THIN~HORIZONTALALIGNMENT~LEFT~VERTICALALIGNMENT~CENTER~FONT.SIZE~12';

        PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);

        LV_ROWINDEX := LV_ROWINDEX + 1;
        
         

        LV_EXCELROWTYPE := 'COLUMNHEADER';
        
        LV_EXCELVALUES := 'SL. NO.^DEDUCTION HEAD^DESCRIPTION^AMOUNT';
         
        LV_EXCELROWSTYLE := 'RANGE~A'||LV_ROWINDEX||':D'||LV_ROWINDEX||'~BORDER.BOTTOM.STYLE~THIN~HORIZONTALALIGNMENT~CENTERCONTINUOUS~VERTICALALIGNMENT~CENTER~FONT.SIZE~10';

        PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);

        LV_ROWINDEX := LV_ROWINDEX + 1;
    END IF;
     
    


    LV_EXCELROWTYPE := 'COLUMNVALUE';

    LV_EXCELVALUES :=   C1.SLNO||'~NUMBERFORMAT~##^'||C1.COMPONENTCODE||'^'||C1.COMPONENTDESC||'^'||C1.COMPONENTAMT||'~NUMBERFORMAT~##,##,##0.00';

--    LV_EXCELROWSTYLE := 'RANGE~B'||LV_ROWINDEX||':'||LV_CHR||LV_ROWINDEX||'~FONT.SIZE~10~HORIZONTALALIGNMENT~RIGHT~NUMBERFORMAT~##,##,##0.00';
    LV_EXCELROWSTYLE :=NULL;
    PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);
    
--    LV_ROWINDEX := LV_ROWINDEX + 1;
    
    LV_LAST_UNIT := C1.UNITCODE;
    
END LOOP;

    LV_ROWINDEX := LV_ROWINDEX + 1;
    
    IF LV_LAST_UNIT IS NOT NULL THEN
        
--    COMPONENTCODE, COMPONENTDESC, COMPONENTAMT    
        FOR C2 IN 
        ( 
            SELECT * FROM 
            (
                SELECT SUM(COMPONENTAMT) COMPONENTAMT
                FROM GTT_VARIABLECHECKLIST_REP 
                WHERE UNITCODE = LV_LAST_UNIT
            )
        )
        LOOP
                

            LV_EXCELROWTYPE := 'COLUMNVALUE';
              

            LV_EXCELVALUES := 'TOTAL^^^'||C2.COMPONENTAMT||'~FONT.BOLD~TRUE~NUMBERFORMAT~##,##,##0.00';

    --        LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':D'||LV_ROWINDEX||'~FONT.SIZE~10~HORIZONTALALIGNMENT~LEFT';
            LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':C'||LV_ROWINDEX||'~BORDER.BOTTOM.STYLE~THIN~HORIZONTALALIGNMENT~RIGHT~VERTICALALIGNMENT~CENTER~FONT.BOLD~TRUE~FONT.SIZE~10~FONT.NAME~Tahoma';

            PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);
                
            LV_ROWINDEX := LV_ROWINDEX + 1;
        END LOOP;
    END IF; 
    
END;
/
