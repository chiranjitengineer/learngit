CREATE OR REPLACE procedure PROC_PFCONTRIBUTION_PERIODWISE
(
    p_companycode varchar2,
    p_divisioncode varchar2,
    p_fromdate varchar2,
    p_todate varchar2,
    p_clustercode varchar2 default null,
    p_categorycode varchar2 default null,
    p_pfregno varchar2 default null,
    p_pfoption varchar2 default null
)
AS
    QRY_STRING varchar2(5000);
    
BEGIN
    DELETE FROM GTT_PFCONTRIBUTION_NEW WHERE 1=1;
    
    --EXEC PROC_PFCONTRIBUTION('DY0080','0001','01/04/2019','31/03/2020','','','')

QRY_STRING:='INSERT INTO GTT_PFCONTRIBUTION_NEW '|| chr(10) ;
QRY_STRING:=QRY_STRING ||'( '|| chr(10) ;
QRY_STRING:=QRY_STRING ||'   PERIODFROM, PERIODTO, COMPANYCODE, DIVISIONCODE, CLUSTERCODE, CATEGORYCODE, CATEGORYTYPE,'|| chr(10) ;
QRY_STRING:=QRY_STRING ||'   COMPANYNAME, DIVISIONNAME, WORKERSERIAL, TOKENNO, EMPLOYEENAME, UANNO, GROSS_EARNING, PF_E, '|| chr(10) ;
QRY_STRING:=QRY_STRING ||'   AMOUNT, ADV_REF, ADV_REF_INT, REPORTHEADER, EX1, EX2, EX3, EX4'|| chr(10) ;
QRY_STRING:=QRY_STRING ||') '|| chr(10) ;

QRY_STRING:= QRY_STRING ||'SELECT NVL(A.PERIODFROM,ANL.PERIODFROM) PERIODFROM,NVL(A.PERIODTO,ANL.PERIODTO) PERIODTO,COM.COMPANYCODE, DIV.DIVISIONCODE,NVL(A.CLUSTERCODE,E.CLUSTERCODE) CLUSTERCODE,CAT.CATEGORYCODE,CAT.CATEGORYTYPE,COM.COMPANYNAME,DIV.DIVISIONNAME,E.WORKERSERIAL,E.TOKENNO,E.EMPLOYEENAME,'|| CHR(10);    
QRY_STRING:= QRY_STRING ||'   E.UANNO,NVL(A.GROSS_EARNING,0)+NVL(ANL.GROSS_EARNING,0) GROSS_EARNING,(NVL(A.PF_E,0)+ NVL(ANL.PF_E,0)) PF_E,NVL(B.AMOUNT,0) ADVANCEDMADE,NVL(C.ADV_REF,0) ADV_REF,NVL(D.ADV_REF_INT,0) ADV_REF_INT,'|| CHR(10);  


QRY_STRING:= QRY_STRING ||'   '''||p_fromdate||'''||'' TO ''||'''||p_todate||''' REPORTHEADER,E.PFNO EX1, TO_CHAR(NVL(A.PERIODFROM,ANL.PERIODFROM),''DD/MM/YYYY'')||'' TO ''||TO_CHAR(NVL(A.PERIODTO,ANL.PERIODTO),''DD/MM/YYYY'') EX2, 0 EX3,0 EX4 '|| CHR(10);    
QRY_STRING:= QRY_STRING ||' FROM   '|| CHR(10);    
QRY_STRING:= QRY_STRING ||'('|| CHR(10);    
QRY_STRING:= QRY_STRING ||'SELECT PERIODFROM,PERIODTO,COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TOKENNO,CLUSTERCODE,CATEGORYCODE,NVL(SUM(NVL(PF_GROSS,0)),0) GROSS_EARNING,NVL(SUM(NVL(PF_E,0)),0) PF_E'|| CHR(10);    
QRY_STRING:= QRY_STRING ||'FROM GPSPAYSHEETDETAILS '|| CHR(10);    
QRY_STRING:= QRY_STRING ||'WHERE COMPANYCODE='''||p_companycode||''''|| CHR(10);    
QRY_STRING:= QRY_STRING ||'  AND DIVISIONCODE='''||p_divisioncode||''''|| CHR(10);    
QRY_STRING:= QRY_STRING ||'  AND PERIODFROM >=TO_DATE('''||p_fromdate||''',''DD/MM/YYYY'') '|| CHR(10); 
--QRY_STRING:= QRY_STRING ||'  AND PERIODTO >=TO_DATE('''||p_fromdate||''',''DD/MM/YYYY'') '|| CHR(10);   
QRY_STRING:= QRY_STRING ||'  AND PERIODTO <=TO_DATE('''||p_todate||''',''DD/MM/YYYY'')'|| CHR(10);    
QRY_STRING:= QRY_STRING ||'  GROUP BY PERIODFROM,PERIODTO,COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TOKENNO,CLUSTERCODE,CATEGORYCODE'|| CHR(10);    
QRY_STRING:= QRY_STRING ||'  HAVING NVL(SUM(NVL(PF_GROSS,0)),0)>0'|| CHR(10);    
QRY_STRING:= QRY_STRING ||')A,'|| CHR(10);    
QRY_STRING:= QRY_STRING ||'(  '|| CHR(10);    
QRY_STRING:= QRY_STRING ||'SELECT COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TOKENNO,SUM(NVL(SANCTIONEDAMOUNT,0)) AMOUNT'|| CHR(10);    
QRY_STRING:= QRY_STRING ||'FROM PFLOANTRANSACTION'|| CHR(10);    
QRY_STRING:= QRY_STRING ||'WHERE COMPANYCODE='''||p_companycode||''''|| CHR(10);    
QRY_STRING:= QRY_STRING ||'  AND DIVISIONCODE='''||p_divisioncode||''''|| CHR(10);    
QRY_STRING:= QRY_STRING ||'  AND LOANDATE>=TO_DATE('''||p_fromdate||''',''DD/MM/YYYY'') '|| CHR(10);    
QRY_STRING:= QRY_STRING ||'  AND LOANDATE <=TO_DATE('''||p_todate||''',''DD/MM/YYYY'')'|| CHR(10);    
QRY_STRING:= QRY_STRING ||'  GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TOKENNO'|| CHR(10);    
QRY_STRING:= QRY_STRING ||')B,'|| CHR(10);    
QRY_STRING:= QRY_STRING ||'('|| CHR(10);    
QRY_STRING:= QRY_STRING ||'SELECT  COMPANYCODE, DIVISIONCODE,WORKERSERIAL,TOKENNO,SUM(DECODE(TRANSACTIONTYPE,''CAPITAL'',NVL(AMOUNT,0),''REPAYCAP'',NVL(AMOUNT,0),''REPAY'',NVL(REPAYCAPITAL,0),0)) ADV_REF   '|| CHR(10);    
QRY_STRING:= QRY_STRING ||' FROM PFLOANBREAKUP    '|| CHR(10);    
QRY_STRING:= QRY_STRING ||' WHERE COMPANYCODE='''||p_companycode||'''  '|| CHR(10);    
QRY_STRING:= QRY_STRING ||'     AND DIVISIONCODE='''||p_divisioncode||''' '|| CHR(10);    
QRY_STRING:= QRY_STRING ||'     AND PAIDON>=TO_DATE('''||p_fromdate||''',''DD/MM/YYYY'') '|| CHR(10);    
QRY_STRING:= QRY_STRING ||'     AND PAIDON <=TO_DATE('''||p_todate||''',''DD/MM/YYYY'')'|| CHR(10);    
QRY_STRING:= QRY_STRING ||'     GROUP BY  COMPANYCODE, DIVISIONCODE,WORKERSERIAL,TOKENNO'|| CHR(10);    
QRY_STRING:= QRY_STRING ||')C,   '|| CHR(10);    
QRY_STRING:= QRY_STRING ||'('|| CHR(10);    
--QRY_STRING:= QRY_STRING ||'SELECT  COMPANYCODE, DIVISIONCODE,WORKERSERIAL,TOKENNO,SUM(NVL(INTERESTAMOUNT,0)) ADV_REF_INT '|| CHR(10);    
--QRY_STRING:= QRY_STRING ||'  FROM PFLOANINTEREST  A '|| CHR(10);    
--QRY_STRING:= QRY_STRING ||'  WHERE A.COMPANYCODE='''||p_companycode||''' '|| CHR(10);    
--QRY_STRING:= QRY_STRING ||'     AND A.DIVISIONCODE='''||p_divisioncode||''' '|| CHR(10);    
--QRY_STRING:= QRY_STRING ||'     AND FORTNIGHTSTARTDATE>=TO_DATE('''||p_fromdate||''',''DD/MM/YYYY'')    '|| CHR(10);    
--QRY_STRING:= QRY_STRING ||'     AND FORTNIGHTENDDATE <=TO_DATE('''||p_todate||''',''DD/MM/YYYY'')'|| CHR(10);    
--QRY_STRING:= QRY_STRING ||'     GROUP BY  A.COMPANYCODE, A.DIVISIONCODE,A.WORKERSERIAL,A.TOKENNO  ,LOANDATE'|| CHR(10);    

QRY_STRING:= QRY_STRING ||'SELECT  COMPANYCODE, DIVISIONCODE,WORKERSERIAL,TOKENNO,SUM(DECODE(TRANSACTIONTYPE,''INTEREST'',NVL(AMOUNT,0),''REPAY'',NVL(REPAYINTEREST,0),0)) ADV_REF_INT   '|| CHR(10);    
QRY_STRING:= QRY_STRING ||' FROM PFLOANBREAKUP    '|| CHR(10);    
QRY_STRING:= QRY_STRING ||' WHERE COMPANYCODE='''||p_companycode||'''  '|| CHR(10);    
QRY_STRING:= QRY_STRING ||'     AND DIVISIONCODE='''||p_divisioncode||''' '|| CHR(10);    
QRY_STRING:= QRY_STRING ||'     AND PAIDON>=TO_DATE('''||p_fromdate||''',''DD/MM/YYYY'') '|| CHR(10);    
QRY_STRING:= QRY_STRING ||'     AND PAIDON <=TO_DATE('''||p_todate||''',''DD/MM/YYYY'')'|| CHR(10);    
QRY_STRING:= QRY_STRING ||'     GROUP BY  COMPANYCODE, DIVISIONCODE,WORKERSERIAL,TOKENNO'|| CHR(10);    

QRY_STRING:= QRY_STRING ||')D,'|| CHR(10); 
QRY_STRING:= QRY_STRING ||'('|| CHR(10); 
QRY_STRING:= QRY_STRING ||'     SELECT COMPANYCODE,DIVISIONCODE,WORKERSERIAL,MAX(PERIODFROM) PERIODFROM,MAX(PERIODTO) PERIODTO, SUM(NVL(PFGROSS,0)) GROSS_EARNING,SUM(NVL(PFAMOUNT,0)) PF_E'|| CHR(10); 
QRY_STRING:= QRY_STRING ||'     FROM GPSLEAVEPROCALCULATION '|| CHR(10); 
QRY_STRING:= QRY_STRING ||'     WHERE COMPANYCODE='''||p_companycode||'''  '|| CHR(10);   
QRY_STRING:= QRY_STRING ||'     AND DIVISIONCODE='''||p_divisioncode||''' '|| CHR(10);    
QRY_STRING:= QRY_STRING ||'     AND PFEFFECTIVEDATE BETWEEN TO_DATE('''||p_fromdate||''',''DD/MM/YYYY'')  AND TO_DATE('''||p_todate||''',''DD/MM/YYYY'')'|| CHR(10); 
QRY_STRING:= QRY_STRING ||'     GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL'|| CHR(10); 
QRY_STRING:= QRY_STRING ||'     HAVING SUM(NVL(PFAMOUNT,0))>0'|| CHR(10); 
QRY_STRING:= QRY_STRING ||') ANL, COMPANYMAST COM,DIVISIONMASTER DIV,GPSCATEGORYMAST CAT,GPSEMPLOYEEMAST E'|| CHR(10); 



   
QRY_STRING:= QRY_STRING ||'  WHERE COM.COMPANYCODE = '''||p_companycode||''''|| CHR(10);    
QRY_STRING:= QRY_STRING ||'    AND DIV.DIVISIONCODE = '''||p_divisioncode||''''|| CHR(10);    
QRY_STRING:= QRY_STRING ||'    ---AND CAT.CATEGORYCODE = ''U'''|| CHR(10);    
QRY_STRING:= QRY_STRING ||'   --- AND A.CLUSTERCODE=''01'''|| CHR(10);    
QRY_STRING:= QRY_STRING ||'   -- AND E.PFREGNO=''C-72'''|| CHR(10);    


                 IF p_clustercode IS NOT NULL THEN
                    QRY_STRING:= QRY_STRING ||' AND A.CLUSTERCODE IN (' || p_clustercode ||')'||chr(10);
                 END IF;
                 IF p_categorycode IS NOT NULL THEN
                    QRY_STRING:= QRY_STRING ||' AND CAT.CATEGORYCODE IN (' || p_categorycode ||')'||chr(10);
                 END IF;
                 
                 IF p_pfregno IS NOT NULL THEN
                    QRY_STRING:= QRY_STRING ||' AND E.PFREGNO IN (' || p_pfregno ||')'||chr(10);
                 END IF;
                 

--QRY_STRING:= QRY_STRING ||'    AND COM.COMPANYCODE = DIV.COMPANYCODE'|| CHR(10);    
--QRY_STRING:= QRY_STRING ||'    AND COM.COMPANYCODE = CAT.COMPANYCODE'|| CHR(10);    
--QRY_STRING:= QRY_STRING ||'    AND COM.COMPANYCODE = E.COMPANYCODE '|| CHR(10);    
--QRY_STRING:= QRY_STRING ||'    AND DIV.DIVISIONCODE = CAT.DIVISIONCODE'|| CHR(10);    
--QRY_STRING:= QRY_STRING ||'    AND DIV.DIVISIONCODE = E.DIVISIONCODE '|| CHR(10);    
--QRY_STRING:= QRY_STRING ||'    AND CAT.CATEGORYCODE = E.CATEGORYCODE '|| CHR(10); 

--QRY_STRING:= QRY_STRING ||'    AND COM.COMPANYCODE = ANL.COMPANYCODE  '|| CHR(10);  ----ANNUAL LEAVE
--QRY_STRING:= QRY_STRING ||'    AND DIV.DIVISIONCODE = ANL.DIVISIONCODE  '|| CHR(10); ----ANNUAL LEAVE


QRY_STRING:= QRY_STRING ||'    AND E.COMPANYCODE = COM.COMPANYCODE'|| CHR(10);
QRY_STRING:= QRY_STRING ||'    AND E.COMPANYCODE = DIV.COMPANYCODE'|| CHR(10);
QRY_STRING:= QRY_STRING ||'    AND E.DIVISIONCODE = DIV.DIVISIONCODE'|| CHR(10);
QRY_STRING:= QRY_STRING ||'    AND E.COMPANYCODE = CAT.COMPANYCODE'|| CHR(10);
QRY_STRING:= QRY_STRING ||'    AND E.DIVISIONCODE = CAT.DIVISIONCODE '|| CHR(10);
QRY_STRING:= QRY_STRING ||'    AND E.CATEGORYCODE = CAT.CATEGORYCODE'|| CHR(10);
QRY_STRING:= QRY_STRING ||'    AND E.WORKERSERIAL = ANL.WORKERSERIAL (+)  '|| CHR(10);----ANNUAL LEAVE
QRY_STRING:= QRY_STRING ||'    AND E.WORKERSERIAL = A.WORKERSERIAL (+)'|| CHR(10);    
QRY_STRING:= QRY_STRING ||'    AND E.WORKERSERIAL = B.WORKERSERIAL (+)'|| CHR(10);    
QRY_STRING:= QRY_STRING ||'    AND E.WORKERSERIAL = C.WORKERSERIAL (+)'|| CHR(10);    
QRY_STRING:= QRY_STRING ||'    AND E.WORKERSERIAL = D.WORKERSERIAL (+)'|| CHR(10);  


  
QRY_STRING:= QRY_STRING ||'    AND (NVL(A.GROSS_EARNING,0) + NVL(A.PF_E,0) + NVL(B.AMOUNT,0)+NVL(C.ADV_REF,0) +NVL(D.ADV_REF_INT,0)+ NVL(ANL.GROSS_EARNING,0) + NVL(ANL.PF_E,0)) <>0'|| CHR(10);    
QRY_STRING:= QRY_STRING ||'    ORDER BY E.WORKERSERIAL'|| CHR(10);    
QRY_STRING:= QRY_STRING ||''|| CHR(10);   



-- dbms_output.put_line(QRY_STRING);
   execute immediate QRY_STRING;  
 
END;
/
