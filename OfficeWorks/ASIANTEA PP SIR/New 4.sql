   SELECT CODE,DESCRIPTION,SL_NO,CATEGORY,SUB_CATEGORY,SUM(SORTINGQTY_TODAY) SORTINGQTY_TODAY ,SUM(SORTINGQTY_TODATE) SORTINGQTY_TODATE FROM
       (
       -----------THE FOLLOWING QUERY FOR TO_DAY QUANTITY
       SELECT CODE,DESCRIPTION, CASE WHEN SUB_CATEGORY='PRIMARY' THEN 1 WHEN SUB_CATEGORY='SECONDARY' THEN 2 ELSE 3 END SL_NO,CATEGORY,SUB_CATEGORY,QTY SORTINGQTY_TODAY,0 SORTINGQTY_TODATE FROM
        (
            SELECT  B.CODE,B.DESCRIPTION,
                    CASE WHEN B.CATEGORY='DUST' THEN 'CTC' ELSE B.CATEGORY END CATEGORY,
                    CASE WHEN (B.CATEGORY='DUST' OR B.OTHER_CATEGORY='DUST') THEN 'DUST' 
                    WHEN B.SUB_CATEGORY='CLONE' THEN 'SECONDARY'       
                    ELSE B.SUB_CATEGORY END SUB_CATEGORY,
                    SUM(NVL(A.SORTINGQTY,0)) QTY 
            FROM PRODDAILYSORTINGDETAILS A, SALESTEAGRADEMASTER B
            WHERE A.COMPANYCODE='DY0087'
              AND A.COMPANYCODE=B.COMPANYCODE
              AND A.TEAGRADECODE=B.CODE
              AND A.SORTINGDATE = '16-SEP-2020' 
              AND NVL(A.SORTINGQTY,0)<>0
              AND B.CODE NOT IN ('TW','TWO')
              GROUP BY B.CODE,
                    B.DESCRIPTION,
                    B.CATEGORY,
                    B.SUB_CATEGORY,
                    B.OTHER_CATEGORY
        ) 
       UNION ALL
       -----------THE FOLLOWING QUERY FOR TO_DATE QUANTITY
       SELECT CODE,DESCRIPTION, CASE WHEN SUB_CATEGORY='PRIMARY' THEN 1 WHEN SUB_CATEGORY='SECONDARY' THEN 2 ELSE 3 END SL_NO,CATEGORY,SUB_CATEGORY,0 SORTINGQTY_TODAY,QTY SORTINGQTY_TODATE FROM
        (
            SELECT  B.CODE,B.DESCRIPTION,
                    CASE WHEN B.CATEGORY='DUST' THEN 'CTC' ELSE B.CATEGORY END CATEGORY,
                    CASE WHEN (B.CATEGORY='DUST' OR B.OTHER_CATEGORY='DUST') THEN 'DUST' 
                    WHEN B.SUB_CATEGORY='CLONE' THEN 'SECONDARY'       
                    ELSE B.SUB_CATEGORY END SUB_CATEGORY,
                    SUM(NVL(A.SORTINGQTY,0)) QTY 
            FROM PRODDAILYSORTINGDETAILS A, SALESTEAGRADEMASTER B
            WHERE A.COMPANYCODE='DY0087'
              AND A.COMPANYCODE=B.COMPANYCODE
              AND A.TEAGRADECODE=B.CODE
              AND A.SORTINGDATE BETWEEN '01-APR-2020' AND '16-SEP-2020' 
              AND NVL(A.SORTINGQTY,0)<>0
              AND B.CODE NOT IN ('TW','TWO')
              GROUP BY B.CODE,
                    B.DESCRIPTION,
                    B.CATEGORY,
                    B.SUB_CATEGORY,
                    B.OTHER_CATEGORY
        ) 
        UNION ALL 
        -----------THE FOLLOWING QUERY FOR TEA WASTE TO_DAY  
        SELECT CODE,DESCRIPTION, 4 SL_NO,'TEA WASTE' CATEGORY,SUB_CATEGORY,QTY SORTINGQTY_TODAY,0 SORTINGQTY_TODATE FROM
        (
            SELECT  B.CODE,B.DESCRIPTION,
                    '' CATEGORY,
                    CASE WHEN (B.CATEGORY='DUST' OR B.OTHER_CATEGORY='DUST') THEN 'DUST' 
                    WHEN B.SUB_CATEGORY='CLONE' THEN 'SECONDARY'       
                    ELSE B.SUB_CATEGORY END SUB_CATEGORY,
                    SUM(NVL(A.SORTINGQTY,0)) QTY 
            FROM PRODDAILYSORTINGDETAILS A, SALESTEAGRADEMASTER B
            WHERE A.COMPANYCODE='DY0087'
              AND A.COMPANYCODE=B.COMPANYCODE
              AND A.TEAGRADECODE=B.CODE
              AND A.SORTINGDATE = '16-SEP-2020' 
              AND NVL(A.SORTINGQTY,0)<>0
              AND B.CODE IN ('TW','TWO')
              GROUP BY B.CODE,
                    B.DESCRIPTION,
                    B.CATEGORY,
                    B.SUB_CATEGORY,
                    B.OTHER_CATEGORY
        )
        UNION ALL
        -----------THE FOLLOWING QUERY FOR TEA WASTE TO_DATE
        SELECT CODE,DESCRIPTION, 4 SL_NO,'TEA WASTE' CATEGORY,SUB_CATEGORY,0 SORTINGQTY_TODAY,QTY SORTINGQTY_TODATE FROM
        (
            SELECT  B.CODE,B.DESCRIPTION,
                    '' CATEGORY,
                    CASE WHEN (B.CATEGORY='DUST' OR B.OTHER_CATEGORY='DUST') THEN 'DUST' 
                    WHEN B.SUB_CATEGORY='CLONE' THEN 'SECONDARY'       
                    ELSE B.SUB_CATEGORY END SUB_CATEGORY,
                    SUM(NVL(A.SORTINGQTY,0)) QTY 
            FROM PRODDAILYSORTINGDETAILS A, SALESTEAGRADEMASTER B
            WHERE A.COMPANYCODE='DY0087'
              AND A.COMPANYCODE=B.COMPANYCODE
              AND A.TEAGRADECODE=B.CODE
              AND A.SORTINGDATE BETWEEN '01-APR-2020' AND '16-SEP-2020' 
              AND NVL(A.SORTINGQTY,0)<>0
              AND B.CODE IN ('TW','TWO')
              GROUP BY B.CODE,
                    B.DESCRIPTION,
                    B.CATEGORY,
                    B.SUB_CATEGORY,
                    B.OTHER_CATEGORY
        )
   )  
   GROUP BY CODE,DESCRIPTION,SL_NO,CATEGORY,SUB_CATEGORY
   ORDER BY CATEGORY,SL_NO
   
   SELECT COUNT(SL_NO) + 1 SLNO,CATEGORY,SUB_CATEGORY,SUM(SORTINGQTY_TODAY) SORTINGQTY_TODAY, SUM(SORTINGQTY_TODATE)SORTINGQTY_TODATE FROM
        (
    SELECT CODE,DESCRIPTION, CASE WHEN SUB_CATEGORY='PRIMARY' THEN 1 WHEN SUB_CATEGORY='SECONDARY' THEN 2 ELSE 3 END SL_NO,CATEGORY,SUB_CATEGORY,QTY SORTINGQTY_TODAY,0 SORTINGQTY_TODATE FROM
        (
            SELECT  B.CODE,B.DESCRIPTION,
                    CASE WHEN B.CATEGORY='DUST' THEN 'CTC' ELSE B.CATEGORY END CATEGORY,
                    CASE WHEN (B.CATEGORY='DUST' OR B.OTHER_CATEGORY='DUST') THEN 'DUST' 
                    WHEN B.SUB_CATEGORY='CLONE' THEN 'SECONDARY'       
                    ELSE B.SUB_CATEGORY END SUB_CATEGORY,
                    SUM(NVL(A.SORTINGQTY,0)) QTY 
            FROM PRODDAILYSORTINGDETAILS A, SALESTEAGRADEMASTER B
            WHERE A.COMPANYCODE='DY0087'
              AND A.COMPANYCODE=B.COMPANYCODE
              AND A.TEAGRADECODE=B.CODE
              AND A.SORTINGDATE = '16-SEP-2020' 
              AND NVL(A.SORTINGQTY,0)<>0
              AND B.CODE NOT IN ('TW','TWO')
              GROUP BY B.CODE,
                    B.DESCRIPTION,
                    B.CATEGORY,
                    B.SUB_CATEGORY,
                    B.OTHER_CATEGORY
        ) 
        )
        GROUP BY CATEGORY ,SUB_CATEGORY