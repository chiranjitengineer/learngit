CREATE OR REPLACE PROCEDURE PROC_RPT_REIMBURSEMENT_REG_EXL
(
    P_COMPANYCODE VARCHAR2,
    P_DIVISIONCODE VARCHAR2,
    P_YEARCODE VARCHAR2,
    P_YEARMONTH_FROM VARCHAR2,
    P_YEARMONTH_TO VARCHAR2,
    P_UNITCODE VARCHAR2 DEFAULT NULL,
    P_CATEGORYCODE VARCHAR2 DEFAULT NULL,
    P_GRADECODE VARCHAR2 DEFAULT NULL,
    P_WORKERSERIAL VARCHAR2  DEFAULT NULL,
    P_COMPONENTS VARCHAR2 DEFAULT NULL 
) 
AS 
    LV_SQLSTR VARCHAR2(32000);    
       
    REPMONTH VARCHAR2(20);
    
    LV_ROWINDEX NUMBER(20);
    LV_EXCELROWTYPE VARCHAR2(50);  
    LV_EXCELROWSTYLE VARCHAR2(2000);  
    LV_EXCELVALUES VARCHAR2(2000);  
    LV_EXCELTAG VARCHAR2(2000);
    
    LV_FLAG VARCHAR2(10);
    
     
    LV_TOPHEADER  VARCHAR2(5000);  
    LV_COLUMNHEADER  VARCHAR2(5000);  
    LV_REPORTHEADER VARCHAR2(5000);  
    LV_COMPANYNAME VARCHAR2(500);  
    LV_DIVISIONNAME VARCHAR2(500);  
    LV_CHR VARCHAR2(10);
    
    --LV_LASTC1 GTT_PIS_EPSSTATEMENT_REP%ROWTYPE;
    
    LV_LAST_UNIT VARCHAR2(100);
    LV_LAST_CATEGORY VARCHAR2(100);
--    LV_SQLSTRNEW           VARCHAR2(9000);

LV_ERN_COMP VARCHAR2(2000);
LV_ERN_COMP_SUM VARCHAR2(2000);


LV_DED_COMP VARCHAR2(2000);
LV_DED_COMP_SUM VARCHAR2(2000);

LV_RIM_COMP VARCHAR2(2000);
LV_RIM_COMP_SUM VARCHAR2(2000);


LV_ERN_COMP_NAME VARCHAR2(2000);
LV_DED_COMP_NAME VARCHAR2(2000);
LV_RIM_COMP_NAME VARCHAR2(2000);


LV_RIM_COMP_PVT VARCHAR2(2000);

BEGIN

LV_ERN_COMP := NULL;


-- ASSIGN EARNING COMPONENTCODE
SELECT WM_CONCAT(COMPONENTCODE) INTO LV_ERN_COMP FROM 
(
    SELECT COMPONENTCODE FROM PISCOMPONENTMASTER
    WHERE COMPANYCODE =P_COMPANYCODE AND DIVISIONCODE =P_DIVISIONCODE
    AND COMPONENTTYPE='EARNING'
    ORDER BY PHASE, CALCULATIONINDEX
);

-- ASSIGN EARNING COMPONENTCODE SUM
SELECT WM_CONCAT('SUM('||COMPONENTCODE||') '||COMPONENTCODE) INTO LV_ERN_COMP_SUM FROM 
(
    SELECT COMPONENTCODE FROM PISCOMPONENTMASTER
    WHERE COMPANYCODE =P_COMPANYCODE AND DIVISIONCODE =P_DIVISIONCODE
    AND COMPONENTTYPE='EARNING'
    ORDER BY PHASE, CALCULATIONINDEX
);



-- ASSIGN DEDUCTION COMPONENTCODE
SELECT WM_CONCAT(COMPONENTCODE) INTO LV_DED_COMP FROM 
(
    SELECT COMPONENTCODE FROM PISCOMPONENTMASTER
    WHERE COMPANYCODE =P_COMPANYCODE AND DIVISIONCODE =P_DIVISIONCODE
    AND COMPONENTTYPE='DEDUCTION'
    ORDER BY PHASE, CALCULATIONINDEX
);

-- ASSIGN DEDUCTION COMPONENTCODE SUM
SELECT WM_CONCAT('SUM('||COMPONENTCODE||') '||COMPONENTCODE) INTO LV_DED_COMP_SUM FROM 
(
    SELECT COMPONENTCODE FROM PISCOMPONENTMASTER
    WHERE COMPANYCODE =P_COMPANYCODE AND DIVISIONCODE =P_DIVISIONCODE
    AND COMPONENTTYPE='DEDUCTION'
    ORDER BY PHASE, CALCULATIONINDEX
);


-- ASSIGN REIMBURSEMENT COMPONENTCODE
SELECT WM_CONCAT(COMPONENTCODE) INTO LV_RIM_COMP FROM 
(
    SELECT COMPONENTCODE FROM PISCOMPONENTMASTER
    WHERE COMPANYCODE =P_COMPANYCODE AND DIVISIONCODE =P_DIVISIONCODE
     AND ALLOWREIMBURSEMENT='Y'
    ORDER BY PHASE, CALCULATIONINDEX
);

-- ASSIGN REIMBURSEMENT COMPONENTCODE SUM
SELECT WM_CONCAT('SUM('||COMPONENTCODE||') '||COMPONENTCODE) INTO LV_RIM_COMP_SUM FROM 
(
    SELECT COMPONENTCODE FROM PISCOMPONENTMASTER
    WHERE COMPANYCODE =P_COMPANYCODE AND DIVISIONCODE =P_DIVISIONCODE
     AND ALLOWREIMBURSEMENT='Y'
    ORDER BY PHASE, CALCULATIONINDEX
);

-- ASSIGN REIMBURSEMENT COMPONENTCODE PIVOT
SELECT WM_CONCAT(''''||COMPONENTCODE||''' AS '||COMPONENTCODE) INTO LV_RIM_COMP_PVT  FROM 
(
    SELECT COMPONENTCODE FROM PISCOMPONENTMASTER
    WHERE COMPANYCODE =P_COMPANYCODE AND DIVISIONCODE =P_DIVISIONCODE
    AND ALLOWREIMBURSEMENT='Y'
    ORDER BY PHASE, CALCULATIONINDEX
)
























LV_LAST_UNIT := NULL;
LV_LAST_CATEGORY := NULL;
--EXEC PROC_RPT_EPSSTATEMENT_EXL('BJ0056','0001','2020-2021','202004','','')


      --THIS LINE FOR GPS_ERROR_LOG
    LV_SQLSTR := 'PROC_RPT_EPSSTATEMENT_EXL('''||P_COMPANYCODE||''','''||P_DIVISIONCODE||''','''||P_YEARCODE||''','''||P_YEARMONTH||''')';
     
--     DELETE FROM PIS_ERROR_LOG
--     WHERE PROC_NAME='PROC_RPT_ITAXCOMPUTATION_EXL';
--     
--     insert into PIS_ERROR_LOG
--     (
--        COMPANYCODE, DIVISIONCODE, PROC_NAME, ORA_ERROR_MESSG, ERROR_DATE, ERROR_QUERY, PAR_VALUES, FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS
--     )
--     values
--     (
--        P_COMPANYCODE, P_DIVISIONCODE, LV_SQLSTR, TO_DATE(P_FROMDATE,'DD/MM/YYYY'), TO_DATE(P_TODATE,'DD/MM/YYYY'),NULL , LV_SQLSTR, 'PROC_INSERT_PFFORM5', 'SCRIPT ADDED'
--     );
     
     LV_SQLSTR := NULL; 

    SELECT COMPANYNAME, DIVISIONNAME 
    INTO LV_COMPANYNAME, LV_DIVISIONNAME
    FROM COMPANYMAST C, DIVISIONMASTER D
    WHERE D.COMPANYCODE=C.COMPANYCODE
    AND C.COMPANYCODE=P_COMPANYCODE
    AND D.DIVISIONCODE=P_DIVISIONCODE;
    
            
    DELETE FROM GTT_PIS_EPSSTATEMENT_REP WHERE 1=1;
    
    LV_SQLSTR := NULL;
    LV_SQLSTR := LV_SQLSTR || 'INSERT INTO GTT_PIS_EPSSTATEMENT_REP' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '(' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '   COMPANYCODE, DIVISIONCODE, UNITCODE, UNITSHORTDESC, CATEGORYCODE, CATEGORYDESC, DEPARTMENTCODE, DEPARTMENTDESC, ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '   SL_NO,TOKENNO, EMPLOYEENAME, PFNO, PENSIONNO, EPS_JNG_DT, EPS_CONT, EPS_OP, EPS_GROSS, EPS_YTD' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || ')' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'SELECT A.COMPANYCODE, A.DIVISIONCODE, A.UNITCODE,B.UNITSHORTDESC, A.CATEGORYCODE, C.CATEGORYDESC, ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'A.DEPARTMENTCODE, D.DEPARTMENTDESC,ROW_NUMBER() OVER (PARTITION BY A.UNITCODE, A.CATEGORYCODE ORDER BY A.UNITCODE) SL_NO,' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'A.TOKENNO, E.EMPLOYEENAME, PFNO,PENSIONNO,PFENTITLEDATE EPS_JNG_DT, ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'A.FPF EPS_CONT,NVL(EPS_OP,0) EPS_OP,NVL(PEN_GROSS,0) EPS_GROSS, NVL(G.EPS_YTD,0) EPS_YTD' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'FROM ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '(' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    SELECT COMPANYCODE, DIVISIONCODE, UNITCODE, CATEGORYCODE, DEPARTMENTCODE, TOKENNO,' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    FPF,EPF,VPF,PEN_GROSS' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    FROM PISPAYTRANSACTION' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    WHERE COMPANYCODE='''||P_COMPANYCODE||'''' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    AND DIVISIONCODE='''||P_DIVISIONCODE||'''' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    AND YEARCODE='''||P_YEARCODE||'''' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    AND YEARMONTH='''||P_YEARMONTH||'''' || CHR(10);
    IF P_UNIT IS NOT NULL THEN
    LV_SQLSTR := LV_SQLSTR || '    AND UNITCODE IN ('||P_UNIT||')' || CHR(10);
    END IF;

    IF P_CATEGORY IS NOT NULL THEN
    LV_SQLSTR := LV_SQLSTR || '    AND CATEGORYCODE IN ('||P_CATEGORY||')' || CHR(10);
    END IF;

    LV_SQLSTR := LV_SQLSTR || ') A, PISUNITMASTER B, PISCATEGORYMASTER C, PISDEPARTMENTMASTER D, PISEMPLOYEEMASTER E,' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '(' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    SELECT COMPANYCODE, DIVISIONCODE, TOKENNO, WORKERSERIAL, SUM(FPF) EPS_YTD ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    FROM PISPAYTRANSACTION' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    WHERE YEARCODE='''||P_YEARCODE||'''' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    GROUP BY COMPANYCODE, DIVISIONCODE, TOKENNO, WORKERSERIAL' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || ') G,' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '(' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    SELECT COMPANYCODE, DIVISIONCODE, TOKENNO, WORKERSERIAL, SUM(FPF) EPS_OP ' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    FROM PISPAYTRANSACTION' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    WHERE TO_NUMBER(YEARMONTH) < TO_NUMBER('''||P_YEARMONTH||''')' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || '    GROUP BY COMPANYCODE, DIVISIONCODE, TOKENNO, WORKERSERIAL' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || ') H' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'WHERE A.COMPANYCODE=B.COMPANYCODE' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'AND A.DIVISIONCODE=B.DIVISIONCODE' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'AND A.UNITCODE=B.UNITCODE' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'AND A.COMPANYCODE=C.COMPANYCODE' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'AND A.DIVISIONCODE=C.DIVISIONCODE' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'AND A.CATEGORYCODE=C.CATEGORYCODE' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'AND A.COMPANYCODE=D.COMPANYCODE' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'AND A.DIVISIONCODE=D.DIVISIONCODE' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'AND A.DEPARTMENTCODE=D.DEPARTMENTCODE' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'AND A.COMPANYCODE=E.COMPANYCODE' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'AND A.DIVISIONCODE=E.DIVISIONCODE' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'AND A.TOKENNO=E.TOKENNO' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'AND A.COMPANYCODE=G.COMPANYCODE(+)' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'AND A.DIVISIONCODE=G.DIVISIONCODE(+)' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'AND A.TOKENNO=G.TOKENNO(+)' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'AND A.COMPANYCODE=H.COMPANYCODE(+)' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'AND A.DIVISIONCODE=H.DIVISIONCODE(+)' || CHR(10);
    LV_SQLSTR := LV_SQLSTR || 'AND A.TOKENNO=H.TOKENNO(+)' || CHR(10);

    DBMS_OUTPUT.PUT_LINE(LV_SQLSTR);

    EXECUTE IMMEDIATE LV_SQLSTR ;




---START EXCEL REPORT GTT_EXCEL_REPORT

DELETE FROM GTT_EXCEL_REPORT WHERE 1=1;

    LV_ROWINDEX := 0;

    LV_EXCELROWSTYLE := NULL;
    
    LV_CHR := 'L'; -- EXCEL CELL REF

FOR C1 IN 
( 
    SELECT COMPANYCODE, DIVISIONCODE, UNITCODE, UNITSHORTDESC, 
    CATEGORYCODE, CATEGORYDESC, DEPARTMENTCODE, DEPARTMENTDESC, 
    ROW_NUMBER() OVER (PARTITION BY UNITCODE, CATEGORYCODE ORDER BY UNITCODE)  SL_NO,TOKENNO, EMPLOYEENAME, PFNO, PENSIONNO, EPS_JNG_DT, 
    EPS_CONT, EPS_OP, EPS_GROSS, EPS_YTD
    FROM GTT_PIS_EPSSTATEMENT_REP 
    ORDER BY UNITCODE, CATEGORYCODE, DEPARTMENTCODE, TOKENNO
)
LOOP

   
    LV_EXCELVALUES := NULL;
    LV_EXCELTAG := NULL;
        
        
    LV_ROWINDEX := LV_ROWINDEX + 1;
    
    IF LV_ROWINDEX = 1 THEN
        
    --START TOP HEADER
        LV_EXCELROWTYPE := 'TOPHEADER';
        
        LV_EXCELVALUES := LV_COMPANYNAME;    
      
        
        LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':'||LV_CHR||LV_ROWINDEX||'~BORDER.BOTTOM.STYLE~THIN~HORIZONTALALIGNMENT~LEFT~VERTICALALIGNMENT~CENTER~FONT.BOLD~TRUE~FONT.SIZE~10~FONT.NAME~Tahoma';

        PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);
        
        LV_ROWINDEX := LV_ROWINDEX + 1;
     


        LV_EXCELROWTYPE := 'REPORTHEADER';
    
        LV_EXCELVALUES := LV_DIVISIONNAME;    
      
        
        LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':'||LV_CHR||LV_ROWINDEX||'~BORDER.BOTTOM.STYLE~THIN~HORIZONTALALIGNMENT~LEFT~VERTICALALIGNMENT~CENTER~FONT.BOLD~TRUE~FONT.SIZE~10~FONT.NAME~Tahoma';

        PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);
        
        LV_ROWINDEX := LV_ROWINDEX + 1;
        
        LV_EXCELROWTYPE := 'REPORTHEADER';
    
        LV_EXCELVALUES := 'STAFF/SUB_STAFF EPS STATEMENT FOR THE MONTH OF '||TO_CHAR(TO_DATE(P_YEARMONTH,'YYYYMM'),'MON-YYYY');    
      
        
        LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':'||LV_CHR||LV_ROWINDEX||'~BORDER.BOTTOM.STYLE~THIN~HORIZONTALALIGNMENT~LEFT~VERTICALALIGNMENT~CENTER~FONT.BOLD~TRUE~FONT.SIZE~9~FONT.NAME~Tahoma';

        PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);
        
        LV_ROWINDEX := LV_ROWINDEX + 1;
        
    END IF;
    
    
    IF NVL(LV_LAST_UNIT,'NA') <> C1.UNITCODE THEN
     
        IF LV_LAST_UNIT IS NOT NULL THEN
            LV_EXCELROWTYPE := 'COLUMNVALUE';
            FOR C2 IN 
            ( 
                SELECT SUM(EPS_OP) EPS_OP, SUM(EPS_CONT) EPS_CONT, SUM(EPS_GROSS) EPS_GROSS , SUM(EPS_YTD) EPS_YTD
                FROM GTT_PIS_EPSSTATEMENT_REP
                WHERE UNITCODE= LV_LAST_UNIT
                AND CATEGORYCODE=LV_LAST_CATEGORY
            )
            LOOP

                LV_EXCELVALUES :=  'TOTAL^^^^^^^^'||C2.EPS_OP||'^'||C2.EPS_GROSS||'^'||C2.EPS_CONT||'^'||C2.EPS_YTD;

                LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':H'||LV_ROWINDEX||'~FONT.SIZE~10~FONT.BOLD~TRUE~RANGE~I'||LV_ROWINDEX||':'||LV_CHR||LV_ROWINDEX||'~FONT.SIZE~10~FONT.BOLD~TRUE~HORIZONTALALIGNMENT~RIGHT~NUMBERFORMAT~##,##,##0.00';

                PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);
                LV_ROWINDEX := LV_ROWINDEX + 1;
                 

                LV_LAST_CATEGORY := NULL;


            END LOOP;
            

        END IF;
    
    
    
        LV_EXCELROWTYPE := 'COLUMNHEADER';
        
        LV_EXCELVALUES := '^^^^^^^^^^^^^';
        
        LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':'||LV_CHR||LV_ROWINDEX||'~HORIZONTALALIGNMENT~CENTERCONTINUOUS';

        PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);

        LV_ROWINDEX := LV_ROWINDEX + 1;


        LV_EXCELVALUES := C1.UNITSHORTDESC||'^^^^STAFF/SUB_STAFF EPS STATEMENT^^^^^MONTH:^'||TO_CHAR(TO_DATE(P_YEARMONTH,'YYYYMM'),'MON-YYYY')||'^';
        
        LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':D'||LV_ROWINDEX||'~HORIZONTALALIGNMENT~CENTERCONTINUOUS~MERGE~E'||LV_ROWINDEX||':I'||LV_ROWINDEX
        ||'~HORIZONTALALIGNMENT~CENTERCONTINUOUS~MERGE~K'||LV_ROWINDEX||':L'||LV_ROWINDEX||'~HORIZONTALALIGNMENT~CENTERCONTINUOUS';
        
        PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);

        LV_ROWINDEX := LV_ROWINDEX + 1;



        LV_EXCELVALUES := '^^^^^^^^^^^^^';
        
        LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':'||LV_CHR||LV_ROWINDEX||'~HORIZONTALALIGNMENT~CENTERCONTINUOUS';

        PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);

        LV_ROWINDEX := LV_ROWINDEX + 1;


        LV_EXCELVALUES := '^SRL.NO^EPSNO^PFNO^DEPERTEMENT^EMPLNO^NAME^EPS JNG DT^OP.BAL^GR.AMT^EPS CONT^YTD CONT';
        
        LV_EXCELROWSTYLE := 'RANGE~A'||LV_ROWINDEX||':L'||LV_ROWINDEX||'~BORDER.BOTTOM.STYLE~THIN~HORIZONTALALIGNMENT~CENTERCONTINUOUS~VERTICALALIGNMENT~CENTER~FONT.SIZE~10';

        PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);

        LV_ROWINDEX := LV_ROWINDEX + 1;
        
    END IF;
    
    IF LV_LAST_CATEGORY IS NOT NULL AND NVL(LV_LAST_CATEGORY,'NA') <> C1.CATEGORYCODE THEN
    
    
    
--    
--COMPANYCODE, DIVISIONCODE, UNITCODE, UNITSHORTDESC, 
--    CATEGORYCODE, CATEGORYDESC, DEPARTMENTCODE, DEPARTMENTDESC, 
--    SL_NO,TOKENNO, EMPLOYEENAME, PFNO, PENSIONNO, EPS_JNG_DT, 
--    EPS_OP, EPS_GROSS, EPS_CONT, EPS_YTD
    


        LV_EXCELROWTYPE := 'COLUMNVALUE';
        FOR C2 IN 
        ( 
            SELECT SUM(EPS_OP) EPS_OP, SUM(EPS_GROSS) EPS_GROSS, SUM(EPS_CONT) EPS_CONT , SUM(EPS_YTD) EPS_YTD
            FROM GTT_PIS_EPSSTATEMENT_REP
            WHERE UNITCODE= LV_LAST_UNIT
            AND CATEGORYCODE=LV_LAST_CATEGORY
        )
        LOOP

           
            LV_EXCELVALUES :=  'TOTAL^^^^^^^^'||C2.EPS_OP||'^'||C2.EPS_GROSS||'^'||C2.EPS_CONT||'^'||C2.EPS_YTD;

            LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':H'||LV_ROWINDEX||'~FONT.SIZE~10~FONT.BOLD~TRUE~RANGE~I'||LV_ROWINDEX||':'||LV_CHR||LV_ROWINDEX||'~FONT.SIZE~10~FONT.BOLD~TRUE~HORIZONTALALIGNMENT~RIGHT~NUMBERFORMAT~##,##,##0.00';

            PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);
            LV_ROWINDEX := LV_ROWINDEX + 1;
             

            LV_LAST_CATEGORY := NULL;
            
            LV_EXCELVALUES := '^^^^^^^^^^^';
            
            LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':N'||LV_ROWINDEX||'~HORIZONTALALIGNMENT~CENTERCONTINUOUS';

            PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);

            LV_ROWINDEX := LV_ROWINDEX + 1;


        END LOOP;


    END IF;
    
    LV_EXCELROWTYPE := 'COLUMNVALUE';
  

    LV_EXCELVALUES := '^SRL.NO^EPSNO^PFNO^DEPERTEMENT^EMPLNO^NAME^EPS JNG DT^OP.BAL^GR.AMT^EPS CONT^YTD CONT';
    

    
    LV_EXCELVALUES :=  CASE WHEN NVL(LV_LAST_CATEGORY,'NA') = C1.CATEGORYCODE THEN NULL ELSE C1.CATEGORYDESC END||'^'||C1.SL_NO
    ||'^'||C1.PENSIONNO||'^'||C1.PFNO||'^'||C1.DEPARTMENTDESC||'^'||C1.TOKENNO||'^'||C1.EMPLOYEENAME||'^'||
    TO_CHAR(C1.EPS_JNG_DT,'DD/MM/YYYY')||'^'||C1.EPS_OP||'^'||C1.EPS_GROSS||'^'||C1.EPS_CONT||'^'||C1.EPS_YTD;

    LV_EXCELROWSTYLE := 'RANGE~I'||LV_ROWINDEX||':'||LV_CHR||LV_ROWINDEX||'~FONT.SIZE~10~HORIZONTALALIGNMENT~RIGHT~NUMBERFORMAT~##,##,##0.00';
    
    PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);
    
    LV_LASTC1 :=C1;
    LV_LAST_UNIT := C1.UNITCODE;
    LV_LAST_CATEGORY := C1.CATEGORYCODE;
END LOOP;

    LV_ROWINDEX := LV_ROWINDEX + 1;
    
IF LV_LAST_UNIT IS NOT NULL THEN
    LV_EXCELROWTYPE := 'COLUMNVALUE';
    FOR C2 IN 
    ( 
        SELECT SUM(EPS_OP) EPS_OP, SUM(EPS_GROSS) EPS_GROSS, SUM(EPS_CONT) EPS_CONT , SUM(EPS_YTD) EPS_YTD
            FROM GTT_PIS_EPSSTATEMENT_REP
            WHERE UNITCODE= LV_LAST_UNIT
            AND CATEGORYCODE=LV_LAST_CATEGORY
    )
    LOOP

        LV_EXCELVALUES :=  'TOTAL^^^^^^^^'||C2.EPS_OP||'^'||C2.EPS_GROSS||'^'||C2.EPS_CONT||'^'||C2.EPS_YTD;

        LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':H'||LV_ROWINDEX||'~FONT.SIZE~10~FONT.BOLD~TRUE~RANGE~I'||LV_ROWINDEX||':'||LV_CHR||LV_ROWINDEX||'~FONT.SIZE~10~FONT.BOLD~TRUE~HORIZONTALALIGNMENT~RIGHT~NUMBERFORMAT~##,##,##0.00';

        PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);
        LV_ROWINDEX := LV_ROWINDEX + 1;
    END LOOP;
END IF;
--
--    LV_ROWINDEX := LV_ROWINDEX + 1;
--    LV_EXCELROWTYPE := 'COLUMNVALUE';
--  
--    LV_EXCELVALUES := 'RUN DATE '|| TO_CHAR(SYSDATE,'DD/MM/YYYY HH24:MI:SS')||'^^^^^';
--
--    LV_EXCELROWSTYLE := 'MERGE~A'||LV_ROWINDEX||':F'||LV_ROWINDEX||'~FONT.BOLD~TRUE~FONT.SIZE~10';
--    
--    PROC_INSERT_EXCEL_REPORT(LV_ROWINDEX, LV_EXCELROWTYPE, LV_EXCELROWSTYLE, LV_EXCELVALUES, LV_EXCELTAG);


END;
/
