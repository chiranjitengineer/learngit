
---------------------------------------------------------------------------------------------

--BIRLA


delete from loanbreakup

 exec PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','10','A','');

exec  PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','10','B','');

 exec PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','10','C','');

exec  PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','10','D','');

 exec PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','11','A','');

 exec PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','11','B','');

 exec PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','11','C','');

 exec PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','11','D','');

 exec PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','12','G','');

 exec PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','12','H','');

 exec PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','20','E','');

 exec PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','20','F','');
 
 select * from loanbreakup
 
 select * from LOANMASTER
 
 proc_loanblnc
 
 SELECT 17500*0.9167 FROM DUAL
 
 ALTER TABLE LOANMASTER
 MODIFY INTERESTPERCENTAGE NUMBER(5,4)
 
 UPDATE LOANMASTER SET INTERESTPERCENTAGE = (11/12)
 WHERE LOANCODE='BL'
 
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
--BIRLA LOAN INTEREST INTERFACE

swterp/PIS/Pages/Transaction/pgLoanInterestCalculation.aspx




--menu update

PRC_GEN_LOAN_INT_CALC

SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%LOAN E%')

SELECT * FROM ROLEDETAILS
WHERE MENUCODE = '0107020703'



Insert into MENUMASTER_RND
   (MENUCODE, MENUNAME, MENUDESC, MENUTYPE, MENUTAG, 
    MENUTAG1, MENUTAG2, ENTRYPOSSIBLE, EDITPOSSIBLE, DELETEPOSSIBLE, 
    REPORTSPOSSIBLE, UTILITIESPOSSIBLE, ACTIVE, PROJECTNAME, MENUDETAILS, 
    EFFECTIVEDIVISION, EFFECTIVEINDIVISION, PROCEDURE_SAVE_EDIT, URLSRC, FRM_HEIGHT, 
    FRM_WIDTH, FUNCTIONCALL_BEFORE, FUNCTIONCALL_AFTER, VIEWPOSSIBLE, PRINTPOSSIBLE, 
    DOCDATEVALIDATEFIELD, KEY_TABLE)
 Values
   ('0107020704', NULL, 'Loan Interrest Calculation', 'TRANSACTIONS', 'LOAN INT CALCULATION', 
    NULL, NULL, 'Y', 'N', 'N', 
    'N', 'N', 'Y', 'PIS', NULL, 
    '''0001'',''0002'',''0003'',''0004''', '''0001'',''0002'',''0003'',''0004''', NULL, 'PIS/Pages/Transaction/pgLoanInterestCalculation.aspx', NULL, 
    NULL, NULL, NULL, 'Y', NULL, 
    NULL, NULL);
COMMIT;


Insert into ROLEDETAILS
   (ROLEID, MENUCODE, ACCESSENTRY, ACCESSEDIT, ACCESSDELETE, 
    ACCESSREPORT, ACCESSUTILITIES, ACCESSVIEW, ACCESSPRINT, PROJECTNAME, 
    SYSROWID)
 Values
   ('1', '0107020704', 'Y', 'X', 'X', 
    'X', 'X', 'Y', 'X', 'PIS', 
    '202005081119420010404577');
Insert into ROLEDETAILS
   (ROLEID, MENUCODE, ACCESSENTRY, ACCESSEDIT, ACCESSDELETE, 
    ACCESSREPORT, ACCESSUTILITIES, ACCESSVIEW, ACCESSPRINT, PROJECTNAME, 
    SYSROWID)
 Values
   ('54', '0107020704', 'Y', 'X', 'X', 
    'X', 'X', 'Y', 'X', 'PIS', 
    '202003131131450010180952');
Insert into ROLEDETAILS
   (ROLEID, MENUCODE, ACCESSENTRY, ACCESSEDIT, ACCESSDELETE, 
    ACCESSREPORT, ACCESSUTILITIES, ACCESSVIEW, ACCESSPRINT, PROJECTNAME, 
    SYSROWID)
 Values
   ('52', '0107020704', 'Y', 'X', 'X', 
    'X', 'X', 'N', 'X', 'PIS', 
    '202005070846440010402086');
Insert into ROLEDETAILS
   (ROLEID, MENUCODE, ACCESSENTRY, ACCESSEDIT, ACCESSDELETE, 
    ACCESSREPORT, ACCESSUTILITIES, ACCESSVIEW, ACCESSPRINT, PROJECTNAME, 
    SYSROWID)
 Values
   ('59', '0107020704', 'Y', 'X', 'X', 
    'X', 'X', 'Y', 'X', 'PIS', 
    '202005061003380010395143');
COMMIT;


SELECT * FROM SYS_HELP_QRY
WHERE QRY_ID LIKE '7%'

 MODULENAME='PIS'


SELECT LOANCODE,LOANDESC,DEDUCTIONTYPE FROM LOANMASTER
WHERE COMPANYCODE=<<COMPANYCODE>>  
AND DIVISIONCODE=<<DIVISIONCODE>> 
AND MODULE='PIS'



Insert into SYS_HELP_QRY
   (QRY_ID, QRY_STRING, PARAMETER_STRING, QRY_SHORTDESC, QRY_RETURN_TABLE_NAME, 
    WEB_QRY_STRING, SEARCH_COLUMNLIST, MODULENAME)
 Values
   (7071, '""', 'COMPANYCODE~DIVISIONCODE~PATTERN', 'LOAN INFORMATION', NULL, 
    'SELECT LOANCODE,LOANDESC,DEDUCTIONTYPE FROM LOANMASTER'||CHR(13)||CHR(10)||'WHERE COMPANYCODE=<<COMPANYCODE>>  '||CHR(13)||CHR(10)||'AND DIVISIONCODE=<<DIVISIONCODE>> '||CHR(13)||CHR(10)||'AND MODULE=''PIS'''||CHR(13)||CHR(10)||'ORDER BY LOANCODE'||CHR(13)||CHR(10)||'', 'LOANCODE~LOANDESC~', 'PIS');
COMMIT;


EXEC PROC_LOANBLNC('BJ0056','0001','30/04/2020','30/04/2020','BL','','PIS','','')

SELECT * FROM GBL_LOANBLNC

SELECT * FROM LOANINTEREST


SELECT A.TOKENNO, B.EMPLOYEENAME,  A.LOANCODE, A.LOANDATE, A.LOANAMOUNT, A.LOAN_BAL, C.INTERESTPERCENTAGE , C.INTERESTAMOUNT 
FROM GBL_LOANBLNC A, PISEMPLOYEEMASTER B, LOANINTEREST C
WHERE A.COMPANYCODE=B.COMPANYCODE
AND A.DIVISIONCODE=B.DIVISIONCODE
AND A.TOKENNO=B.TOKENNO
AND A.COMPANYCODE=C.COMPANYCODE(+)
AND A.DIVISIONCODE=C.DIVISIONCODE(+)
AND A.TOKENNO=C.TOKENNO(+)
AND A.LOANCODE=C.LOANCODE(+)
AND A.LOANDATE=C.LOANDATE(+)

PROC_LOANBLNC 
(
    P_COMPANYCODE  VARCHAR2,
    P_DIVISIONCODE VARCHAR2,
    P_STARTDATE    VARCHAR2,
    P_ENDDATE      VARCHAR2,    
    P_LOANCODE     VARCHAR2,
    P_WORKERSERIAL VARCHAR2 DEFAULT NULL,
    P_MODULE       VARCHAR2 default 'WPS',
    P_WAGEPROCESS  VARCHAR2 DEFAULT 'NO', 
    P_TRANTYPE     VARCHAR2 DEFAULT 'SALARY'
)



EXEC PRC_GEN_LOAN_INT_CALC('BJ0056','0001','SWT','','','01/04/2020','PIS','','','10','D','')

SELECT * FROM LOANINTEREST



SELECT * FROM LOANTRANSACTION 


SELECT * FROM SYS_HELP_QRY
WHERE QRY_ID = '7029'

SELECT A.TOKENNO, B.EMPLOYEENAME,  A.LOANCODE, TO_CHAR(A.LOANDATE,'DD/MM/YYYY') LOANDATE, A.LOANAMOUNT, A.LOAN_BAL, NVL(C.INTERESTAMOUNT,0) INTERESTAMOUNT
FROM GBL_LOANBLNC A, PISEMPLOYEEMASTER B, LOANINTEREST C
WHERE A.COMPANYCODE=B.COMPANYCODE
AND A.DIVISIONCODE=B.DIVISIONCODE
AND A.COMPANYCODE=C.COMPANYCODE(+)
AND A.DIVISIONCODE=C.DIVISIONCODE(+)
AND A.TOKENNO=C.TOKENNO(+)
AND A.LOANCODE=C.LOANCODE(+)
AND A.LOANDATE=C.LOANDATE(+)
AND A.TOKENNO=B.TOKENNO
AND A.LOANCODE= 'BL'
AND B.UNITCODE = '01'
AND B.CATEGORYCODE = '10'
AND B.GRADECODE = 'D'


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
--BIRLA

ALTER TABLE PISCOMPONENTMASTER MODIFY PAYFORMULA VARCHAR2(1000);

--FOR CONVEYANCE ALLOWANCE

CASE WHEN PISMAST.CATEGORYCODE <> '12' THEN
CASE WHEN PISCOMP.CONV_RT >=25000 THEN 4000
WHEN PISCOMP.CONV_RT BETWEEN 17500 AND 24999.99 THEN 3600
WHEN PISCOMP.CONV_RT BETWEEN 12500 AND 17499.99 THEN 3100
WHEN PISCOMP.CONV_RT BETWEEN 7500 AND 12499.99 THEN 2900
WHEN PISCOMP.CONV_RT BETWEEN 6500 AND 7499.99 THEN 2400
WHEN PISCOMP.CONV_RT BETWEEN 5000 AND 6499.99 THEN 1800
WHEN PISCOMP.CONV_RT BETWEEN 3501 AND 5000.99 THEN 1200
WHEN PISCOMP.CONV_RT BETWEEN 1601 AND 3500 THEN 600
ELSE 0 END
ELSE 0
END


Dear Sunil,

Today I have checked a few employees Salary Register for the month of Apr 20 following discrepancies have been found.
Bank Loan interest not deducted- ex- K L Choubey
P.Tax not Deducted- ex. H S Dutta
Gross Salary and net salary should be round off- ex-Rajesh Khanna
ESI deducted from out of ESi Staff- ex- Arunesh Shaw
Compensatory Allowance not found and wrong PF dedution.ex Snehansu Datta.


Bank Loan interest not deducted- ex- K L Choubey  --DONE
------------------------------------------------

select * FROM pisemployeemaster
where employeename like UPPER('%K%L%Choubey%')

 K L Choubey
 
 KANHAIYA LAL CHOUBEY
 00597
  000004
 01,10,B
 
--LOAN INTEREST AMOUNT 161.0 --  
 --2500.00	0.00	161.00

 
P.Tax not Deducted- ex. H S Dutta --DONE
------------------------------------------------

select * FROM pisemployeemaster
where employeename like '%H%S%DUTTA%'

HARI SANKAR DUTTA
00967
 000102
 01,10,B
 
 --PTAX 200
 
 Gross Salary and net salary should be round off- ex-Rajesh Khanna
------------------------------------------------

select * FROM pisemployeemaster
where employeename like UPPER('%Rajesh%Khanna%')

 RAJESH KHANNA
 
 00696
   000139
 01,10,C
 
 
 ------------------------------------------------

 ESI deducted from out of ESi Staff- ex- Arunesh Shaw
  ------------------------------------------------

select * FROM pisemployeemaster
where employeename like UPPER('%Arunesh%Shaw%')

 ARUNESH KUMAR SHAW
 
 00909
 000143
 01,10,C
 
 esi - 139
 
 (PISASSIGN.BASIC+PISASSIGN.ADHOC+PISASSIGN.SPL_ALLOW.DA+PISASSIGN.PER_ALLOW)+ ROUND((PISASSIGN.BASIC)*0.01*(NVL(PISASSIGN.HRA_PERC,0)),0)
 
 
 select tokenno, yearmonth, esi_rate, esi_gross, ESI_E from pispaytransaction wherE tokenno = '00909'
 
 SELECT * FROM PISCOMPONENTASSIGNMENT WHERE 1=1
-- AND TOKENNO = '00909' 
-- AND TRANSACTIONTYPE='ASSIGNMENT'
 AND da > 0
 
 SELECT * FROM PISCOMPONENTMASTER WHERE COMPONENTCODE='ESI_RATE' 
 
 SELECT * FROM PISCOMPONENTMASTER WHERE  ROLLOVERAPPLICABLE='Y' AND PHASE <6 --COMPONENTCODE='ESI_GROSS' 
 
 (PISASSIGN.BASIC+PISASSIGN.ADHOC+PISASSIGN.SPL_ALLOW.DA+PISASSIGN.PER_ALLOW)+ ROUND((PISASSIGN.BASIC)*0.01*(NVL(PISASSIGN.HRA_PERC,0)),0) 
 
 
 PISASSIGN.BASIC+ ROUND(PISASSIGN.BASIC*0.01*(NVL(PISASSIGN.HRA_PERC,0)),0) 
 
 select * from piscomponentmaster
 where componentcode like '%SPL_ALL%'
 
 
 
Compensatory Allowance not found and wrong PF dedution.ex Snehansu Datta.
 ------------------------------------------------

select * FROM pisemployeemaster
where employeename like UPPER('S%D%A')

 
 
 00785
 000154
 01,10,D
 
 compensatory allowance - 208
 pf. e - 2507
 
---------------------------------------------------------------------------------------------


 EXEC PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','10','A','');

 EXEC PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','10','B','');

 EXEC  PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','10','C','');

 EXEC  PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','10','D','');



---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
--GLOSTER

SELECT * FROM SYS_HELP_QRY
WHERE QRY_ID = '7503'

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='PISITAXPARAM'

GBL_PISITAXPARAM

EXEC PROC_CREATE_GBL_TMP_TABLES(20093,0)


 EXEC PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','10','D','');


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

--BIRLA
SELECT * FROM PISPAYTRANSACTION
WHERE GRADECODE='D';


DELETE FROM LOANBREAKUP



SELECT *  FROM LOANBREAKUP

SELECT * FROM GBL_LOANBLNC
WHERE TOKENNO='00473'

SELECT * FROM LOANINTEREST
WHERE TOKENNO='00473'

AND WORKERSERIAL='000041'


 EXEC PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','10','D','')
 
 EXEC PRC_GEN_LOAN_INT_CALC('BJ0056','0001','SWT',NULL,'01/04/2020','01/04/2020','PIS','YES','PISPAYTRANSACTION_SWT');

EXEC PROC_LOANBLNC('BJ0056','0001','01/04/2020','30/04/2020','','','PIS','YES');
 
SELECT * FROM PISCOMPONENTMASTER
WHERE COMPONENTCODE='LINT_BL'

SELECT LINT_BL FROM PISPAYTRANSACTION
WHERE GRADECODE='D'
AND LINT_BL > 0

SELECT * FROM PISPAYTRANSACTION
WHERE GRADECODE='D';

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

 SELECT NVL(B.PARAMETER_VALUE, A.PARAMETER_VALUE) into lv_IntCalcProcName FROM 
    (
        SELECT 1 OPT, 'NA' PARAMETER_VALUE FROM DUAL
    ) A,
    (
        SELECT 1 OPT, PARAMETER_VALUE FROM SYS_PARAMETER
        WHERE PARAMETER_NAME='GENERAL LOAN INTEREST CALCULATION'
        AND PROJECTNAME='PIS' AND ROWNUM=1
    )B
    WHERE A.OPT=B.OPT(+);

    --LOAN INT CALCULATION
    IF lv_IntCalcProcName <> 'NA' THEN
        PRC_GEN_LOAN_INT_CALC(P_COMPCODE,P_DIVCODE,'SWT',NULL,P_END_DT,P_END_DT,P_MODULE,'YES',P_UPDT_TABLENAME);
--        lv_SqlStr := lv_IntCalcProcName||'('''||P_COMPCODE||''','''||P_DIVCODE||''',''SWT'',NULL,'''||P_END_DT||''','''||P_END_DT||''','''||P_MODULE||''',''YES'','''||P_UPDT_TABLENAME||''')';
--        lv_SqlStr := 'BEGIN '||lv_SqlStr||' END';
--        EXECUTE IMMEDIATE lv_SqlStr;
    END IF
	
	
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SELECT * FROM PIS_ERROR_LOG
WHERE PROC_NAME='PRC_LOANBALANCE_UPDT_WAGES'


PRC_LOANBALANCE_UPDT_WAGES

PRC_GEN_LOAN_INT_CALC

DELETE FROM PIS_ERROR_LOG

SELECT * FROM LOANINTEREST

DELETE FROM LOANINTEREST


SELECT DISTINCT LOANCODE FROM LOANMASTER 
                WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001' 
                AND INTERESTPERCENTAGE > 0

SELECT LINT_BL, LIBL_BL FROM PISPAYTRANSACTION
WHERE TOKENNO='00415' 

SELECT *  FROM LOANINTEREST 
WHERE TOKENNO='00415'     

SELECT TOKENNO,INTERESTAMOUNT, YEARMONTH  FROM LOANINTEREST 
WHERE TOKENNO='00415'
AND COMPANYCODE='BJ0056'
AND DIVISIONCODE='0001'

UPDATE PISPAYTRANSACTION SET LINT_BL =
(
SELECT INTERESTAMOUNT  FROM LOANINTEREST 
WHERE TOKENNO='00415'
AND COMPANYCODE='BJ0056'
AND DIVISIONCODE='0001'
AND YEARMONTH='202004'
)          
WHERE TOKENNO='00415'
AND COMPANYCODE='BJ0056'
AND DIVISIONCODE='0001'
AND YEARMONTH='202004'


 --ADDED FOR INTEREST EMI BALANCE 
IF (C1.INTERESTTYPE = 'R') THEN
                
    lv_ColName := lv_ColName || 'LNBL_'||c1.LOANCODE|| ' = '||nvl(c1.LOAN_BAL,0)||',LIBL_'||c1.LOANCODE||' = '||nvl(c1.LOAN_INT_BAL,0)||',';
    lv_ColName := lv_ColName || 'LINT_'||c1.LOANCODE|| ' = '||nvl(c1.LOAN_INT_BAL,0)||',';
ELSE
 lv_ColName := lv_ColName || 'LNBL_'||c1.LOANCODE|| ' = '||nvl(c1.LOAN_BAL,0)||',LIBL_'||c1.LOANCODE||' = '||nvl(c1.LOAN_INT_BAL,0)||',';
END IF;
                

                    ,INTERESTTYPE, DEDUCTIONTYPE,INTERESTCALCULATIONTYPE
                        
SELECT  NVL(LOAN_INT_BAL,0) LOAN_INT_BAL
FROM GBL_LOANBLNC A, LOANMASTER B
WHERE (NVL(LOAN_BAL,0) + NVL(LOAN_INT_BAL,0))>0
AND A.COMPANYCODE=B.COMPANYCODE
AND A.DIVISIONCODE=B.DIVISIONCODE
AND A.LOANCODE=B.LOANCODE
AND B.INTERESTTYPE='R'
ORDER BY WORKERSERIAL
  
FOR C1 IN (
 SELECT  DISTINCT A.LOANCODE
    FROM GBL_LOANBLNC A, LOANMASTER B
    WHERE (NVL(LOAN_INT_BAL,0))>0
    AND A.COMPANYCODE=B.COMPANYCODE
    AND A.DIVISIONCODE=B.DIVISIONCODE
    AND A.LOANCODE=B.LOANCODE
    AND B.INTERESTTYPE='R'      
)
LOOP                        
                            
lv_SqlStr := lv_SqlStr 
||'UPDATE '||P_UPDT_TABLENAME||' P SET LINT_'||C1.LOANCODE||' =
(
    SELECT  NVL(LOAN_INT_BAL,0) LOAN_INT_BAL
    FROM GBL_LOANBLNC A, LOANMASTER B
    WHERE (NVL(LOAN_BAL,0) + NVL(LOAN_INT_BAL,0))>0
    AND A.COMPANYCODE=B.COMPANYCODE
    AND A.DIVISIONCODE=B.DIVISIONCODE
    AND A.LOANCODE=B.LOANCODE
    AND A.COMPANYCODE=P.COMPANYCODE
    AND A.DIVISIONCODE=P.DIVISIONCODE
    AND A.WORKERSERIAL=P.WORKERSERIAL 
    AND B.INTERESTTYPE=''R''
)          
WHERE 1=1 
AND COMPANYCODE='''||P_COMPCODE||'''
AND DIVISIONCODE='''||P_DIVCODE||'''
AND YEARMONTH='''||lv_YYYYMM||'''';

   
          insert into pIs_error_log(PROC_NAME,ORA_ERROR_MESSG,ERROR_QUERY,PAR_VALUES,FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS ) values( lv_ProcName,'',lv_SqlStr,lv_parvalues, lv_fn_stdt, lv_fn_endt, lv_Remarks);
          COMMIT;
          
          execute immediate lv_SqlStr ;
END LOOP;


                            
                
select  WORKERSERIAL,A.LOANCODE,NVL(LOAN_BAL,0) LOAN_BAL, NVL(LOAN_INT_BAL,0) LOAN_INT_BAL
,INTERESTTYPE, DEDUCTIONTYPE,INTERESTCALCULATIONTYPE
                        FROM GBL_LOANBLNC A, LOANMASTER B
                        WHERE (NVL(LOAN_BAL,0) + NVL(LOAN_INT_BAL,0))>0
                        AND A.COMPANYCODE=B.COMPANYCODE
                        AND A.DIVISIONCODE=B.DIVISIONCODE
                        AND A.LOANCODE=B.LOANCODE
                        ORDER BY WORKERSERIAL
                        
                        (SELECT INTERESTTYPE, DEDUCTIONTYPE,INTERESTCALCULATIONTYPE FROM LOANMASTER WHERE LOANCODE=A.LOANCODE) INTERESTTYPE
                        
UPDATE PISPAYTRANSACTION_SWT SET LNBL_PFL=0, LIBL_PFL=0 
 WHERE COMPANYCODE='BJ0056' AND DIVISIONCODE = '0001' 
   AND FORTNIGHTSTARTDATE =  '01-APR-20' AND FORTNIGHTENDDATE = '30-APR-20' 
   AND (NVL(LNBL_PFL,0)+NVL(LIBL_PFL,0))>0 
   AND WORKERSERIAL IN ( SELECT WORKERSERIAL FROM WPSWORKERMAST WHERE COMPANYCODE='BJ0056' AND DIVISIONCODE = '0001' 
                         AND PFSETTELMENTDATE IS NOT NULL )
                         
UPDATE PISPAYTRANSACTION_SWT SET LNBL_STADV = 14880,LIBL_STADV = 0 WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001'  AND YEARMONTH = '202004'  AND WORKERSERIAL = ' 000229' 

UPDATE PISPAYTRANSACTION_SWT P SET LINT_BL =
            (
                SELECT  NVL(LOAN_INT_BAL,0) LOAN_INT_BAL
                FROM GBL_LOANBLNC A, LOANMASTER B
                WHERE (NVL(LOAN_BAL,0) + NVL(LOAN_INT_BAL,0))>0
                AND A.COMPANYCODE=B.COMPANYCODE
                AND A.DIVISIONCODE=B.DIVISIONCODE
                AND A.LOANCODE=B.LOANCODE
                AND A.COMPANYCODE=P.COMPANYCODE
                AND A.DIVISIONCODE=P.DIVISIONCODE
                AND A.WORKERSERIAL=P.WORKERSERIAL 
                AND B.INTERESTTYPE='R'
            )          
            WHERE 1=1 
            AND COMPANYCODE='BJ0056'
            AND DIVISIONCODE='0001'
            AND YEARMONTH='202004'                                                  
			
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

select COMPONENTCODE from pisgradecomponentmapping
where unitcode='01'
and CATEGORYCODE='10'
and gradecode='D'
MINUS

select COMPONENTCODE from pisgradecomponentmapping
where unitcode='02'
and CATEGORYCODE='20'
and gradecode='E'
MINUS
select COMPONENTCODE from pisgradecomponentmapping
where unitcode='01'
and CATEGORYCODE='10'
and gradecode='D'


select * from piscomponentassignment
where unitcode='02'
and GRADECODE='E'


SELECT * FROM PISEMPLOYEEMASTER
WHERE CATEGORYCODE='20'
AND UNITCODE='02'



SELECT   CATEGORYCODE, GRADECODE FROM PISGRADEMASTER

WHERE CATEGORYCODE='20'

SELECT * FROM BJM_EMP_MAST

SELECT * FROM PISCATEGORYMASTER 

SELECT DISTINCT UNITCODE, CATEGORYCODE, GRADECODE FROM PISEMPLOYEEMASTER


CATEGORYCODE    GRADECODE
10    A
10    B
10    C
10    D
11    A
11    B
11    C
11    D
12    G
12    H
20    E
20    F


SELECT * FROM PISEMPLOYEEMASTER
WHERE CATEGORYCODE='12'
AND GRADECODE='D'

UPDATE  PISEMPLOYEEMASTER SET
--CATEGORYCODE='12'
GRADECODE='E'
WHERE CATEGORYCODE='20'
AND GRADECODE='G'


CREATE  TABLE  PISEMPLOYEEMASTER_150720 AS
SELECT * FROM PISEMPLOYEEMASTER 
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

Meeting Sunil Sharma
--------------------

1. 

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SELECT * FROM PISCOMPONENTMASTER
WHERE COMPONENTCODE IN ('BASIC','ADHOC','CONV_ALOW','COMPSAVING')

PISMAST

CASE WHEN PISMAST.DATEOFJOIN <= '30-SEP-2019' CASE WHEN PISCOMP.BASIC > 15000 THEN 0 ELSE (CASE WHEN PISCOMP.PF_GROSS > 15000 THEN 15000*0.12 ELSE PISCOMP.PF_GROSS*0.12 END) - (PISCOMP.BASIC*0.12))) END END

CASE WHEN PISTEMPMAST.DATEOFJOIN <= '30-SEP-2019' THEN CASE WHEN PISTEMPCOMP.BASIC > 15000 THEN 0 ELSE ((CASE WHEN PISTEMPCOMP.PF_GROSS > 15000 THEN 15000 ELSE PISTEMPCOMP.PF_GROSS END)*0.12 - (PISTEMPCOMP.BASIC*0.12)) END ELSE 0 END

PISCOMP.BASIC+PISCOMP.DA+PISCOMP.PER_ALLOW+PISCOMP.OEPF


SELECT * FROM PISPAYTRANSACTION


WHERE BASIC < 15000

 CREATE TABLE PIS_SWT_PHASE_DEDN AS 
 
 SELECT PISTEMPATTN.COMPANYCODE, PISTEMPATTN.DIVISIONCODE,PISTEMPATTN.YEARMONTH, PISTEMPATTN.UNITCODE, PISTEMPATTN.CATEGORYCODE, PISTEMPATTN.GRADECODE, PISTEMPATTN.WORKERSERIAL, PISTEMPATTN.TOKENNO, PISTEMPCOMP.ATTN_SALD, PISTEMPCOMP.ATTN_CALCF, 
 PISTEMPCOMP.GROSSEARN, PISTEMPCOMP.TOTEARN 
 , FN_ROUNDOFFRS(NVL(PISTEMPATTN.CAR,0),1,'N') AS CAR, FN_ROUNDOFFRS(NVL(PISTEMPASSIGN.CHOWKIDARI,0),1,'N') AS CHOWKIDARI, 
 FN_ROUNDOFFRS(CASE WHEN PISTEMPMAST.CATEGORYCODE='10' THEN 
 CASE WHEN PISTEMPASSIGN.BASIC < 2000 THEN 5 WHEN PISTEMPASSIGN.BASIC BETWEEN 2000 AND 2999 THEN 8
  WHEN PISTEMPASSIGN.BASIC BETWEEN 3000 AND 7499 THEN 10 ELSE 15 END END,1,'N') AS CLUB, 
  FN_ROUNDOFFRS(CASE WHEN PISTEMPMAST.DATEOFJOIN <= '30-SEP-2019' THEN CASE WHEN PISTEMPCOMP.BASIC > 15000 THEN 0 ELSE ((CASE WHEN PISTEMPCOMP.PF_GROSS > 15000 THEN 15000 ELSE PISTEMPCOMP.PF_GROSS END)*0.12 - (PISTEMPCOMP.BASIC*0.12)) END ELSE 0 END,1,'N') AS COMPSAVING, FN_ROUNDOFFRS(NVL(PISTEMPATTN.DAIRY,0),1,'N') AS DAIRY, FN_ROUNDOFFRS(0,1,'N') AS ELECTRIC, FN_ROUNDOFFRS(CASE WHEN PISTEMPCOMP.ESI_RATE > 21000 THEN  0 ELSE PISTEMPCOMP.ESI_RATE*0.0075  END,1,'H') AS ESI_E, FN_ROUNDOFFRS(NVL(PISTEMPASSIGN.FURNITURE,0),1,'N') AS FURNITURE, FN_ROUNDOFFRS(NVL(PISTEMPATTN.GAMES,0),1,'N') AS GAMES, FN_ROUNDOFFRS(NVL(PISTEMPASSIGN.HR_DEDN,0),1,'N') AS HR_DEDN, FN_ROUNDOFFRS(NVL(PISTEMPASSIGN.ITAX,0),1,'N') AS ITAX, FN_ROUNDOFFRS(NVL(PISTEMPASSIGN.LADIESCLUB,0),1,'S') AS LADIESCLUB, FN_ROUNDOFFRS((PISTEMPCOMP.BASIC+ PISTEMPCOMP.DA)*0.001,1,'S') AS LIBRARY, FN_ROUNDOFFRS(NVL(PISTEMPASSIGN.LIC,0),1,'N') AS LIC,  0  AS LINT_BL,  0  AS LINT_HPF,  0  AS LINT_PFL,  0  AS LINT_SA,  0  AS LINT_STADV,  0  AS LOAN_BL,  0  AS LOAN_HPF,  0  AS LOAN_PFL,  0  AS LOAN_SA,  0  AS LOAN_STADV, FN_ROUNDOFFRS(NVL(PISTEMPATTN.LOTTERY,0),1,'N') AS LOTTERY, FN_ROUNDOFFRS(CASE WHEN SUBSTR(PISTEMPCOMP.YEARMONTH,-2) IN ('06','12') THEN 3 ELSE 0 END,1,'N') AS LWF, FN_ROUNDOFFRS(NVL(PISTEMPATTN.OTHR_DEDN,0),1,'N') AS OTHR_DEDN, FN_ROUNDOFFRS(CASE WHEN PISTEMPMAST.PFAPPLICABLE ='Y' THEN PISTEMPCOMP.PF_GROSS*0.12 ELSE 0 END,1,'S') AS PF_E, FN_ROUNDOFFRS(PISTEMPCOMP.PTAX_GROSS,1,'N') AS PTAX, FN_ROUNDOFFRS(NVL(PISTEMPATTN.RECREATION,0),1,'N') AS RECREATION, FN_ROUNDOFFRS(NVL(PISTEMPATTN.SAL_ADV,0),1,'N') AS SAL_ADV, FN_ROUNDOFFRS(NVL(PISTEMPASSIGN.SCHOOL_BUS,0),1,'N') AS SCHOOL_BUS, FN_ROUNDOFFRS(NVL(PISTEMPATTN.SUBSCRIPTION,0),1,'N') AS SUBSCRIPTION, FN_ROUNDOFFRS((PISTEMPCOMP.PF_GROSS*0.01*PISTEMPASSIGN.VPF_PERC),1,'S') AS VPF 
 FROM PISTEMPMAST, PISTEMPATTN, PISTEMPASSIGN, PISTEMPCOMP, PISTEMPPREV 
 WHERE PISTEMPMAST.WORKERSERIAL = PISTEMPATTN.WORKERSERIAL 
   AND PISTEMPMAST.WORKERSERIAL = PISTEMPASSIGN.WORKERSERIAL 
   AND PISTEMPMAST.WORKERSERIAL = PISTEMPCOMP.WORKERSERIAL 
   AND PISTEMPMAST.WORKERSERIAL = PISTEMPPREV.WORKERSERIAL (+) 
 AND PISTEMPATTN.CATEGORYCODE = '10' 
 AND PISTEMPATTN.GRADECODE = 'D' 
 
SELECT * FROM PIS_ERROR_LOG

DELETE FROM PIS_ERROR_LOG

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

select * from pispaytransaction
where tokenno='00538'
and yearcode='2020-2021'


select sum(serv_alw) from pispaytransaction
where tokenno='00538'
and yearcode='2020-2021'



SERV_ALW --30600
10200



select 10200*12 from dual  --122400

select 204000
*0.085 from dual

insert into pisitaxslab(
YEARCODE, SLABFROM, SLABTO, TAXPERCENTAGE, CFFROMLASTSLAB, DIVISIONCODE, COMPANYCODE, CATEGORY, TAXAMOUNT, USERNAME, LASTMODIFIED, SYSROWID
)
select '2020-2021' YEARCODE, SLABFROM, SLABTO, TAXPERCENTAGE, CFFROMLASTSLAB, DIVISIONCODE, COMPANYCODE, CATEGORY, TAXAMOUNT, USERNAME,sysdate LASTMODIFIED,sys_guid() SYSROWID from pisitaxslab
where yearcode='2019-2020'


select * from pisitaxcomputation

where tokenno='00538'

delete from pisitaxcomputation

select CATEGORYCODE, GRADECODE, TOKENNO, WORKERSERIAL
from PISEMPLOYEEMASTER 
WHERE COMPANYCODE =  '0001'
AND DIVISIONCODE =  '0002'
AND CATEGORYCODE = 'SS'
AND GRADECODE = 'SREG'
AND EMPLOYEESTATUS ='ACTIVE' 


select DISTINCT TOKENNO from pisitaxcomputation

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SELECT * FROM PISPAYTRANSACTION
WHERE TOKENNO='01069'

SELECT PISCOMP.BASIC,PISCOMP.DA,PISCOMP.ADHOC,PISCOMP.OEPF, PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.OEPF  TOTal
FROM PISPAYTRANSACTION PISCOMP
WHERE TOKENNO='01069'

SELECT * FROM PISCOMPONENTMASTER
WHERE COMPONENTCODE='HRA_GROSS'


SELECT * FROM PISCOMPONENTMASTER
WHERE COMPONENTCODE='ADHOC'


PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.OEPF

select adhoc from piscomponentassignment
where tokenno='01069'

-------------------------------------------------------------------------

please also note hra wrong calculation e.g emp cd 01069

-------------------------------------------------------------------------

BASIC	DA	ADHOC	OEPF	TOTAL
265110	0	224309	0		489419

-------------------------------------------------------------------------
HRA_GROSS : 489419
HRA_PERC : 35%  =  

HRA = 489419 * 35% = 171296.65
-------------------------------------------------------------------------
SELECT * FROM PISPAYTRANSACTION
WHERE TOKENNO='01069'

SELECT PISCOMP.BASIC,PISCOMP.DA,PISCOMP.ADHOC,PISCOMP.OEPF, PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.OEPF  TOTal
FROM PISPAYTRANSACTION PISCOMP
WHERE TOKENNO='01069'

SELECT * FROM PISCOMPONENTMASTER
WHERE COMPONENTCODE='HRA_GROSS'


SELECT * FROM PISCOMPONENTMASTER
WHERE COMPONENTCODE='ADHOC'


PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.OEPF

select adhoc from piscomponentassignment
where tokenno='01069'

-------------------------------------------------------------------------
-------------------------------------------------------------------------

SELECT * FROM PISPAYTRANSACTION
WHERE TOKENNO='01069'

select adhoc from piscomponentassignment
where tokenno='01069'




SELECT * FROM PISCOMPONENTMASTER
WHERE COMPONENTCODE='COMPSAVING'

CASE WHEN PISMAST.CATEGORYCODE='10' THEN CASE WHEN PISASSIGN.BASIC < 10000 THEN 200 ELSE 500 END END


SELECT 
PISCOMP.BASIC, PISCOMP.ADHOC, PISCOMP.CONV_ALOW,
CASE WHEN (PISCOMP.BASIC+PISCOMP.ADHOC+PISCOMP.CONV_ALOW)>15000
THEN (15000*12/100)-(PISCOMP.BASIC*12/100)
ELSE ((PISCOMP.BASIC+PISCOMP.ADHOC+PISCOMP.CONV_ALOW)*12/100)-(PISCOMP.BASIC*12/100)
END CALC
FROM PISPAYTRANSACTION PISCOMP
WHERE tokenno='01203'


Basic+Adhoc+Convence  >15000

SELECT * FROM PISPAYTRANSACTION
WHERE BASIC < 10000


-------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
<<<<<<< HEAD

proc_pisitax_computation


EXEC PROC_PISITAX_COMPUTATION ('0001', '0002', '2019-2020','SS','SREG', '00378')

SELECT * FROM PISITAXATTRIBUTEVALUE

SELECT * FROM PISITAXPARAM
WHERE COLUMNNO='01_01_15'

PRC_PIS_ITAXPREVYRSAVE



 select (substr('2020-2021',0,4)-1)||'-'||(substr('2020-2021',6,4)-1)
 lv_YearCode
from dual;

INSERT INTO  PISITAXPARAM 
( 
COMPANYCODE, DIVISIONCODE,  YEARCODE, COLUMNNO, COLUMNNOTOPRINT, COLUMNHEADING,  
COLUMNSUBHEADING, COLUMNSUBHEADING1, COLUMNSUBHEADING2, COLUMNSUBHEADING3, COLUMNSOURCE, 
COLUMNATTRIBUTE, COLUMNBASIS, COLUMNFORMULA, QUALIFIEDAMOUNT, MAXAMOUNT, MONTHLYEXMTLIMIT,  
SHORTDESCRIPTION, COLUMNFORTAX, UPPERLIMITAPP, COLUMNFORSUBTOTAL, COLUMNFORPRQST, INCLUDEINFORM16,  
DISPLAYINGRID, USERNAME, SYSTEMCOMPONENT, COLUMNFORM16, TYPE 
)
SELECT COMPANYCODE, DIVISIONCODE, '2019-2020' YEARCODE, COLUMNNO, COLUMNNOTOPRINT, COLUMNHEADING,   
COLUMNSUBHEADING, COLUMNSUBHEADING1, COLUMNSUBHEADING2, COLUMNSUBHEADING3, COLUMNSOURCE, 
COLUMNATTRIBUTE, COLUMNBASIS, COLUMNFORMULA, QUALIFIEDAMOUNT, MAXAMOUNT, MONTHLYEXMTLIMIT, 
SHORTDESCRIPTION, COLUMNFORTAX, UPPERLIMITAPP, COLUMNFORSUBTOTAL, COLUMNFORPRQST, INCLUDEINFORM16, 
DISPLAYINGRID, 'SWT' USERNAME, SYSTEMCOMPONENT, COLUMNFORM16, TYPE  
FROM PISITAXPARAM  
 WHERE COMPANYCODE='0001' 
 AND DIVISIONCODE='0002'  
 AND YEARCODE='2018-2019' 
 
 SELECT SERV_ALW FROM PISARREARTRANSACTION
 WHERE TOKENNO='00378'
 
 
 SELECT SERV_ALW FROM PISPAYTRANSACTION
 WHERE TOKENNO='00378'
 
 
 SELECT SERV_ALW FROM PISCOMPONENTASSIGNMENT
 WHERE TOKENNO='00378'
 
 SELECT 15300+18765, 18765*12 FROM DUAL
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
=======
---------------------------------------------------------------------------------------------

EXEC PROC_PISITAX_COMPUTATION ('0001', '0002', '2019-2020','SS','SREG', '00378')

SELECT * FROM GTTPISITAXCOMPUTATION

SELECT
  REGEXP_SUBSTR('500 Oracle Parkway, Redwood Shores, CA DFD, SA',
                ',[^,]+,') "REGEXPR_SUBSTR"
  FROM DUAL;
  
  
SELECT
  REGEXP_SUBSTR('<<100>><<100>><<100>><<100>>',
                '<<(\d|\w)*>>+/g') "REGEXPR_SUBSTR"
  FROM DUAL;
  

SELECT DISTINCT REGEXP_SUBSTR ('23,34,45,56','[^,]+',1,LEVEL) as "token"
FROM   DUAL
CONNECT BY REGEXP_SUBSTR ('23,34,45,56','[^,]+',1,LEVEL) IS NOT NULL
order by 1

SELECT DISTINCT REGEXP_SUBSTR ('(<<23_11>>+<<34>>)-(<<45>>)*<<56>>','[^<<(w)>>$]+',1,LEVEL) as columnNo
FROM   DUAL
CONNECT BY REGEXP_SUBSTR ('(<<23>>+<<34>>)-<<45>>*<<56>>','[^<<(w)>>]+',1,LEVEL) IS NOT NULL

order by 1


select columnNo from (
SELECT DISTINCT REGEXP_SUBSTR ('<<01_02_04>>+<<01_02_05>>+<<01_02_06>>+<<01_02_07>>','[^<<(w)>>$]+',1,LEVEL) as columnNo
FROM   DUAL
CONNECT BY REGEXP_SUBSTR ('<<01_02_04>>+<<01_02_05>>+<<01_02_06>>+<<01_02_07>>','[^<<(w)>>]+',1,LEVEL) IS NOT NULL
)
where columnNo not in ('*','+','-','/')

select replace(replace('<<01_02_04>>+<<01_02_05>>+<<01_02_06>>+<<01_02_07>>','<<',' '),'>>',' ') from dual

select  01_02_04 + 01_02_05 + 01_02_06 + 01_02_07  from GTTPISITAXCOMPUTATION


SELECT DISTINCT REGEXP_SUBSTR ('(<<01_01_01>>-<<01_01_02>>)*.085','[^<<w>>$]+',1,LEVEL) as columnNo
FROM   DUAL
CONNECT BY REGEXP_SUBSTR ('(<<01_01_01>>-<<01_01_02>>)*.085','[^<<w>>]+',1,LEVEL) IS NOT NULL

SELECT COLUMNNO FROM (
            SELECT DISTINCT REGEXP_SUBSTR ('(<<01_01_01>>-<<01_01_02>>)*.085','[^<<(w)>>$]+',1,LEVEL) AS COLUMNNO
            FROM   DUAL
            CONNECT BY REGEXP_SUBSTR ('(<<01_01_01>>-<<01_01_02>>)*.085','[^<<(w)>>]+',1,LEVEL) IS NOT NULL
        )
        WHERE COLUMNNO NOT LIKE ('%*%') 
        AND COLUMNNO NOT LIKE ('%-%') 
        AND COLUMNNO NOT LIKE ('%+%') 
        AND COLUMNNO NOT LIKE ('%/%')
        
SELECT NVL(COMPPROJCTEDVALUE,0) FROM GTTPISITAXCOMPUTATION
                    WHERE COLUMNNO='09_01_01_03'        
                    
SELECT * FROM PISITAXPARAM                     
WHERE COLUMNNO='09_01_01_03'       



SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%INCOME%')

SELECT * FROM MENUMASTER_RND
WHERE MENUCODE = '0107021002'

PRCWPS_ITAXCOMPUTATION_B4SAVE


SELECT 
TRUNC(MONTHS_BETWEEN (CASE WHEN TO_NUMBER(SUBSTR('202002',5,2)) <=3  THEN TO_DATE('31/03/'||(SUBSTR('202002',0,4)),'DD/MM/YYYY') ELSE TO_DATE('31/03/'||(SUBSTR('202002',0,4)+1),'DD/MM/YYYY') END ,TO_DATE('01/'||SUBSTR('202002',5,2)||SUBSTR('202002',0,4) ,'DD/MM/YY')),0) B
FROM DUAL;

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
<<<<<<< HEAD

PROC_RPT_GPSPFREGISTER('JT0069','0004','01/04/2020','31/03/2021','','')


SELECT NVL(B.FPF, A.FPF) FROM 
(
    SELECT 'A' C, 8.33111 FPF FROM DUAL
) A,
(
    SELECT 'A' C, PARAMETER_VALUE FPF FROM SYS_PARAMETER
    WHERE PARAMETER_NAME LIKE 'FPF%'
    AND COMPANYCODE='JT0069'
    AND DIVISIONCODE='00041'
) B
WHERE A.C = B.C(+)
=======
>>>>>>> 9d9b9844b99ca561dd5a30d4b5df7a7393e26883
CHANGE GRADECODE JOONKTOLLEE


PRODMILLINGPROCDETAILS

PRODGRABLINGPROCDETAILS

CREATE TABLE GTT_EXCEL_REPORT
(
  ROWINDEX       NUMBER(20),
  EXCELROWTYPE   VARCHAR2(50 BYTE),
  EXCELROWSTYLE  VARCHAR2(500 BYTE),
  EXCELVALUES    VARCHAR2(3000 BYTE),
  EXCELTAG       VARCHAR2(500 BYTE)
)

-------------------------
DOCUMENTDATE : 26.06.2020		
	
DOCUMENTNO				OLDGRADE		NEW GRADE
------------------------------------------------------	
DBA/0032/2020			RP-BULK			RP-BBB
						
CDY/0033/2020			RP-BULK			RP-BBB
						
GMK/0034/2020			AC-BULK			AC-BBB
						
GMK/0035/2020			AC-BULK			AC-BBB



---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------


CREATE TABLE GTT_EXCEL_REPORT
(
  ROWINDEX       NUMBER(20),
  EXCELROWTYPE   VARCHAR2(50 BYTE),
  EXCELROWSTYLE  VARCHAR2(500 BYTE),
  EXCELVALUES    VARCHAR2(3000 BYTE),
  EXCELTAG       VARCHAR2(500 BYTE)
)

-------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE PROC_INSERT_EXCEL_REPORT
(
    P_ROWINDEX NUMBER,
    P_EXCELROWTYPE VARCHAR2,
    P_EXCELROWSTYLE VARCHAR2,
    P_EXCELVALUES VARCHAR2,
    P_EXCELTAG VARCHAR2
)
AS
BEGIN


    INSERT INTO GTT_EXCEL_REPORT(ROWINDEX, EXCELROWTYPE, EXCELROWSTYLE, EXCELVALUES, EXCELTAG)
    VALUES (P_ROWINDEX, P_EXCELROWTYPE, P_EXCELROWSTYLE, P_EXCELVALUES, P_EXCELTAG);
    
END;
/
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

GBL_PISITAXCOMPUTATION


select * from PISITAXCOMPUTATION

select * from GBL_PISITAXCOMPUTATION

delete from PISITAXCOMPUTATION
where tokenno='00385'



select * from PISITAXCOMPUTATION



delete from GBL_PISITAXCOMPUTATION

select * from GBL_PISITAXCOMPUTATION

where tokenno='00385'

delete from PISITAXCOMPUTATION
where tokenno='00385'

SELECT * FROM MENUMASTER_RND
WHERE MENUCODE='0107021002'

SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%income%')

SELECT * FROM ROLEDETAILS
WHERE MENUCODE=''

SELECT * FROM REPORTPARAMETERMASTER
WHERE REPORTTAG=''

PRCWPS_ITAXCOMPUTATION_B4SAVE


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='20094'

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='20136'

delete from SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='20136'


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL=''

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_TEMP='GBL_PISITAXCOMPUTATION'

SELECT * from PISITAXCOMPUTATION
where tokenno='00378'

SELECT * FROM 

exec PROC_CREATE_GBL_TMP_TABLES(20094,0)


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SELECT * FROM PISITAXSLAB
WHERE YEARCODE='2019-2020'

ORDER BY CATEGORY,SLABFROM

FN_GET_ITAX_PERCENTAGE


SELECT  FN_GET_ITAX_PERCENTAGE('0001','0002','2019-2020','00378','600000') TAXAMOUNT FROM DUAL


SELECT SLABFROM, SLABTO,TAXPERCENTAGE,CFFROMLASTSLAB, LASTSLAB, 600000 AMT, CFFROMLASTSLAB + (600000-LASTSLAB)*(TAXPERCENTAGE/100) A
FROM (
    SELECT SLABFROM, SLABTO,TAXPERCENTAGE FROM PISITAXSLAB
    WHERE YEARCODE='2019-2020'
    AND 600000 BETWEEN SLABFROM AND SLABTO
    AND CATEGORY='MALE'
) A,
(
    SELECT MAX(SLABTO) LASTSLAB, MAX(CFFROMLASTSLAB) CFFROMLASTSLAB FROM PISITAXSLAB
    WHERE YEARCODE='2019-2020'
    --AND 300000 BETWEEN SLABFROM AND SLABTO
    AND CATEGORY='MALE'
    AND SLABFROM < 
    (
        SELECT SLABFROM FROM PISITAXSLAB
        WHERE YEARCODE='2019-2020'
        AND 600000 BETWEEN SLABFROM AND SLABTO
        AND CATEGORY='MALE'
    )
)
WHERE 1=1


---------------------------------------------------------------------------------------------

EXEC PROC_PISITAX_COMPUTATION ('0001', '0002', '2019-2020','SS','SREG', '00378') 

SELECT * FROM GTTPISITAXCOMPUTATION

PISITAXPARAM

352200	1501200	1501200


EXEC PROC_CREATE_SYSTFMAP('PISITAXPARAM', 'COMPANYCODE, DIVISIONCODE, YEARCODE, COLUMNNO', 'GBL_PISITAXPARAMBULK')

PROC_CREATE_SYSTFMAP(P_TABLE_NAME IN VARCHAR2, P_SYS_COLUMNNAMES IN VARCHAR2, 'GBL_PISITAXPARAMBULK')A

GBL_PISITAXPARAM

DELETE FROM SYS_TFMAP WHERE  SYS_TABLE_SEQUENCIER = 20135


SELECT * FROM SYS_TFMAP WHERE  SYS_TABLE_SEQUENCIER = 20135

EXEC PROC_CREATE_GBL_TMP_TABLES(20135,0)


select * from PISITAXPARAM
where yearcode='2019-2020'


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

--NEW  table script COMPMAXAMOUNT ADDED 
CREATE TABLE GLOSTER_WEB.GTTPISITAXCOMPUTATION
(
  COMPANYCODE        VARCHAR2(10 BYTE),
  DIVISIONCODE       VARCHAR2(10 BYTE),
  YEARCODE           VARCHAR2(10 BYTE),
  WORKERSERIAL       VARCHAR2(10 BYTE),
  TOKENNO            VARCHAR2(10 BYTE),
  COMPONENTHEADER    VARCHAR2(200 BYTE),
  COMPONENTCODE      VARCHAR2(100 BYTE),
  COMPACTUALVALUE    NUMBER(15,2),
  COMPPROJCTEDVALUE  NUMBER(15,2),
  COMPMANUALVALUE    NUMBER(15,2),
  COMPARREARVALUE    NUMBER(15,2),
  COLUMNFORSUBTOTAL  VARCHAR2(1 BYTE),
  COLUMNNO           VARCHAR2(50 BYTE),
  COMPVALUE          VARCHAR2(200 BYTE),
  COMPONENTTYPE      VARCHAR2(50 BYTE),
  COMPFORMULA        VARCHAR2(500 BYTE),
  ACTUALCOMPCODE     VARCHAR2(50 BYTE),
  FORMULARATE        NUMBER(15,2),
  MANUALFORMULA      VARCHAR2(50 BYTE),
  SERIALNO           NUMBER,
  DISPLAYINGRID      VARCHAR2(1 BYTE),
  CATEGORYCODE       VARCHAR2(10 BYTE),
  GRADECODE          VARCHAR2(10 BYTE),
  COMPMAXAMOUNT          NUMBER(15,2) --NEW ADDED
)

---------------------------------------------------------------------------------------------
--old table script

DROP TABLE GLOSTER_WEB.GTTPISITAXCOMPUTATION CASCADE CONSTRAINTS;

CREATE TABLE GLOSTER_WEB.GTTPISITAXCOMPUTATION
(
  COMPANYCODE        VARCHAR2(10 BYTE),
  DIVISIONCODE       VARCHAR2(10 BYTE),
  YEARCODE           VARCHAR2(10 BYTE),
  WORKERSERIAL       VARCHAR2(10 BYTE),
  TOKENNO            VARCHAR2(10 BYTE),
  COMPONENTHEADER    VARCHAR2(200 BYTE),
  COMPONENTCODE      VARCHAR2(100 BYTE),
  COMPACTUALVALUE    NUMBER(15,2),
  COMPPROJCTEDVALUE  NUMBER(15,2),
  COMPMANUALVALUE    NUMBER(15,2),
  COMPARREARVALUE    NUMBER(15,2),
  COLUMNFORSUBTOTAL  VARCHAR2(1 BYTE),
  COLUMNNO           VARCHAR2(50 BYTE),
  COMPVALUE          VARCHAR2(200 BYTE),
  COMPONENTTYPE      VARCHAR2(50 BYTE),
  COMPFORMULA        VARCHAR2(500 BYTE),
  ACTUALCOMPCODE     VARCHAR2(50 BYTE),
  FORMULARATE        NUMBER(15,2),
  MANUALFORMULA      VARCHAR2(50 BYTE),
  SERIALNO           NUMBER,
  DISPLAYINGRID      VARCHAR2(1 BYTE),
  CATEGORYCODE       VARCHAR2(10 BYTE),
  GRADECODE          VARCHAR2(10 BYTE)
)


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

INSERT INTO GTT_RPT_PFUPLOAD 

              SELECT C.COMPANYNAME, D.DIVISIONNAME, 'JUNE-2020',B.UANNO, B.EMPLOYEENAME || ' ',ROUND(A.GROSSWAGES,0) GROSSWAGES, ROUND(A.PF_GROSS,0) PF_GROSS, 
              ( 
                    CASE WHEN ROUND(A.PF_GROSS,0) >=15000  THEN 15000 ELSE ROUND(A.PF_GROSS,0) END 
              ) PF_GROSS1, 
              ( 
                    CASE WHEN ROUND(A.PF_GROSS,0) >=15000   THEN (ROUND(A.PF_GROSS,0)-15000) ELSE 0 END 
              ) PF_TMP, 
              ROUND(A.PF_E,0),0 PF_E1, 0 PF1, 0 PF2,CATEGORYTYPE EX1,NULL,NULL 
             FROM ( 
                            SELECT COMPANYCODE, DIVISIONCODE,  MAX(CATEGORYTYPE) CATEGORYTYPE, WORKERSERIAL, TOKENNO,SUM(GROSSWAGES) GROSSWAGES,SUM(PF_GROSS) PF_GROSS, SUM(PF_E) PF_E
                            FROM (  
                            SELECT COMPANYCODE, DIVISIONCODE , CATEGORYTYPE, WORKERSERIAL, TOKENNO,GROSSWAGES,PF_GROSS, PF_E   
                            FROM GPSPAYSHEETDETAILS WHERE PERIODTO >=TO_DATE('01/06/2020','DD/MM/YYYY')
                            AND PERIODTO <=TO_DATE('30/06/2020','DD/MM/YYYY') 
                            AND DIVISIONCODE ='0006' 
                            AND COMPANYCODE ='JT0069' 
                            AND PF_E>0  
                            UNION ALL
                            SELECT A.COMPANYCODE, A.DIVISIONCODE ,NULL CATEGORYTYPE, A.WORKERSERIAL, B.TOKENNO,A.NETLEAVEAMOUNT GROSSWAGES, A.PFGROSS ,  A.PFAMOUNT PF_E    
                            FROM GPSLEAVEPROCALCULATION A, GPSEMPLOYEEMAST B
                            WHERE A.COMPANYCODE=B.COMPANYCODE
                            AND A.DIVISIONCODE=B.DIVISIONCODE
                            AND A.WORKERSERIAL= B.WORKERSERIAL 
                            AND A.PFDATE >=TO_DATE('01/06/2020','DD/MM/YYYY')
                            AND A.PFDATE <=TO_DATE('30/06/2020','DD/MM/YYYY') 
                            AND A.DIVISIONCODE ='0006' 
                            AND A.COMPANYCODE ='JT0069'
                            AND A.PFAMOUNT>0  
                            )
                            GROUP BY COMPANYCODE, DIVISIONCODE, WORKERSERIAL, TOKENNO
                          ) A, GPSEMPLOYEEMAST B, COMPANYMAST C, DIVISIONMASTER D 
              WHERE A.COMPANYCODE=B.COMPANYCODE 
              AND A.DIVISIONCODE=B.DIVISIONCODE 
              AND A.WORKERSERIAL=B.WORKERSERIAL 
              AND A.COMPANYCODE=C.COMPANYCODE 
              AND A.COMPANYCODE=D.COMPANYCODE 
              AND A.DIVISIONCODE=D.DIVISIONCODE 
   ORDER BY B.EMPLOYEENAME

EPF_PERCENTAGE :.0167,PF_PERCENTAGE :.1


---------------------------------------------------------------------------------------------

EXEC PROC_RPT_PFUPLOAD('JT0069','0006','202006','')

SELECT * FROM GTT_RPT_PFUPLOAD

    
    SELECT * FROM GPSPAYSHEETDETAILS
    WHERE DIVISIONCODE='0006'
    AND PF_E=1211
    AND PERIODFROM='01-JUN-2020'
    
    
    ABDULKADER P K 	12120	12120	12120	0	1211	1212	1010	202


---------------------------------------------------------------------------------------------

SELECT NVL(B.PARAMETER_VALUE,'N') XX
--   INTO   LV_STAFF_PF_FORMULA_APPLICABLE
FROM 
(
    SELECT '1' DVAL FROM DUAL
) A,
(
    SELECT '1' DVAL,  PARAMETER_VALUE  FROM SYS_PARAMETER
    WHERE PARAMETER_NAME='STAFF_PFUPLOAD_APPLICABLE'
    AND COMPANYCODE='JT0069'
    AND DIVISIONCODE='0006'
    AND ROWNUM=1
)  B
WHERE A.DVAL = B.DVAL(+) ;

INSERT INTO  SYS_PARAMETER
(
    PARAMETER_NAME, PARAMETER_DESC, PARAMETER_VALUE, PROJECTNAME, COMPANYCODE, LASTMODIFIED, SYSROWID, 
    DIVISIONCODE, USERNAME, ALLOW_CHANGE_FROM_INTERFACE
)
SELECT PARAMETER_NAME, PARAMETER_DESC, PARAMETER_VALUE, PROJECTNAME, B.COMPANYCODE, SYSDATE LASTMODIFIED,SYS_GUID() SYSROWID, 
B.DIVISIONCODE, A.USERNAME, ALLOW_CHANGE_FROM_INTERFACE  
FROM SYS_PARAMETER A, DIVISIONMASTER B
WHERE A.PARAMETER_NAME='STAFF_PFUPLOAD_APPLICABLE'
AND A.DIVISIONCODE='0001'
AND B.DIVISIONCODE <> '0001'


SELECT * FROM SYS_PARAMETER A
WHERE  A.PARAMETER_NAME='STAFF_PFUPLOAD_APPLICABLE'
AND SYSROWID='06647D8F630944DE8AC7A81328B65EA0'


    
STAFF_PFUPLOAD_APPLICABLE
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

07/07/2020
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

Imcome tax parameter
-------------------------
Points to be checked
--------------------


1. xml parsing problem

note : 
In new handsontable getData() method returns only array of columns not json data
but in new version of handsontable (0.30.*) getSourceData used to return data with json format.

2. Type not showing correct data


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

exec PROC_RPT_PFUPLOAD('JT0069','0006','202006','')

---------------------------------------------------------------------------------------------

INSERT INTO GTT_RPT_PFUPLOAD 
              
              SELECT C.COMPANYNAME, D.DIVISIONNAME, 'JUNE-2020',B.UANNO, B.EMPLOYEENAME || ' ',ROUND(A.GROSSWAGES,0) GROSSWAGES, ROUND(A.PF_GROSS,0) PF_GROSS, 
              ( 
                    CASE WHEN ROUND(A.PF_GROSS,0) >=15000 OR NVL(A.CATEGORYTYPE,'STAFF') = 'WORKER' THEN 15000 ELSE ROUND(A.PF_GROSS,0) END 
              ) PF_GROSS1, 
              ( 
                    CASE WHEN ROUND(A.PF_GROSS,0) >=15000 OR NVL(A.CATEGORYTYPE,'STAFF') = 'WORKER' THEN (ROUND(A.PF_GROSS,0)-15000) ELSE 0 END 
              ) PF_TMP, 
              ROUND(A.PF_E,0),0 PF_E1, 0 PF1, 0 PF2,NULL,NULL,NULL 
             FROM ( 
                            SELECT COMPANYCODE, DIVISIONCODE,  MAX(CATEGORYTYPE) CATEGORYTYPE, WORKERSERIAL, TOKENNO,SUM(GROSSWAGES) GROSSWAGES,SUM(PF_GROSS) PF_GROSS, SUM(PF_E) PF_E
                            FROM (  
                            SELECT COMPANYCODE, DIVISIONCODE , CATEGORYTYPE, WORKERSERIAL, TOKENNO,GROSSWAGES,PF_GROSS, PF_E   
                            FROM GPSPAYSHEETDETAILS WHERE PERIODTO >=TO_DATE('01/06/2020','DD/MM/YYYY')
                            AND PERIODTO <=TO_DATE('30/06/2020','DD/MM/YYYY') 
                            AND DIVISIONCODE ='0006' 
                            AND COMPANYCODE ='JT0069' 
                            AND PF_E>0  
                            UNION ALL
                            SELECT A.COMPANYCODE, A.DIVISIONCODE ,NULL CATEGORYTYPE, A.WORKERSERIAL, B.TOKENNO,A.NETLEAVEAMOUNT GROSSWAGES, A.PFGROSS ,  A.PFAMOUNT PF_E    
                            FROM GPSLEAVEPROCALCULATION A, GPSEMPLOYEEMAST B
                            WHERE A.COMPANYCODE=B.COMPANYCODE
                            AND A.DIVISIONCODE=B.DIVISIONCODE
                            AND A.WORKERSERIAL= B.WORKERSERIAL 
                            AND A.PFDATE >=TO_DATE('01/06/2020','DD/MM/YYYY')
                            AND A.PFDATE <=TO_DATE('30/06/2020','DD/MM/YYYY') 
                            AND A.DIVISIONCODE ='0006' 
                            AND A.COMPANYCODE ='JT0069'
                            AND A.PFAMOUNT>0  
                            )
                            GROUP BY COMPANYCODE, DIVISIONCODE, WORKERSERIAL, TOKENNO
                          ) A, GPSEMPLOYEEMAST B, COMPANYMAST C, DIVISIONMASTER D 
              WHERE A.COMPANYCODE=B.COMPANYCODE 
              AND A.DIVISIONCODE=B.DIVISIONCODE 
              AND A.WORKERSERIAL=B.WORKERSERIAL 
              AND A.COMPANYCODE=C.COMPANYCODE 
              AND A.COMPANYCODE=D.COMPANYCODE 
              AND A.DIVISIONCODE=D.DIVISIONCODE 
   ORDER BY B.EMPLOYEENAME
 
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SELECT TAXPERCENTAGE FROM PISITAXSLAB
WHERE COMPANYCODE='0001'
AND DIVISIONCODE='0002'
AND YEARCODE='2019-2020'
AND SUBSTR(CATEGORY,1,1) = 
(
    SELECT SUBSTR(SEX,1,1) SEX FROM PISEMPLOYEEMASTER
    WHERE TOKENNO='00378'
    AND COMPANYCODE='0001'
    AND DIVISIONCODE='0002'
)
AND TO_NUMBER('2000000') BETWEEN SLABFROM AND SLABTO

SELECT SEX FROM PISEMPLOYEEMASTER
WHERE TOKENNO='00378'

SELECT FN_GET_ITAX_PERCENTAGE('0001','0002','2019-2020','00378','400000') TAXPERC FROM DUAL

SELECT FN_GET_ITAX_PERCENTAGE('0001','0002','2019-2020','00378','310018.5') TAXPERC FROM DUAL


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION GLOSTER_WEB.FN_GET_ITAX_PERCENTAGE
(
    P_COMPANYCODE VARCHAR2,
    P_DIVISIONCODE VARCHAR2,
    P_YEARCODE VARCHAR2,
    P_TOKENNO VARCHAR2 ,
    P_INCOME VARCHAR2 
)
RETURN NUMBER
AS
LV_STLBAL NUMBER;
BEGIN
LV_STLBAL := 0;
BEGIN
    SELECT TAXPERCENTAGE INTO LV_STLBAL 
    FROM PISITAXSLAB
    WHERE COMPANYCODE=P_COMPANYCODE
    AND DIVISIONCODE=P_DIVISIONCODE
    AND YEARCODE=P_YEARCODE
    AND SUBSTR(CATEGORY,1,1) = 
    (
        SELECT SUBSTR(SEX,1,1) SEX FROM PISEMPLOYEEMASTER
        WHERE TOKENNO=P_TOKENNO
        AND COMPANYCODE=P_COMPANYCODE
        AND DIVISIONCODE=P_DIVISIONCODE
    )
    AND TO_NUMBER(P_INCOME) BETWEEN SLABFROM AND SLABTO;
EXCEPTION WHEN OTHERS THEN
    LV_STLBAL := 0;
END;
    
RETURN LV_STLBAL;
END;
/

>>>>>>> 8a2d0dbafba17f6124ed691856e5f9b4d9158905


---------------------------------------------------------------------------------------------

select * from login


SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%INCOME%')

SELECT * FROM MENUMASTER_RND
WHERE MENUCODE = '01070210'


SELECT * FROM ROLEDETAILS
WHERE MENUCODE = '01070210'

Insert into ROLEDETAILS
   (ROLEID, MENUCODE, ACCESSENTRY, ACCESSEDIT, ACCESSDELETE, 
    ACCESSREPORT, ACCESSUTILITIES, ACCESSVIEW, ACCESSPRINT, PROJECTNAME, 
    SYSROWID)
 Values
   ('1', '01070210', 'Y', 'X', 'X', 
    'X', 'X', 'N', 'X', 'PIS', 
    '202002141245040004444469');
COMMIT;


GBL_PISITAXPARAM


PISITAXPARAM

SELECT * FROM PISITAXPARAM
ORDER BY COLUMNNO

SELECT DISTINCT  COLUMNNO FROM PISITAXPARAM

EXEC PRC_PIS_ITAXPREVYRSAVE('0001', '0002', '2020-2021','PISITAXPARAM','SWT')


SELECT MIN(LASTMODIFIED) FROM PISITAXPARAM WHERE COLUMNNO='01_01_02'
AND TO_CHAR(LASTMODIFIED,'DD-MON-YYYY') = '04-JUL-2020'

DELETE FROM PISITAXPARAM WHERE LASTMODIFIED>'03-JUL-2020'
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SELECT * FROM SYS_HELP_QRY
WHERE QRY_ID = '7012'

SELECT * FROM PISEMPLOYEEMASTER
where employeename like 'PRAVA%'

WHERE COMPANYCODE=<<COMPANYCODE>>
  AND DIVISIONCODE=<<DIVISIONCODE>>
  ORDER BY TOKENNO,EMPLOYEENAME



 SELECT COMPONENTHEADER, COMPONENTCODE, COMPACTUALVALUE, COMPPROJCTEDVALUE, COMPMANUALVALUE,
 COMPARREARVALUE, COLUMNFORSUBTOTAL, COLUMNNO, COMPVALUE,
 COMPONENTTYPE, COMPFORMULA, ACTUALCOMPCODE, FORMULARATE,
 MANUALFORMULA, SERIALNO, COMPANYCODE, DIVISIONCODE, YEARCODE,
 WORKERSERIAL, TOKENNO, CATEGORYCODE, GRADECODE, 'SWT' USERNAME, NULL SYSROWID, 'A' OPERATIONMODE, 'N' ISPROCESSALL
 FROM GTTPISITAXCOMPUTATION
 WHERE 1=1 --AND NVL(DISPLAYINGRID,'N')='Y'
 ORDER BY COLUMNNO
 
 PROC_PISITAX_COMPUTATION
 
 EXEC PROC_PISITAX_COMPUTATION ('0001', '0002', '2020-2021','SS','STSS', '00378')
 
 EXEC PROC_PISITAX_COMPUTATION ('0001', '0002', '2019-2020','SS','SREG', '00378')
 
 
 EXEC PRC_PISVIEWCREATION ('0001','0002','PISASSIGN',0,'202006','202006', 'SALARY', 'PISPAYTRANSACTION_SWT')
 
 CREATE OR REPLACE PROCEDURE GLOSTER_WEB.PRC_PISVIEWCREATION ( P_COMPCODE Varchar2, 
                                                  P_DIVCODE Varchar2, 
                                                  P_ViewName Varchar2,
                                                  P_Phase Number,
                                                  P_YEARMONTH Varchar2,
                                                  P_EFFECTYEARMONTH Varchar2,
                                                  P_TRANTYPE VARCHAR2 DEFAULT 'SALARY', 
                                                  P_SALRAYTABLENAME VARCHAR2 DEFAULT 'PISPAYTRANSACTION_SWT')
as 


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
DECLARE
P_UNITCODE VARCHAR2(10);
P_YEARMONTH VARCHAR2(10);
BEGIN

P_UNITCODE := '01';
P_YEARMONTH := '202004';

--SELECT * FROM MENUMASTER_RND
--WHERE menudesc like '%Salary%'

--prcSalary_Bf_MainSave

FOR C1 IN 
(
    SELECT A.COMPANYCODE, A.DIVISIONCODE, B.UNITCODE, A.CATEGORYCODE, A.GRADECODE 
    FROM PISGRADEMASTER A, PISUNITMASTER B
    WHERE A.COMPANYCODE=B.COMPANYCODE
    AND A.DIVISIONCODE=B.DIVISIONCODE
    AND B.UNITCODE=P_UNITCODE
    ORDER BY B.UNITCODE, A.CATEGORYCODE, A.GRADECODE
)
LOOP

    DBMS_OUTPUT.PUT_LINE(CHR(10)||' PRC_PIS_SALARY_PROCESS('''||C1.COMPANYCODE||''','''||C1.DIVISIONCODE||''',''SALARY'',''SWT'','''||P_YEARMONTH||''','''||P_YEARMONTH||''','''||C1.UNITCODE||''','''||C1.CATEGORYCODE||''','''||C1.GRADECODE||''','''');');
  
--    PRC_PIS_SALARY_PROCESS(C1.COMPANYCODE,C1.DIVISIONCODE,'SALARY','SWT',P_YEARMONTH,P_YEARMONTH,C1.UNITCODE,C1.CATEGORYCODE,C1.GRADECODE ,'');
END LOOP; 

END;                 


---------------------------------------------------------------------------------------------
BEGIN
 PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','10','A','');

 PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','10','B','');

 PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','10','C','');

 PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','10','D','');

 PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','11','A','');

 PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','11','B','');

 PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','11','C','');

 PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','11','D','');

 PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','12','G','');

 PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','12','H','');

 PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','20','E','');

 PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','20','F','');
 END;
 
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
DECLARE
P_UNITCODE VARCHAR2(10);
P_YEARMONTH VARCHAR2(10);
BEGIN

P_UNITCODE := '01';
P_YEARMONTH := '202004';

--SELECT * FROM MENUMASTER_RND
--WHERE menudesc like '%Salary%'

--prcSalary_Bf_MainSave

FOR C1 IN 
(
    SELECT A.COMPANYCODE, A.DIVISIONCODE, B.UNITCODE, A.CATEGORYCODE, A.GRADECODE 
    FROM PISGRADEMASTER A, PISUNITMASTER B
    WHERE A.COMPANYCODE=B.COMPANYCODE
    AND A.DIVISIONCODE=B.DIVISIONCODE
    AND B.UNITCODE=P_UNITCODE
    ORDER BY B.UNITCODE, A.CATEGORYCODE, A.GRADECODE
)
LOOP

    DBMS_OUTPUT.PUT_LINE(' PRC_PIS_SALARY_PROCESS('''||C1.COMPANYCODE||''','''||C1.DIVISIONCODE||''',''SALARY'',''SWT'','||''','''||P_YEARMONTH||''','''||P_YEARMONTH||''','''||C1.UNITCODE||''','''||C1.CATEGORYCODE||''','''||C1.GRADECODE||''','''');');
  
    PRC_PIS_SALARY_PROCESS(C1.COMPANYCODE,C1.DIVISIONCODE,'SALARY','SWT',P_YEARMONTH,P_YEARMONTH,C1.UNITCODE,C1.CATEGORYCODE,C1.GRADECODE ,'');
END LOOP; 
--  lv_Master.COMPANYCODE,
--                                lv_Master.DIVISIONCODE, 
--                                'SALARY', 
--                                lv_Master.USERNAME,
--                                lv_Master.YEARMONTH, 
--                                lv_Master.YEARMONTH,
--                                lv_Master.UNITCODE,
--                                lv_Master.CATEGORYCODE,
--                                lv_Master.GRADECODE,
--                                '',
--                                lv_Master.WORKERSERIAL                                           
--                              );

-- SELECT A.COMPANYCODE, A.DIVISIONCODE, B.UNITCODE, A.CATEGORYCODE, A.GRADECODE 
--    FROM PISGRADEMASTER A, PISUNITMASTER B
--    WHERE A.COMPANYCODE=B.COMPANYCODE
--    AND A.DIVISIONCODE=B.DIVISIONCODE
--    AND B.UNITCODE='01'
--    ORDER BY B.UNITCODE, A.CATEGORYCODE, A.GRADECODE 

--SELECT * FROM PISUNITMASTER
END                              

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

Dear Sunil,

 

This is reference to our telecom as per your trailing mail, please provide bank loan interest EMI ( when employee not working  two or more months or any others) and Compensatory allowance logic which is not covered in the SRS and rectify the other points as early as possible.

 

Thanks,

Amalesh Das.

 

 

From: Sunil K Sharma [mailto:sunil.k.sharma@birlacorp.com]
Sent: 04 July 2020 10:11
To: Amalesh Das; Varun Kasat; Anupam Mitra; Birendrakumar Giri
Cc: 'Sujit Singh Softweb'; Ghisaram Verma; chiranjit.ghosh@softweb.co.in
Subject: Re: PIS Data Template

 

Dear Amalesh da

 

we have following further observation

 

1) Ptax not deducted in some cases (e.g.  emp_cd 00794)

2) Bank Loan interest not deducted ( e.g.  emp_cd 00597)

3) Hra _amount not showing        ( emp_cd 01214)

4) Compensatory Allowance not calculated ( e.g. emp_cd  01074)

5) wrong esi deducted (emp_Cd 00763)

we will let you know further mismatch if come as our  reconcile  is going on

 
 
 
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
select * from querymaster
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

Dear Chiranjit,

Do the needful and talk to Sunil Sharma.

 

Thanks,

Amalesh Das

 

From: Sunil K Sharma [mailto:sunil.k.sharma@birlacorp.com]
Sent: 02 July 2020 11:49
To: Varun Kasat; Amalesh Das; Anupam Mitra; Birendrakumar Giri
Cc: 'Sujit Singh Softweb'; Ghisaram Verma
Subject: Re: PIS Data Template

 

 

Dear Amalesh da

 

After again reprocessing it we had few initial observation which is as follows

 

 

1 .Compulsory Savings  --(DONE)

 

Basic salary<10000, deduct 200, else 500 (Only for BJM Staff other than trainee). In HO to be deducted for employee code 01069 Rs. 500

 

2. Club dedn  ---(DONE)

Basic salary<2000, deduct 5,
Basic salary between 2000 and 2999, deduct 8
Basic salary between 3000 and 7499, deduct 10
else 15 (Only for BJM Staff other than trainee).

 

 

3 Lic Dedn is not done properly  --(DONE)

 

4) Pf loan ,Bank loan ,Advance  Loan not deducted properly --(DONE)


Please Look into it


---------------------------------------------------------------------------------------------

update pfloantransaction set capitalinstallmentamount=4167, graceperioddays=28 where pfno = '10047';
update pfloantransaction set capitalinstallmentamount=4167, graceperioddays=28 where pfno = '10736';
update pfloantransaction set capitalinstallmentamount=4167, graceperioddays=28 where pfno = '11723';
update pfloantransaction set capitalinstallmentamount=13333, graceperioddays=28 where pfno = '11444';
update pfloantransaction set capitalinstallmentamount=4000, graceperioddays=42 where pfno = '12072';
update pfloantransaction set capitalinstallmentamount=6000, graceperioddays=28 where pfno = '12080';
update pfloantransaction set capitalinstallmentamount=1043, graceperioddays=28 where pfno = '12103';
update pfloantransaction set capitalinstallmentamount=12500, graceperioddays=42 where pfno = '12105';
update pfloantransaction set capitalinstallmentamount=7917, graceperioddays=28 where pfno = '12115';
update pfloantransaction set capitalinstallmentamount=6667, graceperioddays=28 where pfno = '12124';
update pfloantransaction set capitalinstallmentamount=2500, graceperioddays=28 where pfno = '13114';
update pfloantransaction set capitalinstallmentamount=7500, graceperioddays=42 where pfno = '13117';
update pfloantransaction set capitalinstallmentamount=12500, graceperioddays=28 where pfno = '13254';
update pfloantransaction set capitalinstallmentamount=13000, graceperioddays=28 where pfno = '13386';
update pfloantransaction set capitalinstallmentamount=5000, graceperioddays=28 where pfno = '13534';
update pfloantransaction set capitalinstallmentamount=10500, graceperioddays=42 where pfno = '14183';
update pfloantransaction set capitalinstallmentamount=4584, graceperioddays=28 where pfno = '14271';
update pfloantransaction set capitalinstallmentamount=3334, graceperioddays=28 where pfno = '14451';
update pfloantransaction set capitalinstallmentamount=2083, graceperioddays=42 where pfno = '14458';
update pfloantransaction set capitalinstallmentamount=5000, graceperioddays=42 where pfno = '14483';
update pfloantransaction set capitalinstallmentamount=3334, graceperioddays=28 where pfno = '14615';
update pfloantransaction set capitalinstallmentamount=2917, graceperioddays=28 where pfno = '14785';
update pfloantransaction set capitalinstallmentamount=4167, graceperioddays=28 where pfno = '15177';
update pfloantransaction set capitalinstallmentamount=4167, graceperioddays=28 where pfno = '15215';
update pfloantransaction set capitalinstallmentamount=3959, graceperioddays=28 where pfno = '15338';
update pfloantransaction set capitalinstallmentamount=4000, graceperioddays=28 where pfno = '11338';
update pfloantransaction set capitalinstallmentamount=3750, graceperioddays=42 where pfno = '15559';
update pfloantransaction set capitalinstallmentamount=5625, graceperioddays=42 where pfno = '15771';
update pfloantransaction set capitalinstallmentamount=2500, graceperioddays=28 where pfno = '15791';
update pfloantransaction set capitalinstallmentamount=7084, graceperioddays=28 where pfno = '15792';
update pfloantransaction set capitalinstallmentamount=4167, graceperioddays=28 where pfno = '15797';
update pfloantransaction set capitalinstallmentamount=8333, graceperioddays=28 where pfno = '12130';
update pfloantransaction set capitalinstallmentamount=4167, graceperioddays=28 where pfno = '15904';
update pfloantransaction set capitalinstallmentamount=4167, graceperioddays=28 where pfno = '15982';
update pfloantransaction set capitalinstallmentamount=2709, graceperioddays=28 where pfno = '16142';
update pfloantransaction set capitalinstallmentamount=2917, graceperioddays=28 where pfno = '16359';
update pfloantransaction set capitalinstallmentamount=2500, graceperioddays=42 where pfno = '16325';
update pfloantransaction set capitalinstallmentamount=2500, graceperioddays=28 where pfno = '16324';
update pfloantransaction set capitalinstallmentamount=3334, graceperioddays=28 where pfno = '16461';
update pfloantransaction set capitalinstallmentamount=1250, graceperioddays=42 where pfno = '16514';
update pfloantransaction set capitalinstallmentamount=5334, graceperioddays=28 where pfno = '16530';
update pfloantransaction set capitalinstallmentamount=7084, graceperioddays=28 where pfno = '16555';
update pfloantransaction set capitalinstallmentamount=7500, graceperioddays=28 where pfno = '342';
update pfloantransaction set capitalinstallmentamount=1650, graceperioddays=42 where pfno = '443';
update pfloantransaction set capitalinstallmentamount=1667, graceperioddays=28 where pfno = '16537';
update pfloantransaction set capitalinstallmentamount=9167, graceperioddays=28 where pfno = '16603';
update pfloantransaction set capitalinstallmentamount=2000, graceperioddays=28 where pfno = '16620';
update pfloantransaction set capitalinstallmentamount=4000, graceperioddays=28 where pfno = '16624';
update pfloantransaction set capitalinstallmentamount=1667, graceperioddays=28 where pfno = '16732';
update pfloantransaction set capitalinstallmentamount=834, graceperioddays=28 where pfno = '16790';
update pfloantransaction set capitalinstallmentamount=2688, graceperioddays=28 where pfno = '16892';
update pfloantransaction set capitalinstallmentamount=1917, graceperioddays=28 where pfno = '17178';
update pfloantransaction set capitalinstallmentamount=6000, graceperioddays=42 where pfno = '10061';
update pfloantransaction set capitalinstallmentamount=3000, graceperioddays=42 where pfno = '10972';
update pfloantransaction set capitalinstallmentamount=6000, graceperioddays=28 where pfno = '13107';
update pfloantransaction set capitalinstallmentamount=6250, graceperioddays=42 where pfno = '14994';
update pfloantransaction set capitalinstallmentamount=2917, graceperioddays=28 where pfno = '12134';
update pfloantransaction set capitalinstallmentamount=2708, graceperioddays=42 where pfno = '13427';
update pfloantransaction set capitalinstallmentamount=2500, graceperioddays=42 where pfno = '331';
update pfloantransaction set capitalinstallmentamount=2200, graceperioddays=28 where pfno = '438';

SELECT * FROM PFLOANTRANSACTION

WHERE TOKENNO LIKE '01031'

SELECT * FROM PISEMPLOYEEMASTER
WHERE TOKENNO ='01031'




SELECT TOKENNO,CAPITALINSTALLMENTAMT,INTERESTINSTALLMENTAMT,CAPITALINSTALLMENTAMOUNT,INTERESTINSTALLMENTAMOUNT,TOTALEMIAMOUNT FROM PFLOANTRANSACTION

UPDATE PFLOANTRANSACTION SET
CAPITALINSTALLMENTAMT = CAPITALINSTALLMENTAMOUNT,
INTERESTINSTALLMENTAMT = CAPITALINSTALLMENTAMOUNT,
INTERESTINSTALLMENTAMOUNT = CAPITALINSTALLMENTAMOUNT,
TOTALEMIAMOUNT = CAPITALINSTALLMENTAMOUNT
WHERE 1=1


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
SELECT * FROM WPS_ERROR_LOG

SELECT * FROM PIS_ERROR_LOG

DELETE FROM WPS_ERROR_LOG


DELETE FROM PIS_ERROR_LOG


SELECT * FROM PFLOANTRANSACTION

SELECT LOAN_PFL, A.* FROM PISPAYTRANSACTION A
WHERE LOAN_PFL > 0



SELECT * FROM LOANTRANSACTION

SELECT LOAN_BL, A.* FROM PISPAYTRANSACTION A
WHERE LOAN_BL > 0

SELECT  A.* FROM PISPAYTRANSACTION A
WHERE TOKENNO='00473'

SELECT * FROM PISCOMPONENTASSIGNMENT

SELECT DISTINCT UNITCODE, GRADECODE, CATEGORYCODE FROM PISCOMPONENTASSIGNMENT

SELECT * FROM PISCOMPONENTASSIGNMENT
WHERE UNITCODE='02'
AND GRADECODE='C'


SELECT * FROM BJM_COMP_ASSIGN

SELECT * FROM PISCOMPONENTASSIGNMENT
WHERE UNITCODE='02'
AND TRANSACTIONTYPE='ASSIGNMENT'
AND BASIC > 0

SELECT * FROM PISEMPLOYEEMASTER
WHERE UNITCODE='03'

UNIT - 01 -215 - 215
    -   02 - 5 - 12
    -   02 - 0 - 2
    
SELECT DISTINCT UNITCODE, CATEGORYCODE, GRADECODE FROM PISGRADECOMPONENTMAPPING
    


SELECT * FROM BJM_EMP_MAST
WHERE UNITCODE='02'

SELECT 



---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SELECT * FROM PISCOMPONENTMASTER

COMPANYCODE, DIVISIONCODE, YEARCODE, YEARMONTH, UNITCODE, DEPARTMENTCODE, 
CATEGORYCODE, GRADECODE, WORKERSERIAL, TOKENNO, TRANSACTIONTYPE, SYSROWID, 
LASTMODIFIED, USERNAME, 
BASIC, DA, HRA_GROSS, HRA_PER, HRA, PF_GROSS, PEN_GROSS, ESI_GROSS, 
PTAX_GROSS, PF_E, PF_C, FPF, VPF_PERC, VPF, ESI_E, ESI_C, PTAX, LWF, 
SARR_ARRE, SARR_ARRD, SARR_PF_GROSS, SARR_NPF_GROSS, GROSSEARN, 
GROSSDEDN, MISC_BF, MISC_CF, TOTEARN, TOTDEDN, NETSALARY, 
LOAN_PFLN, LINT_PFLN, LOAN_SADV, LINT_SADV, LOAN_VADV, 
LINT_VADV, LOAN_HLOAN, LINT_HLOAN, EPF, ITAX, FUEL, 
OTH_ALLOW, CHILD_ALOW, CONV_ALOW, HRA_FIXED, MISC_EARN, 
ESI_RT, LTA, ADHOC, SPL_ALLOW, OT_AMT, OEPF, OE_NPF, 
HRA_PERC, ACT_PF_GRS, LIC, ELECTRIC, OTHR_DEDN, MEDICAL, 
LVENCSH_DAYS, LEAVE_ENC, ATN_INCNT, ATN_INCAMT, CLUB, CUMM_DAYS, CUM_PFGROS, 
ESI_RATE, CUMMPFEBAL, CUMMPFCBAL, CUMMVPFBAL, RT_BASIC, LNBL_BL, PER_ALLOW, 
MED_ALLOW, COMPSAVING, CHOWKIDARI, FURNITURE, CAR, LOTTERY, RECREATION, GAMES, 
SCHOOL_BUS, CONV_RT, LADIESCLUB, DAIRY, LIBRARY, OT_HRS, SUBSCRIPTION, HR_DEDN,
 SAL_ADV, LOAN_BL, LINT_BL, LIBL_BL, LOAN_STADV, LINT_STADV, LNBL_STADV, 
 LIBL_STADV, LOAN_SA, LINT_SA, LNBL_SA, LIBL_SA, LOAN_PFL, LINT_PFL, LNBL_PFL, 
 LIBL_PFL, ATTN_SALD, ATTN_HOLD, ATTN_WRKD, ATTN_LDAY, LDAY_PL, LDAY_SL, LDAY_CL,
  CUMM_PF_E, CUMM_PF_C, CUMM_VPF, LOAN_HPF, LINT_HPF, LNBL_HPF, LIBL_HPF
  
  BASIC, DA, ADHOC, PERSONAL_PAY, SPL_ALLOW, VPF_PERCENT, SCHOOL_BUS
  
  
  BASIC, DA, ADHOC, PERSONAL_PAY, SPL_ALLOW, VPF_PERCENT, SCHOOL_BUS
  
  
  SELECT EMPCODE, BASIC, DA, ADHOC, PERSONAL_PAY PER_ALLOW, SPL_ALLOW, VPF_PERCENT VPF_PERC, SCHOOL_BUS
  FROM BJM_EMP_MAST
  
  
COMPANYCODE, DIVISIONCODE, '2020-2021' YEARCODE, '202004' YEARMONTH, UNITCODE, DEPARTMENTCODE, 
CATEGORYCODE, GRADECODE, WORKERSERIAL, TOKENNO,'ASSIGNMENT' TRANSACTIONTYPE, SYS_GUID() SYSROWID, 
SYSDATE LASTMODIFIED,'SWT' USERNAME

INSERT INTO PISCOMPONENTASSIGNMENT
(
COMPANYCODE, DIVISIONCODE, YEARCODE,  YEARMONTH, UNITCODE, DEPARTMENTCODE, 
CATEGORYCODE, GRADECODE, WORKERSERIAL, TOKENNO, TRANSACTIONTYPE,  SYSROWID, 
 LASTMODIFIED, USERNAME,
BASIC, ADHOC,SPL_ALLOW,  PER_ALLOW,HRA_PER,HR_DEDN,FURNITURE, CHOWKIDARI
)

  SELECT    COMPANYCODE, DIVISIONCODE, '2020-2021' YEARCODE, '202004' YEARMONTH, UNITCODE, DEPARTMENTCODE, 
CATEGORYCODE, GRADECODE, WORKERSERIAL, TOKENNO,'ASSIGNMENT' TRANSACTIONTYPE, SYS_GUID() SYSROWID, 
SYSDATE LASTMODIFIED,'SWT' USERNAME,
   BASIC_RT, ADHOC_RT, SP_ALLOWN_RT, PERS_ALLOW, HRA_RT HRA_PER, HS_RENT HR_DEDN, FURN_RENT FURNITURE, CHOW_RT CHOWKIDARI 
  FROM BJM_COMP_ASSIGN A, PISEMPLOYEEMASTER B
  WHERE A.EMP_CD=B.TOKENNO
  AND B.TOKENNO NOT IN 
  ( 
    SELECT DISTINCT TOKENNO FROM PISCOMPONENTASSIGNMENT WHERE 1=1
AND TRANSACTIONTYPE='ASSIGNMENT'
  )
  
  
  UPDATE PISCOMPONENTASSIGNMENT A SET 
  (
  BASIC, ADHOC,SPL_ALLOW,  PER_ALLOW,HRA_PER,HR_DEDN,FURNITURE, CHOWKIDARI) = (
  SELECT BASIC_RT, ADHOC_RT, SP_ALLOWN_RT, PERS_ALLOW, HRA_RT HRA_PER, HS_RENT HR_DEDN, FURN_RENT FURNITURE, CHOW_RT CHOWKIDARI 
  FROM BJM_COMP_ASSIGN
  WHERE 1=1 --EMP_CD='01068'
  AND EMP_CD=A. TOKENNO
  )
  WHERE NVL(BASIC,0) = 0
  AND UNITCODE='02'
  
    SELECT * FROM PISCOMPONENTASSIGNMENT
    WHERE TOKENNO='01068'
	
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
 INSERT INTO GBL_LOANBLNC 
 
 SELECT B.COMPANYCODE, B.DIVISIONCODE,B.WORKERSERIAL, B.TOKENNO, B.MODULE, A.LOANCODE, A.LOANDATE, SUM(A.ACTUALLOANAMOUNT) AMOUNT, SUM(A.AMOUNT) LOAN_BAL, 
CASE WHEN SUM(INTERESTAMOUNT) > 0 THEN SUM(INTERESTAMOUNT) ELSE 0 END LOAN_INT_BAL, 
 SUM(LN_CAP_DEDUCT) LN_CAP_DEDUCT, SUM(LN_INT_DEDUCT) LN_CAP_DEDUCT,  
 /*NVL(X.CAP_EMI,0) CAP_EMI, NVL(X.INT_EMI,0) INT_EMI, */
 CASE WHEN M.DEDUCTIONTYPE = 'DEDUCT INTEREST FULL THEN CAPITAL' AND SUM(INTERESTAMOUNT) > 0 THEN 0 ELSE DECODE(DEDUCTIONTYPE,'DEDUCT CAPITAL AND INTEREST SAMETIME',NVL(X.CAP_EMI,0),NVL(X.TOT_EMI,0)) END CAP_EMI, 
 CASE WHEN M.DEDUCTIONTYPE = 'DEDUCT CAPITAL FULL THEN INTEREST' AND SUM(A.AMOUNT) > 0 THEN 0 ELSE DECODE(DEDUCTIONTYPE,'DEDUCT CAPITAL AND INTEREST SAMETIME',NVL(X.INT_EMI,0),NVL(X.TOT_EMI,0))  END INT_EMI, 
 NVL(X.TOT_EMI,0) TOT_EMI, NVL(STP.CAPITAL,'N') CAP_STOP, NVL(STP.INTEREST,'N') INT_STOP, 
 M.CAP_EMI_DEDUCT_TYPE, M.INT_EMI_DEDUCT_TYPE 
 FROM (  
         SELECT DISTINCT A.WORKERSERIAL, A.LOANCODE, A.LOANDATE, AMOUNT, 0 INTERESTAMOUNT , 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT, A.AMOUNT ACTUALLOANAMOUNT 
         FROM LOANTRANSACTION A,  
         (  
            SELECT WORKERSERIAL, LOANCODE, MAX(LOANDATE) LOANDATE  
            FROM LOANTRANSACTION  
            WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001' 
             AND LOANDATE <=  TO_DATE('30/04/2020','DD/MM/YYYY')
             AND LOANTYPE ='REFUNDABLE'
             GROUP BY WORKERSERIAL, LOANCODE  
         ) B  
         WHERE A.WORKERSERIAL = B.WORKERSERIAL AND A.LOANCODE = B.LOANCODE AND A.LOANDATE = B.LOANDATE  AND AMOUNT > 0 
         UNION ALL     
         SELECT A.WORKERSERIAL, A.LOANCODE, A.LOANDATE,   
           (CASE WHEN TRANSACTIONTYPE ='CAPITAL' THEN AMOUNT  
                WHEN TRANSACTIONTYPE ='REPAY' THEN REPAYCAPITAL  
                WHEN TRANSACTIONTYPE ='REPAYCAP' THEN AMOUNT  
                ELSE 0  
           END)*(-1) AMOUNT, 0 INTERESTAMOUNT 
           , 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT, 0 ACTUALLOANAMOUNT     
         FROM LOANBREAKUP A,  
         (  
             SELECT WORKERSERIAL, LOANCODE, MAX(LOANDATE) LOANDATE  
             FROM LOANTRANSACTION  
             WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE ='0001' 
             AND LOANDATE <=  TO_DATE('30/04/2020','DD/MM/YYYY')  
            AND LOANTYPE ='REFUNDABLE'                     
             GROUP BY WORKERSERIAL, LOANCODE  
         ) B  
         WHERE A.WORKERSERIAL = B.WORKERSERIAL AND A.LOANCODE = B.LOANCODE AND A.LOANDATE = B.LOANDATE  
         AND NVL(A.PAIDON,A.EFFECTFORTNIGHT) <=  TO_DATE('30/04/2020','DD/MM/YYYY')  
         AND TRANSACTIONTYPE <> 'INTEREST'  
         UNION ALL  
         SELECT DISTINCT A.WORKERSERIAL, A.LOANCODE, A.LOANDATE, 0 AMOUNT, SUM(NVL(C.INTERESTAMOUNT,0)) INTERESTAMOUNT 
         , 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT, 0 ACTUALLOANAMOUNT  
         FROM ( SELECT WORKERSERIAL, LOANCODE, LOANDATE 
                FROM LOANTRANSACTION 
                WHERE COMPANYCODE ='BJ0056' AND DIVISIONCODE = '0001'
              ) A, 
            (  
                 SELECT  WORKERSERIAL, LOANCODE, MAX(LOANDATE) LOANDATE 
                FROM LOANTRANSACTION  
                WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001'  
                AND LOANDATE <=  TO_DATE('30/04/2020','DD/MM/YYYY')  
                AND LOANTYPE ='REFUNDABLE'
                GROUP BY WORKERSERIAL, LOANCODE  
            ) B, LOANINTEREST C  
         WHERE A.WORKERSERIAL = B.WORKERSERIAL AND A.LOANCODE= B.LOANCODE AND A.LOANDATE = B.LOANDATE  
         AND A.WORKERSERIAL = C.WORKERSERIAL AND A.LOANCODE= C.LOANCODE AND  A.LOANDATE = C.LOANDATE 
         AND C.FORTNIGHTENDDATE <= TO_DATE('30/04/2020','DD/MM/YYYY') 
         AND C.TRANSACTIONTYPE = 'ADD'  
         GROUP BY A.WORKERSERIAL, A.LOANCODE, A.LOANDATE  
         UNION ALL  
         SELECT A.WORKERSERIAL, A.LOANCODE, A.LOANDATE, 0 AMOUNT,   
           (CASE WHEN TRANSACTIONTYPE ='INTEREST' THEN AMOUNT  
                WHEN TRANSACTIONTYPE ='REPAY' THEN REPAYINTEREST  
                WHEN TRANSACTIONTYPE ='REPAYINT' THEN AMOUNT  
                ELSE 0  
           END)*(-1) INTERESTAMOUNT 
           , 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT, 0 ACTUALLOANAMOUNT   
         FROM LOANBREAKUP A,  
         (  
             SELECT WORKERSERIAL, LOANCODE, MAX(LOANDATE) LOANDATE  
             FROM LOANTRANSACTION  
             WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001'  
             AND LOANDATE <=  TO_DATE('30/04/2020','DD/MM/YYYY')  
             AND LOANTYPE ='REFUNDABLE'
             GROUP BY WORKERSERIAL, LOANCODE  
         ) B  
         WHERE A.WORKERSERIAL = B.WORKERSERIAL AND A.LOANCODE = B.LOANCODE AND A.LOANDATE = B.LOANDATE  
         AND NVL(A.PAIDON,A.EFFECTFORTNIGHT) <= TO_DATE('30/04/2020','DD/MM/YYYY') 
         AND TRANSACTIONTYPE <> 'CAPITAL' 
         UNION ALL 
         SELECT A.WORKERSERIAL, A.LOANCODE, A.LOANDATE, 0 AMOUNT,  0 INTERESTAMOUNT,  
         DECODE(TRANSACTIONTYPE,'CAPITAL',AMOUNT,0) LN_CAP_DEDUCT, DECODE(TRANSACTIONTYPE,'INTEREST',AMOUNT,0) LN_INT_DEDUCT, 0 ACTUALLOANAMOUNT 
         FROM LOANBREAKUP A,  
         (  
             SELECT WORKERSERIAL, LOANCODE, MAX(LOANDATE) LOANDATE  
             FROM LOANTRANSACTION  
             WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001'  
             AND LOANDATE <=  TO_DATE('30/04/2020','DD/MM/YYYY') 
             AND LOANTYPE ='REFUNDABLE'
             GROUP BY WORKERSERIAL, LOANCODE  
         ) B  
         WHERE A.WORKERSERIAL = B.WORKERSERIAL AND A.LOANCODE= B.LOANCODE AND A.LOANDATE = B.LOANDATE  
         AND A.EFFECTFORTNIGHT <= TO_DATE('30/04/2020','DD/MM/YYYY')
         AND TRANSACTIONTYPE IN ('CAPITAL','INTEREST')  
     ) A, WORKERVIEW B, 
     (  
        SELECT M.WORKERSERIAL, M.LOANCODE, M.LOANDATE,  
        NVL(M.CAPITALINSTALLMENTAMT,0) CAP_EMI,  
        NVL(M.INTERESTINSTALLMENTAMT,0) INT_EMI, NVL(M.TOTALEMIAMOUNT,0) TOT_EMI  
        FROM LOANTRANSACTION M, ( SELECT WORKERSERIAL, LOANCODE, MAX(LOANDATE) LOANDATE  
                                  FROM LOANTRANSACTION  
                                  WHERE LOANDATE <= TO_DATE('30/04/2020','DD/MM/YYYY')  
                                  GROUP BY WORKERSERIAL, LOANCODE  
                                ) N   
        WHERE M.WORKERSERIAL = N.WORKERSERIAL AND M.LOANCODE=N.LOANCODE AND M.LOANDATE = N.LOANDATE 
--         AND M.WORKERSERIAL=' 000041' 
     )  X,   
     ( 
        SELECT DISTINCT LOANCODE, DEDUCTIONTYPE, 
        NVL(CAP_EMI_DEDUCT_TYPE,'PARTIAL') CAP_EMI_DEDUCT_TYPE, NVL(INT_EMI_DEDUCT_TYPE,'PARTIAL') INT_EMI_DEDUCT_TYPE  
        FROM LOANMASTER 
        WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001' 
          AND REFUNDTYPE ='REFUNDABLE' 
     ) M, 
     ( 
        SELECT WORKERSERIAL, TOKENNO, LOANCODE, LOANSTOPFROMDATE, LOANSTOPTODATE, FULLMILL, CAPITAL, INTEREST 
        FROM LOANDEDUCTIONSTOP 
        WHERE LOANSTOPFROMDATE <= TO_DATE('30/04/2020','DD/MM/YYYY') AND LOANSTOPTODATE >= TO_DATE('30/04/2020','DD/MM/YYYY') 
     ) STP 
 WHERE A.WORKERSERIAL = B.WORKERSERIAL  
   AND A.WORKERSERIAL = X.WORKERSERIAL  AND A.LOANCODE = X.LOANCODE AND A.LOANDATE = X.LOANDATE 
   AND A.LOANCODE = M.LOANCODE 
AND A.WORKERSERIAL  = STP.WORKERSERIAL (+) 
  GROUP BY B.COMPANYCODE, B.DIVISIONCODE, B.WORKERSERIAL, B.TOKENNO, B.MODULE, A.LOANCODE, A.LOANDATE 
  ,NVL(X.CAP_EMI,0), NVL(X.INT_EMI,0), NVL(X.TOT_EMI,0), B.MODULE, 
  STP.CAPITAL, STP.INTEREST,STP.LOANCODE, M.DEDUCTIONTYPE, M.CAP_EMI_DEDUCT_TYPE, M.INT_EMI_DEDUCT_TYPE 
  
  
  
  
   SELECT M.WORKERSERIAL, M.LOANCODE, M.LOANDATE,  
        NVL(M.CAPITALINSTALLMENTAMT,0) CAP_EMI,  
        NVL(M.INTERESTINSTALLMENTAMT,0) INT_EMI, NVL(M.TOTALEMIAMOUNT,0) TOT_EMI  
        FROM LOANTRANSACTION M, ( SELECT WORKERSERIAL, LOANCODE, MAX(LOANDATE) LOANDATE  
                                  FROM LOANTRANSACTION  
                                  WHERE LOANDATE <= TO_DATE('30/04/2020','DD/MM/YYYY')  
                                  GROUP BY WORKERSERIAL, LOANCODE  
                                ) N   
        WHERE M.WORKERSERIAL = N.WORKERSERIAL AND M.LOANCODE=N.LOANCODE AND M.LOANDATE = N.LOANDATE 
        AND M.WORKERSERIAL=' 000041'
        
        
        
        SELECT * FROM LOANTRANSACTION
        WHERE WORKERSERIAL IN (
        SELECT WORKERSERIAL FROM PISEMPLOYEEMASTER
        )
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SELECT * FROM PISCOMPONENTASSIGNMENT

SELECT BJM_EMP_MAST



SELECT * FROM LOANTRANSACTION


DELETE FROM PIS_ERROR_LOG

DELETE FROM WPS_ERROR_LOG

SELECT * FROM WPS_ERROR_LOG

SELECT * FROM PIS_ERROR_LOG

WHERE PROC_NAME LIKE '%VIEW%'


PROC_NAME

PIS_GTT_SWT_PHASE_DEDN


CASE WHEN PISMAST.CATEGORYCODE='10' THEN
    CASE WHEN PISASSIGN.BASIC < 2000 THEN 5
        WHEN PISASSIGN.BASIC BETWEEN 2000 AND 2999 THEN 8
        WHEN PISASSIGN.BASIC BETWEEN 3000 AND 7499 THEN 10
    ELSE 15
    END
END

SELECT TOKENNO, LIC FROM PISCOMPONENTASSIGNMENT
WHERE LIC > 0
AND GRADECODE='D'

CREATE TABLE BJM_COMP_ASSIGN
(
    EMP_CD     VARCHAR2(10),
    EMP_NAME     VARCHAR2(100),
    BASIC_RT    NUMBER(15,2),
    ADHOC_RT    NUMBER(15,2),
    SP_ALLOWN_RT    NUMBER(15,2),
    PERS_ALLOW    NUMBER(15,2),
    HRA_RT    NUMBER(15,2),
    NPS_CONTR    NUMBER(15,2),
    HS_RENT    NUMBER(15,2),
    FURN_RENT    NUMBER(15,2),
    CHOW_RT    NUMBER(15,2),
    LIC_RT NUMBER(15,2)
)


SELECT * FROM PFLOANTRANSACTION


alter table pfloantransaction
add graceperioddays number(10)

update pfloantransaction set capitalinstallmentamount=4167, graceperioddays=28 where pfno = '10736';

gracepeioddays
graceperioddays


SELECT * FROM BJM_COMP_ASSIGN


SELECT * FROM PISCOMPONENTASSIGNMENT
WHERE TOKENNO IN (
SELECT DISTINCT EMP_CD FROM BJM_COMP_ASSIGN
)

UPDATE PISCOMPONENTASSIGNMENT SET 
LIC = (
    SELECT LIC_RT FROM BJM_COMP_ASSIGN
    WHERE EMP_CD=TOKENNO
)
WHERE TOKENNO IN (
SELECT DISTINCT EMP_CD FROM BJM_COMP_ASSIGN
)



---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------


SELECT NVL(SUM(AMT),0) 
FROM 
(
	SELECT WORKERSERIAL, SUM(NVL(LOAN_PF,0)+NVL(LINT_PF,0)) AMT FROM GPSPAYSHEETDETAILS WHERE DIVISIONCODE='A16'
	AND PERIODFROM = '05-APR-20'  AND PERIODTO='18-APR-20'
	GROUP BY WORKERSERIAL
	HAVING SUM(NVL(LOAN_PF,0)+NVL(LINT_PF,0)) > 0
	UNION ALL 
	SELECT WORKERSERIAL, -1*SUM(AMOUNT) AMT FROM PFLOANBREAKUP WHERE DIVISIONCODE = 'A16'
	AND EFFECTFORTNIGHT = '18-APR-20'
	AND MODULE = 'GPS' AND TRANSACTIONTYPE IN ('CAPITAL','INTEREST')
	AND WORKERSERIAL IN 
	( 
		SELECT DISTINCT WORKERSERIAL FROM GPSPAYSHEETDETAILS WHERE DIVISIONCODE = 'A16'
		AND PERIODFROM = '05-APR-20'  AND PERIODTO='18-APR-20' 
	) 
	GROUP BY WORKERSERIAL
)


DELETE FROM PFLOANBREAKUP WHERE EFFECTFORTNIGHT = TO_DATE('18/04/2020','DD/MM/YYYY') 
 AND MODULE = 'GPS' AND TRANSACTIONTYPE IN ('CAPITAL','INTEREST') 
 AND WORKERSERIAL IN ( SELECT DISTINCT WORKERSERIAL FROM GPSPAYSHEETDETAILS WHERE DIVISIONCODE = 'A16' 
 AND PERIODFROM = TO_DATE('05/04/2020','DD/MM/YYYY')  AND PERIODTO=TO_DATE('18/04/2020','DD/MM/YYYY') ) 

INSERT INTO PFLOANBREAKUP ( 
 COMPANYCODE, DIVISIONCODE, EMPLOYEECOMPANYCODE, EMPLOYEEDIVISIONCODE, YEARCODE, YEARMONTH, CATEGORYCODE, GRADECODE, 
 PFNO, TOKENNO, WORKERSERIAL, LOANCODE, LOANDATE, EFFECTYEARMONTH, AMOUNT, TRANSACTIONTYPE, 
 EFFECTFORTNIGHT, PAIDON, ISPAID, REMARKS, MODULE, USERNAME, LASTMODIFIED,SYSROWID,DEDUCTFROM) 
 SELECT M.COMPANYCODE, M.DIVISIONCODE, 'AM0082' EMPLOYEECOMPANYCODE, 'A16' EMPLOYEEDIVISIONCODE, '2020-2021' YEARCODE, '202004' YEARMONTH, M.CATEGORYCODE, M.GRADECODE, 
 A.PFNO, A.TOKENNO, A.WORKERSERIAL, A.LOANCODE, A.LOANDATE, '202004' EFFECTYEARMONTH, B.AMOUNT, B.TRANTYPE, 
 TO_DATE('18/04/2020','DD/MM/YYYY') EFFECTFORTNIGHT, TO_DATE('18/04/2020','DD/MM/YYYY') PAION, 'Y' ISPAID,'SALARY','GPS', 'SWT', SYSDATE, 
 A.PFNO||'-'||B.TRANTYPE||'-'||A.LOANCODE||'-'||REPLACE('18/04/2020','/','') SYSROWID,'SALARY' DEDUCTFROM 
 FROM GBL_PFLOANBLNC A, PFEMPLOYEEMASTER M, 
 ( 
    SELECT WORKERSERIAL, TOKENNO, substr('LINT_PF',6) LOANCODE, LINT_PF AS AMOUNT, 'INTEREST' TRANTYPE 
   FROM GPSPAYSHEETDETAILS 
   WHERE 1=1 
     AND DIVISIONCODE = 'A16' 
     AND PERIODFROM = '05-APR-20' 
     AND PERIODTO = '18-APR-20' 
     AND nvl(LINT_PF,0) > 0 
   UNION ALL 
   SELECT WORKERSERIAL, TOKENNO, substr('LOAN_PF',6) LOANCODE, LOAN_PF AS AMOUNT, 'CAPITAL' TRANTYPE 
   FROM GPSPAYSHEETDETAILS 
   WHERE 1=1 
     AND DIVISIONCODE = 'A16' 
     AND PERIODFROM = '05-APR-20' 
     AND PERIODTO = '18-APR-20' 
     AND nvl(LOAN_PF,0) > 0 
 
 ) B
 WHERE A.WORKERSERIAL = B.WORKERSERIAL 
   AND A.LOANCODE = B.LOANCODE 
   /*AND A.PFNO = M.PFNO */
   AND M.COMPANYCODE = 'AM0082' 
   AND M.DIVISIONCODE = 'A16' 
   AND A.WORKERSERIAL = M.WORKERSERIAL 
 ORDER BY A.PFNO, A.LOANCODE,B.TRANTYPE 

DIVCODE : A16, FROMDATE : 05-APR-20, TO DATE : 18-APR-20, LOAN CODE : PF, BALANCE : 43063






---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

DROP TABLE ASIANTEA.GTT_EXCEL_REPORT CASCADE CONSTRAINTS;

CREATE TABLE GTT_EXCEL_REPORT
(
  ROWINDEX       NUMBER(20),
  EXCELROWTYPE   VARCHAR2(50 BYTE),
  EXCELROWSTYLE  VARCHAR2(500 BYTE),
  EXCELVALUES    VARCHAR2(3000 BYTE),
  EXCELTAG       VARCHAR2(500 BYTE)
)

ON COMMIT PRESERVE ROWS
NOCACHE;


GTT_PAYSLIP_CDM


DROP TABLE GTT_PAYSLIP_CDM CASCADE CONSTRAINTS;

CREATE GLOBAL TEMPORARY TABLE GTT_PAYSLIP_CDM
(
  SLNO            NUMBER(18,2),
  COMPANYCODE     VARCHAR2(10 BYTE),
  DIVISIONCODE    VARCHAR2(10 BYTE),
  COMPANYNAME     VARCHAR2(100 BYTE),
  DIVISIONNAME    VARCHAR2(100 BYTE),
  DIVISIONSTATE   VARCHAR2(50 BYTE),
  TOKENNO         VARCHAR2(10 BYTE),
  EMPLOYEENAME    VARCHAR2(100 BYTE),
  ATTNBOOKCODE    VARCHAR2(10 BYTE),
  ATTNBOOKDESC    VARCHAR2(100 BYTE),
  CLUSTERCODE     VARCHAR2(10 BYTE),
  CLUSTERDESC     VARCHAR2(100 BYTE),
  CATEGORYCODE     VARCHAR2(10 BYTE),
  CATEGORYDESC     VARCHAR2(100 BYTE),
  HAZIRA          NUMBER(11,2),
  PLAN            NUMBER(11,2),
  REAL            NUMBER(11,2),
  DAILYWAGE       NUMBER(15,4),
  SUNDAY          NUMBER(11,2),
  TOTAL           NUMBER(11,2),
  BONUS_KGS       NUMBER(11,2),
  BONUS_VALUE     NUMBER(11,2),
  DISCOUNT_KG     NUMBER(11,2),
  DISCOUNT_VALUE  NUMBER(11,2),
  GROSS_SALARY    NUMBER(11,2),
  INSS            NUMBER(11,2),
  OTM             NUMBER(11,2),
  NET_SALARY      NUMBER(11,2),
  ADVANCE         NUMBER(11,2),
  AMOUNT_PAYABLE  NUMBER(11,2),
  SIGNATURE       VARCHAR2(100 BYTE),
  REPORTHEADER    VARCHAR2(200 BYTE),
  TOPHEADER       VARCHAR2(100 BYTE),
  COLUMNHEADER    VARCHAR2(1000 BYTE),
  COLUMNVALUE     VARCHAR2(1000 BYTE),
  EX1             VARCHAR2(10 BYTE)
)
ON COMMIT PRESERVE ROWS
NOCACHE; 



---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

declare

lv_StrSql varchar2(2000):= '';
lv_Remarks varchar2(1000) := '';
lv_cnt      number(3) := 0;
begin

    select COUNT(*) CNT into lv_cnt
    FROM ( 
            SELECT DISTINCT COMPONENTCODE FROM PISCOMPONENTMASTER
            MINUS
            SELECT column_name FROM COLS where table_name = 'PISCOMPONENTASSIGNMENT'
         );
    if lv_cnt > 0 then
        for c1 in (             
                    select * from piscomponentmaster
                     where componentcode in (
                                             select distinct componentcode from piscomponentmaster
                                             minus
                                             select column_name from cols where table_name = 'PISCOMPONENTASSIGNMENT'
                                            )
                  )
        loop                  
--            lv_StrSql := 'ALTER TABLE PISPAYTRANSACTION ADD '||c1.COMPONENTCODE||' number (15,5) default 0';
--            --dbms_output.put_line ('1 - '||lv_StrSql);
--            BEGIN
--                execute immediate lv_StrSql;
--            EXCEPTION WHEN OTHERS THEN NULL;
--            END;
--            
--            lv_StrSql := 'ALTER TABLE PISPAYTRANSACTION_SWT ADD '||c1.COMPONENTCODE||' number (15,5) default 0';
--            --dbms_output.put_line ('1 - '||lv_StrSql);
--            BEGIN
--                execute immediate lv_StrSql;
--            EXCEPTION WHEN OTHERS THEN NULL;
--            END;
--            
--            
--            
--            lv_StrSql := 'ALTER TABLE PISOTHERTRANSACTION ADD '||c1.COMPONENTCODE||' number (15,5) default 0';
--            --dbms_output.put_line ('1 - '||lv_StrSql);
--            BEGIN
--                execute immediate lv_StrSql;
--            EXCEPTION WHEN OTHERS THEN NULL;
--            END;
--            
--            
--            
--            lv_StrSql := 'ALTER TABLE PISARREARTRANSACTION ADD '||c1.COMPONENTCODE||' number (15,5) default 0';
--            --dbms_output.put_line ('1 - '||lv_StrSql);
--            BEGIN
--                execute immediate lv_StrSql;
--            EXCEPTION WHEN OTHERS THEN NULL;
--            END;

            lv_StrSql := 'ALTER TABLE PISCOMPONENTASSIGNMENT ADD '||c1.COMPONENTCODE||' number (15,5) default 0';
            dbms_output.put_line ('1 - '||lv_StrSql);
            BEGIN
                execute immediate lv_StrSql;
            EXCEPTION WHEN OTHERS THEN NULL;
            END;

            BEGIN
                     
            Insert into sys_tfmap
               (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
                SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
                SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
             Values
               (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', c1.COMPONENTCODE, 99, 
                'NUMBER', 15, 5, 'N', c1.COMPONENTCODE, 
                sysdate, 'Y', NULL, NULL);
            commit;
            proc_create_gbl_tmp_tables(10013,0);
            EXCEPTION WHEN OTHERS THEN NULL;
            END;
           
            prc_pisviewcreation( c1.companycode  ,c1.divisioncode,'ALL',0,c1.yearmonth,'SALARY','PISPAYTRANSACTION'); 
            
        end loop; 
                                 
    end if;
                                                               
end ;
/

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

Dear Chiranjit,

 

Please check the trailing mail and solve issue for Birla

 

Amalesh Das

 

From: Varun Kasat [mailto:varun.kasat@birlacorp.com]
Sent: 01 July 2020 14:45
To: Amalesh Das; Sunil K Sharma; Anupam Mitra; Birendrakumar Giri
Cc: 'Sujit Singh Softweb'; Ghisaram Verma
Subject: RE: PIS Data Template

 

Dear Amalesh,

 

We have run the payroll for Apr 20 and our initial observation on the same is as below;

1)  PF deducted @10%

2) No VPF have been Deducted

3) Sp. Allowance not found

4) Gross deduction not showing

5) Net Salary in every cases is Rs. 1  

6) Wrong ESI Deduction

7) House rent furniture and other deduction not found

8) In some case P Tax is not deducted

9) No da in case of sub staff

10) Bank Loan not found

 

Please rectify the payroll system and let us know so that we can do further checking.

 

Regards,

Varun Kasat


---------------------------------------------------------------------------------------------


DELETE FROM PIS_ERROR_LOG

DELETE FROM WPS_ERROR_LOG

SELECT * FROM WPS_ERROR_LOG

SELECT * FROM PIS_ERROR_LOG

update PISPAYTRANSACTION_SWT A 
 set 
 ( ACT_PF_GRS , ADHOC , ATN_INCNT , BASIC , CONV_ALOW , CONV_RT , DA , ESI_GROSS , ESI_RATE , GROSSEARN , HRA , HRA_GROSS , HRA_PERC , LEAVE_ENC , LINT_HPF , LOAN_HPF , MED_ALLOW , OT_AMT , PEN_GROSS , PER_ALLOW , PF_GROSS , PTAX_GROSS , RT_BASIC , SPL_ALLOW , TOTEARN , VPF_PERC )  = ( SELECT  A.ACT_PF_GRS+SUM(B.ACT_PF_GRS) , A.ADHOC+SUM(B.ADHOC) , A.ATN_INCNT+SUM(B.ATN_INCNT) , A.BASIC+SUM(B.BASIC) , A.CONV_ALOW+SUM(B.CONV_ALOW) , A.CONV_RT+SUM(B.CONV_RT) , A.DA+SUM(B.DA) , A.ESI_GROSS+SUM(B.ESI_GROSS) , A.ESI_RATE+SUM(B.ESI_RATE) , A.GROSSEARN+SUM(B.GROSSEARN) , A.HRA+SUM(B.HRA) , A.HRA_GROSS+SUM(B.HRA_GROSS) , A.HRA_PERC+SUM(B.HRA_PERC) , A.LEAVE_ENC+SUM(B.LEAVE_ENC) , A.LINT_HPF+SUM(B.LINT_HPF) , A.LOAN_HPF+SUM(B.LOAN_HPF) , A.MED_ALLOW+SUM(B.MED_ALLOW) , A.OT_AMT+SUM(B.OT_AMT) , A.PEN_GROSS+SUM(B.PEN_GROSS) , A.PER_ALLOW+SUM(B.PER_ALLOW) , A.PF_GROSS+SUM(B.PF_GROSS) , A.PTAX_GROSS+SUM(B.PTAX_GROSS) , A.RT_BASIC+SUM(B.RT_BASIC) , A.SPL_ALLOW+SUM(B.SPL_ALLOW) , A.TOTEARN+SUM(B.TOTEARN) , A.VPF_PERC+SUM(B.VPF_PERC)  FROM PISOTHERTRANSACTION B WHERE 
 B.COMPANYCODE = A.COMPANYCODE  
 AND B.DIVISIONCODE = A.DIVISIONCODE 
 AND B.EFFECT_YEARMONTH = A.YEARMONTH 
 AND B.TRANSACTIONTYPE =  'ADJUSTMENT' 
 AND A.WORKERSERIAL = B.WORKERSERIAL 
  ) 
 WHERE 
   COMPANYCODE = 'BJ0056'  
   AND DIVISIONCODE = '0001'  
   AND YEARMONTH = '202004'  
   AND EXISTS ( SELECT WORKERSERIAL FROM PISOTHERTRANSACTION B  WHERE B.COMPANYCODE = A.COMPANYCODE AND B.DIVISIONCODE = A.DIVISIONCODE AND B.EFFECT_YEARMONTH = A.YEARMONTH  AND B.TRANSACTIONTYPE =  'ADJUSTMENT'   AND B.WORKERSERIAL=A.WORKERSERIAL) 
   
   DROP TABLE PISOTHERTRANSACTION
   
   CREATE TABLE    PISOTHERTRANSACTION AS
   SELECT * FROM PISPAYTRANSACTION
   WHERE  1=2
   
   PRC_PISSALARYPROCESS_UPDATE
   
   PRC_PISVIEWCREATION
   
   
   
DELETE FROM PIS_ERROR_LOG

DELETE FROM WPS_ERROR_LOG

SELECT * FROM WPS_ERROR_LOG

SELECT * FROM PIS_ERROR_LOG


PRC_LOANBALANCE_UPDT_WAGES

PRC_PISSALARYPROCESS_DEDN


UPDATE PISPAYTRANSACTION_SWT SET LNBL_PFL=0, LIBL_PFL=0 
 WHERE COMPANYCODE='BJ0056' AND DIVISIONCODE = '0001' 
   AND YEARMONTH = '202004' 
   AND FORTNIGHTSTARTDATE =  '01-APR-20' AND FORTNIGHTENDDATE = '30-APR-20' 
   AND (NVL(LNBL_PFL,0)+NVL(LIBL_PFL,0))>0 
   AND WORKERSERIAL IN ( SELECT WORKERSERIAL FROM WPSWORKERMAST WHERE COMPANYCODE='BJ0056' AND DIVISIONCODE = '0001' 
    AND PFSETTELMENTDATE IS NOT NULL ) 
    
    SELECT LOAN_BL FROM PISPAYTRANSACTION
    WHERE GRADECODE='B'
    AND TOKENNO='01214'
    
    
    
    SELECT * FROM LOANTRANSACTION 
    WHERE GRADECODE='B'
	
	
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

INSERT INTO GTT_COMPONENTASSINREPORT

 
SELECT A.WORKERSERIAL, A.TOKENNO, A.EMPLOYEENAME, A.UNITCODE, A.CATEGORYCODE CAT_CD, A.GRADECODE GRD_CD, A.DEPARTMENTCODE DEPT_CD, 
       A.ESINO, A.PFNO, A.PENSIONNO, A.SEX, A.EMPLOYEESTATUS, A.DATEOFBIRTH, A.DATEOFJOIN, A.DATEOFCONFIRMATION, A.PFENTITLEDATE,  
       A.EXTENDEDRETIREDATE, B.COMPONENTCODE, B.PHASE, B.CALCULATIONINDEX, M.COMPANYNAME, V.DIVISIONNAME, B.COMPONENTSHORTNAME,   
       fn_get_compvalue(C.COMPANYCODE,C.DIVISIONCODE,C.YEARMONTH,C.WORKERSERIAL,B.COMPONENTCODE,'MASTER ASSIGNMENT') COMPVALUE, TO_CHAR(TO_DATE('202004','YYYYMM'),'MON-YYYY') PRINTDATE, 
       NVL(B.PRINTSERIAL,0) EX1, 'Run Date ' || TO_CHAR(SYSDATE,'DD/MM/YYYY  HH:MI:SS AM') EX2,CASE WHEN 'MASTER ASSIGNMENT'='PIS COMPONENT REGISTER' THEN C.ATTN_SALD ELSE NULL END  EX3, B.COLHEADER EX4, NULL EX5, NULL EX6, NULL EX7, NULL EX8, NULL EX9, NULL EX10 
  FROM PISEMPLOYEEMASTER A,  
       ( SELECT DISTINCT COMPONENTCODE, COMPONENTSHORTNAME, PHASE, CALCULATIONINDEX,PRINTSERIAL,COLHEADER FROM PISCOMPONENTMASTER  
          WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001' 
            AND YEARMONTH = ( 
                             SELECT MAX(YEARMONTH) FROM PISCOMPONENTMASTER  
                              WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001' 
                                AND YEARMONTH<='202004' 
                            ) 
            AND ROLLOVERAPPLICABLE = 'Y' 
       ORDER BY PHASE, CALCULATIONINDEX) B, 
       ( SELECT * FROM PISCOMPONENTASSIGNMENT 
          WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001' 
            AND TRANSACTIONTYPE = 'ASSIGNMENT' 
            AND WORKERSERIAL||YEARMONTH IN ( SELECT WORKERSERIAL||MAX(YEARMONTH) 
                                               FROM PISCOMPONENTASSIGNMENT 
                                              WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001' 
                                                AND TRANSACTIONTYPE = 'ASSIGNMENT' 
                                                AND YEARMONTH<='202004' 
                                              GROUP BY WORKERSERIAL 
                                           ) 
       ) C, COMPANYMAST M, DIVISIONMASTER V 
WHERE A.COMPANYCODE = C.COMPANYCODE  
  AND A.DIVISIONCODE = C.DIVISIONCODE 
  AND A.WORKERSERIAL = C.WORKERSERIAL  
  AND A.COMPANYCODE=M.COMPANYCODE 
  AND A.COMPANYCODE=V.COMPANYCODE 
  AND A.DIVISIONCODE=V.DIVISIONCODE 
  AND A.COMPANYCODE = 'BJ0056'  
  AND A.DIVISIONCODE = '0001' 
  AND B.COMPONENTCODE IN ('BASIC','DA','ADHOC','ATN_INCNT','PER_ALLOW','SPL_ALLOW','HRA_PERC','VPF_PERC','COMPSAVING','HR_DEDN','FURNITURE','CHOWKIDARI','ITAX','LIC','LADIESCLUB','SCHOOL_BUS') 
  AND C.UNITCODE IN ('01') 
  AND C.CATEGORYCODE IN ('10') 
  AND C.GRADECODE IN ('A') 
 ORDER BY A.TOKENNO, B.PHASE, B.CALCULATIONINDEX
 
 
 
 --------------------------------------------------------------------------------------------------------
 
 INSERT INTO GTT_COMPONENTASSINREPORT 
SELECT A.WORKERSERIAL, A.TOKENNO, A.EMPLOYEENAME, A.UNITCODE, A.CATEGORYCODE CAT_CD, A.GRADECODE GRD_CD, A.DEPARTMENTCODE DEPT_CD, 
       A.ESINO, A.PFNO, A.PENSIONNO, A.SEX, A.EMPLOYEESTATUS, A.DATEOFBIRTH, A.DATEOFJOIN, A.DATEOFCONFIRMATION, A.PFENTITLEDATE,  
       A.EXTENDEDRETIREDATE, B.COMPONENTCODE, B.PHASE, B.CALCULATIONINDEX, M.COMPANYNAME, V.DIVISIONNAME, B.COMPONENTSHORTNAME,   
       fn_get_compvalue(C.COMPANYCODE,C.DIVISIONCODE,C.YEARMONTH,C.WORKERSERIAL,B.COMPONENTCODE,'PIS COMPONENT REGISTER') COMPVALUE, TO_CHAR(TO_DATE('202004','YYYYMM'),'MON-YYYY') PRINTDATE, 
       NVL(B.PRINTSERIAL,0) EX1, 'Run Date ' || TO_CHAR(SYSDATE,'DD/MM/YYYY  HH:MI:SS AM') EX2,CASE WHEN 'PIS COMPONENT REGISTER'='PIS COMPONENT REGISTER' THEN C.ATTN_SALD ELSE NULL END  EX3, B.COLHEADER EX4, NULL EX5, NULL EX6, NULL EX7, NULL EX8, NULL EX9, NULL EX10 
  FROM PISEMPLOYEEMASTER A,  
       ( SELECT DISTINCT COMPONENTCODE, COMPONENTSHORTNAME, PHASE, CALCULATIONINDEX,PRINTSERIAL,COLHEADER FROM PISCOMPONENTMASTER  
          WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001' 
            AND YEARMONTH = ( 
                             SELECT MAX(YEARMONTH) FROM PISCOMPONENTMASTER  
                              WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001' 
                                AND YEARMONTH<='202004' 
                            ) 
       ORDER BY PHASE, CALCULATIONINDEX) B, 
       ( SELECT * FROM PISPAYTRANSACTION 
          WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001' 
            AND WORKERSERIAL||YEARMONTH IN ( SELECT WORKERSERIAL||MAX(YEARMONTH) 
                                               FROM PISPAYTRANSACTION 
                                              WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001' 
                                                AND YEARMONTH<='202004' 
                                              GROUP BY WORKERSERIAL 
                                           ) 
       ) C, COMPANYMAST M, DIVISIONMASTER V 
WHERE A.COMPANYCODE = C.COMPANYCODE  
  AND A.DIVISIONCODE = C.DIVISIONCODE 
  AND A.WORKERSERIAL = C.WORKERSERIAL  
  AND A.COMPANYCODE=M.COMPANYCODE 
  AND A.COMPANYCODE=V.COMPANYCODE 
  AND A.DIVISIONCODE=V.DIVISIONCODE 
  AND A.COMPANYCODE = 'BJ0056'  
  AND A.DIVISIONCODE = '0001' 
  AND B.COMPONENTCODE IN ('CONV_RT','BASIC','DA') 
  AND C.UNITCODE IN ('01') 
  AND C.CATEGORYCODE IN ('10') 
  AND C.GRADECODE IN ('C') 
 ORDER BY A.TOKENNO, B.PHASE, B.CALCULATIONINDEX
 
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
 CREATE TABLE PISPAYTRANSACTION_PHASE_5 AS 
 
 
 SELECT PISTEMPATTN.YEARMONTH, PISTEMPATTN.UNITCODE, PISTEMPATTN.CATEGORYCODE, PISTEMPATTN.GRADECODE, PISTEMPATTN.WORKERSERIAL, PISTEMPATTN.TOKENNO, PISTEMPCOMP.ATTN_SALD, PISTEMPCOMP.ATTN_CALCF 
 , PISTEMPCOMP.BASIC+PISTEMPCOMP.DA+PISTEMPCOMP.PER_ALLOW+PISTEMPCOMP.ADHOC+PISTEMPCOMP.OEPF+PISTEMPCOMP.SPL_ALLOW+PISTEMPCOMP.CONV_ALOW+PISTEMPCOMP.HRA+PISTEMPCOMP.MED_ALLOW+PISTEMPCOMP.LEAVE_ENC+PISTEMPCOMP.OT_AMT+PISTEMPCOMP.OE_NPF AS TOTEARN, PISTEMPCOMP.BASIC+PISTEMPCOMP.DA+PISTEMPCOMP.PER_ALLOW+PISTEMPCOMP.OEPF AS PF_GROSS, PISTEMPCOMP.BASIC+PISTEMPCOMP.DA+PISTEMPCOMP.PER_ALLOW+PISTEMPCOMP.OEPF AS ACT_PF_GRS, PISTEMPCOMP.BASIC+PISTEMPCOMP.DA+PISTEMPCOMP.PER_ALLOW+PISTEMPCOMP.ADHOC+PISTEMPCOMP.OEPF AS PEN_GROSS, PISTEMPCOMP.BASIC+PISTEMPCOMP.DA+PISTEMPCOMP.PER_ALLOW+PISTEMPCOMP.ADHOC+PISTEMPCOMP.OEPF+PISTEMPCOMP.SPL_ALLOW+PISTEMPCOMP.CONV_ALOW+PISTEMPCOMP.HRA+PISTEMPCOMP.MED_ALLOW+PISTEMPCOMP.LEAVE_ENC+PISTEMPCOMP.OT_AMT+PISTEMPCOMP.OE_NPF AS ESI_GROSS, PISTEMPCOMP.BASIC+PISTEMPCOMP.DA+PISTEMPCOMP.PER_ALLOW+PISTEMPCOMP.ADHOC+PISTEMPCOMP.OEPF+PISTEMPCOMP.SPL_ALLOW+PISTEMPCOMP.CONV_ALOW+PISTEMPCOMP.HRA+PISTEMPCOMP.MED_ALLOW+PISTEMPCOMP.LEAVE_ENC+PISTEMPCOMP.OT_AMT+PISTEMPCOMP.OE_NPF AS PTAX_GROSS, PISTEMPCOMP.BASIC+PISTEMPCOMP.DA+PISTEMPCOMP.PER_ALLOW+PISTEMPCOMP.ADHOC+PISTEMPCOMP.OEPF+PISTEMPCOMP.SPL_ALLOW+PISTEMPCOMP.CONV_ALOW+PISTEMPCOMP.HRA+PISTEMPCOMP.MED_ALLOW+PISTEMPCOMP.LEAVE_ENC+PISTEMPCOMP.OT_AMT+PISTEMPCOMP.OE_NPF AS GROSSEARN,  AS LOAN_HPF,  AS LINT_HPF 
 FROM PISTEMPMAST, PISTEMPATTN, PISTEMPASSIGN, PISTEMPCOMP, PISTEMPPREV, PISTEMPPRVRT 
 WHERE PISTEMPMAST.WORKERSERIAL = PISTEMPATTN.WORKERSERIAL 
   AND PISTEMPMAST.WORKERSERIAL = PISTEMPASSIGN.WORKERSERIAL 
   AND PISTEMPMAST.WORKERSERIAL = PISTEMPCOMP.WORKERSERIAL 
   AND PISTEMPMAST.WORKERSERIAL = PISTEMPPRVRT.WORKERSERIAL (+)
   AND PISTEMPMAST.WORKERSERIAL = PISTEMPPREV.WORKERSERIAL (+)
 AND PISTEMPATTN.CATEGORYCODE = '10' 
 AND PISTEMPATTN.GRADECODE = 'B' 
 
 
 ----------------------------------------------------------------------------
 
  SELECT COMPONENTCODE, COMPONENTTYPE, PAYFORMULA, CALCULATIONINDEX, PHASE,
NVL(DEPENDENCYTYPE,'A') DEPENDENCYTYPE, NVL(ROUNDOFFTYPE,'N') ROUNDOFFTYPE, NVL(ROUNDOFFRS,1) ROUNDOFFRS,
INCLUDEPAYROLL, nvl(ROLLOVERAPPLICABLE,'N') ROLLOVERAPPLICABLE, NVL(USERENTRYAPPLICABLE,'N') USERENTRYAPPLICABLE, 
NVL(ATTENDANCEENTRYAPPLICABLE,'N') ATTENDANCEENTRYAPPLICABLE, 
NVL(LIMITAPPLICABLE,'N') LIMITAPPLICABLE, NVL(SLABAPPLICABLE,'N') SLABAPPLICABLE,
NVL(MISCPAYMENT,'N') MISCPAYMENT, NVL(FINALSETTLEMENT,'N') FINALSETTLEMENT 
FROM PISCOMPONENTMASTER
WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001'
AND PHASE = 5
AND NVL(INCLUDEPAYROLL,'N') = 'Y'
AND YEARMONTH = ( 
SELECT MAX(YEARMONTH) YEARMONTH FROM PISCOMPONENTMASTER
WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001'
AND YEARMONTH <= '202004'
)  
ORDER BY NVL(CALCULATIONINDEX,0) 



select * from piscomponentmaster
where componentcode like '%PFL' or componentcode like '%HPF' 
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SELECT TOKENNO, LIC, NETSALARY FROM PISPAYTRANSACTION_SWT

SELECT TOKENNO, LIC, NETSALARY FROM PISPAYTRANSACTION WHERE YEARMONTH='202004' AND CATEGORYCODE='10' AND GRADECODE='B'

DELETE FROM PISPAYTRANSACTION WHERE YEARMONTH='202004' AND CATEGORYCODE='10' AND GRADECODE='C'




select empcode, PERSONAL_PAY, nvl(SPL_ALLOW,0),nvl(VPF_PERCENT,0),SCHOOL_BUS   from bjm_emp_mast

select tokenno,SPL_ALLOW,VPF_PERC,SCHOOL_BUS from piscomponentassignment


update piscomponentassignment  a set
(SPL_ALLOW,VPF_PERC) = 
(
    select nvl(SPL_ALLOW,0),nvl(VPF_PERCENT,0)   from bjm_emp_mast
    where a.tokenno=empcode
)
where companycode='BJ0056'
AND DIVISIONCODE='0001'
AND TOKENNO IN (
select DISTINCT EMPCODE  from bjm_emp_mast
)


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

EXEC PRC_PIS_SALARY_PROCESS('BJ0056','0001','SALARY','SWT','202004','202004','01','10','B',NULL,NULL);

EXEC PRC_PISSALARYPROCESS_INSERT('BJ0056','0001','SALARY', '0','202004','202004','PISPAYTRANSACTION_SWT','PISPAYTRANSACTION_SWT','01','10','B','','');

EXEC PRC_PISSALARYPROCESS_UPDATE('BJ0056','0001','SALARY', '1','202004','202004','PISPAYTRANSACTION_SWT','PISPAYTRANSACTION_PHASE_1','01','10','B','','');

EXEC PRC_PISSALARYPROCESS_UPDATE('BJ0056','0001','SALARY', '2','202004','202004','PISPAYTRANSACTION_SWT','PISPAYTRANSACTION_PHASE_2','01','10','B','','');

EXEC PRC_PISSALARYPROCESS_UPDATE('BJ0056','0001','SALARY', '3','202004','202004','PISPAYTRANSACTION_SWT','PISPAYTRANSACTION_PHASE_3','01','10','B','','');

EXEC PRC_PISSALARYPROCESS_UPDATE('BJ0056','0001','SALARY', '4','202004','202004','PISPAYTRANSACTION_SWT','PISPAYTRANSACTION_PHASE_4','01','10','B','','');

EXEC PRC_PISSALARYPROCESS_UPDATE('BJ0056','0001','SALARY', '5','202004','202004','PISPAYTRANSACTION_SWT','PISPAYTRANSACTION_PHASE_5','01','10','B','','');

EXEC PRC_PISSALARYPROCESS_DEDN('BJ0056','0001','SALARY', '6','202004','202004','PISPAYTRANSACTION_SWT','PIS_SWT_PHASE_DEDN','01','10','B','','');

EXEC PRC_PISSALARY_OTHCOMP_UPDATE('BJ0056','0001','SALARY', '99','202004','202004','PISPAYTRANSACTION_SWT','PISPAYTRANSACTION_SWT','01','10','B','','');

EXEC PRC_PISSALARYPROCESS_TRANSFER('BJ0056','0001','SALARY', '1001','202004','202004','PISPAYTRANSACTION','PISPAYTRANSACTION_SWT','01','10','B','','');


select * FROM WAGESPROCESSTYPE_PHASE WHERE PROCESSTYPE='SALARY'



PRC_PISSALARYPROCESS_DEDN

SELECT * FROM PIS_ERROR_LOG


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SELECT TOKENNO, LIC, NETSALARY FROM PISPAYTRANSACTION_SWT

SELECT TOKENNO, LIC, NETSALARY FROM PISPAYTRANSACTION WHERE YEARMONTH='202004' AND CATEGORYCODE='10' AND GRADECODE='B'

DELETE FROM PISPAYTRANSACTION WHERE YEARMONTH='202004' AND CATEGORYCODE='10' AND GRADECODE='C'


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SELECT A.WORKERSERIAL, A.TOKENNO, A.UNITCODE, A.CATEGORYCODE, A.GRADECODE, A.GROSSEARN,A.TOTEARN,A.COMPONENTCODE, A.COMPONENTAMOUNT,
                NVL(B.COMPONENTGROUP,'OTHERS') COMPONENTGROUP, NVL(DEPENDENCYTYPE,'A') DEPENDENCYTYPE, NVL(ROUNDOFFTYPE,'N') ROUNDOFFTYPE, NVL(ROUNDOFFRS,1) ROUNDOFFRS,
                INCLUDEPAYROLL, nvl(ROLLOVERAPPLICABLE,'N') ROLLOVERAPPLICABLE, NVL(USERENTRYAPPLICABLE,'N') USERENTRYAPPLICABLE, 
                NVL(ATTENDANCEENTRYAPPLICABLE,'N') ATTENDANCEENTRYAPPLICABLE, 
                NVL(LIMITAPPLICABLE,'N') LIMITAPPLICABLE, NVL(SLABAPPLICABLE,'N') SLABAPPLICABLE,
                NVL(MISCPAYMENT,'N') MISCPAYMENT, NVL(FINALSETTLEMENT,'N') FINALSETTLEMENT, NVL(INCLUDEARREAR,'N') INCLUDEARREAR    
                FROM PIS_GTT_SWT_PHASE_DEDN A,
                ( 
                  SELECT * FROM PISCOMPONENTMASTER B
                  WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001'
                    AND PHASE = 6
                    AND NVL(INCLUDEPAYROLL,'N') = 'Y'
                    AND YEARMONTH = ( 
                                      SELECT MAX(YEARMONTH) YEARMONTH FROM PISCOMPONENTMASTER
                                      WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001'
                                        AND YEARMONTH <= '202004'
                                    )
                ) B,
                ( 
                  SELECT X.UNITCODE, X.CATEGORYCODE, X.GRADECODE, X.COMPONENTCODE, NVL(X.APPLICABLE,'NO') APPLICABLE
                  FROM PISGRADECOMPONENTMAPPING X, 
                  (
                    SELECT UNITCODE, CATEGORYCODE, GRADECODE, MAX(YEARMONTH) YEARMONTH 
                    FROM PISGRADECOMPONENTMAPPING 
                    WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001'
                      AND UNITCODE = '01' 
                      AND YEARMONTH <= '202004'
                    GROUP BY UNITCODE, CATEGORYCODE, GRADECODE  
                  ) Y
                  WHERE X.COMPANYCODE = 'BJ0056' AND X.DIVISIONCODE = '0001'   
                    AND X.UNITCODE = X.UNITCODE AND X.CATEGORYCODE = Y.CATEGORYCODE AND X.GRADECODE = Y.GRADECODE
                    AND X.YEARMONTH = Y.YEARMONTH
                    AND X.APPLICABLE = 'Y'                     
                ) C                                     
                WHERE A.COMPONENTCODE = B.COMPONENTCODE
                  AND A.UNITCODE = C.UNITCODE AND A.CATEGORYCODE = C.CATEGORYCODE AND A.GRADECODE = C.GRADECODE  
                  AND A.COMPONENTCODE = C.COMPONENTCODE
                  AND C.COMPONENTCODE='LIC' 
                ORDER BY A.WORKERSERIAL,B.CALCULATIONINDEX
				
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SELECT * FROM PISPAYTRANSACTION

SELECT * FROM MENUMASTER_RND
WHERE MENUDESC LIKE '%Proc%'


prcSalary_Bf_MainSave


SELECT COMPANYCODE, DIVISIONCODE,DECODE(PROCESSTYPE,'ARREAR','NEW SALARY',PROCESSTYPE) PROCESSTYPE, PROCEDURE_NAME, PHASE, CALCULATIONINDEX, PARAM_1, PARAM_2, PARAM_3 
FROM WAGESPROCESSTYPE_PHASE  
WHERE COMPANYCODE = 'BJ0056' 
AND DIVISIONCODE = '0001'
AND PROCESSTYPE = 'SALARY'
ORDER BY PHASE, CALCULATIONINDEX

PRC_PISSALARYPROCESS_INSERT 
PRC_PISSALARYPROCESS_UPDATE  
PRC_PISSALARYPROCESS_UPDATE  
PRC_PISSALARYPROCESS_UPDATE  
PRC_PISSALARYPROCESS_UPDATE   
PRC_PISSALARYPROCESS_UPDATE  
PRC_PISSALARYPROCESS_DEDN    
PRC_PISSALARY_OTHCOMP_UPDATE
PRC_PISSALARYPROCESS_TRANSFER

PRC_PISSALARYPROCESS_DEDN

DELETE FROM PIS_ERROR_LOG

DELETE FROM WPS_ERROR_LOG

SELECT * FROM WPS_ERROR_LOG

SELECT * FROM PIS_ERROR_LOG
WHERE PROC_NAME LIKE '%PIS%DEDN'


 UPDATE PISPAYTRANSACTION_SWT set NETSALARY = NVL(NETSALARY,0) - NVL(MISC_BF,0) 
 WHERE COMPANYCODE='BJ0056' AND DIVISIONCODE = '0001' AND YEARMONTH = '202004' 
 
 

 000130
 
 01213
 
 UNIT 01
 CATEGORY - 10
 GRADE C
 YEARMONTH
 
 SELECT * FROM PISPAYTRANSACTION
 WHERE TOKENNO='01213'
 
 
 SELECT WM_CONCAT(COMPONENTCODE) FROM PISCOMPONENTMASTER
 WHERE COMPONENTTYPE='DEDUCTION'
 
 ESI_E,PF_E,PTAX,LWF,VPF,ITAX,LIC,ELECTRIC,OTHR_DEDN,LOAN_BL,LINT_BL,LOAN_STADV,LINT_STADV,LOAN_SA,LINT_SA,CAR,COMPSAVING,CHOWKIDARI,FURNITURE,CLUB,LOAN_PFL,LINT_PFL,LOTTERY,RECREATION,GAMES,SCHOOL_BUS,DAIRY,LIBRARY,LADIESCLUB,SUBSCRIPTION,SAL_ADV
 
 
 SELECT WM_CONCAT(COMPONENTCODE) FROM PISCOMPONENTMASTER
 WHERE COMPONENTTYPE='EARNING'
 
 BASIC,DA,ADHOC,SPL_ALLOW,OT_AMT,OE_NPF,CONV_ALOW,OEPF,HRA,PF_GROSS,MED_ALLOW,PER_ALLOW,ATN_INCAMT,LEAVE_ENC,HR_DEDN
 
 
 
 SELECT BASIC,DA,ADHOC,SPL_ALLOW,OT_AMT,OE_NPF,CONV_ALOW,OEPF,HRA,PF_GROSS,MED_ALLOW,PER_ALLOW,ATN_INCAMT,LEAVE_ENC,HR_DEDN FROM PISPAYTRANSACTION
 WHERE TOKENNO='01213'
 
 
 SELECT BASIC,DA,ADHOC,CONV_ALOW, GROSSEARN FROM PISPAYTRANSACTION
 WHERE TOKENNO='01213'
 
 
 SELECT ESI_E,PF_E,PTAX,LWF,VPF,ITAX,LIC,ELECTRIC,OTHR_DEDN,LOAN_BL,LINT_BL,LOAN_STADV,
 LINT_STADV,LOAN_SA,LINT_SA,CAR,COMPSAVING,CHOWKIDARI,FURNITURE,CLUB,LOAN_PFL,
 LINT_PFL,LOTTERY,RECREATION,GAMES,SCHOOL_BUS,DAIRY,LIBRARY,LADIESCLUB,SUBSCRIPTION,HR_DEDN,SAL_ADV 
 FROM PISPAYTRANSACTION
 WHERE TOKENNO='01213' 
 
 SELECT ESI_E,PF_E,PTAX,LIC,COMPSAVING,CHOWKIDARI,FURNITURE,HR_DEDN, GROSSDEDN
 FROM PISPAYTRANSACTION
 WHERE TOKENNO='01213' 
 
 
 EXEC proc_componentassinreport('BJ0056','0001','202004','','''01''','''10''','''C''','PIS COMPONENT REGISTER','Customs')
 
 

ALTER TABLE PISCOMPONENTMASTER
ADD PRINTSERIAL NUMBER (9,2)

ALTER TABLE PISCOMPONENTMASTER
ADD COLHEADER VARCHAR2 (50 Byte)


SELECT * FROM PISCOMPONENTMASTER
WHERE COMPONENTCODE='LIC'

SELECT LIC FROM PISCOMPONENTASSIGNMENT
WHERE TOKENNO='01213'

SELECT LIC FROM PISMONTHATTENDANCE
WHERE TOKENNO='01213'




---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SELECT * FROM PISPAYTRANSACTION

SELECT * FROM MENUMASTER_RND
WHERE MENUDESC LIKE '%Proc%'


prcSalary_Bf_MainSave


SELECT COMPANYCODE, DIVISIONCODE,DECODE(PROCESSTYPE,'ARREAR','NEW SALARY',PROCESSTYPE) PROCESSTYPE, PROCEDURE_NAME, PHASE, CALCULATIONINDEX, PARAM_1, PARAM_2, PARAM_3 
FROM WAGESPROCESSTYPE_PHASE  
WHERE COMPANYCODE = 'BJ0056' 
AND DIVISIONCODE = '0001'
AND PROCESSTYPE = 'SALARY'
ORDER BY PHASE, CALCULATIONINDEX

PRC_PISSALARYPROCESS_INSERT 
PRC_PISSALARYPROCESS_UPDATE  
PRC_PISSALARYPROCESS_UPDATE  
PRC_PISSALARYPROCESS_UPDATE  
PRC_PISSALARYPROCESS_UPDATE   
PRC_PISSALARYPROCESS_UPDATE  
PRC_PISSALARYPROCESS_DEDN    
PRC_PISSALARY_OTHCOMP_UPDATE
PRC_PISSALARYPROCESS_TRANSFER

PRC_PISSALARYPROCESS_DEDN

DELETE FROM PIS_ERROR_LOG

DELETE FROM WPS_ERROR_LOG

SELECT * FROM WPS_ERROR_LOG

SELECT * FROM PIS_ERROR_LOG



 WORKERSERIAL - 000130
 
 TOKENNO -  01213
 
 UNIT 01
 CATEGORY - 10
 GRADE C
 YEARMONTH
 
 
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

DECLARE
LV_ACT_AMT NUMBER(10,2);
LV_INT_PERC NUMBER(10,2);
LV_RUNNINGBAL NUMBER(10,2);
LV_EMI_AMT NUMBER(10,2);
BEGIN

LV_ACT_AMT := 50000;
LV_INT_PERC := 10.0; --10%
LV_EMI_AMT := 5000.0;

LV_CAP_EMI := 

END;

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

select level slno,50000 ACT_AMT,(5000*(level-1)) DED_AMT, 
(50000 - (5000*(level-1))) running_bal, 
((50000 - (5000*(level-1)))*0.010) intAmt from dual
connect by (5000*(level-1)) <= 50000

SELECT LEVEL SLNO,(50000 - (5000*(LEVEL-1))) ACT_AMT , 
((50000 - (5000-(50000 - (5000*(LEVEL-1)))*0.010)) - (5000-((50000 - (5000-(50000 - (5000*(LEVEL-2)))*0.010))*0.010))) RUNNING_BAL2 ,
((50000 - (5000-(50000 - (5000*(LEVEL-2)))*0.010))*0.010) INTAMT, 5000 DED_AMT,
(5000-((50000 - (5000-(50000 - (5000*(LEVEL-2)))*0.010))*0.010)) BAL_DED,
(5000*(LEVEL)) EMI_DED_AMT, 
(50000 - (5000*(LEVEL))) RUNNING_BAL , 
((5000-(50000 - (5000*(LEVEL-1)))*0.010) - (5000-(50000 - (5000*(LEVEL-2)))*0.010)) RUNNING_BAL1 
FROM DUAL
CONNECT BY (50000 - (5000*(LEVEL-1))) >= 0



SELECT LEVEL SLNO, ACT_AMT , 
(ACT_AMT*INT_PER) INTAMT, DED_AMT,
(ACT_AMT - (DED_AMT*(LEVEL-1))) BAL_DED,
(DED_AMT*(LEVEL)) EMI_DED_AMT, 
(ACT_AMT - (DED_AMT*(LEVEL))) RUNNING_BAL , 
((DED_AMT*(LEVEL-1)))*INT_PER RUNNING_BAL1 
FROM DUAL, 
(
    SELECT 50000 ACT_AMT, 5000 DED_AMT, (20/10)*0.01 INT_PER FROM DUAL
) A
CONNECT BY (ACT_AMT - (DED_AMT*(LEVEL-1))) >= 0

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
PF CONTRIBUTION LIST DATA CORRECTION
---------------------------------------------------------------------------------------------
exec PROC_PFCONTRIBUTION('AM0083','A12','07/06/2020','20/06/2020','','''P''','')

exec PROC_PFCONTRIBUTION_PERIODWISE('AM0083','A12','07/06/2020','20/06/2020','','','')

EXEC PROC_PFCONTRIBUTION_PERIODWISE('AM0083','A12','07/06/2020','20/06/2020','','''P''','')

SELECT * FROM GTT_PFCONTRIBUTION_NEW

SELECT * FROM GPSPAYSHEETDETAILS
WHERE TOKENNO = '4185'



---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SELECT COMPANYCODE, DIVISIONCODE,CLUSTERCODE,CATEGORYCODE,CATEGORYTYPE,COMPANYNAME,DIVISIONNAME,WORKERSERIAL,TOKENNO,EMPLOYEENAME,
   UANNO,GROSS_EARNING,PF_E,AMOUNT,NVL(ADV_REF,0),NVL(ADV_REF_INT,0),'07/06/2020'||' TO '||'20/06/2020' REPORTHEADER,PFNO EX1,'ALL' EX2, 'P' EX3,'ALL' EX4 , null ,null,null,null,null,null
   FROM(     
   SELECT DISTINCT B.COMPANYCODE, B.DIVISIONCODE,NVL(A.CLUSTERCODE,B.CLUSTERCODE) CLUSTERCODE,
   NVL(A.CATEGORYCODE,B.CATEGORYCODE) CATEGORYCODE,CAT.CATEGORYTYPE,COMPANYNAME,DIVISIONNAME,B.WORKERSERIAL,B.TOKENNO,B.EMPLOYEENAME,   
   B.UANNO,NVL(A.PF_GROSS,0) GROSS_EARNING,NVL(A.PF_E,0) PF_E,NVL(C.AMOUNT,0)  AMOUNT,ADV_REF,ADV_REF_INT,B.PFNO  
   FROM
   (
        SELECT COMPANYCODE, DIVISIONCODE, TOKENNO, WORKERSERIAL, CLUSTERCODE, CATEGORYCODE, EMPLOYEENAME,  UANNO,B.PFNO 
		FROM GPSEMPLOYEEMAST B
        WHERE B.COMPANYCODE='AM0083'  
        AND B.DIVISIONCODE='A12'       
        AND B.PFNO IS NOT NULL
        AND B.CATEGORYCODE IN ('P')
        AND B.ACTIVE = 'Y' AND (TO_CHAR(B.DATEOFRETIREMENT) IS NULL OR B.DATEOFRETIREMENT > TO_DATE('20/06/2020','DD/MM/YYYY') )
        AND (TO_CHAR(B.DATEOFTERMINATION) IS NULL OR B.DATEOFTERMINATION > TO_DATE('20/06/2020','DD/MM/YYYY'))
        AND B.DATEOFJOINING <= TO_DATE('20/06/2020','DD/MM/YYYY')
   ) B, --GPSPAYSHEETDETAILS A,
   (
		SELECT COMPANYCODE, DIVISIONCODE, TOKENNO, WORKERSERIAL,CLUSTERCODE,CATEGORYCODE, SUM(NVL(A.PF_E,0))PF_E, SUM(NVL(PF_GROSS,0)) PF_GROSS 
		FROM GPSPAYSHEETDETAILS A
		WHERE 1=1    
		AND A.PERIODFROM>=TO_DATE('07/06/2020','DD/MM/YYYY')    
		AND A.PERIODTO <=TO_DATE('20/06/2020','DD/MM/YYYY') 
		AND A.CATEGORYCODE IN ('P')
		GROUP BY COMPANYCODE, DIVISIONCODE, CLUSTERCODE,CATEGORYCODE, TOKENNO, WORKERSERIAL
   ) A,PFLOANTRANSACTION C,
 (SELECT  A.COMPANYCODE, A.DIVISIONCODE,A.WORKERSERIAL,A.TOKENNO,LOANDATE,NVL(SUM(NVL(A.AMOUNT,0)),0) ADV_REF   
 FROM PFLOANBREAKUP A    
 WHERE A.COMPANYCODE='AM0083'  
     AND A.DIVISIONCODE='A12' 
     AND EFFECTFORTNIGHT>=TO_DATE('07/06/2020','DD/MM/YYYY') 
     AND EFFECTFORTNIGHT <=TO_DATE('20/06/2020','DD/MM/YYYY')
     GROUP BY  A.COMPANYCODE, A.DIVISIONCODE,A.WORKERSERIAL,A.TOKENNO,LOANDATE 
 )D,   
 (SELECT  A.COMPANYCODE, A.DIVISIONCODE,A.WORKERSERIAL,A.TOKENNO,LOANDATE,NVL(SUM(NVL(INTERESTAMOUNT,0)),0) ADV_REF_INT 
  FROM PFLOANINTEREST  A 
  WHERE A.COMPANYCODE='AM0083' 
     AND A.DIVISIONCODE='A12' 
     AND FORTNIGHTSTARTDATE>=TO_DATE('07/06/2020','DD/MM/YYYY')    
     AND FORTNIGHTENDDATE <=TO_DATE('20/06/2020','DD/MM/YYYY')     
     GROUP BY  A.COMPANYCODE, A.DIVISIONCODE,A.WORKERSERIAL,A.TOKENNO  ,LOANDATE  
 )E,COMPANYMAST COM,DIVISIONMASTER DIV,GPSCATEGORYMAST CAT   
 WHERE B.COMPANYCODE='AM0083'  
 AND B.DIVISIONCODE='A12'     
-- AND A.PERIODFROM>=TO_DATE('07/06/2020','DD/MM/YYYY')    
-- AND A.PERIODTO <=TO_DATE('20/06/2020','DD/MM/YYYY')     
 AND B.COMPANYCODE =A.COMPANYCODE (+)     
 AND B.DIVISIONCODE=A.DIVISIONCODE (+)   
 AND B.WORKERSERIAL= A.WORKERSERIAL (+)    
 AND B.COMPANYCODE=C.COMPANYCODE    (+) 
 AND B.DIVISIONCODE=C.DIVISIONCODE  (+) 
 AND B.WORKERSERIAL=C.WORKERSERIAL  (+) 
 AND C.COMPANYCODE=D.COMPANYCODE    (+) 
 AND C.DIVISIONCODE=D.DIVISIONCODE  (+) 
 AND C.WORKERSERIAL=D.WORKERSERIAL(+)   
 AND C.LOANDATE=D.LOANDATE   (+)  
 AND D.COMPANYCODE=E.COMPANYCODE  (+)
 AND D.DIVISIONCODE=E.DIVISIONCODE(+)
 AND D.WORKERSERIAL=E.WORKERSERIAL(+)
 AND D.LOANDATE=E.LOANDATE   (+)  
 AND B.COMPANYCODE=COM.COMPANYCODE  
 AND B.COMPANYCODE=DIV.COMPANYCODE  
 AND B.DIVISIONCODE=DIV.DIVISIONCODE  
 AND B.COMPANYCODE=CAT.COMPANYCODE    
 AND B.DIVISIONCODE=CAT.DIVISIONCODE  
 AND B.CATEGORYCODE=CAT.CATEGORYCODE  
-- GROUP BY A.COMPANYCODE, A.DIVISIONCODE,A.CLUSTERCODE,A.CATEGORYCODE,CAT.CATEGORYTYPE,COMPANYNAME,DIVISIONNAME,A.WORKERSERIAL,A.TOKENNO,B.EMPLOYEENAME,B.PFNO,
-- B.UANNO,C.AMOUNT,ADV_REF,ADV_REF_INT
     )
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

INSERT INTO GTT_PFCONTRIBUTION 
   SELECT COMPANYCODE, DIVISIONCODE,CLUSTERCODE,CATEGORYCODE,CATEGORYTYPE,COMPANYNAME,DIVISIONNAME,WORKERSERIAL,TOKENNO,EMPLOYEENAME,
   UANNO,GROSS_EARNING,PF_E,AMOUNT,NVL(ADV_REF,0),NVL(ADV_REF_INT,0),'07/06/2020'||' TO '||'20/06/2020' REPORTHEADER,PFNO EX1,'ALL' EX2, 'P' EX3,'ALL' EX4 , null ,null,null,null,null,null
   FROM(     
   SELECT DISTINCT B.COMPANYCODE, B.DIVISIONCODE,NVL(A.CLUSTERCODE,B.CLUSTERCODE) CLUSTERCODE,
   NVL(A.CATEGORYCODE,B.CATEGORYCODE) CATEGORYCODE,CAT.CATEGORYTYPE,COMPANYNAME,DIVISIONNAME,B.WORKERSERIAL,B.TOKENNO,B.EMPLOYEENAME,  
   B.UANNO,NVL(A.PF_GROSS,0) GROSS_EARNING,NVL(A.PF_E,0) PF_E,NVL(C.AMOUNT,0)  AMOUNT,ADV_REF,ADV_REF_INT,B.PFNO
   FROM
   (
        SELECT COMPANYCODE, DIVISIONCODE, TOKENNO, WORKERSERIAL, CLUSTERCODE, CATEGORYCODE, EMPLOYEENAME,  UANNO,PFNO 
   	    FROM GPSEMPLOYEEMAST B
        WHERE 1=1
        AND B.COMPANYCODE='AM0083'  
        AND B.DIVISIONCODE='A12' 
        AND B.PFNO IS NOT NULL
       	AND CATEGORYCODE IN ('P')
        AND B.ACTIVE = 'Y' AND (TO_CHAR(B.DATEOFRETIREMENT) IS NULL OR B.DATEOFRETIREMENT > TO_DATE('20/06/2020','DD/MM/YYYY') )
        AND (TO_CHAR(B.DATEOFTERMINATION) IS NULL OR B.DATEOFTERMINATION > TO_DATE('20/06/2020','DD/MM/YYYY'))
        AND B.DATEOFJOINING <= TO_DATE('20/06/2020','DD/MM/YYYY')
   ) B,
   (
   	    SELECT COMPANYCODE, DIVISIONCODE, TOKENNO, WORKERSERIAL,CLUSTERCODE,CATEGORYCODE, SUM(NVL(A.PF_E,0))PF_E, SUM(NVL(PF_GROSS,0)) PF_GROSS
       	FROM GPSPAYSHEETDETAILS A 
       	WHERE 1=1 
        AND A.COMPANYCODE='AM0083'  
        AND A.DIVISIONCODE='A12' 
       	AND A.PERIODFROM>=TO_DATE('07/06/2020','DD/MM/YYYY') 
       	AND A.PERIODTO <=TO_DATE('20/06/2020','DD/MM/YYYY')
       	AND CATEGORYCODE IN ('P')
     	GROUP BY COMPANYCODE, DIVISIONCODE, CLUSTERCODE,CATEGORYCODE, TOKENNO, WORKERSERIAL
    ) A,PFLOANTRANSACTION C,
 (SELECT  A.COMPANYCODE, A.DIVISIONCODE,A.WORKERSERIAL,A.TOKENNO,LOANDATE,NVL(SUM(NVL(A.AMOUNT,0)),0) ADV_REF   
 FROM PFLOANBREAKUP A    
 WHERE A.COMPANYCODE='AM0083'  
     AND A.DIVISIONCODE='A12' 
     AND EFFECTFORTNIGHT>=TO_DATE('07/06/2020','DD/MM/YYYY') 
     AND EFFECTFORTNIGHT <=TO_DATE('20/06/2020','DD/MM/YYYY')
     GROUP BY  A.COMPANYCODE, A.DIVISIONCODE,A.WORKERSERIAL,A.TOKENNO,LOANDATE 
 )D,   
 (SELECT  A.COMPANYCODE, A.DIVISIONCODE,A.WORKERSERIAL,A.TOKENNO,LOANDATE,NVL(SUM(NVL(INTERESTAMOUNT,0)),0) ADV_REF_INT 
  FROM PFLOANINTEREST  A 
  WHERE A.COMPANYCODE='AM0083' 
     AND A.DIVISIONCODE='A12' 
     AND FORTNIGHTSTARTDATE>=TO_DATE('07/06/2020','DD/MM/YYYY')    
     AND FORTNIGHTENDDATE <=TO_DATE('20/06/2020','DD/MM/YYYY')     
     GROUP BY  A.COMPANYCODE, A.DIVISIONCODE,A.WORKERSERIAL,A.TOKENNO  ,LOANDATE  
 )E,COMPANYMAST COM,DIVISIONMASTER DIV,GPSCATEGORYMAST CAT   
 WHERE B.COMPANYCODE='AM0083'  
 AND B.DIVISIONCODE='A12'     
     AND B.COMPANYCODE =A.COMPANYCODE (+)          
     AND B.DIVISIONCODE=A.DIVISIONCODE (+)         
     AND B.WORKERSERIAL= A.WORKERSERIAL (+)        
     AND B.COMPANYCODE=C.COMPANYCODE    (+)        
     AND B.DIVISIONCODE=C.DIVISIONCODE  (+)        
     AND B.WORKERSERIAL=C.WORKERSERIAL  (+)        
     AND C.COMPANYCODE=D.COMPANYCODE    (+)        
     AND C.DIVISIONCODE=D.DIVISIONCODE  (+)        
     AND C.WORKERSERIAL=D.WORKERSERIAL(+)          
     AND C.LOANDATE=D.LOANDATE   (+)               
     AND D.COMPANYCODE=E.COMPANYCODE  (+)          
     AND D.DIVISIONCODE=E.DIVISIONCODE(+)          
     AND D.WORKERSERIAL=E.WORKERSERIAL(+)          
     AND D.LOANDATE=E.LOANDATE   (+)               
     AND B.COMPANYCODE=COM.COMPANYCODE             
     AND B.COMPANYCODE=DIV.COMPANYCODE             
     AND B.DIVISIONCODE=DIV.DIVISIONCODE           
     AND B.COMPANYCODE=CAT.COMPANYCODE             
     AND B.DIVISIONCODE=CAT.DIVISIONCODE           
     AND B.CATEGORYCODE=CAT.CATEGORYCODE           
     ) 



---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------


INSERT INTO GTT_PFCONTRIBUTION_NEW 
( 
   PERIODFROM, PERIODTO, COMPANYCODE, DIVISIONCODE, CLUSTERCODE, CATEGORYCODE, CATEGORYTYPE,
   COMPANYNAME, DIVISIONNAME, WORKERSERIAL, TOKENNO, EMPLOYEENAME, UANNO, GROSS_EARNING, PF_E, 
   AMOUNT, ADV_REF, ADV_REF_INT, REPORTHEADER, EX1, EX2, EX3, EX4
) 

SELECT NVL(A.PERIODFROM,ANL.PERIODFROM) PERIODFROM,NVL(A.PERIODTO,ANL.PERIODTO) PERIODTO,COM.COMPANYCODE, DIV.DIVISIONCODE,NVL(A.CLUSTERCODE,E.CLUSTERCODE) CLUSTERCODE,CAT.CATEGORYCODE,CAT.CATEGORYTYPE,COM.COMPANYNAME,DIV.DIVISIONNAME,E.WORKERSERIAL,E.TOKENNO,E.EMPLOYEENAME,
   E.UANNO,NVL(A.GROSS_EARNING,0)+NVL(ANL.GROSS_EARNING,0) GROSS_EARNING,(NVL(A.PF_E,0)+ NVL(ANL.PF_E,0)) PF_E,NVL(B.AMOUNT,0) ADVANCEDMADE,NVL(C.ADV_REF,0) ADV_REF,NVL(D.ADV_REF_INT,0) ADV_REF_INT,
   '07/06/2020'||' TO '||'20/06/2020' REPORTHEADER,E.PFNO EX1, TO_CHAR(NVL(A.PERIODFROM,ANL.PERIODFROM),'DD/MM/YYYY')||' TO '||TO_CHAR(NVL(A.PERIODTO,ANL.PERIODTO),'DD/MM/YYYY') EX2, 0 EX3,0 EX4 
 FROM   
(
SELECT PERIODFROM,PERIODTO,COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TOKENNO,CLUSTERCODE,CATEGORYCODE,NVL(SUM(NVL(PF_GROSS,0)),0) GROSS_EARNING,NVL(SUM(NVL(PF_E,0)),0) PF_E
FROM GPSPAYSHEETDETAILS 
WHERE COMPANYCODE='AM0083'
  AND DIVISIONCODE='A12'
  AND PERIODFROM >=TO_DATE('07/06/2020','DD/MM/YYYY') 
  AND PERIODFROM <=TO_DATE('20/06/2020','DD/MM/YYYY')
  GROUP BY PERIODFROM,PERIODTO,COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TOKENNO,CLUSTERCODE,CATEGORYCODE
  HAVING NVL(SUM(NVL(PF_GROSS,0)),0)>0
)A,
(  
SELECT COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TOKENNO,SUM(NVL(SANCTIONEDAMOUNT,0)) AMOUNT
FROM PFLOANTRANSACTION
WHERE COMPANYCODE='AM0083'
  AND DIVISIONCODE='A12'
  AND LOANDATE>=TO_DATE('07/06/2020','DD/MM/YYYY') 
  AND LOANDATE <=TO_DATE('20/06/2020','DD/MM/YYYY')
  GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TOKENNO
)B,
(
SELECT  COMPANYCODE, DIVISIONCODE,WORKERSERIAL,TOKENNO,SUM(DECODE(TRANSACTIONTYPE,'CAPITAL',NVL(AMOUNT,0),'REPAYCAP',NVL(AMOUNT,0),'REPAY',NVL(REPAYCAPITAL,0),0)) ADV_REF   
 FROM PFLOANBREAKUP    
 WHERE COMPANYCODE='AM0083'  
     AND DIVISIONCODE='A12' 
     AND PAIDON>=TO_DATE('07/06/2020','DD/MM/YYYY') 
     AND PAIDON <=TO_DATE('20/06/2020','DD/MM/YYYY')
     GROUP BY  COMPANYCODE, DIVISIONCODE,WORKERSERIAL,TOKENNO
)C,   
(
SELECT  COMPANYCODE, DIVISIONCODE,WORKERSERIAL,TOKENNO,SUM(DECODE(TRANSACTIONTYPE,'INTEREST',NVL(AMOUNT,0),'REPAY',NVL(REPAYINTEREST,0),0)) ADV_REF_INT   
 FROM PFLOANBREAKUP    
 WHERE COMPANYCODE='AM0083'  
     AND DIVISIONCODE='A12' 
     AND PAIDON>=TO_DATE('07/06/2020','DD/MM/YYYY') 
     AND PAIDON <=TO_DATE('20/06/2020','DD/MM/YYYY')
     GROUP BY  COMPANYCODE, DIVISIONCODE,WORKERSERIAL,TOKENNO
)D,
(
     SELECT COMPANYCODE,DIVISIONCODE,WORKERSERIAL,MAX(PERIODFROM) PERIODFROM,MAX(PERIODTO) PERIODTO, SUM(NVL(PFGROSS,0)) GROSS_EARNING,SUM(NVL(PFAMOUNT,0)) PF_E
     FROM GPSLEAVEPROCALCULATION 
     WHERE COMPANYCODE='AM0083'  
     AND DIVISIONCODE='A12' 
     AND PERIODFROM >= TO_DATE('07/06/2020','DD/MM/YYYY')  AND PERIODTO <= TO_DATE('20/06/2020','DD/MM/YYYY')
     GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL
     HAVING SUM(NVL(PFAMOUNT,0))>0
) ANL, COMPANYMAST COM,DIVISIONMASTER DIV,GPSCATEGORYMAST CAT,
(
    SELECT COMPANYCODE, DIVISIONCODE, TOKENNO, WORKERSERIAL, CLUSTERCODE, CATEGORYCODE, EMPLOYEENAME,  UANNO,B.PFNO 
    FROM GPSEMPLOYEEMAST B
    WHERE B.COMPANYCODE='AM0083'  
    AND B.DIVISIONCODE='A12'       
    AND B.PFNO IS NOT NULL
    AND B.CATEGORYCODE IN ('P')
    AND B.ACTIVE = 'Y' AND (TO_CHAR(B.DATEOFRETIREMENT) IS NULL OR B.DATEOFRETIREMENT > TO_DATE('20/06/2020','DD/MM/YYYY') )
    AND (TO_CHAR(B.DATEOFTERMINATION) IS NULL OR B.DATEOFTERMINATION > TO_DATE('20/06/2020','DD/MM/YYYY'))
    AND B.DATEOFJOINING <= TO_DATE('20/06/2020','DD/MM/YYYY')
) E
  WHERE E.COMPANYCODE = 'AM0083'
    AND E.DIVISIONCODE = 'A12'
    ---AND CAT.CATEGORYCODE = 'U'
   --- AND A.CLUSTERCODE='01'
   -- AND E.PFREGNO='C-72'
-- AND CAT.CATEGORYCODE IN ('P')
    AND E.COMPANYCODE = COM.COMPANYCODE(+) 
    AND E.COMPANYCODE = DIV.COMPANYCODE(+) 
    AND E.DIVISIONCODE = DIV.DIVISIONCODE(+) 
    AND E.COMPANYCODE = CAT.COMPANYCODE(+) 
    AND E.DIVISIONCODE = CAT.DIVISIONCODE (+) 
    AND E.CATEGORYCODE = CAT.CATEGORYCODE(+) 
    AND E.WORKERSERIAL = ANL.WORKERSERIAL (+)  
    AND E.WORKERSERIAL = A.WORKERSERIAL (+)
    AND E.WORKERSERIAL = B.WORKERSERIAL (+)
    AND E.WORKERSERIAL = C.WORKERSERIAL (+)
    AND E.WORKERSERIAL = D.WORKERSERIAL (+)
--   AND (NVL(A.GROSS_EARNING,0) + NVL(A.PF_E,0) + NVL(B.AMOUNT,0)+NVL(C.ADV_REF,0) +NVL(D.ADV_REF_INT,0)+ NVL(ANL.GROSS_EARNING,0) + NVL(ANL.PF_E,0)) <>0
    ORDER BY E.WORKERSERIAL



---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

INSERT INTO GTT_PFCONTRIBUTION_NEW 
( 
   PERIODFROM, PERIODTO, COMPANYCODE, DIVISIONCODE, CLUSTERCODE, CATEGORYCODE, CATEGORYTYPE,
   COMPANYNAME, DIVISIONNAME, WORKERSERIAL, TOKENNO, EMPLOYEENAME, UANNO, GROSS_EARNING, PF_E, 
   AMOUNT, ADV_REF, ADV_REF_INT, REPORTHEADER, EX1, EX2, EX3, EX4
) 


SELECT NVL(A.PERIODFROM,ANL.PERIODFROM) PERIODFROM,NVL(A.PERIODTO,ANL.PERIODTO) PERIODTO,COM.COMPANYCODE, DIV.DIVISIONCODE,NVL(A.CLUSTERCODE,E.CLUSTERCODE) CLUSTERCODE,CAT.CATEGORYCODE,CAT.CATEGORYTYPE,COM.COMPANYNAME,DIV.DIVISIONNAME,E.WORKERSERIAL,E.TOKENNO,E.EMPLOYEENAME,
   E.UANNO,NVL(A.GROSS_EARNING,0)+NVL(ANL.GROSS_EARNING,0) GROSS_EARNING,(NVL(A.PF_E,0)+ NVL(ANL.PF_E,0)) PF_E,NVL(B.AMOUNT,0) ADVANCEDMADE,NVL(C.ADV_REF,0) ADV_REF,NVL(D.ADV_REF_INT,0) ADV_REF_INT,
   '07/06/2020'||' TO '||'20/06/2020' REPORTHEADER,E.PFNO EX1, TO_CHAR(NVL(A.PERIODFROM,ANL.PERIODFROM),'DD/MM/YYYY')||' TO '||TO_CHAR(NVL(A.PERIODTO,ANL.PERIODTO),'DD/MM/YYYY') EX2, 0 EX3,0 EX4 
 FROM   
(
SELECT PERIODFROM,PERIODTO,COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TOKENNO,CLUSTERCODE,CATEGORYCODE,NVL(SUM(NVL(PF_GROSS,0)),0) GROSS_EARNING,NVL(SUM(NVL(PF_E,0)),0) PF_E
FROM GPSPAYSHEETDETAILS 
WHERE COMPANYCODE='AM0083'
  AND DIVISIONCODE='A12'
  AND PERIODFROM >=TO_DATE('07/06/2020','DD/MM/YYYY') 
  AND PERIODFROM <=TO_DATE('20/06/2020','DD/MM/YYYY')
  GROUP BY PERIODFROM,PERIODTO,COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TOKENNO,CLUSTERCODE,CATEGORYCODE
  HAVING NVL(SUM(NVL(PF_GROSS,0)),0)>0
)A,
(  
SELECT COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TOKENNO,SUM(NVL(SANCTIONEDAMOUNT,0)) AMOUNT
FROM PFLOANTRANSACTION
WHERE COMPANYCODE='AM0083'
  AND DIVISIONCODE='A12'
  AND LOANDATE>=TO_DATE('07/06/2020','DD/MM/YYYY') 
  AND LOANDATE <=TO_DATE('20/06/2020','DD/MM/YYYY')
  GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TOKENNO
)B,
(
SELECT  COMPANYCODE, DIVISIONCODE,WORKERSERIAL,TOKENNO,SUM(DECODE(TRANSACTIONTYPE,'CAPITAL',NVL(AMOUNT,0),'REPAYCAP',NVL(AMOUNT,0),'REPAY',NVL(REPAYCAPITAL,0),0)) ADV_REF   
 FROM PFLOANBREAKUP    
 WHERE COMPANYCODE='AM0083'  
     AND DIVISIONCODE='A12' 
     AND PAIDON>=TO_DATE('07/06/2020','DD/MM/YYYY') 
     AND PAIDON <=TO_DATE('20/06/2020','DD/MM/YYYY')
     GROUP BY  COMPANYCODE, DIVISIONCODE,WORKERSERIAL,TOKENNO
)C,   
(
SELECT  COMPANYCODE, DIVISIONCODE,WORKERSERIAL,TOKENNO,SUM(DECODE(TRANSACTIONTYPE,'INTEREST',NVL(AMOUNT,0),'REPAY',NVL(REPAYINTEREST,0),0)) ADV_REF_INT   
 FROM PFLOANBREAKUP    
 WHERE COMPANYCODE='AM0083'  
     AND DIVISIONCODE='A12' 
     AND PAIDON>=TO_DATE('07/06/2020','DD/MM/YYYY') 
     AND PAIDON <=TO_DATE('20/06/2020','DD/MM/YYYY')
     GROUP BY  COMPANYCODE, DIVISIONCODE,WORKERSERIAL,TOKENNO
)D,
(
     SELECT COMPANYCODE,DIVISIONCODE,WORKERSERIAL,MAX(PERIODFROM) PERIODFROM,MAX(PERIODTO) PERIODTO, SUM(NVL(PFGROSS,0)) GROSS_EARNING,SUM(NVL(PFAMOUNT,0)) PF_E
     FROM GPSLEAVEPROCALCULATION 
     WHERE COMPANYCODE='AM0083'  
     AND DIVISIONCODE='A12' 
     AND PERIODFROM >= TO_DATE('07/06/2020','DD/MM/YYYY')  AND PERIODTO <= TO_DATE('20/06/2020','DD/MM/YYYY')
     GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL
     HAVING SUM(NVL(PFAMOUNT,0))>0
) ANL, COMPANYMAST COM,DIVISIONMASTER DIV,GPSCATEGORYMAST CAT, --GPSEMPLOYEEMAST E
(
     SELECT COMPANYCODE, DIVISIONCODE, TOKENNO, WORKERSERIAL, CLUSTERCODE, CATEGORYCODE, EMPLOYEENAME,  UANNO,B.PFNO 
     FROM GPSEMPLOYEEMAST B
     WHERE B.COMPANYCODE='AM0083'  
     AND B.DIVISIONCODE='A12'    
     AND B.PFNO IS NOT NULL
     AND B.ACTIVE = 'Y' AND (TO_CHAR(B.DATEOFRETIREMENT) IS NULL OR B.DATEOFRETIREMENT > TO_DATE('20/06/2020','DD/MM/YYYY') )
     AND (TO_CHAR(B.DATEOFTERMINATION) IS NULL OR B.DATEOFTERMINATION > TO_DATE('20/06/2020','DD/MM/YYYY'))
     AND B.DATEOFJOINING <= TO_DATE('20/06/2020','DD/MM/YYYY')
) E
  WHERE COM.COMPANYCODE = 'AM0083'
    AND DIV.DIVISIONCODE = 'A12'
    ---AND CAT.CATEGORYCODE = 'U'
   --- AND A.CLUSTERCODE='01'
   -- AND E.PFREGNO='C-72'
 AND CAT.CATEGORYCODE IN ('P')
    AND E.COMPANYCODE = COM.COMPANYCODE
    AND E.COMPANYCODE = DIV.COMPANYCODE
    AND E.DIVISIONCODE = DIV.DIVISIONCODE
    AND E.COMPANYCODE = CAT.COMPANYCODE
    AND E.DIVISIONCODE = CAT.DIVISIONCODE 
    AND E.CATEGORYCODE = CAT.CATEGORYCODE
    AND E.WORKERSERIAL = ANL.WORKERSERIAL (+)  
    AND E.WORKERSERIAL = A.WORKERSERIAL (+)
    AND E.WORKERSERIAL = B.WORKERSERIAL (+)
    AND E.WORKERSERIAL = C.WORKERSERIAL (+)
    AND E.WORKERSERIAL = D.WORKERSERIAL (+)
    AND (NVL(A.GROSS_EARNING,0) + NVL(A.PF_E,0) + NVL(B.AMOUNT,0)+NVL(C.ADV_REF,0) +NVL(D.ADV_REF_INT,0)+ NVL(ANL.GROSS_EARNING,0) + NVL(ANL.PF_E,0)) <>0
    ORDER BY E.WORKERSERIAL




---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

INSERT INTO GTT_PFCONTRIBUTION 
 
  SELECT COMPANYCODE, DIVISIONCODE,CLUSTERCODE,CATEGORYCODE,CATEGORYTYPE,COMPANYNAME,DIVISIONNAME,WORKERSERIAL,TOKENNO,EMPLOYEENAME,
   UANNO,GROSS_EARNING,PF_E,AMOUNT,NVL(ADV_REF,0),NVL(ADV_REF_INT,0),'07/06/2020'||' TO '||'20/06/2020' REPORTHEADER,PFNO EX1,'ALL' EX2, 'P' EX3,'ALL' EX4 , null ,null,null,null,null,null
   FROM(     
   SELECT DISTINCT A.COMPANYCODE, A.DIVISIONCODE,A.CLUSTERCODE,A.CATEGORYCODE,CAT.CATEGORYTYPE,COMPANYNAME,DIVISIONNAME,A.WORKERSERIAL,A.TOKENNO,B.EMPLOYEENAME,   
   B.UANNO,NVL(SUM(NVL(PF_GROSS,0)),0) GROSS_EARNING,NVL(SUM(NVL(A.PF_E,0)),0) PF_E,C.AMOUNT,ADV_REF,ADV_REF_INT,B.PFNO  
   FROM --GPSPAYSHEETDETAILS A,
   (
    select * from GPSPAYSHEETDETAILS a
    where 1=1    
 AND A.PERIODFROM>=TO_DATE('07/06/2020','DD/MM/YYYY')    
 AND A.PERIODTO <=TO_DATE('20/06/2020','DD/MM/YYYY') 
 AND A.CATEGORYCODE IN ('P')
   ) a,
   GPSEMPLOYEEMAST B,PFLOANTRANSACTION C,
 (SELECT  A.COMPANYCODE, A.DIVISIONCODE,A.WORKERSERIAL,A.TOKENNO,LOANDATE,NVL(SUM(NVL(A.AMOUNT,0)),0) ADV_REF   
 FROM PFLOANBREAKUP A    
 WHERE A.COMPANYCODE='AM0083'  
     AND A.DIVISIONCODE='A12' 
     AND EFFECTFORTNIGHT>=TO_DATE('07/06/2020','DD/MM/YYYY') 
     AND EFFECTFORTNIGHT <=TO_DATE('20/06/2020','DD/MM/YYYY')
     GROUP BY  A.COMPANYCODE, A.DIVISIONCODE,A.WORKERSERIAL,A.TOKENNO,LOANDATE 
 )D,   
 (SELECT  A.COMPANYCODE, A.DIVISIONCODE,A.WORKERSERIAL,A.TOKENNO,LOANDATE,NVL(SUM(NVL(INTERESTAMOUNT,0)),0) ADV_REF_INT 
  FROM PFLOANINTEREST  A 
  WHERE A.COMPANYCODE='AM0083' 
     AND A.DIVISIONCODE='A12' 
     AND FORTNIGHTSTARTDATE>=TO_DATE('07/06/2020','DD/MM/YYYY')    
     AND FORTNIGHTENDDATE <=TO_DATE('20/06/2020','DD/MM/YYYY')     
     GROUP BY  A.COMPANYCODE, A.DIVISIONCODE,A.WORKERSERIAL,A.TOKENNO  ,LOANDATE  
 )E,COMPANYMAST COM,DIVISIONMASTER DIV,GPSCATEGORYMAST CAT   
 WHERE B.COMPANYCODE='AM0083'  
 AND B.DIVISIONCODE='A12'     
-- AND A.PERIODFROM>=TO_DATE('07/06/2020','DD/MM/YYYY')    
-- AND A.PERIODTO <=TO_DATE('20/06/2020','DD/MM/YYYY')     
 AND B.COMPANYCODE =A.COMPANYCODE (+)     
 AND B.DIVISIONCODE=A.DIVISIONCODE (+)   
 AND B.WORKERSERIAL= A.WORKERSERIAL (+)    
 AND B.COMPANYCODE=C.COMPANYCODE    (+) 
 AND B.DIVISIONCODE=C.DIVISIONCODE  (+) 
 AND B.WORKERSERIAL=C.WORKERSERIAL  (+) 
 AND C.COMPANYCODE=D.COMPANYCODE    (+) 
 AND C.DIVISIONCODE=D.DIVISIONCODE  (+) 
 AND C.WORKERSERIAL=D.WORKERSERIAL(+)   
 AND C.LOANDATE=D.LOANDATE   (+)  
 AND D.COMPANYCODE=E.COMPANYCODE  (+)
 AND D.DIVISIONCODE=E.DIVISIONCODE(+)
 AND D.WORKERSERIAL=E.WORKERSERIAL(+)
 AND D.LOANDATE=E.LOANDATE   (+)  
 AND b.COMPANYCODE=COM.COMPANYCODE (+)  
 AND b.COMPANYCODE=DIV.COMPANYCODE  (+) 
 AND b.DIVISIONCODE=DIV.DIVISIONCODE (+)
 AND b.COMPANYCODE=CAT.COMPANYCODE    
 AND b.DIVISIONCODE=CAT.DIVISIONCODE  
 AND A.CATEGORYCODE=CAT.CATEGORYCODE (+)
 AND B.PFNO IS NOT NULL
 AND (TO_CHAR(B.DATEOFRETIREMENT) IS NULL OR B.DATEOFRETIREMENT > TO_DATE('20/06/2020','DD/MM/YYYY') )
 AND (TO_CHAR(B.DATEOFTERMINATION) IS NULL OR B.DATEOFTERMINATION > TO_DATE('20/06/2020','DD/MM/YYYY'))
 AND B.DATEOFJOINING <= TO_DATE('20/06/2020','DD/MM/YYYY')
 GROUP BY A.COMPANYCODE, A.DIVISIONCODE,A.CLUSTERCODE,A.CATEGORYCODE,CAT.CATEGORYTYPE,COMPANYNAME,DIVISIONNAME,A.WORKERSERIAL,A.TOKENNO,B.EMPLOYEENAME,B.PFNO,
 B.UANNO,C.AMOUNT,ADV_REF,ADV_REF_INT
     )
	 
	 
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

INSERT INTO GTT_PFCONTRIBUTION 
 
  SELECT COMPANYCODE, DIVISIONCODE,CLUSTERCODE,CATEGORYCODE,CATEGORYTYPE,COMPANYNAME,DIVISIONNAME,WORKERSERIAL,TOKENNO,EMPLOYEENAME,
   UANNO,GROSS_EARNING,PF_E,AMOUNT,NVL(ADV_REF,0),NVL(ADV_REF_INT,0),'07/06/2020'||' TO '||'20/06/2020' REPORTHEADER,PFNO EX1,'ALL' EX2, 'P' EX3,'ALL' EX4 , null ,null,null,null,null,null
   FROM(     
   SELECT DISTINCT B.COMPANYCODE, B.DIVISIONCODE,NVL(A.CLUSTERCODE,B.CLUSTERCODE) CLUSTERCODE,
   NVL(A.CATEGORYCODE,B.CATEGORYCODE) CATEGORYCODE,CAT.CATEGORYTYPE,COMPANYNAME,DIVISIONNAME,B.WORKERSERIAL,B.TOKENNO,B.EMPLOYEENAME,   
   B.UANNO,NVL(A.PF_GROSS,0) GROSS_EARNING,NVL(A.PF_E,0) PF_E,NVL(C.AMOUNT,0)  AMOUNT,ADV_REF,ADV_REF_INT,B.PFNO  
   FROM
   (
        SELECT COMPANYCODE, DIVISIONCODE, TOKENNO, WORKERSERIAL, CLUSTERCODE, CATEGORYCODE, EMPLOYEENAME,  UANNO
		FROM GPSEMPLOYEEMAST B
        WHERE B.COMPANYCODE='AM0083'  
        AND B.DIVISIONCODE='A12'       
        AND B.PFNO IS NOT NULL
        AND B.CATEGORYCODE IN ('P')
        AND B.ACTIVE = 'Y' AND (TO_CHAR(B.DATEOFRETIREMENT) IS NULL OR B.DATEOFRETIREMENT > TO_DATE('20/06/2020','DD/MM/YYYY') )
        AND (TO_CHAR(B.DATEOFTERMINATION) IS NULL OR B.DATEOFTERMINATION > TO_DATE('20/06/2020','DD/MM/YYYY'))
        AND B.DATEOFJOINING <= TO_DATE('20/06/2020','DD/MM/YYYY')
   ) B, --GPSPAYSHEETDETAILS A,
   (
		SELECT COMPANYCODE, DIVISIONCODE, TOKENNO, WORKERSERIAL,CLUSTERCODE,CATEGORYCODE, SUM(NVL(A.PF_E,0))PF_E, SUM(NVL(PF_GROSS,0)) PF_GROSS 
		FROM GPSPAYSHEETDETAILS A
		WHERE 1=1    
		AND A.PERIODFROM>=TO_DATE('07/06/2020','DD/MM/YYYY')    
		AND A.PERIODTO <=TO_DATE('20/06/2020','DD/MM/YYYY') 
		AND A.CATEGORYCODE IN ('P')
		GROUP BY COMPANYCODE, DIVISIONCODE, CLUSTERCODE,CATEGORYCODE, TOKENNO, WORKERSERIAL
   ) A,PFLOANTRANSACTION C,
 (SELECT  A.COMPANYCODE, A.DIVISIONCODE,A.WORKERSERIAL,A.TOKENNO,LOANDATE,NVL(SUM(NVL(A.AMOUNT,0)),0) ADV_REF   
 FROM PFLOANBREAKUP A    
 WHERE A.COMPANYCODE='AM0083'  
     AND A.DIVISIONCODE='A12' 
     AND EFFECTFORTNIGHT>=TO_DATE('07/06/2020','DD/MM/YYYY') 
     AND EFFECTFORTNIGHT <=TO_DATE('20/06/2020','DD/MM/YYYY')
     GROUP BY  A.COMPANYCODE, A.DIVISIONCODE,A.WORKERSERIAL,A.TOKENNO,LOANDATE 
 )D,   
 (SELECT  A.COMPANYCODE, A.DIVISIONCODE,A.WORKERSERIAL,A.TOKENNO,LOANDATE,NVL(SUM(NVL(INTERESTAMOUNT,0)),0) ADV_REF_INT 
  FROM PFLOANINTEREST  A 
  WHERE A.COMPANYCODE='AM0083' 
     AND A.DIVISIONCODE='A12' 
     AND FORTNIGHTSTARTDATE>=TO_DATE('07/06/2020','DD/MM/YYYY')    
     AND FORTNIGHTENDDATE <=TO_DATE('20/06/2020','DD/MM/YYYY')     
     GROUP BY  A.COMPANYCODE, A.DIVISIONCODE,A.WORKERSERIAL,A.TOKENNO  ,LOANDATE  
 )E,COMPANYMAST COM,DIVISIONMASTER DIV,GPSCATEGORYMAST CAT   
 WHERE B.COMPANYCODE='AM0083'  
 AND B.DIVISIONCODE='A12'     
-- AND A.PERIODFROM>=TO_DATE('07/06/2020','DD/MM/YYYY')    
-- AND A.PERIODTO <=TO_DATE('20/06/2020','DD/MM/YYYY')     
 AND B.COMPANYCODE =A.COMPANYCODE (+)     
 AND B.DIVISIONCODE=A.DIVISIONCODE (+)   
 AND B.WORKERSERIAL= A.WORKERSERIAL (+)    
 AND B.COMPANYCODE=C.COMPANYCODE    (+) 
 AND B.DIVISIONCODE=C.DIVISIONCODE  (+) 
 AND B.WORKERSERIAL=C.WORKERSERIAL  (+) 
 AND C.COMPANYCODE=D.COMPANYCODE    (+) 
 AND C.DIVISIONCODE=D.DIVISIONCODE  (+) 
 AND C.WORKERSERIAL=D.WORKERSERIAL(+)   
 AND C.LOANDATE=D.LOANDATE   (+)  
 AND D.COMPANYCODE=E.COMPANYCODE  (+)
 AND D.DIVISIONCODE=E.DIVISIONCODE(+)
 AND D.WORKERSERIAL=E.WORKERSERIAL(+)
 AND D.LOANDATE=E.LOANDATE   (+)  
 AND B.COMPANYCODE=COM.COMPANYCODE  
 AND B.COMPANYCODE=DIV.COMPANYCODE  
 AND B.DIVISIONCODE=DIV.DIVISIONCODE  
 AND B.COMPANYCODE=CAT.COMPANYCODE    
 AND B.DIVISIONCODE=CAT.DIVISIONCODE  
 AND B.CATEGORYCODE=CAT.CATEGORYCODE  
-- GROUP BY A.COMPANYCODE, A.DIVISIONCODE,A.CLUSTERCODE,A.CATEGORYCODE,CAT.CATEGORYTYPE,COMPANYNAME,DIVISIONNAME,A.WORKERSERIAL,A.TOKENNO,B.EMPLOYEENAME,B.PFNO,
-- B.UANNO,C.AMOUNT,ADV_REF,ADV_REF_INT
     )
     




---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

  SELECT DISTINCT A.WORKERSERIAL, A.TOKENNO,A.EMPLOYEENAME ,CATEGORYTYPE,TO_CHAR(TO_DATE('30/06/2020','DD/MM/YYYY' ),'DD/MM/YYYY') AS ATTENDANCEDATE
  ,CASE WHEN NVL(C.OCCUPATIONCODE,'NULL') ='NULL' THEN 'STF' ELSE NVL(C.OCCUPATIONCODE,'') END AS OCCUPATIONCODE,
  CASE WHEN NVL(C.HAZIRA,0) =0 THEN 1 ELSE NVL(C.HAZIRA,0) END AS HAZIRA 
  ,CASE WHEN NVL(C.HAZIRA,0) =0 THEN 0 ELSE NVL(C.ATTENDANCEHOURS,0) END AS ATTENDANCEHOURS 
  ,CASE WHEN NVL(C.HAZIRA,0) =0 THEN 0 ELSE NVL(C.OVERTIMEHOURS,0) END AS OVERTIMEHOURS  
  ,DECODE(0,0,'N','Y') ABSENT, 
  A.COMPANYCODE,A.DIVISIONCODE 
  ,A.CLUSTERCODE,B.CATEGORYCODE
  ,CASE WHEN NVL(C.OCCUPATIONCODE,'NULL') ='NULL' THEN (select  OCCUPATIONTYPE from GPSOCCUPATIONMAST where OCCUPATIONCODE='STF' AND COMPANYCODE='JT0069' AND DIVISIONCODE='0004' AND ROWNUM=1) ELSE C.OCCUPATIONTYPE END  AS OCCUPATIONTYPE
  ,A.ATTNBOOKCODE
  ,CASE WHEN NVL(C.HAZIRA,0) =0 THEN 'A' ELSE 'M' END AS OPERATIONMODE
  ,'' AS SYSROWID
  FROM GPSEMPLOYEEMAST A,GPSCATEGORYMAST B ,
    ( SELECT WORKERSERIAL,HAZIRA,ATTENDANCEHOURS,OVERTIMEHOURS,SYSROWID,OCCUPATIONCODE,OCCOUPATIONTYPE OCCUPATIONTYPE FROM GPSATTENDANCEDETAILS   
        WHERE COMPANYCODE='JT0069' 
        AND DIVISIONCODE='0004' 
        AND ATTENDANCEDATE=TO_DATE('30/06/2020','DD/MM/YYYY' )
        AND ATTENDANCETYPE ='NORMAL' AND ATTN_TAG ='MANUAL' AND OCCOUPATIONTYPE IN ('OTHERS','WEEKLY OFF'))C
  WHERE A.WORKERSERIAL NOT IN   (
     SELECT DISTINCT WORKERSERIAL FROM GPSATTENDANCEDETAILS   
        WHERE COMPANYCODE='JT0069' 
        AND DIVISIONCODE='0004' 
        AND ATTENDANCEDATE=TO_DATE('30/06/2020','DD/MM/YYYY' )
        AND ATTENDANCETYPE ='NORMAL' AND NVL(OCCOUPATIONTYPE,'NULL') NOT IN ('OTHERS','WEEKLY OFF'))
  AND  A.WORKERSERIAL NOT IN
     (
     SELECT   DISTINCT WORKERSERIAL FROM   GPSATTENDANCEDETAILS_STAGE 
        WHERE COMPANYCODE='JT0069' 
        AND DIVISIONCODE='0004' 
        AND ATTENDANCEDATE=TO_DATE('30/06/2020','DD/MM/YYYY' )
         AND ATTN_TAG = 'LEAVE')
     AND A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE AND A.CATEGORYCODE=B.CATEGORYCODE
         AND A.WORKERSERIAL = C.WORKERSERIAL (+) 
        AND A.COMPANYCODE='JT0069' 
         AND A.DIVISIONCODE='0004' 
         AND A.ACTIVE='Y' 
         AND B.CATEGORYTYPE IN ('SUB-STAFF','STAFF')
         AND ((A.DATEOFRETIREMENT >= TO_DATE('30/06/2020','DD/MM/YYYY') or A.DATEOFRETIREMENT is null) OR (A.DATEOFRETIREMENTEXTENSION <= TO_DATE('30/06/2020','DD/MM/YYYY') AND A.DATEOFRETIREMENT is NOT null))
         AND (A.DATEOFTERMINATION < TO_DATE('30/06/2020','DD/MM/YYYY' ) or A.DATEOFTERMINATION is null) 
         AND ((A.EMPLOYEESTATUS <> 'ACTIVE' AND A.DATEOFRETIREMENTEXTENSION <= TO_DATE('30/06/2020','DD/MM/YYYY')) OR A.EMPLOYEESTATUS ='ACTIVE') 
         AND A.ACTIVE='Y' AND A.TAKEPARTINWAGES = 'Y'     
         AND A.CATEGORYCODE IN ('1')
         UNION ALL 
     SELECT DISTINCT A.WORKERSERIAL, A.TOKENNO,C.EMPLOYEENAME ,B.CATEGORYTYPE,TO_CHAR(A.ATTENDANCEDATE,'DD/MM/YYYY') AS ATTENDANCEDATE 
      , 'STF' OCCUPATIONCODE,NVL(HAZIRA,0) AS HAZIRA , NVL(A.ATTENDANCEHOURS,0) AS ATTENDANCEHOURS, NVL(OVERTIMEHOURS,0) AS OVERTIMEHOURS,DECODE(0,0,'N','Y') ABSENT,
      A.COMPANYCODE,A.DIVISIONCODE  
      ,A.CLUSTERCODE,B.CATEGORYCODE 
      ,(select  OCCUPATIONTYPE from GPSOCCUPATIONMAST where OCCUPATIONCODE='STF' AND COMPANYCODE='JT0069' AND DIVISIONCODE='0004' AND ROWNUM=1) OCCUPATIONTYPE
       ,A.ATTNBOOKCODE
       ,'A' AS OPERATIONMODE ,'' AS SYSROWID
       FROM GPSATTENDANCEDETAILS_STAGE A,GPSCATEGORYMAST B ,GPSEMPLOYEEMAST C 
       WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE AND A.CATEGORYCODE=B.CATEGORYCODE 
      AND A.COMPANYCODE=C.COMPANYCODE AND A.DIVISIONCODE=C.DIVISIONCODE AND A.EMPLOYEECODE=C.TOKENNO 
         AND A.COMPANYCODE='JT0069' 
         AND A.DIVISIONCODE='0004' 
         AND B.CATEGORYTYPE IN ('SUB-STAFF','STAFF')
         AND A.ATTENDANCEDATE=TO_DATE('30/06/2020','DD/MM/YYYY' )
         AND ATTN_TAG = 'LEAVE'
         AND A.CATEGORYCODE IN ('1')
         AND A.WORKERSERIAL NOT IN(
        SELECT DISTINCT WORKERSERIAL FROM GPSATTENDANCEDETAILS   
        WHERE COMPANYCODE='JT0069' 
        AND DIVISIONCODE='0004' 
        AND ATTENDANCEDATE=TO_DATE('30/06/2020','DD/MM/YYYY' )
        AND ATTENDANCETYPE ='NORMAL')
        ORDER BY WORKERSERIAL
		
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SELECT * FROM PRODDRYSEEDSDESPATCH
WHERE DIVISIONCODE='0005'

SELECT * FROM MENUMASTER_RND
WHERE MENUCODE = '0104010207'

SELECT * FROM SYS_HELP_QRY
WHERE QRY_ID = '22005'


SELECT * FROM SYS_HELP_QRY
WHERE QRY_ID = '20031'

SELECT DISTINCT RECVNOTENO,TO_CHAR(RCVEFFECTIVEDATE,'DD/MM/YYYY')RCVEFFECTIVEDATE FROM PRODDRYSEEDSDESPATCH
  WHERE COMPANYCODE='JT0069'
    AND DIVISIONCODE='0005'
    AND SEASONCODE='2020'
    AND RECVNOTENO IS NOT NULL
  ORDER BY RECVNOTENO


SELECT DISTINCT DELIVERYNOTENO FROM PRODDRYSEEDSDESPATCH
   WHERE COMPANYCODE='JT0069'
    --AND DIVISIONCODE='0005'
    AND SEASONCODE='2020'
    AND RECVNOTENO IS NULL
  ORDER BY DELIVERYNOTENO


SELECT DISTINCT A.CLUSTERCODE,A.CLUSTERDESC FROM GPSCLUSTERMASTER A
WHERE COMPANYCODE='JT0069'
--  AND DIVISIONCODE=<<DIVISIONCODE>>
AND A.CLUSTERCODE IN (
SELECT DISTINCT CLUSTERCODE FROM PRODDRYSEEDSDESPATCH
WHERE COMPANYCODE='JT0069'
AND RECVNOTENO IS NULL 
)
ORDER BY CLUSTERCODE
  
  
SELECT DISTINCT CLUSTERCODE FROM PRODDRYSEEDSDESPATCH
WHERE COMPANYCODE='JT0069'
AND RECVNOTENO IS NULL 



SELECT * FROM SYS_HELP_QRY
WHERE MODULENAME='PRODUCTION_COFFEE'



SELECT * FROM SYS_HELP_QRY
WHERE QRY_ID='22012'


Insert into SYS_HELP_QRY
   (QRY_ID, QRY_STRING, PARAMETER_STRING, QRY_SHORTDESC, QRY_RETURN_TABLE_NAME, 
    WEB_QRY_STRING, SEARCH_COLUMNLIST, MODULENAME)
 Values
   (22012, '""', 'COMPANYCODE~DIVISIONCODE~PATTERN', 'CLUSTER MASTER', NULL, 
    'SELECT DISTINCT CLUSTERCODE,CLUSTERDESC FROM GPSCLUSTERMASTER'||CHR(10)||' WHERE COMPANYCODE=<<COMPANYCODE>>'||CHR(10)||'  AND DIVISIONCODE=<<DIVISIONCODE>>'||CHR(10)||'  ORDER BY CLUSTERCODE', 'CLUSTERCODE~CLUSTERDESC~', 'GPS');
COMMIT;



 select TO_CHAR(EFFECTIVEDATE,'DD/MM/YYYY')||'~'||A.CLUSTERCODE||'~'||B.CLUSTERDESC||'~'||A.AREACODE||'~'||D.AREADESC||'~'||
 FRUITCODE||'~'||C.CATEGORYDESC||'~'||TOTALNOOFBAGS||'~'||PERBAGWEIGHT||'~'||PERBAGTAREWEIGHT||'~'||
 TOTALTAREWEIGHT||'~'||TOTALNETWEIGHT||'~'||TOTALGROSSWEIGHT||'~'||MOISTUREPER||'~'||
 VEHICLENO||'~'||TOKENNO
 FROM PRODDRYSEEDSDESPATCH A, GPSCLUSTERMASTER B, SALESCATEGORYMASTER C , GPSAREACLASSIFICATIONMAST D, GPSEMPLOYEEMAST E
 WHERE A.COMPANYCODE = 'JT0069' 
 AND A.CLUSTERCODE = 'GO' 
 AND A.DELIVERYNOTENO = '07' 
 AND A.COMPANYCODE=B.COMPANYCODE
 AND A.DIVISIONCODE=B.DIVISIONCODE
 AND A.CLUSTERCODE=B.CLUSTERCODE
 AND A.COMPANYCODE=C.COMPANYCODE
 AND A.FRUITCODE=C.CATEGORYCODE
 AND A.COMPANYCODE=D.COMPANYCODE
 AND A.CLUSTERCODE=D.CLUSTERCODE
 AND A.AREACODE=D.AREACODE
 
 
 PRODFRUITTYPEMASTER
 
 SELECT  CATEGORYCODE,CATEGORYDESC
 FROM SALESCATEGORYMASTER
 WHERE COMPANYCODE = 'JT0069'
 
 
SELECT * FROM  GPSAREACLASSIFICATIONMAST

SELECT CLUSTERCODE, COUNT(CLUSTERCODE) CNT FROM GPSCLUSTERMASTER
GROUP BY CLUSTERCODE

SELECT DISTINCT FROM GPSCLUSTERMASTER
WHERE CLUSTERCODE='OF'

SELECT * FROM PRODDRYSEEDSDESPATCH

WHERE RECVNOTENO LIKE '33%'


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='PRODDRYSEEDSDESPATCH'

RECVNOTENO, RCVEFFECTIVEDATE, RECVCLUSTERCODE

SELECT DISTINCT DELIVERYNOTENO||'~'||CLUSTERCODE DELIVERYNOTENO, TO_CHAR(EFFECTIVEDATE, 'DD/MM/YYYY') EFFECTIVEDATE, 
CLUSTERCODE, AREACODE, FRUITCODE FROM PRODDRYSEEDSDESPATCH
  WHERE COMPANYCODE='JT0069'
    --AND DIVISIONCODE=<<DIVISIONCODE>>
--    AND SEASONCODE=<<SEASONCODE>>
    AND RECVNOTENO IS NULL
  ORDER BY DELIVERYNOTENO


---------------------------------------------------------------------------------------------

exec prc_diff_deduction('JT0069','0006','01/04/2020','30/04/2020')





---------------------------------------------------------------------------------------------

INSERT INTO GTT_DIFF_DEDUCTION(COMPANYCODE,DIVISIONCODE,COMPANYNAME,DIVISIONNAME,TOKENNO,EMPLOYEENAME,WORKERSERIAL,COMPONENTCODE,ASSIGNMENT,PAYSHEET,REPORTHEADER) 


SELECT A.COMPANYCODE,A.DIVISIONCODE,COMPANYNAME,DIVISIONNAME,A.TOKENNO,EMPLOYEENAME, A.WORKERSERIAL,'TEMP_DED' AS COMPONENTCODE,sum(B.ASSIGNMENT) AS ASSIGNMENT,NVL(C.PAYSHEET,0) AS PAYSHEET ,'Unrealise Statement' FROM GPSCOMPONENTASSIGNMENT A,
(
  SELECT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, MAX(EFFECTIVEDATE) EFFECTIVEDATE  
  ,CASE WHEN TRANSACTIONTYPE='ATTENDANCE' THEN NVL(SUM(NVL(TEMP_DED,0)),0) ELSE NVL(TEMP_DED,0) END ASSIGNMENT
  FROM GPSCOMPONENTASSIGNMENT
  WHERE COMPANYCODE='JT0069' AND DIVISIONCODE='0006'
  AND EFFECTIVEDATE >=TO_DATE('01/04/2020','DD/MM/YYYY')
  AND EFFECTIVEDATE <=TO_DATE('30/04/2020','DD/MM/YYYY')
  AND TEMP_DED >0
  GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TRANSACTIONTYPE,NVL(TEMP_DED,0)
) B,
(
  SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TEMP_DED AS PAYSHEET FROM GPSPAYSHEETDETAILS
  WHERE COMPANYCODE='JT0069'
  AND DIVISIONCODE='0006'
  AND PERIODFROM=TO_DATE('01/04/2020','DD/MM/YYYY')
  AND PERIODTO=TO_DATE('30/04/2020','DD/MM/YYYY')
  AND TEMP_DED >0
) C,GPSEMPLOYEEMAST EMP,COMPANYMAST COM,DIVISIONMASTER DIV
WHERE A.COMPANYCODE = B.COMPANYCODE 
 AND A.DIVISIONCODE=B.DIVISIONCODE 
 AND A.WORKERSERIAL = B.WORKERSERIAL
 AND A.EFFECTIVEDATE=B.EFFECTIVEDATE
 AND A.COMPANYCODE = C.COMPANYCODE (+)
 AND A.DIVISIONCODE=C.DIVISIONCODE (+)
 AND A.WORKERSERIAL = C.WORKERSERIAL (+)
 AND A.COMPANYCODE = EMP.COMPANYCODE
 AND A.DIVISIONCODE=EMP.DIVISIONCODE
 AND A.WORKERSERIAL = EMP.WORKERSERIAL 
 AND A.COMPANYCODE = COM.COMPANYCODE
 AND A.DIVISIONCODE=DIV.DIVISIONCODE
 AND A.COMPANYCODE = DIV.COMPANYCODE
 AND A.COMPANYCODE='JT0069' 
 AND B.DIVISIONCODE='0006'
 AND A.EFFECTIVEDATE >=TO_DATE('01/04/2020','DD/MM/YYYY')
 AND A.EFFECTIVEDATE <=TO_DATE('30/04/2020','DD/MM/YYYY')
 AND TEMP_DED >0
GROUP BY A.COMPANYCODE,A.DIVISIONCODE,COMPANYNAME,DIVISIONNAME,A.TOKENNO,EMPLOYEENAME, A.WORKERSERIAL, PAYSHEET
 having nvl(SUM(nvl(B.ASSIGNMENT,0)),0) <> NVL(C.PAYSHEET,0)
ORDER BY A.WORKERSERIAL

INSERT INTO GTT_DIFF_DEDUCTION(COMPANYCODE,DIVISIONCODE,COMPANYNAME,DIVISIONNAME,TOKENNO,EMPLOYEENAME,WORKERSERIAL,COMPONENTCODE,ASSIGNMENT,PAYSHEET,REPORTHEADER) SELECT A.COMPANYCODE,A.DIVISIONCODE,COMPANYNAME,DIVISIONNAME,A.TOKENNO,EMPLOYEENAME, A.WORKERSERIAL,'OTHER_DED' AS COMPONENTCODE,sum(B.ASSIGNMENT) AS ASSIGNMENT,NVL(C.PAYSHEET,0) AS PAYSHEET ,'Unrealise Statement' FROM GPSCOMPONENTASSIGNMENT A,
(
  SELECT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, MAX(EFFECTIVEDATE) EFFECTIVEDATE  
  ,CASE WHEN TRANSACTIONTYPE='ATTENDANCE' THEN NVL(SUM(NVL(OTHER_DED,0)),0) ELSE NVL(OTHER_DED,0) END ASSIGNMENT
  FROM GPSCOMPONENTASSIGNMENT
  WHERE COMPANYCODE='JT0069' AND DIVISIONCODE='0006'
  AND EFFECTIVEDATE >=TO_DATE('01/04/2020','DD/MM/YYYY')
  AND EFFECTIVEDATE <=TO_DATE('30/04/2020','DD/MM/YYYY')
  AND OTHER_DED >0
  GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TRANSACTIONTYPE,NVL(OTHER_DED,0)
) B,
(
  SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL,OTHER_DED AS PAYSHEET FROM GPSPAYSHEETDETAILS
  WHERE COMPANYCODE='JT0069'
  AND DIVISIONCODE='0006'
  AND PERIODFROM=TO_DATE('01/04/2020','DD/MM/YYYY')
  AND PERIODTO=TO_DATE('30/04/2020','DD/MM/YYYY')
  AND OTHER_DED >0
) C,GPSEMPLOYEEMAST EMP,COMPANYMAST COM,DIVISIONMASTER DIV
WHERE A.COMPANYCODE = B.COMPANYCODE 
 AND A.DIVISIONCODE=B.DIVISIONCODE 
 AND A.WORKERSERIAL = B.WORKERSERIAL
 AND A.EFFECTIVEDATE=B.EFFECTIVEDATE
 AND A.COMPANYCODE = C.COMPANYCODE (+)
 AND A.DIVISIONCODE=C.DIVISIONCODE (+)
 AND A.WORKERSERIAL = C.WORKERSERIAL (+)
 AND A.COMPANYCODE = EMP.COMPANYCODE
 AND A.DIVISIONCODE=EMP.DIVISIONCODE
 AND A.WORKERSERIAL = EMP.WORKERSERIAL 
 AND A.COMPANYCODE = COM.COMPANYCODE
 AND A.DIVISIONCODE=DIV.DIVISIONCODE
 AND A.COMPANYCODE = DIV.COMPANYCODE
 AND A.COMPANYCODE='JT0069' 
 AND B.DIVISIONCODE='0006'
 AND A.EFFECTIVEDATE >=TO_DATE('01/04/2020','DD/MM/YYYY')
 AND A.EFFECTIVEDATE <=TO_DATE('30/04/2020','DD/MM/YYYY')
 AND OTHER_DED >0
GROUP BY A.COMPANYCODE,A.DIVISIONCODE,COMPANYNAME,DIVISIONNAME,A.TOKENNO,EMPLOYEENAME, A.WORKERSERIAL, PAYSHEET
 having nvl(SUM(nvl(B.ASSIGNMENT,0)),0) <> NVL(C.PAYSHEET,0)
ORDER BY A.WORKERSERIAL

INSERT INTO GTT_DIFF_DEDUCTION(COMPANYCODE,DIVISIONCODE,COMPANYNAME,DIVISIONNAME,TOKENNO,EMPLOYEENAME,WORKERSERIAL,COMPONENTCODE,ASSIGNMENT,PAYSHEET,REPORTHEADER) SELECT A.COMPANYCODE,A.DIVISIONCODE,COMPANYNAME,DIVISIONNAME,A.TOKENNO,EMPLOYEENAME, A.WORKERSERIAL,'PTAX' AS COMPONENTCODE,sum(B.ASSIGNMENT) AS ASSIGNMENT,NVL(C.PAYSHEET,0) AS PAYSHEET ,'Unrealise Statement' FROM GPSCOMPONENTASSIGNMENT A,
(
  SELECT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, MAX(EFFECTIVEDATE) EFFECTIVEDATE  
  ,CASE WHEN TRANSACTIONTYPE='ATTENDANCE' THEN NVL(SUM(NVL(PTAX,0)),0) ELSE NVL(PTAX,0) END ASSIGNMENT
  FROM GPSCOMPONENTASSIGNMENT
  WHERE COMPANYCODE='JT0069' AND DIVISIONCODE='0006'
  AND EFFECTIVEDATE >=TO_DATE('01/04/2020','DD/MM/YYYY')
  AND EFFECTIVEDATE <=TO_DATE('30/04/2020','DD/MM/YYYY')
  AND PTAX >0
  GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TRANSACTIONTYPE,NVL(PTAX,0)
) B,
(
  SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL,PTAX AS PAYSHEET FROM GPSPAYSHEETDETAILS
  WHERE COMPANYCODE='JT0069'
  AND DIVISIONCODE='0006'
  AND PERIODFROM=TO_DATE('01/04/2020','DD/MM/YYYY')
  AND PERIODTO=TO_DATE('30/04/2020','DD/MM/YYYY')
  AND PTAX >0
) C,GPSEMPLOYEEMAST EMP,COMPANYMAST COM,DIVISIONMASTER DIV
WHERE A.COMPANYCODE = B.COMPANYCODE 
 AND A.DIVISIONCODE=B.DIVISIONCODE 
 AND A.WORKERSERIAL = B.WORKERSERIAL
 AND A.EFFECTIVEDATE=B.EFFECTIVEDATE
 AND A.COMPANYCODE = C.COMPANYCODE (+)
 AND A.DIVISIONCODE=C.DIVISIONCODE (+)
 AND A.WORKERSERIAL = C.WORKERSERIAL (+)
 AND A.COMPANYCODE = EMP.COMPANYCODE
 AND A.DIVISIONCODE=EMP.DIVISIONCODE
 AND A.WORKERSERIAL = EMP.WORKERSERIAL 
 AND A.COMPANYCODE = COM.COMPANYCODE
 AND A.DIVISIONCODE=DIV.DIVISIONCODE
 AND A.COMPANYCODE = DIV.COMPANYCODE
 AND A.COMPANYCODE='JT0069' 
 AND B.DIVISIONCODE='0006'
 AND A.EFFECTIVEDATE >=TO_DATE('01/04/2020','DD/MM/YYYY')
 AND A.EFFECTIVEDATE <=TO_DATE('30/04/2020','DD/MM/YYYY')
 AND PTAX >0
GROUP BY A.COMPANYCODE,A.DIVISIONCODE,COMPANYNAME,DIVISIONNAME,A.TOKENNO,EMPLOYEENAME, A.WORKERSERIAL, PAYSHEET
 having nvl(SUM(nvl(B.ASSIGNMENT,0)),0) <> NVL(C.PAYSHEET,0)
ORDER BY A.WORKERSERIAL

INSERT INTO GTT_DIFF_DEDUCTION(COMPANYCODE,DIVISIONCODE,COMPANYNAME,DIVISIONNAME,TOKENNO,EMPLOYEENAME,WORKERSERIAL,COMPONENTCODE,ASSIGNMENT,PAYSHEET,REPORTHEADER) SELECT A.COMPANYCODE,A.DIVISIONCODE,COMPANYNAME,DIVISIONNAME,A.TOKENNO,EMPLOYEENAME, A.WORKERSERIAL,'DED_ITAX' AS COMPONENTCODE,sum(B.ASSIGNMENT) AS ASSIGNMENT,NVL(C.PAYSHEET,0) AS PAYSHEET ,'Unrealise Statement' FROM GPSCOMPONENTASSIGNMENT A,
(
  SELECT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, MAX(EFFECTIVEDATE) EFFECTIVEDATE  
  ,CASE WHEN TRANSACTIONTYPE='ATTENDANCE' THEN NVL(SUM(NVL(DED_ITAX,0)),0) ELSE NVL(DED_ITAX,0) END ASSIGNMENT
  FROM GPSCOMPONENTASSIGNMENT
  WHERE COMPANYCODE='JT0069' AND DIVISIONCODE='0006'
  AND EFFECTIVEDATE >=TO_DATE('01/04/2020','DD/MM/YYYY')
  AND EFFECTIVEDATE <=TO_DATE('30/04/2020','DD/MM/YYYY')
  AND DED_ITAX >0
  GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TRANSACTIONTYPE,NVL(DED_ITAX,0)
) B,
(
  SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL,DED_ITAX AS PAYSHEET FROM GPSPAYSHEETDETAILS
  WHERE COMPANYCODE='JT0069'
  AND DIVISIONCODE='0006'
  AND PERIODFROM=TO_DATE('01/04/2020','DD/MM/YYYY')
  AND PERIODTO=TO_DATE('30/04/2020','DD/MM/YYYY')
  AND DED_ITAX >0
) C,GPSEMPLOYEEMAST EMP,COMPANYMAST COM,DIVISIONMASTER DIV
WHERE A.COMPANYCODE = B.COMPANYCODE 
 AND A.DIVISIONCODE=B.DIVISIONCODE 
 AND A.WORKERSERIAL = B.WORKERSERIAL
 AND A.EFFECTIVEDATE=B.EFFECTIVEDATE
 AND A.COMPANYCODE = C.COMPANYCODE (+)
 AND A.DIVISIONCODE=C.DIVISIONCODE (+)
 AND A.WORKERSERIAL = C.WORKERSERIAL (+)
 AND A.COMPANYCODE = EMP.COMPANYCODE
 AND A.DIVISIONCODE=EMP.DIVISIONCODE
 AND A.WORKERSERIAL = EMP.WORKERSERIAL 
 AND A.COMPANYCODE = COM.COMPANYCODE
 AND A.DIVISIONCODE=DIV.DIVISIONCODE
 AND A.COMPANYCODE = DIV.COMPANYCODE
 AND A.COMPANYCODE='JT0069' 
 AND B.DIVISIONCODE='0006'
 AND A.EFFECTIVEDATE >=TO_DATE('01/04/2020','DD/MM/YYYY')
 AND A.EFFECTIVEDATE <=TO_DATE('30/04/2020','DD/MM/YYYY')
 AND DED_ITAX >0
GROUP BY A.COMPANYCODE,A.DIVISIONCODE,COMPANYNAME,DIVISIONNAME,A.TOKENNO,EMPLOYEENAME, A.WORKERSERIAL, PAYSHEET
 having nvl(SUM(nvl(B.ASSIGNMENT,0)),0) <> NVL(C.PAYSHEET,0)
ORDER BY A.WORKERSERIAL

INSERT INTO GTT_DIFF_DEDUCTION(COMPANYCODE,DIVISIONCODE,COMPANYNAME,DIVISIONNAME,TOKENNO,EMPLOYEENAME,WORKERSERIAL,COMPONENTCODE,ASSIGNMENT,PAYSHEET,REPORTHEADER) 

SELECT A.COMPANYCODE,A.DIVISIONCODE,COMPANYNAME,DIVISIONNAME,A.TOKENNO,EMPLOYEENAME, A.WORKERSERIAL,'DED_ELEC' AS COMPONENTCODE,sum(B.ASSIGNMENT) AS ASSIGNMENT,NVL(C.PAYSHEET,0) AS PAYSHEET ,'Unrealise Statement' FROM GPSCOMPONENTASSIGNMENT A,
(
  SELECT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, MAX(EFFECTIVEDATE) EFFECTIVEDATE  
  ,CASE WHEN TRANSACTIONTYPE='ATTENDANCE' THEN NVL(SUM(NVL(DED_ELEC,0)),0) ELSE NVL(DED_ELEC,0) END ASSIGNMENT
  FROM GPSCOMPONENTASSIGNMENT
  WHERE COMPANYCODE='JT0069' AND DIVISIONCODE='0006'
  AND EFFECTIVEDATE >=TO_DATE('01/04/2020','DD/MM/YYYY')
  AND EFFECTIVEDATE <=TO_DATE('30/04/2020','DD/MM/YYYY')
  AND DED_ELEC >0
  GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TRANSACTIONTYPE,NVL(DED_ELEC,0)
) B,
(
  SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL,DED_ELEC AS PAYSHEET FROM GPSPAYSHEETDETAILS
  WHERE COMPANYCODE='JT0069'
  AND DIVISIONCODE='0006'
  AND PERIODFROM=TO_DATE('01/04/2020','DD/MM/YYYY')
  AND PERIODTO=TO_DATE('30/04/2020','DD/MM/YYYY')
  AND DED_ELEC >0
) C,GPSEMPLOYEEMAST EMP,COMPANYMAST COM,DIVISIONMASTER DIV
WHERE A.COMPANYCODE = B.COMPANYCODE 
 AND A.DIVISIONCODE=B.DIVISIONCODE 
 AND A.WORKERSERIAL = B.WORKERSERIAL
 AND A.EFFECTIVEDATE=B.EFFECTIVEDATE
 AND A.COMPANYCODE = C.COMPANYCODE (+)
 AND A.DIVISIONCODE=C.DIVISIONCODE (+)
 AND A.WORKERSERIAL = C.WORKERSERIAL (+)
 AND A.COMPANYCODE = EMP.COMPANYCODE
 AND A.DIVISIONCODE=EMP.DIVISIONCODE
 AND A.WORKERSERIAL = EMP.WORKERSERIAL 
 AND A.COMPANYCODE = COM.COMPANYCODE
 AND A.DIVISIONCODE=DIV.DIVISIONCODE
 AND A.COMPANYCODE = DIV.COMPANYCODE
 AND A.COMPANYCODE='JT0069' 
 AND B.DIVISIONCODE='0006'
 AND A.EFFECTIVEDATE >=TO_DATE('01/04/2020','DD/MM/YYYY')
 AND A.EFFECTIVEDATE <=TO_DATE('30/04/2020','DD/MM/YYYY')
 AND DED_ELEC >0
GROUP BY A.COMPANYCODE,A.DIVISIONCODE,COMPANYNAME,DIVISIONNAME,A.TOKENNO,EMPLOYEENAME, A.WORKERSERIAL, PAYSHEET
 having nvl(SUM(nvl(B.ASSIGNMENT,0)),0) <> NVL(C.PAYSHEET,0)
ORDER BY A.WORKERSERIAL

INSERT INTO GTT_DIFF_DEDUCTION(COMPANYCODE,DIVISIONCODE,COMPANYNAME,DIVISIONNAME,TOKENNO,EMPLOYEENAME,WORKERSERIAL,COMPONENTCODE,ASSIGNMENT,PAYSHEET,REPORTHEADER) SELECT A.COMPANYCODE,A.DIVISIONCODE,COMPANYNAME,DIVISIONNAME,A.TOKENNO,EMPLOYEENAME, A.WORKERSERIAL,'DED_LIC' AS COMPONENTCODE,sum(B.ASSIGNMENT) AS ASSIGNMENT,NVL(C.PAYSHEET,0) AS PAYSHEET ,'Unrealise Statement' FROM GPSCOMPONENTASSIGNMENT A,
(
  SELECT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, MAX(EFFECTIVEDATE) EFFECTIVEDATE  
  ,CASE WHEN TRANSACTIONTYPE='ATTENDANCE' THEN NVL(SUM(NVL(DED_LIC,0)),0) ELSE NVL(DED_LIC,0) END ASSIGNMENT
  FROM GPSCOMPONENTASSIGNMENT
  WHERE COMPANYCODE='JT0069' AND DIVISIONCODE='0006'
  AND EFFECTIVEDATE >=TO_DATE('01/04/2020','DD/MM/YYYY')
  AND EFFECTIVEDATE <=TO_DATE('30/04/2020','DD/MM/YYYY')
  AND DED_LIC >0
  GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TRANSACTIONTYPE,NVL(DED_LIC,0)
) B,
(
  SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL,DED_LIC AS PAYSHEET FROM GPSPAYSHEETDETAILS
  WHERE COMPANYCODE='JT0069'
  AND DIVISIONCODE='0006'
  AND PERIODFROM=TO_DATE('01/04/2020','DD/MM/YYYY')
  AND PERIODTO=TO_DATE('30/04/2020','DD/MM/YYYY')
  AND DED_LIC >0
) C,GPSEMPLOYEEMAST EMP,COMPANYMAST COM,DIVISIONMASTER DIV
WHERE A.COMPANYCODE = B.COMPANYCODE 
 AND A.DIVISIONCODE=B.DIVISIONCODE 
 AND A.WORKERSERIAL = B.WORKERSERIAL
 AND A.EFFECTIVEDATE=B.EFFECTIVEDATE
 AND A.COMPANYCODE = C.COMPANYCODE (+)
 AND A.DIVISIONCODE=C.DIVISIONCODE (+)
 AND A.WORKERSERIAL = C.WORKERSERIAL (+)
 AND A.COMPANYCODE = EMP.COMPANYCODE
 AND A.DIVISIONCODE=EMP.DIVISIONCODE
 AND A.WORKERSERIAL = EMP.WORKERSERIAL 
 AND A.COMPANYCODE = COM.COMPANYCODE
 AND A.DIVISIONCODE=DIV.DIVISIONCODE
 AND A.COMPANYCODE = DIV.COMPANYCODE
 AND A.COMPANYCODE='JT0069' 
 AND B.DIVISIONCODE='0006'
 AND A.EFFECTIVEDATE >=TO_DATE('01/04/2020','DD/MM/YYYY')
 AND A.EFFECTIVEDATE <=TO_DATE('30/04/2020','DD/MM/YYYY')
 AND DED_LIC >0
GROUP BY A.COMPANYCODE,A.DIVISIONCODE,COMPANYNAME,DIVISIONNAME,A.TOKENNO,EMPLOYEENAME, A.WORKERSERIAL, PAYSHEET
 having nvl(SUM(nvl(B.ASSIGNMENT,0)),0) <> NVL(C.PAYSHEET,0)
ORDER BY A.WORKERSERIAL

INSERT INTO GTT_DIFF_DEDUCTION(COMPANYCODE,DIVISIONCODE,COMPANYNAME,DIVISIONNAME,TOKENNO,EMPLOYEENAME,WORKERSERIAL,COMPONENTCODE,ASSIGNMENT,PAYSHEET,REPORTHEADER) SELECT A.COMPANYCODE,A.DIVISIONCODE,COMPANYNAME,DIVISIONNAME,A.TOKENNO,EMPLOYEENAME, A.WORKERSERIAL,'DED_WELFARE' AS COMPONENTCODE,sum(B.ASSIGNMENT) AS ASSIGNMENT,NVL(C.PAYSHEET,0) AS PAYSHEET ,'Unrealise Statement' FROM GPSCOMPONENTASSIGNMENT A,
(
  SELECT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, MAX(EFFECTIVEDATE) EFFECTIVEDATE  
  ,CASE WHEN TRANSACTIONTYPE='ATTENDANCE' THEN NVL(SUM(NVL(DED_WELFARE,0)),0) ELSE NVL(DED_WELFARE,0) END ASSIGNMENT
  FROM GPSCOMPONENTASSIGNMENT
  WHERE COMPANYCODE='JT0069' AND DIVISIONCODE='0006'
  AND EFFECTIVEDATE >=TO_DATE('01/04/2020','DD/MM/YYYY')
  AND EFFECTIVEDATE <=TO_DATE('30/04/2020','DD/MM/YYYY')
  AND DED_WELFARE >0
  GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TRANSACTIONTYPE,NVL(DED_WELFARE,0)
) B,
(
  SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL,DED_WELFARE AS PAYSHEET FROM GPSPAYSHEETDETAILS
  WHERE COMPANYCODE='JT0069'
  AND DIVISIONCODE='0006'
  AND PERIODFROM=TO_DATE('01/04/2020','DD/MM/YYYY')
  AND PERIODTO=TO_DATE('30/04/2020','DD/MM/YYYY')
  AND DED_WELFARE >0
) C,GPSEMPLOYEEMAST EMP,COMPANYMAST COM,DIVISIONMASTER DIV
WHERE A.COMPANYCODE = B.COMPANYCODE 
 AND A.DIVISIONCODE=B.DIVISIONCODE 
 AND A.WORKERSERIAL = B.WORKERSERIAL
 AND A.EFFECTIVEDATE=B.EFFECTIVEDATE
 AND A.COMPANYCODE = C.COMPANYCODE (+)
 AND A.DIVISIONCODE=C.DIVISIONCODE (+)
 AND A.WORKERSERIAL = C.WORKERSERIAL (+)
 AND A.COMPANYCODE = EMP.COMPANYCODE
 AND A.DIVISIONCODE=EMP.DIVISIONCODE
 AND A.WORKERSERIAL = EMP.WORKERSERIAL 
 AND A.COMPANYCODE = COM.COMPANYCODE
 AND A.DIVISIONCODE=DIV.DIVISIONCODE
 AND A.COMPANYCODE = DIV.COMPANYCODE
 AND A.COMPANYCODE='JT0069' 
 AND B.DIVISIONCODE='0006'
 AND A.EFFECTIVEDATE >=TO_DATE('01/04/2020','DD/MM/YYYY')
 AND A.EFFECTIVEDATE <=TO_DATE('30/04/2020','DD/MM/YYYY')
 AND DED_WELFARE >0
GROUP BY A.COMPANYCODE,A.DIVISIONCODE,COMPANYNAME,DIVISIONNAME,A.TOKENNO,EMPLOYEENAME, A.WORKERSERIAL, PAYSHEET
 having nvl(SUM(nvl(B.ASSIGNMENT,0)),0) <> NVL(C.PAYSHEET,0)
ORDER BY A.WORKERSERIAL

INSERT INTO GTT_DIFF_DEDUCTION(COMPANYCODE,DIVISIONCODE,COMPANYNAME,DIVISIONNAME,TOKENNO,EMPLOYEENAME,WORKERSERIAL,COMPONENTCODE,ASSIGNMENT,PAYSHEET,REPORTHEADER) SELECT A.COMPANYCODE,A.DIVISIONCODE,COMPANYNAME,DIVISIONNAME,A.TOKENNO,EMPLOYEENAME, A.WORKERSERIAL,'DED_UNION' AS COMPONENTCODE,sum(B.ASSIGNMENT) AS ASSIGNMENT,NVL(C.PAYSHEET,0) AS PAYSHEET ,'Unrealise Statement' FROM GPSCOMPONENTASSIGNMENT A,
(
  SELECT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, MAX(EFFECTIVEDATE) EFFECTIVEDATE  
  ,CASE WHEN TRANSACTIONTYPE='ATTENDANCE' THEN NVL(SUM(NVL(DED_UNION,0)),0) ELSE NVL(DED_UNION,0) END ASSIGNMENT
  FROM GPSCOMPONENTASSIGNMENT
  WHERE COMPANYCODE='JT0069' AND DIVISIONCODE='0006'
  AND EFFECTIVEDATE >=TO_DATE('01/04/2020','DD/MM/YYYY')
  AND EFFECTIVEDATE <=TO_DATE('30/04/2020','DD/MM/YYYY')
  AND DED_UNION >0
  GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TRANSACTIONTYPE,NVL(DED_UNION,0)
) B,
(
  SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL,DED_UNION AS PAYSHEET FROM GPSPAYSHEETDETAILS
  WHERE COMPANYCODE='JT0069'
  AND DIVISIONCODE='0006'
  AND PERIODFROM=TO_DATE('01/04/2020','DD/MM/YYYY')
  AND PERIODTO=TO_DATE('30/04/2020','DD/MM/YYYY')
  AND DED_UNION >0
) C,GPSEMPLOYEEMAST EMP,COMPANYMAST COM,DIVISIONMASTER DIV
WHERE A.COMPANYCODE = B.COMPANYCODE 
 AND A.DIVISIONCODE=B.DIVISIONCODE 
 AND A.WORKERSERIAL = B.WORKERSERIAL
 AND A.EFFECTIVEDATE=B.EFFECTIVEDATE
 AND A.COMPANYCODE = C.COMPANYCODE (+)
 AND A.DIVISIONCODE=C.DIVISIONCODE (+)
 AND A.WORKERSERIAL = C.WORKERSERIAL (+)
 AND A.COMPANYCODE = EMP.COMPANYCODE
 AND A.DIVISIONCODE=EMP.DIVISIONCODE
 AND A.WORKERSERIAL = EMP.WORKERSERIAL 
 AND A.COMPANYCODE = COM.COMPANYCODE
 AND A.DIVISIONCODE=DIV.DIVISIONCODE
 AND A.COMPANYCODE = DIV.COMPANYCODE
 AND A.COMPANYCODE='JT0069' 
 AND B.DIVISIONCODE='0006'
 AND A.EFFECTIVEDATE >=TO_DATE('01/04/2020','DD/MM/YYYY')
 AND A.EFFECTIVEDATE <=TO_DATE('30/04/2020','DD/MM/YYYY')
 AND DED_UNION >0
GROUP BY A.COMPANYCODE,A.DIVISIONCODE,COMPANYNAME,DIVISIONNAME,A.TOKENNO,EMPLOYEENAME, A.WORKERSERIAL, PAYSHEET
 having nvl(SUM(nvl(B.ASSIGNMENT,0)),0) <> NVL(C.PAYSHEET,0)
ORDER BY A.WORKERSERIAL




---------------------------------------------------------------------------------------------


select tokenno, count(tokenno) ct from (

SELECT A.COMPANYCODE,A.DIVISIONCODE,COMPANYNAME,DIVISIONNAME,A.TOKENNO,EMPLOYEENAME, A.WORKERSERIAL,'DED_ELEC' AS COMPONENTCODE,
sum(B.ASSIGNMENT) AS ASSIGNMENT,NVL(C.PAYSHEET,0) AS PAYSHEET ,'Unrealise Statement' FROM GPSCOMPONENTASSIGNMENT A,
(
  SELECT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, MAX(EFFECTIVEDATE) EFFECTIVEDATE  
  ,CASE WHEN TRANSACTIONTYPE='ATTENDANCE' THEN NVL(SUM(NVL(DED_ELEC,0)),0) ELSE NVL(DED_ELEC,0) END ASSIGNMENT
  FROM GPSCOMPONENTASSIGNMENT
  WHERE COMPANYCODE='JT0069' AND DIVISIONCODE='0006'
  AND EFFECTIVEDATE >=TO_DATE('01/04/2020','DD/MM/YYYY')
  AND EFFECTIVEDATE <=TO_DATE('30/04/2020','DD/MM/YYYY')
  AND DED_ELEC >0
  GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TRANSACTIONTYPE,NVL(DED_ELEC,0)
) B,
(
  SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL,DED_ELEC AS PAYSHEET FROM GPSPAYSHEETDETAILS
  WHERE COMPANYCODE='JT0069'
  AND DIVISIONCODE='0006'
  AND PERIODFROM=TO_DATE('01/04/2020','DD/MM/YYYY')
  AND PERIODTO=TO_DATE('30/04/2020','DD/MM/YYYY')
  AND DED_ELEC >0
) C,GPSEMPLOYEEMAST EMP,COMPANYMAST COM,DIVISIONMASTER DIV
WHERE A.COMPANYCODE = B.COMPANYCODE 
 AND A.DIVISIONCODE=B.DIVISIONCODE 
 AND A.WORKERSERIAL = B.WORKERSERIAL
 AND A.EFFECTIVEDATE=B.EFFECTIVEDATE
 AND A.COMPANYCODE = C.COMPANYCODE (+)
 AND A.DIVISIONCODE=C.DIVISIONCODE (+)
 AND A.WORKERSERIAL = C.WORKERSERIAL (+)
 AND A.COMPANYCODE = EMP.COMPANYCODE
 AND A.DIVISIONCODE=EMP.DIVISIONCODE
 AND A.WORKERSERIAL = EMP.WORKERSERIAL 
 AND A.COMPANYCODE = COM.COMPANYCODE
 AND A.DIVISIONCODE=DIV.DIVISIONCODE
 AND A.COMPANYCODE = DIV.COMPANYCODE
 AND A.COMPANYCODE='JT0069' 
 AND B.DIVISIONCODE='0006'
 AND A.EFFECTIVEDATE >=TO_DATE('01/04/2020','DD/MM/YYYY')
 AND A.EFFECTIVEDATE <=TO_DATE('30/04/2020','DD/MM/YYYY')
 AND DED_ELEC >0
GROUP BY A.COMPANYCODE,A.DIVISIONCODE,COMPANYNAME,DIVISIONNAME,A.TOKENNO,EMPLOYEENAME, A.WORKERSERIAL, PAYSHEET
-- having nvl(SUM(nvl(B.ASSIGNMENT,0)),0) <> NVL(C.PAYSHEET,0)
ORDER BY A.WORKERSERIAL

)
group by tokenno



select sum(ASSIGNMENT) from (
SELECT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, MAX(EFFECTIVEDATE) EFFECTIVEDATE  
  ,CASE WHEN TRANSACTIONTYPE='ATTENDANCE' THEN 0 ELSE NVL(DED_ELEC,0) END ASSIGNMENT
  FROM GPSCOMPONENTASSIGNMENT
  WHERE COMPANYCODE='JT0069' AND DIVISIONCODE='0006'
  AND EFFECTIVEDATE >=TO_DATE('01/04/2020','DD/MM/YYYY')
  AND EFFECTIVEDATE <=TO_DATE('30/04/2020','DD/MM/YYYY')
  AND DED_ELEC >0
  GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TRANSACTIONTYPE,NVL(DED_ELEC,0)
  )




select WORKERSERIAL, count(WORKERSERIAL), sum(assignment) from(
  SELECT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, MAX(EFFECTIVEDATE) EFFECTIVEDATE  
  ,CASE WHEN TRANSACTIONTYPE='ATTENDANCE' THEN NVL(SUM(NVL(DED_ELEC,0)),0) ELSE NVL(DED_ELEC,0) END ASSIGNMENT
  FROM GPSCOMPONENTASSIGNMENT
  WHERE COMPANYCODE='JT0069' AND DIVISIONCODE='0006'
  AND EFFECTIVEDATE >=TO_DATE('01/04/2020','DD/MM/YYYY')
  AND EFFECTIVEDATE <=TO_DATE('30/04/2020','DD/MM/YYYY')
  AND DED_ELEC >0
  GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TRANSACTIONTYPE,NVL(DED_ELEC,0)
  )
  group by WORKERSERIAL
  
  having count(WORKERSERIAL) > 1
  
  
   SELECT *
  FROM GPSCOMPONENTASSIGNMENT
  WHERE COMPANYCODE='JT0069' AND DIVISIONCODE='0006'
  AND EFFECTIVEDATE >=TO_DATE('01/04/2020','DD/MM/YYYY')
  AND EFFECTIVEDATE <=TO_DATE('30/04/2020','DD/MM/YYYY')
  AND DED_ELEC >0
  and workerserial='0009584'
  
  
  GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL,TRANSACTIONTYPE,NVL(DED_ELEC,0)
  
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

delete from gps_error_log

select * from gps_error_log

exec PROC_RPT_PAYSLIP_CDM('DY0088','Y01','2020-2021','01/03/2020','31/03/2020','''01''','','ENGLISH')

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------


exec PROC_WAGES_REGISTER_JIA('HP0072','0001','15/06/2020','21/06/2020','''11''')

---------------------------------------------------------------------------------------------

INSERT INTO GTT_WAGES_REGISTER_JIA 


    SELECT ROWNUM ROWNUMBER, XXX.*    
      FROM (     
              SELECT A.TOKENNO EMP_CODE, A.PFNO, A.NAME, A.NETPAY, B.SK_DAYS, 
                     B.MT_DAYS, B.AL_DAYS, B.WP_DAYS, B.HOLIDAYS, B.PRESENTDAYS,   
                     D.OCC1,D.OCC2,D.OCC3,D.OCC4,D.OCC5,D.OCC6,D.OCC7,D.WGS1,D.WGS2,D.WGS3,D.WGS4,D.WGS5,D.WGS6,D.WGS7,  
                     NVL(E.INCENTIVE, 0) INCENTIVE, NVL(E.SPL_ALLOW, 0) SPL_ALLOW, NVL(E.SPRAY_ALLOW, 0) SPRAY_ALLOW,  
                     NVL(E.FACT_ALOW, 0) FACT_ALOW, NVL(E.EXTRA, 0) EXTRA, NVL(E.ATTN_ALLOW, 0) ATTN_ALLOW,  
                     NVL(E.GROSSWAGES, 0) GROSSWAGES, NVL(E.COINBF, 0) COINBF, NVL(E.PF_E, 0) PF_E, NVL(E.PTAX, 0) PTAX,   
                     NVL(E.ADVANCE, 0) ADVANCE, NVL(E.PF_LOAN, 0) PF_LOAN, NVL(E.PF_INT, 0) PF_INT,  
                     NVL(E.MD_LOAN, 0) MD_LOAN, NVL(E.RAT_DED, 0) RAT_DED, NVL(E.LIC_DED, 0) LIC_DED, NVL(E.DED_ELEC, 0) DED_ELEC,  
                     NVL(E.DED_WELFARE, 0) DED_WELFARE, NVL(E.DED_UNION, 0) DED_UNION,  
                     NVL(E.GROSSDEDN, 0) GROSSDEDN, NVL(E.COINCF, 0) COINCF,  
                     NULL COMPANYNAME, NULL DIVISIONNAME,  
                     '15/06/2020'||' To '||'21/06/2020'  PRINTEDDATE, 
                     TO_CHAR(SYSDATE, 'DD/MM/YYYY') RUNDATE, E.TOT_EARN EX1,  
                     E.TOT_DED EX2, NULL EX3, FN_NUM_TO_WORDS(A.NETPAY, 'RS') EX4, NULL EX5 ,0 PUJA 
                FROM (  
                      SELECT PSD.COMPANYCODE, PSD.DIVISIONCODE, PSD.TOKENNO, PSD.WORKERSERIAL,  
                             EM.PFNO, EM.EMPLOYEENAME NAME, NETSALARY NETPAY  
                        FROM GPSPAYSHEETDETAILS PSD, GPSEMPLOYEEMAST EM  
                       WHERE PSD.COMPANYCODE = EM.COMPANYCODE  
                         AND PSD.DIVISIONCODE = EM.DIVISIONCODE  
                         AND PSD.TOKENNO = EM.TOKENNO 
                         AND PSD.PERIODFROM >= TO_DATE('15/06/2020', 'DD/MM/YYYY')  
                         AND PSD.PERIODTO <= TO_DATE('21/06/2020', 'DD/MM/YYYY')  
                         AND PSD.COMPANYCODE = 'HP0072' 
                         AND PSD.DIVISIONCODE = '0001'  
                       ORDER BY TOKENNO  
                     ) A,  
                     (  
                      SELECT COMPANYCODE, DIVISIONCODE, TOKENNO, WORKERSERIAL, SUM(SK_DAYS) SK_DAYS, SUM(MT_DAYS) MT_DAYS, 
                             SUM(AL_DAYS) AL_DAYS, SUM(WP_DAYS) WP_DAYS, SUM(HOLIDAYS) HOLIDAYS, SUM(HAZIRA) PRESENTDAYS   
                        FROM (  
                              SELECT A.COMPANYCODE, A.DIVISIONCODE, A.TOKENNO, A.WORKERSERIAL, 
                                     CASE WHEN B.OCCUPATIONTYPE = 'SICK LEAVE' THEN HAZIRA ELSE 0 END SK_DAYS,  
                                     CASE WHEN B.OCCUPATIONTYPE = 'MATERNITY LEAVE' THEN HAZIRA ELSE 0 END MT_DAYS,  
                                     CASE WHEN B.OCCUPATIONTYPE = 'ANNUAL LEAVE' THEN HAZIRA ELSE 0 END AL_DAYS,  
                                     CASE WHEN B.OCCUPATIONTYPE IN ('ABSENT','SPECIAL LEAVE','SICK LEAVE WITHOUT PAY') THEN HAZIRA ELSE 0 END WP_DAYS,  
                                     CASE WHEN B.OCCUPATIONTYPE = 'PAID HOLIDAY' THEN HAZIRA ELSE 0 END HOLIDAYS,  
                                     CASE WHEN B.OCCUPATIONTYPE IN ('TUBE FILLING','PLUCKING','OTHERS') THEN HAZIRA ELSE 0 END PRESENTDAYS  
                                ,NVL(HAZIRA,0) HAZIRA 
                                FROM GPSATTENDANCEDETAILS A, (  
                                                             SELECT DISTINCT OCCUPATIONCODE,OCCUPATIONTYPE FROM GPSOCCUPATIONMAST  
                                                              WHERE COMPANYCODE = 'HP0072' 
                                                                AND DIVISIONCODE = '0001'  
                                                           ) B  
                               WHERE ATTENDANCEDATE >= TO_DATE('15/06/2020', 'DD/MM/YYYY')  
                                 AND ATTENDANCEDATE <= TO_DATE('21/06/2020', 'DD/MM/YYYY')  
                                 AND COMPANYCODE = 'HP0072' 
                                 AND DIVISIONCODE = '0001'  
                                 AND A.OCCUPATIONCODE = B.OCCUPATIONCODE  
                              )  
                       GROUP BY TOKENNO, WORKERSERIAL, COMPANYCODE, DIVISIONCODE  
                     ) B,  
                     (  
                       SELECT XX.COMPANYCODE,XX.DIVISIONCODE, XX.TOKENNO,XX.WORKERSERIAL,XX.ATTNBOOKCODE 
                       ,MAX(OCC1) OCC1,MAX(OCC2) OCC2,MAX(OCC3) OCC3,MAX(OCC4) OCC4,MAX(OCC5) OCC5,MAX(OCC6) OCC6,MAX(OCC7) OCC7  
                       ,MAX(WGS1) WGS1,MAX(WGS2) WGS2,MAX(WGS3) WGS3,MAX(WGS4) WGS4,MAX(WGS5) WGS5,MAX(WGS6) WGS6,MAX(WGS7) WGS7  
                       FROM  
                       (  
                       SELECT COMPANYCODE, DIVISIONCODE, TOKENNO, WORKERSERIAL ,ATTNBOOKCODE   
                       ,DECODE (TOTALOUTPUT, 0, OCCUPATIONCODE, TOTALOUTPUT) AS OCC1,'-' AS OCC2,'-' AS OCC3,'-' AS OCC4,'-' AS OCC5,'-' AS OCC6,'-' AS OCC7  
                       ,DAILYWAGES AS WGS1,0 AS WGS2,0 AS WGS3,0 AS WGS4,0 AS WGS5,0 AS WGS6,0 AS WGS7  
                       FROM GPSDAILYPAYSHEETDETAILS    
                       WHERE ATTENDANCEDATE >= TO_DATE('15/06/2020', 'DD/MM/YYYY') 
                       AND ATTENDANCEDATE <= TO_DATE('15/06/2020', 'DD/MM/YYYY')  
                       AND COMPANYCODE = 'HP0072' 
                       AND DIVISIONCODE = '0001'  
                       UNION ALL  
                       SELECT COMPANYCODE, DIVISIONCODE, TOKENNO, WORKERSERIAL ,ATTNBOOKCODE   
                       ,'-' AS OCC1,DECODE (TOTALOUTPUT, 0, OCCUPATIONCODE, TOTALOUTPUT) AS OCC2,'-' AS OCC3,'-' AS OCC4,'-' AS OCC5,'-' AS OCC6,'-' AS OCC7  
                       ,0 AS WGS1,DAILYWAGES AS WGS2,0 AS WGS3,0 AS WGS4,0 AS WGS5,0 AS WGS6,0 AS WGS7  
                       FROM GPSDAILYPAYSHEETDETAILS    
                       WHERE ATTENDANCEDATE >= TO_DATE('15/06/2020', 'DD/MM/YYYY') + 1 
                       AND ATTENDANCEDATE <= TO_DATE('15/06/2020', 'DD/MM/YYYY') + 1  
                       AND COMPANYCODE = 'HP0072' 
                       AND DIVISIONCODE = '0001'  
                       UNION ALL  
                       SELECT COMPANYCODE, DIVISIONCODE, TOKENNO, WORKERSERIAL ,ATTNBOOKCODE   
                       ,'-' AS OCC1,'-' AS OCC2,DECODE (TOTALOUTPUT, 0, OCCUPATIONCODE, TOTALOUTPUT) AS OCC3,'-' AS OCC4,'-' AS OCC5,'-' AS OCC6,'-' AS OCC7  
                       ,0 AS WGS1,0 AS WGS2,DAILYWAGES AS WGS3,0 AS WGS4,0 AS WGS5,0 AS WGS6,0 AS WGS7  
                       FROM GPSDAILYPAYSHEETDETAILS    
                       WHERE ATTENDANCEDATE >= TO_DATE('15/06/2020', 'DD/MM/YYYY') + 2 
                       AND ATTENDANCEDATE <= TO_DATE('15/06/2020', 'DD/MM/YYYY') + 2  
                       AND COMPANYCODE = 'HP0072' 
                       AND DIVISIONCODE = '0001'  
                       UNION ALL  
                       SELECT COMPANYCODE, DIVISIONCODE, TOKENNO, WORKERSERIAL ,ATTNBOOKCODE   
                       ,'-' AS OCC1,'-' AS OCC2,'-' AS OCC3,DECODE (TOTALOUTPUT, 0, OCCUPATIONCODE, TOTALOUTPUT) AS OCC4,'-' AS OCC5,'-' AS OCC6,'-' AS OCC7  
                       ,0 AS WGS1,0 AS WGS2,0 AS WGS3,DAILYWAGES AS WGS4,0 AS WGS5,0 AS WGS6,0 AS WGS7  
                       FROM GPSDAILYPAYSHEETDETAILS    
                       WHERE ATTENDANCEDATE >= TO_DATE('15/06/2020', 'DD/MM/YYYY') + 3 
                       AND ATTENDANCEDATE <= TO_DATE('15/06/2020', 'DD/MM/YYYY') + 3  
                       AND COMPANYCODE = 'HP0072' 
                       AND DIVISIONCODE = '0001'  
                       UNION ALL  
                       SELECT COMPANYCODE, DIVISIONCODE, TOKENNO, WORKERSERIAL ,ATTNBOOKCODE   
                       ,'-' AS OCC1,'-' AS OCC2,'-' AS OCC3,'-' AS OCC4,DECODE (TOTALOUTPUT, 0, OCCUPATIONCODE, TOTALOUTPUT) AS OCC5,'-' AS OCC6,'-' AS OCC7  
                       ,0 AS WGS1,0 AS WGS2,0 AS WGS3,0 AS WGS4,DAILYWAGES AS WGS5,0 AS WGS6,0 AS WGS7  
                       FROM GPSDAILYPAYSHEETDETAILS    
                       WHERE ATTENDANCEDATE >= TO_DATE('15/06/2020', 'DD/MM/YYYY') + 4 
                       AND ATTENDANCEDATE <= TO_DATE('15/06/2020', 'DD/MM/YYYY') + 4  
                       AND COMPANYCODE = 'HP0072' 
                       AND DIVISIONCODE = '0001'  
                       UNION ALL  
                       SELECT COMPANYCODE, DIVISIONCODE, TOKENNO, WORKERSERIAL ,ATTNBOOKCODE   
                       ,'-' AS OCC1,'-' AS OCC2,'-' AS OCC3,'-' AS OCC4,'-' AS OCC5,DECODE (TOTALOUTPUT, 0, OCCUPATIONCODE, TOTALOUTPUT) AS OCC6,'-' AS OCC7  
                       ,0 AS WGS1,0 AS WGS2,0 AS WGS3,0 AS WGS4,0 AS WGS5,DAILYWAGES AS WGS6,0 AS WGS7  
                       FROM GPSDAILYPAYSHEETDETAILS    
                       WHERE ATTENDANCEDATE >= TO_DATE('15/06/2020', 'DD/MM/YYYY') + 5 
                       AND ATTENDANCEDATE <= TO_DATE('15/06/2020', 'DD/MM/YYYY') + 5  
                       AND COMPANYCODE = 'HP0072' 
                       AND DIVISIONCODE = '0001'  
                       UNION ALL  
                       SELECT COMPANYCODE, DIVISIONCODE, TOKENNO, WORKERSERIAL ,ATTNBOOKCODE   
                       ,'-' AS OCC1,'-' AS OCC2,'-' AS OCC3,'-' AS OCC4,'-' AS OCC5,'-' AS OCC6,DECODE (TOTALOUTPUT, 0, OCCUPATIONCODE, TOTALOUTPUT) AS OCC7  
                       ,0 AS WGS1,0 AS WGS2,0 AS WGS3,0 AS WGS4,0 AS WGS5,0 AS WGS6,DAILYWAGES AS WGS7  
                       FROM GPSDAILYPAYSHEETDETAILS    
                       WHERE ATTENDANCEDATE >= TO_DATE('15/06/2020', 'DD/MM/YYYY') + 6 
                       AND ATTENDANCEDATE <= TO_DATE('15/06/2020', 'DD/MM/YYYY') + 6  
                       AND COMPANYCODE = 'HP0072' 
                       AND DIVISIONCODE = '0001'  
                       )XX 
                       GROUP BY XX.COMPANYCODE,XX.DIVISIONCODE, XX.TOKENNO,XX.WORKERSERIAL,XX.ATTNBOOKCODE 
                     ) D,  
                     (  
                      SELECT COMPANYCODE, DIVISIONCODE, X.TOKENNO, X.WORKERSERIAL,  
                             INCENTIVE, SPL_ALLOW, SPRAY_ALLOW, FACT_ALOW, EXTRA_ALLOW EXTRA, ATTN_ALLOW,  
                             GROSSWAGES, COINBF, PF_E, PTAX, LOAN_ADVGN ADVANCE, LOAN_PF PF_LOAN, LINT_PF PF_INT,  
                             LOAN_MD MD_LOAN, RAT_DED, DED_LIC LIC_DED, DED_ELEC, DED_WELFARE, DED_UNION,  
                             GROSSDEDN, COINCF, XX.TOT_EARN, XX.TOT_DED  
                        FROM GPSPAYSHEETDETAILS X,(  
                                                  SELECT TOKENNO, WORKERSERIAL, SUM(GROSSWAGES) TOT_EARN, SUM(GROSSDEDN) TOT_DED
                                                    FROM GPSPAYSHEETDETAILS  
                                                   WHERE PERIODFROM >= TO_DATE('15/06/2020', 'DD/MM/YYYY')  
                                                     AND PERIODTO <= TO_DATE('21/06/2020', 'DD/MM/YYYY')  
                                                     AND COMPANYCODE = 'HP0072' 
                                                     AND DIVISIONCODE = '0001'  
                                                   GROUP BY TOKENNO, WORKERSERIAL    
                                                )  XX
                       WHERE PERIODFROM >= TO_DATE('15/06/2020', 'DD/MM/YYYY')  
                         AND PERIODTO <= TO_DATE('21/06/2020', 'DD/MM/YYYY')  
                         AND COMPANYCODE = 'HP0072' 
                         AND DIVISIONCODE = '0001'  
                         AND X.TOKENNO = XX.TOKENNO     
                     ) E  
                WHERE A.COMPANYCODE = B.COMPANYCODE  
                  AND A.DIVISIONCODE = B.DIVISIONCODE  
                  AND A.WORKERSERIAL = B.WORKERSERIAL  
                  AND A.COMPANYCODE = D.COMPANYCODE  
                  AND A.DIVISIONCODE = D.DIVISIONCODE  
                  AND A.WORKERSERIAL = D.WORKERSERIAL  
                  AND A.COMPANYCODE = E.COMPANYCODE  
                  AND A.DIVISIONCODE = E.DIVISIONCODE  
                  AND A.WORKERSERIAL = E.WORKERSERIAL  
  AND D.ATTNBOOKCODE IN ('11')   
  AND A.TOKENNO IN ('10985')
  ORDER BY A.TOKENNO  
  ) XXX   



 SELECT COMPANYCODE, DIVISIONCODE, TOKENNO, WORKERSERIAL, SUM(SK_DAYS) SK_DAYS, SUM(MT_DAYS) MT_DAYS, 
SUM(AL_DAYS) AL_DAYS, SUM(WP_DAYS) WP_DAYS, SUM(HOLIDAYS) HOLIDAYS, SUM(HAZIRA) PRESENTDAYS   
FROM (  
SELECT A.COMPANYCODE, A.DIVISIONCODE, A.TOKENNO, A.WORKERSERIAL, 
CASE WHEN B.OCCUPATIONTYPE = 'SICK LEAVE' THEN HAZIRA ELSE 0 END SK_DAYS,  
CASE WHEN B.OCCUPATIONTYPE = 'MATERNITY LEAVE' THEN HAZIRA ELSE 0 END MT_DAYS,  
CASE WHEN B.OCCUPATIONTYPE = 'ANNUAL LEAVE' THEN HAZIRA ELSE 0 END AL_DAYS,  
CASE WHEN B.OCCUPATIONTYPE IN ('ABSENT','SPECIAL LEAVE','SICK LEAVE WITHOUT PAY') THEN HAZIRA ELSE 0 END WP_DAYS,  
CASE WHEN B.OCCUPATIONTYPE = 'PAID HOLIDAY' THEN HAZIRA ELSE 0 END HOLIDAYS,  
CASE WHEN B.OCCUPATIONTYPE IN ('TUBE FILLING','PLUCKING','OTHERS') THEN HAZIRA ELSE 0 END PRESENTDAYS  
,NVL(HAZIRA,0) HAZIRA 
FROM GPSATTENDANCEDETAILS A, (  
SELECT DISTINCT OCCUPATIONCODE,OCCUPATIONTYPE FROM GPSOCCUPATIONMAST  
WHERE COMPANYCODE = 'HP0072' 
AND DIVISIONCODE = '0001'  
) B  
WHERE ATTENDANCEDATE >= TO_DATE('15/06/2020', 'DD/MM/YYYY')  
AND ATTENDANCEDATE <= TO_DATE('21/06/2020', 'DD/MM/YYYY')  
AND COMPANYCODE = 'HP0072' 
AND DIVISIONCODE = '0001'  
AND A.OCCUPATIONCODE = B.OCCUPATIONCODE  
  AND A.TOKENNO IN ('10895')
)  
GROUP BY TOKENNO, WORKERSERIAL, COMPANYCODE, DIVISIONCODE 


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
29/06/2020
ADD SAL_ADV COMPOENENT FOR BIRLA
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SELECT * FROM PISCOMPONENTASSIGNMENT


WHERE 

MINUS


SELECT * FROM PISEMPLOYEEMASTER
WHERE TOKENNO IN(
SELECT DISTINCT TOKENNO FROM PISEMPLOYEEMASTER
MINUS
SELECT DISTINCT TOKENNO FROM PISCOMPONENTASSIGNMENT
)



SELECT DISTINCT TOKENNO FROM PISCOMPONENTASSIGNMENT
WHERE BASIC > 0


INSERT INTO PISCOMPONENTASSIGNMENT
(
    COMPANYCODE, DIVISIONCODE, YEARCODE, YEARMONTH, UNITCODE, DEPARTMENTCODE, CATEGORYCODE, GRADECODE, 
    WORKERSERIAL, TOKENNO, TRANSACTIONTYPE, SYSROWID, LASTMODIFIED, USERNAME, BASIC, DA, ADHOC, SPL_ALLOW 
)
SELECT COMPANYCODE,DIVISIONCODE,'2020-2021' YEARCODE,'202004' YEARMONTH, UNITCODE, DEPARTMENTCODE, CATEGORYCODE, 
GRADECODE,WORKERSERIAL,A.TOKENNO,'ASSIGNMENT' TRANSACTIONTYPE,SYS_GUID() SYSROWID,SYSDATE LASTMODIFIED,'SWT' USERNAME, 
BASIC, DA, ADHOC, SPL_ALLOW 
FROM PISEMPLOYEEMASTER A, 
(
    SELECT EMPCODE TOKENNO, BASIC, DA, ADHOC, PERSONAL_PAY, SPL_ALLOW, VPF_PERCENT FROM BJM_EMP_MAST
) B
WHERE
A.TOKENNO=B.TOKENNO 
AND A.TOKENNO IN(
SELECT DISTINCT TOKENNO FROM PISEMPLOYEEMASTER
MINUS
SELECT DISTINCT TOKENNO FROM PISCOMPONENTASSIGNMENT
)



SELECT EMPCODE TOKENNO, BASIC, DA, ADHOC, PERSONAL_PAY, SPL_ALLOW, VPF_PERCENT FROM BJM_EMP_MAST

SELECT  TOKENNO, BASIC, DA, ADHOC, SPL_ALLOW FROM PISCOMPONENTASSIGNMENT



SELECT DISTINCT EMPCODE FROM BJM_EMP_MAST


CREATE TABLE PISCOMPONENTASSIGNMENT_2906 AS
SELECT * FROM PISCOMPONENTASSIGNMENT

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SELECT * FROM PISCOMPONENTMASTER
where componentcode like 'SAL%'

SELECT * FROM PISCOMPONENTMASTER

where componentcode like 'SAL%

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SELECT * FROM PISCOMPONENTASSIGNMENT


WHERE 

MINUS


SELECT * FROM PISEMPLOYEEMASTER
WHERE TOKENNO IN(
SELECT DISTINCT TOKENNO FROM PISEMPLOYEEMASTER
MINUS
SELECT DISTINCT TOKENNO FROM PISCOMPONENTASSIGNMENT
)



SELECT DISTINCT TOKENNO FROM PISCOMPONENTASSIGNMENT
WHERE BASIC > 0


INSERT INTO PISCOMPONENTASSIGNMENT
(
    COMPANYCODE, DIVISIONCODE, YEARCODE, YEARMONTH, UNITCODE, DEPARTMENTCODE, CATEGORYCODE, GRADECODE, 
    WORKERSERIAL, TOKENNO, TRANSACTIONTYPE, SYSROWID, LASTMODIFIED, USERNAME, BASIC, DA, ADHOC, SPL_ALLOW 
)
SELECT COMPANYCODE,DIVISIONCODE,'2020-2021' YEARCODE,'202004' YEARMONTH, UNITCODE, DEPARTMENTCODE, CATEGORYCODE, 
GRADECODE,WORKERSERIAL,A.TOKENNO,'ASSIGNMENT' TRANSACTIONTYPE,SYS_GUID() SYSROWID,SYSDATE LASTMODIFIED,'SWT' USERNAME, 
BASIC, DA, ADHOC, SPL_ALLOW 
FROM PISEMPLOYEEMASTER A, 
(
    SELECT EMPCODE TOKENNO, BASIC, DA, ADHOC, PERSONAL_PAY, SPL_ALLOW, VPF_PERCENT FROM BJM_EMP_MAST
) B
WHERE
A.TOKENNO=B.TOKENNO 
AND A.TOKENNO IN(
SELECT DISTINCT TOKENNO FROM PISEMPLOYEEMASTER
MINUS
SELECT DISTINCT TOKENNO FROM PISCOMPONENTASSIGNMENT
)



SELECT EMPCODE TOKENNO, BASIC, DA, ADHOC, PERSONAL_PAY, SPL_ALLOW, VPF_PERCENT FROM BJM_EMP_MAST

SELECT  TOKENNO, BASIC, DA, ADHOC, SPL_ALLOW FROM PISCOMPONENTASSIGNMENT



SELECT DISTINCT EMPCODE FROM BJM_EMP_MAST


CREATE TABLE PISCOMPONENTASSIGNMENT_2906 AS
SELECT * FROM PISCOMPONENTASSIGNMENT


SELECT * FROM PISGRADECOMPONENTMAPPING

SELECT DISTINCT CATEGORYCODE,GRADECODE FROM PISGRADECOMPONENTMAPPING
ORDER BY 1,2

Row#    CATEGORYCODE

1    11
2    12
3    20
4    10


SELECT DISTINCT CATEGORYCODE,GRADECODE FROM PISGRADEMASTER
ORDER BY 1,2

SELECT * FROM PISGRADEMASTER


SELECT DISTINCT CATEGORYCODE,GRADECODE FROM PISCATEGORYMASTER

Row#    CATEGORYCODE

1    11
2    12
3    21
4    20
5    22
6    10




Row#    DIVISIONCODE    CATEGORYCODE    GRADECODE

1    0001    10    B
2    0001    10    C
3    0001    11    B
4    0001    10    A
5    0001    11    D
6    0001    20    F
7    0001    11    C
8    0001    12    H
9    0001    20    E
10    0001    11    A
11    0001    12    G
12    0001    10    D



SELECT DISTINCT CATEGORYCODE,GRADECODE FROM PISGRADECOMPONENTMAPPING
ORDER BY 1,2


SELECT DISTINCT CATEGORYCODE,GRADECODE FROM PISGRADEMASTER
MINUS
SELECT DISTINCT CATEGORYCODE,GRADECODE FROM PISGRADECOMPONENTMAPPING

Row#    CATEGORYCODE    GRADECODE

1    11    A
2    11    B
3    11    C
4    12    G
5    20    E




---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------


INSERT INTO PISGRADECOMPONENTMAPPING
SELECT COMPANYCODE, DIVISIONCODE, YEARMONTH, UNITCODE, CATEGORYCODE, GRADECODE, 
'SAL_ADV' COMPONENTCODE, APPLICABLE, USERNAME,SYSDATE LASTMODIFIED,SYS_GUID() SYSROWID FROM PISGRADECOMPONENTMAPPING
WHERE COMPONENTCODE='PF_E'


DELETE FROM PISGRADECOMPONENTMAPPING
WHERE COMPONENTCODE='SAL_ADV'

SELECT * FROM PISGRADECOMPONENTMAPPING
WHERE COMPONENTCODE='SAL_ADV'



---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SET DEFINE OFF;
Insert into BIRLANEW.PISGRADECOMPONENTMAPPING
   (COMPANYCODE, DIVISIONCODE, YEARMONTH, UNITCODE, CATEGORYCODE, GRADECODE, COMPONENTCODE, APPLICABLE, USERNAME, LASTMODIFIED, SYSROWID)
 Values
   ('BJ0056', '0001', '202004', '01', '10', 'D', 'SAL_ADV', 'Y', 'SUNIL', TO_DATE('06/29/2020 17:06:11', 'MM/DD/YYYY HH24:MI:SS'), '202006291706100010624481');
Insert into BIRLANEW.PISGRADECOMPONENTMAPPING
   (COMPANYCODE, DIVISIONCODE, YEARMONTH, UNITCODE, CATEGORYCODE, GRADECODE, COMPONENTCODE, APPLICABLE, USERNAME, LASTMODIFIED, SYSROWID)
 Values
   ('BJ0056', '0001', '202004', '01', '10', 'B', 'SAL_ADV', 'Y', 'SWT', TO_DATE('06/29/2020 12:57:46', 'MM/DD/YYYY HH24:MI:SS'), '202006291257460010621941');
Insert into BIRLANEW.PISGRADECOMPONENTMAPPING
   (COMPANYCODE, DIVISIONCODE, YEARMONTH, UNITCODE, CATEGORYCODE, GRADECODE, COMPONENTCODE, APPLICABLE, USERNAME, LASTMODIFIED, SYSROWID)
 Values
   ('BJ0056', '0001', '202004', '02', '10', 'A', 'SAL_ADV', 'Y', 'SUNIL', TO_DATE('06/29/2020 17:08:34', 'MM/DD/YYYY HH24:MI:SS'), '202006291708340010624692');
Insert into BIRLANEW.PISGRADECOMPONENTMAPPING
   (COMPANYCODE, DIVISIONCODE, YEARMONTH, UNITCODE, CATEGORYCODE, GRADECODE, COMPONENTCODE, APPLICABLE, USERNAME, LASTMODIFIED, SYSROWID)
 Values
   ('BJ0056', '0001', '202004', '01', '10', 'A', 'SAL_ADV', 'Y', 'SUNIL', TO_DATE('06/29/2020 17:02:20', 'MM/DD/YYYY HH24:MI:SS'), '202006291702190010624220');
Insert into BIRLANEW.PISGRADECOMPONENTMAPPING
   (COMPANYCODE, DIVISIONCODE, YEARMONTH, UNITCODE, CATEGORYCODE, GRADECODE, COMPONENTCODE, APPLICABLE, USERNAME, LASTMODIFIED, SYSROWID)
 Values
   ('BJ0056', '0001', '202004', '01', '10', 'C', 'SAL_ADV', 'Y', 'SUNIL', TO_DATE('06/29/2020 17:03:32', 'MM/DD/YYYY HH24:MI:SS'), '202006291703320010624382');
COMMIT;



---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------


SELECT * FROM PISCOMPONENTMASTER

where componentcode like 'SAL%'

SELECT * FROM PISCOMPONENTMASTER
where componentcode like 'ESI_E%'


SET DEFINE OFF;
Insert into BIRLANEW.PISCOMPONENTMASTER
   (COMPANYCODE, DIVISIONCODE, YEARMONTH, COMPONENTCODE, COMPONENTSHORTNAME, COMPONENTDESC, COMPONENTTYPE, CALCULATIONINDEX, PHASE, PAYFORMULA, DEPENDENCYTYPE, VALIDATIONTYPE, ROUNDOFFTYPE, ROUNDOFFRS, CARRYFORWARDTYPE, INCLUDEPAYROLL, INCLUDEARREAR, USERENTRYAPPLICABLE, ATTENDANCEENTRYAPPLICABLE, LIMITAPPLICABLE, ROLLOVERAPPLICABLE, EMPLOYEESPECIFIC, SLABAPPLICABLE, ALLOWREIMBURSEMENT, ALLOWCUMULATIVECOMPCREATION, MISCPAYMENT, FINALSETTLEMENT, ISCOSTCENTREWISEPOSTING, ACCODEREIMBURSELIABILITY, RATECOMPONENT, SYSTEMCOMPONENT, EDITABLEFORMULA, SALARYREGISTERROWNO, SALARYREGISTERCOLSTART, SALARYREGISTERCOLWIDTH, PAYSLIPROWNO, PAYSLIPCOLSTART, PAYSLIPCOLWIDTH, SYSROWID, LASTMODIFIED, USERNAME)
 Values
   ('BJ0056', '0001', '202004', 'ESI_E', 'ESI_E', 'ESI EMP CONT', 'DEDUCTION', 530, 6, 'PISCOMP.ESI_GROSS*0.0075', 'N', 'N', 'H', 0, 'N', 'Y', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'Y', 5, 50, 10, 0, 0, 0, '201905241250080001073358', TO_DATE('09/05/2019 12:45:07', 'MM/DD/YYYY HH24:MI:SS'), 'SWT');
COMMIT;


SELECT * FROM PISPAYTRANSACTION


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

SELECT ROW_NUMBER() OVER (PARTITION BY A.CLUSTERCODE, A.ATTNBOOKCODE  ORDER BY A.CLUSTERCODE, A.ATTNBOOKCODE) SLNO, A.COMPANYCODE,A.DIVISIONCODE,C.COMPANYNAME, D.DIVISIONNAME,D.DIVISIONSTATE,A.TOKENNO,B.EMPLOYEENAME,
A.ATTNBOOKCODE, E.ATTNBOOKDESC, A.CLUSTERCODE, F.CLUSTERDESC,
HAZIRA,0 PLAN, 0 REAL, GROSSWAGES DAILYWAGE, 0 SUNDAY, 0 TOTAL, 0 BONUS_KGS, 0 BONUS_VALUE,
0 DISCOUNT_KG, 0 DISCOUNT_VALUE, 0 GROSS_SALARY, 0 INSS, 0 OTM, 0 NET_SALARY, 0 ADVANCE, 0 AMOUNT_PAYABLE
 FROM GPSPAYSHEETDETAILS A, GPSEMPLOYEEMAST B,COMPANYMAST C, DIVISIONMASTER D, GPSATTNBOOKMAST E, GPSCLUSTERMASTER F
 WHERE 1=1
 AND A.COMPANYCODE='DY0088'
 AND A.DIVISIONCODE='Y01'
 AND PERIODFROM = TO_DATE('01/03/2020','DD/MM/YYYY')
 AND PERIODTO = TO_DATE('31/03/2020','DD/MM/YYYY')
 AND A.CLUSTERCODE = '01'
 AND A.ATTNBOOKCODE = '01'
-- AND ATTNBOOKCODE IN (P_ATTNBOOKCODE)
 AND A.COMPANYCODE=B.COMPANYCODE
 AND A.DIVISIONCODE=B.DIVISIONCODE
 AND A.TOKENNO=B.TOKENNO
 AND A.COMPANYCODE=E.COMPANYCODE
 AND A.DIVISIONCODE=E.DIVISIONCODE
 AND A.ATTNBOOKCODE=E.ATTNBOOKCODE
 AND A.COMPANYCODE=F.COMPANYCODE
 AND A.DIVISIONCODE=F.DIVISIONCODE
 AND A.CLUSTERCODE=F.CLUSTERCODE
 AND A.COMPANYCODE=C.COMPANYCODE
 AND A.COMPANYCODE=D.COMPANYCODE
 AND A.DIVISIONCODE=D.DIVISIONCODE;
 
 GPSPAYSHEETDETAILS.HAZIRA
 
 SUM(GPSTASKMAST.TASK) to be joined with GPSATTENDANCEDETAILS.TASKCODE. TASK ALLOWED RIGHTNOW FOR OCCUPATIONTYPE = 'PLUCKING' IN GPSOCCUPATIONMAST.
 
 --PLAN
 SELECT A.TOKENNO, SUM(B.TASK) PLAN
 FROM GPSATTENDANCEDETAILS A, GPSTASKMAST B
 WHERE 1=1 
 AND A.COMPANYCODE=B.COMPANYCODE
 AND A.DIVISIONCODE=B.DIVISIONCODE
 AND A.TASKCODE = B.TASKCODE 
 AND A.COMPANYCODE='DY0088'
 AND A.DIVISIONCODE='Y01'
 AND OCCOUPATIONTYPE = 'PLUCKING' 
 GROUP BY A.TOKENNO
 
 
 SELECT TASKCODE, TASK FROM GPSTASKMAST A
 WHERE 1=1 
 AND A.COMPANYCODE='DY0088'
 AND A.DIVISIONCODE='Y01'
 
 
 --REAL
 
 SELECT A.TOKENNO, SUM(NVL(OUTPUTFORTHEDAY1,0)+NVL(OUTPUTFORTHEDAY2,0)+NVL(OUTPUTFORTHEDAY3,0)+NVL(OUTPUTFORTHEDAY4,0)+NVL(OUTPUTFORTHEDAY5,0)) REAL
 FROM GPSATTENDANCEDETAILS A 
 WHERE 1=1 
 AND A.COMPANYCODE='DY0088'
 AND A.DIVISIONCODE='Y01'
 AND OCCOUPATIONTYPE = 'PLUCKING' 
 GROUP BY A.TOKENNO
 
-- DAILY WAGE
ROUND(GPSPAYSHEETDETAILS.DAILYWAGES/GPSPAYSHEETDETAILS.HAZIRA,2)

--SUNDAY
GPSPAYSHEETDETAILS.ATTN_ALLOW

--TOYAL
GPSPAYSHEETDETAILS.DAILYWAGES+GPSPAYSHEETDETAILS.ATTN_ALLOW

--  KGS OF BONUS
CASE WHEN ((GPSATTENDANCEDETAILS.OUTFORTHEDAY1+OUTPUTFORTHEDAY2+OUTPUTFORTHEDAY3+OUTPUTFORTHEDAY4+OUTPUTFORTHEDAY5) > GPSTASKMAST.TASK)  THEN TOTALOUTPUT - TOTALTASK


--BONUS VALUE
SUM(INCENTIVE) FROM GPSDAILYPAYSHEETDETAILS BY JOINING WITH GPSATTENDANCEDETAILS WHERE THE CRITERION IN THE PREVIOUS COLUMN IS MET


--DISCOUNT KG
CASE WHEN ((GPSATTENDANCEDETAILS.OUTFORTHEDAY1+OUTPUTFORTHEDAY2+OUTPUTFORTHEDAY3+OUTPUTFORTHEDAY4+OUTPUTFORTHEDAY5) < GPSTASKMAST.TASK)  THEN TOTALOUTPUT - TOTALTASK

--DISCOUNT  VALUE
SUM(INCENTIVE) FROM GPSDAILYPAYSHEETDETAILS BY JOINING WITH GPSATTENDANCEDETAILS WHERE THE CRITERION IN THE PREVIOUS COLUMN IS MET


--GROSS SALARY
GROSSWAGES

--INSS
GPSPAYSHEETDETAILS.PF_E

--OTM
GPSPAYSHEETDETAILS.TEMP_DED

--NET SALARY
GPSPAYSHEETDETAILS.NETSALARY

--ADVANCE
GPSPAYSHEETDETAILS.LOAN_ADVGN

SELECT * FROM GPSATTENDANCEDETAILS A
 WHERE 1=1 
 AND A.COMPANYCODE='DY0088'
 AND A.DIVISIONCODE='Y01'
 AND OCCOUPATIONTYPE = 'PLUCKING' 
-- AND ATTENDANCEDATE >= TO_DATE('01/03/2020','DD/MM/YYYY')
-- AND ATTENDANCEDATE <= TO_DATE('31/03/2020','DD/MM/YYYY')

SELECT A.TOKENNO, SUM(NVL(OUTPUTFORTHEDAY1,0)+NVL(OUTPUTFORTHEDAY2,0)+NVL(OUTPUTFORTHEDAY3,0)+NVL(OUTPUTFORTHEDAY4,0)+NVL(OUTPUTFORTHEDAY5,0)) REAL
 FROM GPSATTENDANCEDETAILS A 
 WHERE 1=1 
 AND A.COMPANYCODE='DY0088'
 AND A.DIVISIONCODE='Y01'
 AND OCCOUPATIONTYPE = 'PLUCKING' 
 AND ATTENDANCEDATE >= TO_DATE('01/03/2020','DD/MM/YYYY')
 AND ATTENDANCEDATE <= TO_DATE('31/03/2020','DD/MM/YYYY')
 GROUP BY A.TOKENNO



SELECT A.TOKENNO, SUM(NVL(OUTPUTFORTHEDAY1,0)+NVL(OUTPUTFORTHEDAY2,0)+NVL(OUTPUTFORTHEDAY3,0)+NVL(OUTPUTFORTHEDAY4,0)+NVL(OUTPUTFORTHEDAY5,0)) REAL
 FROM GPSATTENDANCEDETAILS A 
 WHERE 1=1 
 AND A.COMPANYCODE='DY0088'
 AND A.DIVISIONCODE='Y01'
 AND ATTENDANCEDATE >= TO_DATE('01/03/2020','DD/MM/YYYY')
 AND ATTENDANCEDATE <= TO_DATE('31/03/2020','DD/MM/YYYY')
 GROUP BY A.TOKENNO


--DISCOUNT  VALUE
SUM(INCENTIVE) FROM GPSDAILYPAYSHEETDETAILS BY JOINING WITH GPSATTENDANCEDETAILS WHERE THE CRITERION IN THE PREVIOUS COLUMN IS MET


SELECT A.TOKENNO, SUM(A.INCENTIVE) INCENTIVE
FROM GPSDAILYPAYSHEETDETAILS  A,GPSATTENDANCEDETAILS B
WHERE 1=1 
AND A.COMPANYCODE='DY0088'
AND A.DIVISIONCODE='Y01'
AND A.COMPANYCODE= B.COMPANYCODE
AND A.DIVISIONCODE= B.DIVISIONCODE
AND A.TOKENNO= B.TOKENNO
AND A.ATTENDANCEDATE= B.ATTENDANCEDATE
AND A.ATTENDANCEDATE >= TO_DATE('01/03/2020','DD/MM/YYYY')
AND A.ATTENDANCEDATE <= TO_DATE('31/03/2020','DD/MM/YYYY')
GROUP BY A.TOKENNO


SELECT A.TOKENNO, SUM(A.HAZIRA) 
FROM GPSATTENDANCEDETAILS  A
WHERE 1=1 
AND A.COMPANYCODE='DY0088'
AND A.DIVISIONCODE='Y01'
AND ATTENDANCEDATE >= TO_DATE('01/03/2020','DD/MM/YYYY')
AND ATTENDANCEDATE <= TO_DATE('31/03/2020','DD/MM/YYYY')
GROUP BY A.TOKENNO

---------------------------------------------------------------------------------------------

INSERT INTO GTT_PAYSLIP_CDM 
(
    COMPANYCODE, DIVISIONCODE, COMPANYNAME, DIVISIONNAME, TOKENNO, EMPLOYEENAME, 
    ATTNBOOKCODE, ATTNBOOKDESC,CLUSTERCODE, CLUSTERDESC,
    HAZIRA, PLAN, REAL, DAILYWAGE, SUNDAY, TOTAL, BONUS_KGS, BONUS_VALUE, DISCOUNT_KG, DISCOUNT_VALUE, 
    GROSS_SALARY, INSS, OTM, NET_SALARY, ADVANCE, AMOUNT_PAYABLE
)
SELECT A.COMPANYCODE,A.DIVISIONCODE,F.COMPANYNAME, G.DIVISIONNAME, A.TOKENNO,E.EMPLOYEENAME,
A.ATTNBOOKCODE, H.ATTNBOOKDESC, A.CLUSTERCODE, I.CLUSTERDESC,
A.HAZIRA,NVL(B.PLAN,0) PLAN,NVL(C.REAL,0)  REAL, A.DAILYWAGES, A.SUNDAY, A.TOTAL, 
CASE WHEN (NVL(J.TOTALOUTPUT,0) > NVL(B.PLAN,0)) THEN (NVL(J.TOTALOUTPUT,0) - NVL(B.PLAN,0)) ELSE 0 END BONUS_KGS, NVL(D.BONUS_VALUE,0) BONUS_VALUE,
CASE WHEN (NVL(J.TOTALOUTPUT,0) < NVL(B.PLAN,0)) THEN (NVL(J.TOTALOUTPUT,0) - NVL(B.PLAN,0)) ELSE 0 END DISCOUNT_KG, NVL(D.BONUS_VALUE,0) DISCOUNT_VALUE, 
A.GROSSWAGES GROSS_SALARY, A.INSS,A.OTM, A.NET_SALARY, A.ADVANCE,A.NET_SALARY AMOUNT_PAYABLE
FROM
(
    SELECT A.COMPANYCODE,A.DIVISIONCODE, A.ATTNBOOKCODE, A.CLUSTERCODE,
    A.TOKENNO, HAZIRA, DECODE(NVL(HAZIRA,0),0,0, ROUND(NVL(DAILYWAGES,0)/NVL(HAZIRA,1),2)) DAILYWAGES, NVL(ATTN_ALLOW,0) SUNDAY,
    NVL(DAILYWAGES,0) + NVL(ATTN_ALLOW,0) TOTAL,
    A.GROSSWAGES, NVL(PF_E,0) INSS,NVL(TEMP_DED,0) OTM,NVL(NETSALARY,0) NET_SALARY, NVL(LOAN_ADVGN,0) ADVANCE
    FROM GPSPAYSHEETDETAILS A
    WHERE 1=1
    AND A.COMPANYCODE='DY0088'
    AND A.DIVISIONCODE='Y01'
    AND PERIODFROM = TO_DATE('01/03/2020','DD/MM/YYYY')
    AND PERIODTO = TO_DATE('31/03/2020','DD/MM/YYYY')
    AND A.ATTNBOOKCODE IN('04')
) A,
(
    --PLAN
    SELECT A.TOKENNO, SUM(B.TASK) PLAN
    FROM GPSATTENDANCEDETAILS A, GPSTASKMAST B
    WHERE 1=1 
    AND A.COMPANYCODE=B.COMPANYCODE
    AND A.DIVISIONCODE=B.DIVISIONCODE
    AND A.TASKCODE = B.TASKCODE 
    AND A.COMPANYCODE='DY0088'
    AND A.DIVISIONCODE='Y01'
    AND OCCOUPATIONTYPE = 'PLUCKING' 
    GROUP BY A.TOKENNO
) B,
(
    --REAL
    SELECT A.TOKENNO, SUM(NVL(OUTPUTFORTHEDAY1,0)+NVL(OUTPUTFORTHEDAY2,0)+NVL(OUTPUTFORTHEDAY3,0)+NVL(OUTPUTFORTHEDAY4,0)+NVL(OUTPUTFORTHEDAY5,0)) REAL
    FROM GPSATTENDANCEDETAILS A 
    WHERE 1=1 
    AND A.COMPANYCODE='DY0088'
    AND A.DIVISIONCODE='Y01'
    AND OCCOUPATIONTYPE = 'PLUCKING' 
    GROUP BY A.TOKENNO
) C,
(
    SELECT A.TOKENNO, SUM(A.INCENTIVE) BONUS_VALUE
    FROM GPSDAILYPAYSHEETDETAILS  A,GPSATTENDANCEDETAILS B
    WHERE 1=1 
    AND A.COMPANYCODE='DY0088'
    AND A.DIVISIONCODE='Y01'
    AND A.COMPANYCODE= B.COMPANYCODE
    AND A.DIVISIONCODE= B.DIVISIONCODE
    AND A.TOKENNO= B.TOKENNO
    AND A.ATTENDANCEDATE= B.ATTENDANCEDATE
    AND A.ATTENDANCEDATE >= TO_DATE('01/03/2020','DD/MM/YYYY')
    AND A.ATTENDANCEDATE <= TO_DATE('31/03/2020','DD/MM/YYYY')
    GROUP BY A.TOKENNO
) D, GPSEMPLOYEEMAST E,COMPANYMAST F, DIVISIONMASTER G, GPSATTNBOOKMAST H, GPSCLUSTERMASTER I,
(
    SELECT A.TOKENNO, SUM(NVL(OUTPUTFORTHEDAY1,0)+NVL(OUTPUTFORTHEDAY2,0)+NVL(OUTPUTFORTHEDAY3,0)+NVL(OUTPUTFORTHEDAY4,0)+NVL(OUTPUTFORTHEDAY5,0)) TOTALOUTPUT
     FROM GPSATTENDANCEDETAILS A 
     WHERE 1=1 
     AND A.COMPANYCODE='DY0088'
     AND A.DIVISIONCODE='Y01'
     AND ATTENDANCEDATE >= TO_DATE('01/03/2020','DD/MM/YYYY')
     AND ATTENDANCEDATE <= TO_DATE('31/03/2020','DD/MM/YYYY')
     GROUP BY A.TOKENNO
) J
WHERE 1=1
AND A.TOKENNO=B.TOKENNO(+)
AND A.TOKENNO=C.TOKENNO(+)
AND A.TOKENNO=D.TOKENNO(+)
AND A.TOKENNO=J.TOKENNO(+)
AND A.COMPANYCODE=E.COMPANYCODE
AND A.DIVISIONCODE=E.DIVISIONCODE
AND A.TOKENNO=E.TOKENNO
AND A.COMPANYCODE=F.COMPANYCODE
AND A.COMPANYCODE=G.COMPANYCODE
AND A.DIVISIONCODE=G.DIVISIONCODE
AND A.COMPANYCODE=H.COMPANYCODE
AND A.DIVISIONCODE=H.DIVISIONCODE
AND A.ATTNBOOKCODE=H.ATTNBOOKCODE
AND A.COMPANYCODE=I.COMPANYCODE
AND A.DIVISIONCODE=I.DIVISIONCODE
AND A.CLUSTERCODE=I.CLUSTERCODE



---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------


SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%cdm%')

exec PROC_RPT_PAYSLIP_CDM('DY0088','Y01','2020-2021','01/03/2020','31/03/2020','''01''','','ENGLISH')


SELECT ROWINDEX, EXCELROWTYPE, EXCELROWSTYLE, EXCELVALUES, EXCELTAG FROM GTT_EXCEL_REPORT ORDER BY ROWINDEX


SELECT ROWINDEX, EXCELVALUES, EXCELTAG FROM GTT_EXCEL_REPORT ORDER BY ROWINDEX DESC

EXEC PROC_RPT_PAYSLIP_CDM('DY0088','Y01','2020-2021','01/03/2020','31/03/2020','''01'',''04''','','ENGLISH')


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------


SELECT A.COMPANYCODE,A.DIVISIONCODE,F.COMPANYNAME, G.DIVISIONNAME, A.TOKENNO,E.EMPLOYEENAME,
A.ATTNBOOKCODE, H.ATTNBOOKDESC, A.CLUSTERCODE, I.CLUSTERDESC,
A.HAZIRA,NVL(B.PLAN,0) PLAN,NVL(C.REAL,0)  REAL, A.DAILYWAGES, A.SUNDAY, A.TOTAL, 
CASE WHEN NVL(B.PLAN,0) > NVL(B.PLAN,0) THEN 0 ELSE 0 END BONUS_KGS, 0 BONUS_VALUE,
0 DISCOUNT_KG, 0 DISCOUNT_VALUE, A.GROSSWAGES GROSS_SALARY, A.INSS,A.OTM, A.NET_SALARY, A.ADVANCE,A.NET_SALARY AMOUNT_PAYABLE
FROM
(
    SELECT A.COMPANYCODE,A.DIVISIONCODE, A.ATTNBOOKCODE, A.CLUSTERCODE,
    A.TOKENNO, HAZIRA, DECODE(NVL(HAZIRA,0),0,0, ROUND(NVL(DAILYWAGES,0)/NVL(HAZIRA,1),2)) DAILYWAGES, NVL(ATTN_ALLOW,0) SUNDAY,
    NVL(DAILYWAGES,0) + NVL(ATTN_ALLOW,0) TOTAL,
    A.GROSSWAGES, NVL(PF_E,0) INSS,NVL(TEMP_DED,0) OTM,NVL(NETSALARY,0) NET_SALARY, NVL(LOAN_ADVGN,0) ADVANCE
    FROM GPSPAYSHEETDETAILS A
    WHERE 1=1
    AND A.COMPANYCODE='DY0088'
    AND A.DIVISIONCODE='Y01'
    AND PERIODFROM = TO_DATE('01/03/2020','DD/MM/YYYY')
    AND PERIODTO = TO_DATE('31/03/2020','DD/MM/YYYY')
    AND A.CLUSTERCODE = '01'
    AND A.ATTNBOOKCODE = '01'
) A,
(
    --PLAN
    SELECT A.TOKENNO, SUM(B.TASK) PLAN
    FROM GPSATTENDANCEDETAILS A, GPSTASKMAST B
    WHERE 1=1 
    AND A.COMPANYCODE=B.COMPANYCODE
    AND A.DIVISIONCODE=B.DIVISIONCODE
    AND A.TASKCODE = B.TASKCODE 
    AND A.COMPANYCODE='DY0088'
    AND A.DIVISIONCODE='Y01'
    AND OCCOUPATIONTYPE = 'PLUCKING' 
    GROUP BY A.TOKENNO
) B,
(
    --REAL
    SELECT A.TOKENNO, SUM(NVL(OUTPUTFORTHEDAY1,0)+NVL(OUTPUTFORTHEDAY2,0)+NVL(OUTPUTFORTHEDAY3,0)+NVL(OUTPUTFORTHEDAY4,0)+NVL(OUTPUTFORTHEDAY5,0)) REAL
    FROM GPSATTENDANCEDETAILS A 
    WHERE 1=1 
    AND A.COMPANYCODE='DY0088'
    AND A.DIVISIONCODE='Y01'
    AND OCCOUPATIONTYPE = 'PLUCKING' 
    GROUP BY A.TOKENNO
) C,
(
    SELECT A.TOKENNO, SUM(A.INCENTIVE) INCENTIVE
    FROM GPSDAILYPAYSHEETDETAILS  A,GPSATTENDANCEDETAILS B
    WHERE 1=1 
    AND A.COMPANYCODE='DY0088'
    AND A.DIVISIONCODE='Y01'
    AND A.COMPANYCODE= B.COMPANYCODE
    AND A.DIVISIONCODE= B.DIVISIONCODE
    AND A.TOKENNO= B.TOKENNO
    AND A.ATTENDANCEDATE= B.ATTENDANCEDATE
    AND A.ATTENDANCEDATE >= TO_DATE('01/03/2020','DD/MM/YYYY')
    AND A.ATTENDANCEDATE <= TO_DATE('31/03/2020','DD/MM/YYYY')
    GROUP BY A.TOKENNO
) D, GPSEMPLOYEEMAST E,COMPANYMAST F, DIVISIONMASTER G, GPSATTNBOOKMAST H, GPSCLUSTERMASTER I
WHERE 1=1
AND A.TOKENNO=B.TOKENNO(+)
AND A.TOKENNO=C.TOKENNO(+)
AND A.TOKENNO=D.TOKENNO(+)
AND A.COMPANYCODE=E.COMPANYCODE
AND A.DIVISIONCODE=E.DIVISIONCODE
AND A.TOKENNO=E.TOKENNO
AND A.COMPANYCODE=F.COMPANYCODE
AND A.COMPANYCODE=G.COMPANYCODE
AND A.DIVISIONCODE=G.DIVISIONCODE
AND A.COMPANYCODE=H.COMPANYCODE
AND A.DIVISIONCODE=H.DIVISIONCODE
AND A.ATTNBOOKCODE=H.ATTNBOOKCODE
AND A.COMPANYCODE=I.COMPANYCODE
AND A.DIVISIONCODE=I.DIVISIONCODE
AND A.CLUSTERCODE=I.CLUSTERCODE
 
 
 
---------------------------------------------------------------------------------------------

PROC_RPT_SALARYREGISTER_CDM


SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%PAY SLIP%')

SELECT * FROM roledetails
WHERE MENUCODE = '01100402030137'


Insert into MENUMASTER_RND
   (MENUCODE, MENUNAME, MENUDESC, MENUTYPE, MENUTAG, 
    MENUTAG1, MENUTAG2, ENTRYPOSSIBLE, EDITPOSSIBLE, DELETEPOSSIBLE, 
    REPORTSPOSSIBLE, UTILITIESPOSSIBLE, ACTIVE, PROJECTNAME, MENUDETAILS, 
    EFFECTIVEDIVISION, EFFECTIVEINDIVISION, PROCEDURE_SAVE_EDIT, URLSRC, FRM_HEIGHT, 
    FRM_WIDTH, FUNCTIONCALL_BEFORE, FUNCTIONCALL_AFTER, VIEWPOSSIBLE, PRINTPOSSIBLE, 
    DOCDATEVALIDATEFIELD, AUDITRAIL)
 Values
   ('01100402030137', NULL, 'Salary Register - CDM', 'REPORTS', 'SALARY REGISTER CDM', 
    'SALARY REGISTER CDM', NULL, 'X', 'X', 'X', 
    'Y', 'X', 'Y', 'GPS', NULL, 
    '''Y01'',''CHO''', '''Y01'',''CHO''', NULL, 'GPS/Pages/Report/pgReportGPSTemplate.aspx', NULL, 
    NULL, NULL, NULL, 'Y', 'X', 
    NULL, NULL);
COMMIT;


Insert into ROLEDETAILS
   (ROLEID, MENUCODE, ACCESSENTRY, ACCESSEDIT, ACCESSDELETE, 
    ACCESSREPORT, ACCESSUTILITIES, ACCESSVIEW, ACCESSPRINT, PROJECTNAME, 
    SYSROWID)
 Values
   ('1', '01100402030137', 'Y', 'Y', 'Y', 
    'Y', 'Y', 'Y', 'Y', 'GPS', 
    '202006222057450004458880');
COMMIT;



---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------


PRC_PISSALARYPROCESS_INSERT
PRC_PISSALARY_WRKDAY_LV_UPDT
PRC_PISSALARYPROCESS_UPDATE
PRC_PISSALARYPROCESS_UPDATE
PRC_PISSALARYPROCESS_UPDATE
PRC_PISSALARYPROCESS_UPDATE
PRC_PISSALARYPROCESS_UPDATE
PRC_PISSALARYPROCESS_DEDN
PRC_PISSALARYPROCESS_UPDATE
PRC_PISSALARY_OTHCOMP_UPDATE
PRC_PISSALARYPROCESS_TRANSFER

---------------------------------------------------------------------------------------------

select * from pispaytransaction
where tokenno='S3002'

SELECT * FROM PISCOMPONENTMASTER
WHERE COMPONENTCODE='GROSSDEDN'


select PISCOMP.PF_E,PISCOMP.ESI_E,PISCOMP.PTAX,PISCOMP.ITAX,PISCOMP.TOTLOAN,NVL(PISCOMP.CANTEEN,0),NVL(PISCOMP.SAL_SAVING,0) from pispaytransaction PISCOMP
where tokenno='S3002'


PISCOMP.PF_E+PISCOMP.ESI_E+PISCOMP.PTAX+PISCOMP.ITAX+PISCOMP.TOTLOAN+PISCOMP.CANTEEN+PISCOMP.SAL_SAVING


SELECT * FROM PIS_ERROR_LOG


 SELECT A.COMPANYCODE, A.DIVISIONCODE, A.WORKERSERIAL, A.TOKENNO, A.YEARMONTH, 
 A.ATTN_SALD, A.ATTN_WRKD, A.ATTN_WPAY, A.ATTN_ADJD, A.ATTN_TOTD, ATTN_CALCF, A.ATTN_LDAY, A.ATTN_OFFD,A.LDAY_PL,A.LDAY_SL /*A.LDAY_PL, A.LDAY_CL, A.LDAY_SL*/ 
 , NVL(A.TOTALDED,0) AS TOTALDED, NVL(A.TOTLOANAMT,0) AS TOTLOANAMT, NVL(A.TOTLOANINT,0) AS TOTLOANINT, NVL(A.PTAX,0) AS PTAX, NVL(A.OTH_ALLW2,0) AS OTH_ALLW2, NVL(A.ESI_GROSS,0) AS ESI_GROSS, NVL(A.PEN_GROSS,0) AS PEN_GROSS, NVL(A.TOTEARN,0) AS TOTEARN, NVL(A.LOAN_PF,0) AS LOAN_PF, NVL(A.LINT_PF,0) AS LINT_PF, NVL(A.LNBL_PF,0) AS LNBL_PF, NVL(A.LIBL_PF,0) AS LIBL_PF, NVL(A.LINT_OTLN,0) AS LINT_OTLN, NVL(A.LIBL_OTLN,0) AS LIBL_OTLN, NVL(A.LNBL_MDLN,0) AS LNBL_MDLN, NVL(A.LVBL_PL,0) AS LVBL_PL, NVL(A.LNBL_SADV,0) AS LNBL_SADV, NVL(A.LNBL_PRLN,0) AS LNBL_PRLN, NVL(A.LINT_MGLN,0) AS LINT_MGLN, NVL(A.HRA_RT,0) AS HRA_RT, NVL(A.LIBL_SADV,0) AS LIBL_SADV, NVL(A.LNBL_EDLN,0) AS LNBL_EDLN, NVL(A.LNBL_MGLN,0) AS LNBL_MGLN, NVL(A.TOTINT,0) AS TOTINT, NVL(A.HRA_GROSS,0) AS HRA_GROSS, NVL(A.PF_GROSS,0) AS PF_GROSS, NVL(A.LINT_EDLN,0) AS LINT_EDLN, NVL(A.LIBL_EDLN,0) AS LIBL_EDLN, NVL(A.LVBL_SL,0) AS LVBL_SL, NVL(A.LINT_PRLN,0) AS LINT_PRLN, NVL(A.LINT_VCLN,0) AS LINT_VCLN, NVL(A.LIBL_MGLN,0) AS LIBL_MGLN, NVL(A.LINT_MDLN,0) AS LINT_MDLN, NVL(A.LNBL_OTLN,0) AS LNBL_OTLN, NVL(A.LNBL_VCLN,0) AS LNBL_VCLN, NVL(A.MISC_BF,0) AS MISC_BF, NVL(A.LVBL_CL,0) AS LVBL_CL, NVL(A.HRA_PER,0) AS HRA_PER, NVL(A.GR_ESI_OTH,0) AS GR_ESI_OTH, NVL(A.MISC_CF,0) AS MISC_CF, NVL(A.SAL_SAVING,0) AS SAL_SAVING, NVL(A.LIBL_MDLN,0) AS LIBL_MDLN, NVL(A.FSTL_EARN,0) AS FSTL_EARN, NVL(A.LOAN_VCLN,0) AS LOAN_VCLN, NVL(A.LOAN_MGLN,0) AS LOAN_MGLN, NVL(A.CANTEEN,0) AS CANTEEN, NVL(A.PF_C,0) AS PF_C, NVL(A.PF_E,0) AS PF_E, NVL(A.FPF,0) AS FPF, NVL(A.CONV_ALLW,0) AS CONV_ALLW, NVL(A.ITAX,0) AS ITAX, NVL(A.NETSALARY,0) AS NETSALARY, NVL(A.PTAX_GROSS,0) AS PTAX_GROSS, NVL(A.CHILD_ALLW,0) AS CHILD_ALLW, NVL(A.GROSSDEDN,0) AS GROSSDEDN, NVL(A.SARR_ARRE,0) AS SARR_ARRE, NVL(A.SARR_ARRD,0) AS SARR_ARRD, NVL(A.OTH_ALLW,0) AS OTH_ALLW, NVL(A.FIX_ALW,0) AS FIX_ALW, NVL(A.GROSSEARN,0) AS GROSSEARN, NVL(A.ESI_C,0) AS ESI_C, NVL(A.ESI_E,0) AS ESI_E, NVL(A.GELESI,0) AS GELESI, NVL(A.FSTL_DED,0) AS FSTL_DED, NVL(A.LCUM_CL,0) AS LCUM_CL, NVL(A.LCUM_PL,0) AS LCUM_PL, NVL(A.LIBL_PRLN,0) AS LIBL_PRLN, NVL(A.LOAN_MDLN,0) AS LOAN_MDLN, NVL(A.LIBL_VCLN,0) AS LIBL_VCLN, NVL(A.LINT_SADV,0) AS LINT_SADV, NVL(A.BASIC,0) AS BASIC, NVL(A.BASIC_RT,0) AS BASIC_RT, NVL(A.PERS_ALLW,0) AS PERS_ALLW, NVL(A.SERV_ALLW,0) AS SERV_ALLW, NVL(A.HRA,0) AS HRA, NVL(A.INCENTIVE,0) AS INCENTIVE, NVL(A.SOFT_ALLW,0) AS SOFT_ALLW, NVL(A.LOAN_SADV,0) AS LOAN_SADV, NVL(A.LOAN_PRLN,0) AS LOAN_PRLN, NVL(A.LOAN_EDLN,0) AS LOAN_EDLN, NVL(A.LOAN_OTLN,0) AS LOAN_OTLN 
 FROM PISPAYTRANSACTION_SWT A 
 WHERE A.COMPANYCODE = '0001' AND DIVISIONCODE = '001' 
   AND A.YEARMONTH = '202004' 
   AND A.TRANSACTIONTYPE = 'SALARY' 
 ORDER BY A.WORKERSERIAL --
 
 
 PRC_PISSALARYPROCESS_DEDN
 
 SELECT * FROM WPS_ERROR_LOG
 
 update PISPAYTRANSACTION_SWT A 
 set 
 ( OTH_ALLW2 , ESI_GROSS , PEN_GROSS , TOTEARN , HRA_RT , HRA_GROSS , PF_GROSS , ATTN_HOLD , HRA_PER , CONV_ALLW , PTAX_GROSS , 
 CHILD_ALLW , OTH_ALLW , FIX_ALW , GROSSEARN , BASIC , BASIC_RT , PERS_ALLW , SERV_ALLW , HRA , SOFT_ALLW )  = 
 ( SELECT  A.OTH_ALLW2+SUM(B.OTH_ALLW2) , A.ESI_GROSS+SUM(B.ESI_GROSS) , A.PEN_GROSS+SUM(B.PEN_GROSS) , 
 A.TOTEARN+SUM(B.TOTEARN) , A.HRA_RT+SUM(B.HRA_RT) , A.HRA_GROSS+SUM(B.HRA_GROSS) , 
 A.PF_GROSS+SUM(B.PF_GROSS) , A.ATTN_HOLD+SUM(B.ATTN_HOLD) , A.HRA_PER+SUM(B.HRA_PER) , 
 A.CONV_ALLW+SUM(B.CONV_ALLW) , A.PTAX_GROSS+SUM(B.PTAX_GROSS) , A.CHILD_ALLW+SUM(B.CHILD_ALLW) , 
 A.OTH_ALLW+SUM(B.OTH_ALLW) , A.FIX_ALW+SUM(B.FIX_ALW) , A.GROSSEARN+SUM(B.GROSSEARN) , 
 A.BASIC+SUM(B.BASIC) , A.BASIC_RT+SUM(B.BASIC_RT) , A.PERS_ALLW+SUM(B.PERS_ALLW) , 
 A.SERV_ALLW+SUM(B.SERV_ALLW) , A.HRA+SUM(B.HRA) , A.SOFT_ALLW+SUM(B.SOFT_ALLW)  FROM PISOTHERTRANSACTION B WHERE 
 B.COMPANYCODE = A.COMPANYCODE  
 AND B.DIVISIONCODE = A.DIVISIONCODE 
 AND B.EFFECT_YEARMONTH = A.YEARMONTH 
 AND B.TRANSACTIONTYPE =  'ADJUSTMENT' 
 AND A.WORKERSERIAL = B.WORKERSERIAL 
  ) 
 WHERE 
   COMPANYCODE = '0001'  
   AND DIVISIONCODE = '001'  
   AND YEARMONTH = '202004'  
   AND EXISTS ( SELECT WORKERSERIAL FROM PISOTHERTRANSACTION B  WHERE B.COMPANYCODE = A.COMPANYCODE AND B.DIVISIONCODE = A.DIVISIONCODE AND B.EFFECT_YEARMONTH = A.YEARMONTH  AND B.TRANSACTIONTYPE =  'ADJUSTMENT'   AND B.WORKERSERIAL=A.WORKERSERIAL) 
   
   
   
   CREATE TABLE PISOTHERTRANSACTION AS
   SELECT * FROM PISPAYTRANSACTION WHERE 1=2
   
   
   DELETE FROM WPS_ERROR_LOG
   
   
   SELECT * FROM MENUMASTER_RND
   WHERE MENUCODE=''
   
   SELECT * FROM MENUMASTER_RND
   WHERE UPPER(MENUDESC) LIKE UPPER('%SALARY PRO%')
   
   SELECT * FROM ROLEDETAILS
   WHERE MENUCODE=''
   
   SELECT * FROM REPORTPARAMETERMASTER
   WHERE REPORTTAG=''
   
   
   prcSalary_Bf_MainSave
   
   
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------


INSERT INTO GTT_PAYSLIP_CDM 
(
    SLNO, COMPANYCODE, DIVISIONCODE, COMPANYNAME, DIVISIONNAME, DIVISIONSTATE, TOKENNO, EMPLOYEENAME, 
    ATTNBOOKCODE, ATTNBOOKDESC,CLUSTERCODE, CLUSTERDESC,
    HAZIRA, PLAN, REAL, DAILYWAGE, SUNDAY, TOTAL, BONUS_KGS, BONUS_VALUE, DISCOUNT_KG, DISCOUNT_VALUE, 
    GROSS_SALARY, INSS, OTM, NET_SALARY, ADVANCE, AMOUNT_PAYABLE
)
SELECT ROW_NUMBER() OVER (PARTITION BY A.CLUSTERCODE, A.ATTNBOOKCODE  ORDER BY A.CLUSTERCODE, A.ATTNBOOKCODE) SLNO, A.COMPANYCODE,A.DIVISIONCODE,C.COMPANYNAME, D.DIVISIONNAME,D.DIVISIONSTATE,A.TOKENNO,B.EMPLOYEENAME,
A.ATTNBOOKCODE, E.ATTNBOOKDESC, A.CLUSTERCODE, F.CLUSTERDESC,
HAZIRA,0 PLAN, 0 REAL, GROSSWAGES DAILYWAGE, 0 SUNDAY, 0 TOTAL, 0 BONUS_KGS, 0 BONUS_VALUE,
0 DISCOUNT_KG, 0 DISCOUNT_VALUE, 0 GROSS_SALARY, 0 INSS, 0 OTM, 0 NET_SALARY, 0 ADVANCE, 0 AMOUNT_PAYABLE
 FROM GPSPAYSHEETDETAILS A, GPSEMPLOYEEMAST B,COMPANYMAST C, DIVISIONMASTER D, GPSATTNBOOKMAST E, GPSCLUSTERMASTER F
 WHERE A.DIVISIONCODE='Y01'
 AND PERIODFROM = TO_DATE('01/03/2020','DD/MM/YYYY')
 AND PERIODTO = TO_DATE('31/03/2020','DD/MM/YYYY')
 AND A.COMPANYCODE=B.COMPANYCODE
 AND A.DIVISIONCODE=B.DIVISIONCODE
 AND A.TOKENNO=B.TOKENNO
 AND A.COMPANYCODE=E.COMPANYCODE
 AND A.DIVISIONCODE=E.DIVISIONCODE
 AND A.ATTNBOOKCODE=E.ATTNBOOKCODE
 AND A.COMPANYCODE=F.COMPANYCODE
 AND A.DIVISIONCODE=F.DIVISIONCODE
 AND A.CLUSTERCODE=F.CLUSTERCODE
 AND A.COMPANYCODE=C.COMPANYCODE
 AND A.COMPANYCODE=D.COMPANYCODE
 AND A.DIVISIONCODE=D.DIVISIONCODE;
 
 select * from GPSATTNBOOKMAST
 
 select * from GTT_PAYSLIP_CDM
 
 SELECT * FROM 
 GPSCLUSTERMASTER
 
 CLUSTERCODE, CLUSTERDESC
 
 SELECT ROW_NUMBER() OVER (PARTITION BY A.TOKENNO, ORDER BY A.TOKENNO)
 
 
 
INSERT INTO GTT_PAYSLIP_CDM 
(
    SLNO, COMPANYCODE, DIVISIONCODE, COMPANYNAME, DIVISIONNAME, DIVISIONSTATE, TOKENNO, EMPLOYEENAME, 
    ATTNBOOKCODE, ATTNBOOKDESC,CLUSTERCODE, CLUSTERDESC,
    HAZIRA, PLAN, REAL, DAILYWAGE, SUNDAY, TOTAL, BONUS_KGS, BONUS_VALUE, DISCOUNT_KG, DISCOUNT_VALUE, 
    GROSS_SALARY, INSS, OTM, NET_SALARY, ADVANCE, AMOUNT_PAYABLE
)
 SELECT  (MAX(SLNO)+1) SLNO, COMPANYCODE, DIVISIONCODE, COMPANYNAME, DIVISIONNAME, DIVISIONSTATE, MAX(TOKENNO) TOKENNO,'ATTENBOOK SUB TOTAL' EMPLOYEENAME, 
    ATTNBOOKCODE, ATTNBOOKDESC,CLUSTERCODE, CLUSTERDESC,
    SUM(HAZIRA) HAZIRA, SUM(PLAN) PLAN, SUM(REAL) REAL, SUM(DAILYWAGE) DAILYWAGE, SUM(SUNDAY) SUNDAY, SUM(TOTAL) TOTAL, 
    SUM(BONUS_KGS) BONUS_KGS, SUM(BONUS_VALUE) BONUS_VALUE, SUM(DISCOUNT_KG) DISCOUNT_KG, SUM(DISCOUNT_VALUE) DISCOUNT_VALUE, 
    SUM(GROSS_SALARY) GROSS_SALARY, SUM(INSS) INSS, SUM(OTM) OTM, SUM(NET_SALARY) NET_SALARY, SUM(ADVANCE) ADVANCE, SUM(AMOUNT_PAYABLE) AMOUNT_PAYABLE
 FROM GTT_PAYSLIP_CDM
 GROUP BY COMPANYCODE, DIVISIONCODE, COMPANYNAME, DIVISIONNAME, DIVISIONSTATE, ATTNBOOKCODE, ATTNBOOKDESC,CLUSTERCODE, CLUSTERDESC
 
 
 
INSERT INTO GTT_PAYSLIP_CDM 
(
    SLNO, COMPANYCODE, DIVISIONCODE, COMPANYNAME, DIVISIONNAME, DIVISIONSTATE, TOKENNO, EMPLOYEENAME, 
    ATTNBOOKCODE, ATTNBOOKDESC,CLUSTERCODE, CLUSTERDESC,
    HAZIRA, PLAN, REAL, DAILYWAGE, SUNDAY, TOTAL, BONUS_KGS, BONUS_VALUE, DISCOUNT_KG, DISCOUNT_VALUE, 
    GROSS_SALARY, INSS, OTM, NET_SALARY, ADVANCE, AMOUNT_PAYABLE
)
 SELECT  (MAX(SLNO)+1) SLNO, COMPANYCODE, DIVISIONCODE, COMPANYNAME, DIVISIONNAME, DIVISIONSTATE, MAX(TOKENNO) TOKENNO,'DIV TOTAL' EMPLOYEENAME, 
    MAX(ATTNBOOKCODE) ATTNBOOKCODE, '---' ATTNBOOKDESC, CLUSTERCODE, CLUSTERDESC,
    SUM(HAZIRA) HAZIRA, SUM(PLAN) PLAN, SUM(REAL) REAL, SUM(DAILYWAGE) DAILYWAGE, SUM(SUNDAY) SUNDAY, SUM(TOTAL) TOTAL, 
    SUM(BONUS_KGS) BONUS_KGS, SUM(BONUS_VALUE) BONUS_VALUE, SUM(DISCOUNT_KG) DISCOUNT_KG, SUM(DISCOUNT_VALUE) DISCOUNT_VALUE, 
    SUM(GROSS_SALARY) GROSS_SALARY, SUM(INSS) INSS, SUM(OTM) OTM, SUM(NET_SALARY) NET_SALARY, SUM(ADVANCE) ADVANCE, SUM(AMOUNT_PAYABLE) AMOUNT_PAYABLE
 FROM GTT_PAYSLIP_CDM
 GROUP BY COMPANYCODE, DIVISIONCODE, COMPANYNAME, DIVISIONNAME, DIVISIONSTATE, CLUSTERCODE, CLUSTERDESC
 
 
 
INSERT INTO GTT_PAYSLIP_CDM 
(
    SLNO, COMPANYCODE, DIVISIONCODE, COMPANYNAME, DIVISIONNAME, DIVISIONSTATE, TOKENNO, EMPLOYEENAME, 
    ATTNBOOKCODE, ATTNBOOKDESC,CLUSTERCODE, CLUSTERDESC,
    HAZIRA, PLAN, REAL, DAILYWAGE, SUNDAY, TOTAL, BONUS_KGS, BONUS_VALUE, DISCOUNT_KG, DISCOUNT_VALUE, 
    GROSS_SALARY, INSS, OTM, NET_SALARY, ADVANCE, AMOUNT_PAYABLE
)
 SELECT  (MAX(SLNO)+1) SLNO, COMPANYCODE, DIVISIONCODE, COMPANYNAME, DIVISIONNAME, DIVISIONSTATE, MAX(TOKENNO) TOKENNO,'GRAND TOTAL' EMPLOYEENAME, 
    MAX(ATTNBOOKCODE) ATTNBOOKCODE, '---' ATTNBOOKDESC,MAX(CLUSTERCODE) CLUSTERCODE,'---' CLUSTERDESC,
    SUM(HAZIRA) HAZIRA, SUM(PLAN) PLAN, SUM(REAL) REAL, SUM(DAILYWAGE) DAILYWAGE, SUM(SUNDAY) SUNDAY, SUM(TOTAL) TOTAL, 
    SUM(BONUS_KGS) BONUS_KGS, SUM(BONUS_VALUE) BONUS_VALUE, SUM(DISCOUNT_KG) DISCOUNT_KG, SUM(DISCOUNT_VALUE) DISCOUNT_VALUE, 
    SUM(GROSS_SALARY) GROSS_SALARY, SUM(INSS) INSS, SUM(OTM) OTM, SUM(NET_SALARY) NET_SALARY, SUM(ADVANCE) ADVANCE, SUM(AMOUNT_PAYABLE) AMOUNT_PAYABLE
 FROM GTT_PAYSLIP_CDM
 GROUP BY COMPANYCODE, DIVISIONCODE, COMPANYNAME, DIVISIONNAME, DIVISIONSTATE
 
 SELECT ROW_NUMBER() OVER (PARTITION BY COMPANYCODE ORDER BY COMPANYCODE) SLN, A.* FROM GTT_PAYSLIP_CDM A
 ORDER BY CLUSTERCODE,ATTNBOOKCODE, SLNO 
 
 DELETE FROM GTT_PAYSLIP_CDM
 
 
 SELECT ROW_NUMBER() OVER (PARTITION BY COMPANYCODE ORDER BY COMPANYCODE) SLN, A.* FROM 
 (
     SELECT * FROM GTT_PAYSLIP_CDM
     ORDER BY CLUSTERCODE,ATTNBOOKCODE, SLNO
 )  A
 
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

DROP TABLE ASIANTEA.GTT_PAYSLIP_CDM CASCADE CONSTRAINTS;

CREATE TABLE ASIANTEA.GTT_PAYSLIP_CDM
(
--  ROWINDEX        NUMBER(18,2),
  SLNO            NUMBER(18,2),
  COMPANYCODE     VARCHAR2(10 BYTE),
  DIVISIONCODE    VARCHAR2(10 BYTE),
  COMPANYNAME     VARCHAR2(100 BYTE),
  DIVISIONNAME    VARCHAR2(100 BYTE),
  DIVISIONSTATE   VARCHAR2(50 BYTE),
  TOKENNO         VARCHAR2(10 BYTE),
  EMPLOYEENAME    VARCHAR2(100 BYTE),
  ATTNBOOKCODE    VARCHAR2(10 BYTE),
  ATTNBOOKDESC    VARCHAR2(100 BYTE),
  CLUSTERCODE     VARCHAR2(10 BYTE),
  CLUSTERDESC     VARCHAR2(100 BYTE),
  HAZIRA          NUMBER(11,2),
  PLAN            NUMBER(11,2),
  REAL            NUMBER(11,2),
  DAILYWAGE       NUMBER(15,4),
  SUNDAY          NUMBER(11,2),
  TOTAL           NUMBER(11,2),
  BONUS_KGS       NUMBER(11,2),
  BONUS_VALUE     NUMBER(11,2),
  DISCOUNT_KG     NUMBER(11,2),
  DISCOUNT_VALUE  NUMBER(11,2),
  GROSS_SALARY    NUMBER(11,2),
  INSS            NUMBER(11,2),
  OTM             NUMBER(11,2),
  NET_SALARY      NUMBER(11,2),
  ADVANCE         NUMBER(11,2),
  AMOUNT_PAYABLE  NUMBER(11,2),
  SIGNATURE       VARCHAR2(100 BYTE),
  REPORTHEADER    VARCHAR2(200 BYTE),
  TOPHEADER       VARCHAR2(100 BYTE),
  COLUMNHEADER    VARCHAR2(1000 BYTE),
  COLUMNVALUE     VARCHAR2(1000 BYTE),
  EX1             VARCHAR2(10 BYTE)
) 


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

--UPDATE PIS MODULE FOR TEA PROJECT
---------------------------------------------------------------------------------------------

0107010101		Unit Master	MASTERS
0107010102		Category Master	MASTERS
0107010103		Grade Master	MASTERS
0107010104		Department Master	MASTERS
0107010105		Designation Master	MASTERS

SELECT * FROM MENUMASTER_RND
WHERE MENUCODE IN ('0107010101',
               '0107010102',
               '0107010103',
               '0107010104',
               '0107010105' 
               );
 
SELECT * FROM ROLEDETAILS
WHERE MENUCODE IN ('0107010101',
               '0107010102',
               '0107010103',
               '0107010104',
               '0107010105' 
               );
 
UPDATE MENUMASTER_RND SET
EDITPOSSIBLE='N',    
DELETEPOSSIBLE = 'N'
WHERE MENUCODE IN ('0107010101',
               '0107010102',
               '0107010103',
               '0107010104',
               '0107010105' 
               );          
               
			   
---------------------------------------------------------------------------------------------


SET DEFINE OFF;
Insert into MENUMASTER_RND
   (MENUCODE, MENUNAME, MENUDESC, MENUTYPE, MENUTAG, 
    MENUTAG1, MENUTAG2, ENTRYPOSSIBLE, EDITPOSSIBLE, DELETEPOSSIBLE, 
    REPORTSPOSSIBLE, UTILITIESPOSSIBLE, ACTIVE, PROJECTNAME, MENUDETAILS, 
    EFFECTIVEDIVISION, EFFECTIVEINDIVISION, PROCEDURE_SAVE_EDIT, URLSRC, FRM_HEIGHT, 
    FRM_WIDTH, FUNCTIONCALL_BEFORE, FUNCTIONCALL_AFTER, VIEWPOSSIBLE, PRINTPOSSIBLE, 
    DOCDATEVALIDATEFIELD, AUDITRAIL)
 Values
   ('011004020416', NULL, 'PF FORM5 Regular', 'REPORTS', 'PF FORM5 REGULAR', 
    NULL, NULL, 'Y', 'Y', 'X', 
    'Y', 'X', 'Y', 'GPS', NULL, 
    '''0001'',''0002'',''0003'',''0004'',''0005'',''0006'',''0007'',''0008'',''0009'',''0010'',''0011''', '''0001'',''0002'',''0003'',''0004'',''0005'',''0006'',''0007'',''0008'',''0009'',''0010'',''0011''', NULL, 'GPS/Pages/Report/pgReportGPSTemplate.aspx', NULL, 
    NULL, NULL, NULL, 'X', 'X', 
    NULL, NULL);
COMMIT;


SET DEFINE OFF;
Insert into ROLEDETAILS
   (ROLEID, MENUCODE, ACCESSENTRY, ACCESSEDIT, ACCESSDELETE, 
    ACCESSREPORT, ACCESSUTILITIES, ACCESSVIEW, ACCESSPRINT, PROJECTNAME, 
    SYSROWID)
 Values
   ('1', '011004020416', 'Y', 'Y', 'Y', 
    'Y', 'Y', 'Y', 'Y', 'GPS', 
    '202003271627510015922351');
Insert into ROLEDETAILS
   (ROLEID, MENUCODE, ACCESSENTRY, ACCESSEDIT, ACCESSDELETE, 
    ACCESSREPORT, ACCESSUTILITIES, ACCESSVIEW, ACCESSPRINT, PROJECTNAME, 
    SYSROWID)
 Values
   ('13', '011004020416', 'Y', 'Y', 'Y', 
    'Y', 'Y', 'Y', 'Y', 'GPS', 
    '202003031107300015573366');
COMMIT;


SELECT * FROM MENUMASTER_RND
WHERE MENUCODE='011004020415'

SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%PF LOAN SUMM%')

SELECT * FROM ROLEDETAILS
WHERE MENUCODE='011004020415'

SELECT * FROM REPORTPARAMETERMASTER
WHERE REPORTTAG='LOAN SUMMARY'


SET DEFINE OFF;
Insert into REPORTPARAMETERMASTER
   (MODULENAME, REPORTTAG, REPORTTAG1, REPORTTAG2, REPORTTAG3, 
    MAINTABLE, SUBREPORTTABLE, SUBREPORTTABLE1, SUBREPORTTABLE2, SUBREPORTTABLE3, 
    SUBREPORTTABLE4, REPORTNAME, REFNO)
 Values
   ('GPS', 'PF FORM5 REGULAR', NULL, NULL, NULL, 
    'GTT_PFFORM5_REGULAR', NULL, NULL, NULL, NULL, 
    NULL, 'GPS/PAGES/Report/Transaction/rptPFFORM5Regular.rdlc', NULL);
COMMIT;


PROC_RPT_PFFORM5

D:\SOFTWEB\swterptea\SWTReport\rptPFFORM5Regular.rdl
---------------------------------------------------------------------------------------------

SET DEFINE OFF;
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'ACT_MGR_ALLW', 99, 
    'NUMBER', 15, 5, 'N', 'ACT_MGR_ALLW', 
    TO_TIMESTAMP('10/04/2019 3:17:05.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'ADHOC_DA', 99, 
    'NUMBER', 15, 5, 'N', 'ADHOC_DA', 
    TO_TIMESTAMP('26/06/2020 1:46:05.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'ATTN_CUMD', 99, 
    'NUMBER', 15, 5, 'N', 'ATTN_CUMD', 
    TO_TIMESTAMP('26/06/2020 1:48:05.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'ATTN_FDAY', 99, 
    'NUMBER', 15, 5, 'N', 'ATTN_FDAY', 
    TO_TIMESTAMP('26/06/2020 1:48:07.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'ATTN_WOFD', 99, 
    'NUMBER', 15, 5, 'N', 'ATTN_WOFD', 
    TO_TIMESTAMP('26/06/2020 1:48:07.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'ATTN_WOHD', 99, 
    'NUMBER', 15, 5, 'N', 'ATTN_WOHD', 
    TO_TIMESTAMP('26/06/2020 1:48:06.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'ATTN_WRKD', 99, 
    'NUMBER', 15, 5, 'N', 'ATTN_WRKD', 
    TO_TIMESTAMP('26/06/2020 1:48:07.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'BASIC', 15, 
    'NUMBER', 15, 5, 'N', 'BASIC', 
    TO_TIMESTAMP('24/11/2016 6:22:17.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'BONUSGROSS', 99, 
    'NUMBER', 15, 5, 'N', 'BONUSGROSS', 
    TO_TIMESTAMP('26/06/2020 1:44:28.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'CATEGORYCODE', 7, 
    'VARCHAR2', 10, 0, 'Y', 'CATEGORYCODE', 
    TO_TIMESTAMP('24/11/2016 6:22:17.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'COMMISSION', 99, 
    'NUMBER', 15, 5, 'N', 'COMMISSION', 
    TO_TIMESTAMP('26/06/2020 1:46:04.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'COMPANYCODE', 1, 
    'VARCHAR2', 10, 0, 'Y', 'COMPANYCODE', 
    TO_TIMESTAMP('24/11/2016 6:22:17.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'CONV_ALLW', 99, 
    'NUMBER', 15, 5, 'N', 'CONV_ALLW', 
    TO_TIMESTAMP('11/03/2019 4:13:04.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'DA', 99, 
    'NUMBER', 15, 5, 'N', 'DA', 
    TO_TIMESTAMP('26/06/2020 1:46:04.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'DA_AMOUNT', 99, 
    'NUMBER', 15, 5, 'N', 'DA_AMOUNT', 
    TO_TIMESTAMP('26/06/2020 1:45:47.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'DA_RATA', 99, 
    'NUMBER', 15, 5, 'N', 'DA_RATA', 
    TO_TIMESTAMP('26/06/2020 1:45:50.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'DEPARTMENTCODE', 6, 
    'VARCHAR2', 10, 0, 'N', 'DEPARTMENTCODE', 
    TO_TIMESTAMP('24/11/2016 6:22:17.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'DIVISIONCODE', 2, 
    'VARCHAR2', 10, 0, 'Y', 'DIVISIONCODE', 
    TO_TIMESTAMP('24/11/2016 6:22:17.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'EDUC_ALLW', 99, 
    'NUMBER', 15, 5, 'N', 'EDUC_ALLW', 
    TO_TIMESTAMP('26/06/2020 1:46:09.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'EDU_ALLW', 99, 
    'NUMBER', 15, 5, 'N', 'EDU_ALLW', 
    TO_TIMESTAMP('11/03/2019 4:13:05.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'ENTMT_ALLW', 99, 
    'NUMBER', 15, 5, 'N', 'ENTMT_ALLW', 
    TO_TIMESTAMP('26/06/2020 1:48:03.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'EX_GRATIA', 99, 
    'NUMBER', 15, 5, 'N', 'EX_GRATIA', 
    TO_TIMESTAMP('26/06/2020 1:48:03.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'FPF', 99, 
    'NUMBER', 15, 5, 'N', 'FPF', 
    TO_TIMESTAMP('19/01/2017 3:19:44.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'FUEL_EXP', 99, 
    'NUMBER', 15, 5, 'N', 'FUEL_EXP', 
    TO_TIMESTAMP('11/03/2019 5:05:25.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'GAS_ALLW', 99, 
    'NUMBER', 15, 5, 'N', 'GAS_ALLW', 
    TO_TIMESTAMP('10/04/2019 3:17:06.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'GELESI', 99, 
    'NUMBER', 15, 5, 'N', 'GELESI', 
    TO_TIMESTAMP('26/06/2020 1:44:32.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'GRADECODE', 8, 
    'VARCHAR2', 10, 0, 'Y', 'GRADECODE', 
    TO_TIMESTAMP('24/11/2016 6:22:17.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'GROSSDED', 99, 
    'NUMBER', 15, 5, 'N', 'GROSSDED', 
    TO_TIMESTAMP('26/06/2020 1:44:27.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'GROSSEARN', 99, 
    'NUMBER', 15, 5, 'N', 'GROSSEARN', 
    TO_TIMESTAMP('11/03/2019 4:13:06.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'GROSSPTAX', 99, 
    'NUMBER', 15, 5, 'N', 'GROSSPTAX', 
    TO_TIMESTAMP('11/03/2019 4:13:06.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'GROSS_ESI', 99, 
    'NUMBER', 15, 5, 'N', 'GROSS_ESI', 
    TO_TIMESTAMP('26/06/2020 1:45:48.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'GROSS_PEN', 99, 
    'NUMBER', 15, 5, 'N', 'GROSS_PEN', 
    TO_TIMESTAMP('26/06/2020 1:44:39.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'GR_ESI_OTH', 99, 
    'NUMBER', 15, 5, 'N', 'GR_ESI_OTH', 
    TO_TIMESTAMP('26/06/2020 1:45:48.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'HRA', 99, 
    'NUMBER', 15, 5, 'N', 'HRA', 
    TO_TIMESTAMP('11/03/2019 4:13:06.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'HRA_FIX', 99, 
    'NUMBER', 15, 5, 'N', 'HRA_FIX', 
    TO_TIMESTAMP('26/06/2020 1:44:40.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'HRA_FIXED', 99, 
    'NUMBER', 15, 5, 'N', 'HRA_FIXED', 
    TO_TIMESTAMP('16/03/2017 5:49:40.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'HRA_PER', 20, 
    'NUMBER', 15, 5, 'N', 'HRA_PER', 
    TO_TIMESTAMP('24/11/2016 6:22:17.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'ITAX', 99, 
    'NUMBER', 15, 5, 'N', 'ITAX', 
    TO_TIMESTAMP('19/01/2017 4:23:08.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'KIT_ALLW', 99, 
    'NUMBER', 15, 5, 'N', 'KIT_ALLW', 
    TO_TIMESTAMP('26/06/2020 1:48:09.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LCUM_CL', 99, 
    'NUMBER', 15, 5, 'N', 'LCUM_CL', 
    TO_TIMESTAMP('26/06/2020 1:48:08.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LCUM_PL', 99, 
    'NUMBER', 15, 5, 'N', 'LCUM_PL', 
    TO_TIMESTAMP('26/06/2020 1:45:49.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LCUM_SL', 99, 
    'NUMBER', 15, 5, 'N', 'LCUM_SL', 
    TO_TIMESTAMP('26/06/2020 1:48:08.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LIBL_CRLN', 99, 
    'NUMBER', 15, 5, 'N', 'LIBL_CRLN', 
    TO_TIMESTAMP('11/03/2019 4:13:07.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LIBL_HSLN', 99, 
    'NUMBER', 15, 5, 'N', 'LIBL_HSLN', 
    TO_TIMESTAMP('11/03/2019 4:13:08.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LIBL_SADV', 99, 
    'NUMBER', 15, 5, 'N', 'LIBL_SADV', 
    TO_TIMESTAMP('11/03/2019 5:05:25.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LINTBL_ADVN', 99, 
    'NUMBER', 15, 5, 'N', 'LINTBL_ADVN', 
    TO_TIMESTAMP('26/06/2020 1:45:54.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LINTBL_CRLN', 99, 
    'NUMBER', 15, 5, 'N', 'LINTBL_CRLN', 
    TO_TIMESTAMP('26/06/2020 1:46:03.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LINTBL_EDULN', 99, 
    'NUMBER', 15, 5, 'N', 'LINTBL_EDULN', 
    TO_TIMESTAMP('26/06/2020 1:45:59.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LINTBL_HSB', 99, 
    'NUMBER', 15, 5, 'N', 'LINTBL_HSB', 
    TO_TIMESTAMP('26/06/2020 1:45:52.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LINTBL_MARLN', 99, 
    'NUMBER', 15, 5, 'N', 'LINTBL_MARLN', 
    TO_TIMESTAMP('26/06/2020 1:45:57.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LINTBL_MEDLN', 99, 
    'NUMBER', 15, 5, 'N', 'LINTBL_MEDLN', 
    TO_TIMESTAMP('26/06/2020 1:44:36.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LINTBL_OTHLN', 99, 
    'NUMBER', 15, 5, 'N', 'LINTBL_OTHLN', 
    TO_TIMESTAMP('26/06/2020 1:46:02.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LINTBL_PERLN', 99, 
    'NUMBER', 15, 5, 'N', 'LINTBL_PERLN', 
    TO_TIMESTAMP('26/06/2020 1:44:34.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LINT_ADVN', 99, 
    'NUMBER', 15, 5, 'N', 'LINT_ADVN', 
    TO_TIMESTAMP('26/06/2020 1:45:53.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LINT_CRLN', 99, 
    'NUMBER', 15, 5, 'N', 'LINT_CRLN', 
    TO_TIMESTAMP('11/03/2019 4:13:09.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LINT_EDULN', 99, 
    'NUMBER', 15, 5, 'N', 'LINT_EDULN', 
    TO_TIMESTAMP('26/06/2020 1:45:58.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LINT_HSB', 99, 
    'NUMBER', 15, 5, 'N', 'LINT_HSB', 
    TO_TIMESTAMP('26/06/2020 1:44:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LINT_HSLN', 99, 
    'NUMBER', 15, 5, 'N', 'LINT_HSLN', 
    TO_TIMESTAMP('11/03/2019 4:13:10.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LINT_MARLN', 99, 
    'NUMBER', 15, 5, 'N', 'LINT_MARLN', 
    TO_TIMESTAMP('26/06/2020 1:45:55.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LINT_MEDLN', 99, 
    'NUMBER', 15, 5, 'N', 'LINT_MEDLN', 
    TO_TIMESTAMP('26/06/2020 1:44:35.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LINT_OTHLN', 99, 
    'NUMBER', 15, 5, 'N', 'LINT_OTHLN', 
    TO_TIMESTAMP('26/06/2020 1:46:01.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LINT_PERLN', 99, 
    'NUMBER', 15, 5, 'N', 'LINT_PERLN', 
    TO_TIMESTAMP('26/06/2020 1:44:33.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LINT_SADV', 99, 
    'NUMBER', 15, 5, 'N', 'LINT_SADV', 
    TO_TIMESTAMP('11/03/2019 4:13:11.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LNBL_ADVN', 99, 
    'NUMBER', 15, 5, 'N', 'LNBL_ADVN', 
    TO_TIMESTAMP('26/06/2020 1:45:53.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LNBL_CRLN', 99, 
    'NUMBER', 15, 5, 'N', 'LNBL_CRLN', 
    TO_TIMESTAMP('11/03/2019 4:13:11.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LNBL_EDULN', 99, 
    'NUMBER', 15, 5, 'N', 'LNBL_EDULN', 
    TO_TIMESTAMP('26/06/2020 1:45:59.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LNBL_HSB', 99, 
    'NUMBER', 15, 5, 'N', 'LNBL_HSB', 
    TO_TIMESTAMP('26/06/2020 1:45:51.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LNBL_HSLN', 99, 
    'NUMBER', 15, 5, 'N', 'LNBL_HSLN', 
    TO_TIMESTAMP('11/03/2019 4:13:12.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LNBL_MARLN', 99, 
    'NUMBER', 15, 5, 'N', 'LNBL_MARLN', 
    TO_TIMESTAMP('26/06/2020 1:45:56.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LNBL_MEDLN', 99, 
    'NUMBER', 15, 5, 'N', 'LNBL_MEDLN', 
    TO_TIMESTAMP('26/06/2020 1:44:34.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LNBL_OTHLN', 99, 
    'NUMBER', 15, 5, 'N', 'LNBL_OTHLN', 
    TO_TIMESTAMP('26/06/2020 1:46:02.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LNBL_PERLN', 99, 
    'NUMBER', 15, 5, 'N', 'LNBL_PERLN', 
    TO_TIMESTAMP('26/06/2020 1:44:30.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LNBL_SADV', 99, 
    'NUMBER', 15, 5, 'N', 'LNBL_SADV', 
    TO_TIMESTAMP('11/03/2019 4:13:13.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LOAN_ADVN', 99, 
    'NUMBER', 15, 5, 'N', 'LOAN_ADVN', 
    TO_TIMESTAMP('26/06/2020 1:48:06.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LOAN_CRLN', 99, 
    'NUMBER', 15, 5, 'N', 'LOAN_CRLN', 
    TO_TIMESTAMP('11/03/2019 4:13:13.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LOAN_EDULN', 99, 
    'NUMBER', 15, 5, 'N', 'LOAN_EDULN', 
    TO_TIMESTAMP('26/06/2020 1:45:57.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LOAN_HSB', 99, 
    'NUMBER', 15, 5, 'N', 'LOAN_HSB', 
    TO_TIMESTAMP('26/06/2020 1:48:06.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LOAN_HSLN', 99, 
    'NUMBER', 15, 5, 'N', 'LOAN_HSLN', 
    TO_TIMESTAMP('11/03/2019 4:13:14.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LOAN_MARLN', 99, 
    'NUMBER', 15, 5, 'N', 'LOAN_MARLN', 
    TO_TIMESTAMP('26/06/2020 1:45:55.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LOAN_MEDLN', 99, 
    'NUMBER', 15, 5, 'N', 'LOAN_MEDLN', 
    TO_TIMESTAMP('26/06/2020 1:44:36.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LOAN_OTHLN', 99, 
    'NUMBER', 15, 5, 'N', 'LOAN_OTHLN', 
    TO_TIMESTAMP('26/06/2020 1:46:00.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LOAN_PERLN', 99, 
    'NUMBER', 15, 5, 'N', 'LOAN_PERLN', 
    TO_TIMESTAMP('26/06/2020 1:44:30.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LOAN_SADV', 99, 
    'NUMBER', 15, 5, 'N', 'LOAN_SADV', 
    TO_TIMESTAMP('11/03/2019 4:13:15.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LTA', 99, 
    'NUMBER', 15, 5, 'N', 'LTA', 
    TO_TIMESTAMP('28/01/2020 12:45:03.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LVBL_CL', 99, 
    'NUMBER', 15, 5, 'N', 'LVBL_CL', 
    TO_TIMESTAMP('26/06/2020 1:44:32.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LVBL_PL', 99, 
    'NUMBER', 15, 5, 'N', 'LVBL_PL', 
    TO_TIMESTAMP('26/06/2020 1:45:50.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LVBL_SL', 99, 
    'NUMBER', 15, 5, 'N', 'LVBL_SL', 
    TO_TIMESTAMP('26/06/2020 1:44:31.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LV_ENCASH', 99, 
    'NUMBER', 15, 5, 'N', 'LV_ENCASH', 
    TO_TIMESTAMP('26/06/2020 1:48:02.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'LWF', 99, 
    'NUMBER', 15, 5, 'N', 'LWF', 
    TO_TIMESTAMP('26/06/2020 1:44:40.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'MEDICAL', 99, 
    'NUMBER', 15, 5, 'N', 'MEDICAL', 
    TO_TIMESTAMP('28/01/2020 12:44:56.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'MEDICAL_EXP', 99, 
    'NUMBER', 15, 5, 'N', 'MEDICAL_EXP', 
    TO_TIMESTAMP('22/04/2019 3:59:52.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'MEDI_ALLW', 99, 
    'NUMBER', 15, 5, 'N', 'MEDI_ALLW', 
    TO_TIMESTAMP('26/06/2020 1:48:02.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'MISC_DEDN', 99, 
    'NUMBER', 15, 5, 'N', 'MISC_DEDN', 
    TO_TIMESTAMP('19/01/2017 5:36:00.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'NETSALARY', 99, 
    'NUMBER', 15, 5, 'N', 'NETSALARY', 
    TO_TIMESTAMP('08/12/2016 5:29:42.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'NONE', 'GBL_PISCOMPONENTASSIGNMENT', 'OPERATIONMODE', 13, 
    'VARCHAR2', 1, 0, 'N', 'OPERATIONMODE', 
    TO_TIMESTAMP('24/11/2016 6:22:17.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'OTH_ALLW_1', 99, 
    'NUMBER', 15, 5, 'N', 'OTH_ALLW_1', 
    TO_TIMESTAMP('26/06/2020 1:48:04.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'OTH_ALLW_2', 99, 
    'NUMBER', 15, 5, 'N', 'OTH_ALLW_2', 
    TO_TIMESTAMP('26/06/2020 1:48:04.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'OTH_ALLW_TM', 99, 
    'NUMBER', 15, 5, 'N', 'OTH_ALLW_TM', 
    TO_TIMESTAMP('26/06/2020 1:48:09.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'OTH_DEDN_TM', 99, 
    'NUMBER', 15, 5, 'N', 'OTH_DEDN_TM', 
    TO_TIMESTAMP('26/06/2020 1:48:04.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'PEN_GROSS', 99, 
    'NUMBER', 15, 5, 'N', 'PEN_GROSS', 
    TO_TIMESTAMP('19/01/2017 2:58:13.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'PER_PAY', 99, 
    'NUMBER', 15, 5, 'N', 'PER_PAY', 
    TO_TIMESTAMP('22/04/2019 3:59:52.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'PFGROSS', 99, 
    'NUMBER', 15, 5, 'N', 'PFGROSS', 
    TO_TIMESTAMP('26/06/2020 1:44:38.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'PF_E', 24, 
    'NUMBER', 15, 5, 'N', 'PF_E', 
    TO_TIMESTAMP('24/11/2016 6:22:17.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'PF_GROSS', 22, 
    'NUMBER', 15, 5, 'N', 'PF_GROSS', 
    TO_TIMESTAMP('24/11/2016 6:22:17.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'PHONE_EXP', 99, 
    'NUMBER', 15, 5, 'N', 'PHONE_EXP', 
    TO_TIMESTAMP('10/04/2019 3:17:00.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'PRFRM_BONUS', 99, 
    'NUMBER', 15, 5, 'N', 'PRFRM_BONUS', 
    TO_TIMESTAMP('26/06/2020 1:48:03.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'PTAX', 99, 
    'NUMBER', 15, 5, 'N', 'PTAX', 
    TO_TIMESTAMP('19/01/2017 4:01:43.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'PTAX_GROSS', 99, 
    'NUMBER', 15, 5, 'N', 'PTAX_GROSS', 
    TO_TIMESTAMP('19/01/2017 3:55:07.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'RENT', 99, 
    'NUMBER', 15, 5, 'N', 'RENT', 
    TO_TIMESTAMP('26/06/2020 1:48:05.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'SANNF', 99, 
    'NUMBER', 15, 5, 'N', 'SANNF', 
    TO_TIMESTAMP('11/03/2019 4:13:16.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'SARR_NPFARRE', 99, 
    'NUMBER', 15, 5, 'N', 'SARR_NPFARRE', 
    TO_TIMESTAMP('26/06/2020 1:48:08.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'SARR_PFARRE', 99, 
    'NUMBER', 15, 5, 'N', 'SARR_PFARRE', 
    TO_TIMESTAMP('26/06/2020 1:48:09.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'SHIFT_ALLW', 99, 
    'NUMBER', 15, 5, 'N', 'SHIFT_ALLW', 
    TO_TIMESTAMP('26/06/2020 1:46:06.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'SOFT_FURNS', 99, 
    'NUMBER', 15, 5, 'N', 'SOFT_FURNS', 
    TO_TIMESTAMP('26/06/2020 1:46:09.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'SPCL_ALLW', 99, 
    'NUMBER', 15, 5, 'N', 'SPCL_ALLW', 
    TO_TIMESTAMP('26/06/2020 1:46:08.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'SYSROWID', 12, 
    'VARCHAR2', 100, 0, 'N', 'SYSROWID', 
    TO_TIMESTAMP('24/11/2016 6:22:17.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'TIFFN_ALLW', 99, 
    'NUMBER', 15, 5, 'N', 'TIFFN_ALLW', 
    TO_TIMESTAMP('26/06/2020 1:46:06.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'TOKENNO', 10, 
    'VARCHAR2', 20, 0, 'N', 'TOKENNO', 
    TO_TIMESTAMP('24/11/2016 6:22:17.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'TOTALDED', 99, 
    'NUMBER', 15, 5, 'N', 'TOTALDED', 
    TO_TIMESTAMP('11/03/2019 4:13:16.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'TOTALEARN', 99, 
    'NUMBER', 15, 5, 'N', 'TOTALEARN', 
    TO_TIMESTAMP('26/06/2020 1:48:10.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'TRANSACTIONTYPE', 11, 
    'VARCHAR2', 10, 0, 'Y', 'TRANSACTIONTYPE', 
    TO_TIMESTAMP('24/11/2016 6:22:17.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'TRNP_ALLW', 99, 
    'NUMBER', 15, 5, 'N', 'TRNP_ALLW', 
    TO_TIMESTAMP('26/06/2020 1:46:07.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'UNITCODE', 5, 
    'VARCHAR2', 10, 0, 'N', 'UNITCODE', 
    TO_TIMESTAMP('24/11/2016 6:22:17.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'USERNAME', 14, 
    'VARCHAR2', 50, 0, 'N', 'USERNAME', 
    TO_TIMESTAMP('24/11/2016 6:22:17.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'VDA', 99, 
    'NUMBER', 15, 5, 'N', 'VDA', 
    TO_TIMESTAMP('10/04/2019 3:17:06.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'VDA_AMT', 99, 
    'NUMBER', 15, 5, 'N', 'VDA_AMT', 
    TO_TIMESTAMP('26/06/2020 1:48:05.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'VDA_RATE', 99, 
    'NUMBER', 15, 5, 'N', 'VDA_RATE', 
    TO_TIMESTAMP('26/06/2020 1:44:38.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'VPF', 99, 
    'NUMBER', 15, 5, 'N', 'VPF', 
    TO_TIMESTAMP('19/01/2017 4:08:35.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'VPF_PER', 99, 
    'NUMBER', 15, 5, 'N', 'VPF_PER', 
    TO_TIMESTAMP('11/03/2019 4:13:18.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'WORKERSERIAL', 9, 
    'VARCHAR2', 10, 0, 'N', 'WORKERSERIAL', 
    TO_TIMESTAMP('24/11/2016 6:22:17.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'YEARCODE', 3, 
    'VARCHAR2', 10, 0, 'Y', 'YEARCODE', 
    TO_TIMESTAMP('24/11/2016 6:22:17.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10013, 'PISCOMPONENTASSIGNMENT', 'GBL_PISCOMPONENTASSIGNMENT', 'YEARMONTH', 4, 
    'VARCHAR2', 10, 0, 'Y', 'YEARMONTH', 
    TO_TIMESTAMP('24/11/2016 6:22:17.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
COMMIT;



---------------------------------------------------------------------------------------------

SELECT * FROM MENUMASTER_RND
WHERE MENUCODE='011004020415'

SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%PF LOAN SUMM%')

SELECT * FROM ROLEDETAILS
WHERE MENUCODE='011004020415'

SELECT * FROM REPORTPARAMETERMASTER
WHERE REPORTTAG=''



SET DEFINE OFF;
Insert into MENUMASTER_RND
   (MENUCODE, MENUNAME, MENUDESC, MENUTYPE, MENUTAG, 
    MENUTAG1, MENUTAG2, ENTRYPOSSIBLE, EDITPOSSIBLE, DELETEPOSSIBLE, 
    REPORTSPOSSIBLE, UTILITIESPOSSIBLE, ACTIVE, PROJECTNAME, MENUDETAILS, 
    EFFECTIVEDIVISION, EFFECTIVEINDIVISION, PROCEDURE_SAVE_EDIT, URLSRC, FRM_HEIGHT, 
    FRM_WIDTH, FUNCTIONCALL_BEFORE, FUNCTIONCALL_AFTER, VIEWPOSSIBLE, PRINTPOSSIBLE, 
    DOCDATEVALIDATEFIELD, AUDITRAIL, KEY_COLUMN)
 Values
   ('011004020416', NULL, 'PF FORM5 Regular', 'REPORTS', 'PF FORM5 REGULAR', 
    NULL, NULL, 'Y', 'Y', 'X', 
    'Y', 'X', 'Y', 'GPS', NULL, 
    '''0001'',''0002'',''0003'',''0004'',''0005'',''0006'',''0007'',''0008'',''0009'',''0010'',''0011''', '''0001'',''0002'',''0003'',''0004'',''0005'',''0006'',''0007'',''0008'',''0009'',''0010'',''0011''', NULL, 'GPS/Pages/Report/pgReportGPSTemplate.aspx', NULL, 
    NULL, NULL, NULL, 'X', 'X', 
    NULL, NULL, NULL);
COMMIT;


SET DEFINE OFF;
Insert into ROLEDETAILS
   (ROLEID, MENUCODE, ACCESSENTRY, ACCESSEDIT, ACCESSDELETE, 
    ACCESSREPORT, ACCESSUTILITIES, ACCESSVIEW, ACCESSPRINT, PROJECTNAME, 
    SYSROWID)
 Values
   ('1', '011004020416', 'Y', 'Y', 'Y', 
    'Y', 'Y', 'Y', 'Y', 'GPS', 
    '202003271627510015922351');
Insert into ROLEDETAILS
   (ROLEID, MENUCODE, ACCESSENTRY, ACCESSEDIT, ACCESSDELETE, 
    ACCESSREPORT, ACCESSUTILITIES, ACCESSVIEW, ACCESSPRINT, PROJECTNAME, 
    SYSROWID)
 Values
   ('13', '011004020416', 'Y', 'Y', 'Y', 
    'Y', 'Y', 'Y', 'Y', 'GPS', 
    '202003031107300015573366');
COMMIT;



---------------------------------------------------------------------------------------------

SELECT * FROM
PISCOMPONENTMASTER

SELECT * FROM
PISPAYTRANSACTION

select distinct componentcode from piscomponentmaster
minus
select column_name from cols where table_name = 'PISPAYTRANSACTION'


select distinct componentcode from piscomponentmaster
minus
SELECT SYS_COLUMNNAME FROM SYS_TFMAP
WHERE SYS_TABLENAME_TEMP='GBL_PISCOMPONENTASSIGNMENT'

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='PISCOMPONENTASSIGNMENT'


CREATE TABLE PISCOMPONENTMASTER_260620 AS

SELECT * FROM PISCOMPONENTMASTER


UPDATE PISCOMPONENTMASTER SET
COMPONENTCODE=REPLACE(COMPONENTCODE,'.','_')
WHERE 1=1




select distinct componentcode from piscomponentmaster
minus

SELECT SYS_COLUMNNAME FROM SYS_TFMAP
WHERE SYS_TABLENAME_TEMP='GBL_PISCOMPONENTASSIGNMENT'
minus
select distinct componentcode from piscomponentmaster


PISCOMPONENTASSIGNMENT



EXEC PROC_CREATE_SYSTFMAP('PISCOMPONENTASSIGNMENT','COMPANYCODE,DIVISIONCODE,YEARCODE,YEARMONTH,CATEGORYCODE,GRADECODE,TRANSACTIONTYPE', 'GBL_PISCOMPONENTASSIGNMENT','10013') 


SELECT WM_CONCAT(SYS_COLUMNNAME) FROM SYS_TFMAP
WHERE SYS_TABLENAME_TEMP='GBL_PISCOMPONENTASSIGNMENT'
AND SYS_KEYCOLUMN='Y'



SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10013' 


DELETE FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10013' 

SELECT * FROM SYS_TFMAP WHERE  SYS_TABLE_SEQUENCIER = 10013

EXEC PROC_CREATE_GBL_TMP_TABLES(10013,0)


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_TEMP='GBL_PISCOMPONENTASSIGNMENT'
AND SYS_KEYCOLUMN='Y'




---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
25/06/2020
---------------------------------------------------------------------------------------------
--ADD PF FORM5 REGULAR REPORT ADDED TO ASIANTEA,ASSIGN.OTH_DEDN_TM,ASSIGN.RENT

SET DEFINE OFF;
Insert into MENUMASTER_RND
   (MENUCODE, MENUNAME, MENUDESC, MENUTYPE, MENUTAG, 
    MENUTAG1, MENUTAG2, ENTRYPOSSIBLE, EDITPOSSIBLE, DELETEPOSSIBLE, 
    REPORTSPOSSIBLE, UTILITIESPOSSIBLE, ACTIVE, PROJECTNAME, MENUDETAILS, 
    EFFECTIVEDIVISION, EFFECTIVEINDIVISION, PROCEDURE_SAVE_EDIT, URLSRC, FRM_HEIGHT, 
    FRM_WIDTH, FUNCTIONCALL_BEFORE, FUNCTIONCALL_AFTER, VIEWPOSSIBLE, PRINTPOSSIBLE, 
    DOCDATEVALIDATEFIELD, AUDITRAIL)
 Values
   ('011004020416', NULL, 'PF FORM5 Regular', 'REPORTS', 'PF FORM5 REGULAR', 
    NULL, NULL, 'Y', 'Y', 'X', 
    'Y', 'X', 'Y', 'GPS', NULL, 
    '''0001'',''0002'',''0003'',''0004'',''0005'',''0006'',''0007'',''0008'',''0009'',''0010'',''0011''', '''0001'',''0002'',''0003'',''0004'',''0005'',''0006'',''0007'',''0008'',''0009'',''0010'',''0011''', NULL, 'GPS/Pages/Report/pgReportGPSTemplate.aspx', NULL, 
    NULL, NULL, NULL, 'X', 'X', 
    NULL, NULL);
COMMIT;


SET DEFINE OFF;
Insert into ROLEDETAILS
   (ROLEID, MENUCODE, ACCESSENTRY, ACCESSEDIT, ACCESSDELETE, 
    ACCESSREPORT, ACCESSUTILITIES, ACCESSVIEW, ACCESSPRINT, PROJECTNAME, 
    SYSROWID)
 Values
   ('1', '011004020416', 'Y', 'Y', 'Y', 
    'Y', 'Y', 'Y', 'Y', 'GPS', 
    '202003271627510015922351');
Insert into ROLEDETAILS
   (ROLEID, MENUCODE, ACCESSENTRY, ACCESSEDIT, ACCESSDELETE, 
    ACCESSREPORT, ACCESSUTILITIES, ACCESSVIEW, ACCESSPRINT, PROJECTNAME, 
    SYSROWID)
 Values
   ('13', '011004020416', 'Y', 'Y', 'Y', 
    'Y', 'Y', 'Y', 'Y', 'GPS', 
    '202003031107300015573366');
COMMIT;


SELECT * FROM MENUMASTER_RND
WHERE MENUCODE='011004020415'

SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%PF LOAN SUMM%')

SELECT * FROM ROLEDETAILS
WHERE MENUCODE='011004020415'

SELECT * FROM REPORTPARAMETERMASTER
WHERE REPORTTAG='LOAN SUMMARY'


SET DEFINE OFF;
Insert into REPORTPARAMETERMASTER
   (MODULENAME, REPORTTAG, REPORTTAG1, REPORTTAG2, REPORTTAG3, 
    MAINTABLE, SUBREPORTTABLE, SUBREPORTTABLE1, SUBREPORTTABLE2, SUBREPORTTABLE3, 
    SUBREPORTTABLE4, REPORTNAME, REFNO)
 Values
   ('GPS', 'PF FORM5 REGULAR', NULL, NULL, NULL, 
    'GTT_PFFORM5_REGULAR', NULL, NULL, NULL, NULL, 
    NULL, 'GPS/PAGES/Report/Transaction/rptPFFORM5Regular.rdlc', NULL);
COMMIT;


PROC_RPT_PFFORM5

D:\SOFTWEB\swterptea\SWTReport\rptPFFORM5Regular.rdl

---------------------------------------------------------------------------------------------

  Case "PF FORM5 REGULAR"
                    strSQL = "PROC_RPT_PFFORM5('" & HttpContext.Current.Session("COMPANYCODE") & "','" & HttpContext.Current.Session("DIVISIONCODE") & "','" & HttpContext.Current.Session("YEARCODE") & "','" & btnDivision.ToolTip & "','" & txtYEARMONTH.Text & "')" & "~" & strReportName & "~" & strGlobalTable


PF FORM1
---------------------------------------------------------------------------------------------

select * from gpsform5transaction


CREATE TABLE GTT_PFFORM5_REP AS
SELECT A.COMPANYCODE, A.DIVISIONCODE, C.COMPANYNAME, D.DIVISIONNAME,YEARCODE, PFREGNO, CATEGORYCODE, TOKENNO, WORKERSERIAL, 
EMPLOYEENAME, PFCODE, PREVOPENNING, CREDIT_BAL_INCOMING, CONTRIBUTION, INTEREST, REFUND_ADV, 
ADVANCEMADE, BAL_CARRIED_OVER, SETTLEMENTS, CREDIT_BAL_OUTGOING, LAPSED_CONTRIBUTION, BAL_CARRIED_FORWARD, REMARKS
FROM GPSFORM5TRANSACTION A, COMPANYMAST C, DIVISIONMASTER D
WHERE A.COMPANYCODE=C.COMPANYCODE
AND A.COMPANYCODE=D.COMPANYCODE
AND A.DIVISIONCODE=D.DIVISIONCODE


SELECT * FROM GTT_PFFORM5_REGULAR

ALTER TABLE GTT_PFFORM5_REGULAR
ADD REPORTHEADER VARCHAR2(200)
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

Leave Entry for 
B/LVD/21/00002 DATED : 25/06/2020

Enter validation Leave Entry Interface.
Leave Encashment can't be more than 30 days.
At the time of leave encashment leave balance can't be less than 60.
Neagtive leave balance allowed based leave code in the master parameter.
Note :- Normal leave time balance may below 60.

GRADE - C
--------------------------------------------------
00473	PRADEEP KR.CHAUHAN	121	S4 LOOM	70	10
00490	GOUTAM ADHIKARY	320	BUILDING	70	10
00498	DEBANSU DATTA	342	SHOPPING BAG	70	10
00501	SUBHASH KUMAR PANDEY	112	SPINNING	70	10
00529	PREM PRAKASH DHAND	341	JUTE	70	10
00543	ANUPAM MITRA	344	TIME KEEPING	70	10
00548	RAJENDRA KR.SHUKLA	341	JUTE	70	10
00549	VIJAY KUMAR YADAV	343	ACCOUNTS	70	10
00587	KANCHAN MONDAL	131	MILL.MECH	70	10
00675	KULESH KUMAR JHA	115	WEAVING	70	10
00689	AMIT SAHA	345	WELFARE	70	10
00696	RAJESH KHANNA	611	HO PURCHASE RJ	70	10
00729	BALBIR KUMAR SINGH	132	FACT.MECH	70	10
00734	SUNIL KUMAR SHARMA	351	I.T	70	10

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

25/06/2020

---------------------------------------------------------------------------------------------


SELECT * FROM LOANTRANSACTION
WHERE TOKENNO='5173'


SELECT * FROM LOANBREAKUP
WHERE LOANCODE='ADVGN'
AND TOKENNO='5173' 
AND LOANDATE='21-JAN-2020'

FOR TOKEN NO - 5173 - MINU LOHAR 2 - LOAN - ADVGN
--------------------------------------------------
LOAN DATE - 21/01/2020
LOAN AMOUNT - 1900
LOAN DEDUCTION - UPTO 30/05/2020 - 1500 BALANCE = 1900-1500 = 400
REPAY MANUAL - ON 11/06/2020 - 400 (EFFECTFORTNIGHT - 13/06/2020 (WAGES PERIOD (31/05/2020-13/06/2020))

AGAIN TAKE ANOTHER LOAN ON 12/06/2020
LOAN AMOUNT - 1600
PREVIOS LOAN BALANCE (OR ADJUSTED AMOUNT)- 400 

---------------BECAUSE of IN THE PROC_LOANBLNC PROCEDURE TAKE EFFECTFORTNIGHT FOR CHECK
SELECT A.COMPANYCODE,A.DIVISIONCODE,A.WORKERSERIAL, A.LOANCODE, A.LOANDATE, 0 AMOUNT,  
(
    CASE WHEN TRANSACTIONTYPE ='INTEREST' THEN AMOUNT   
    WHEN TRANSACTIONTYPE ='REPAY' THEN REPAYINTEREST   
    WHEN TRANSACTIONTYPE ='REPAYINT' THEN AMOUNT   
    ELSE 0   
    END
)*(-1) INTERESTAMOUNT , 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT       
FROM LOANBREAKUP A,   
(   
    SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE, MAX(LOANDATE) LOANDATE  
    FROM LOANTRANSACTION   
    WHERE COMPANYCODE = 'JT0069'  
    AND LOANDATE <=  TO_DATE('12/06/2020','DD/MM/YYYY')   
    GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE  
) B   
WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE  
AND A.WORKERSERIAL = B.WORKERSERIAL  AND A.LOANCODE = B.LOANCODE AND A.LOANDATE = B.LOANDATE  
-----------------------check for effect fortnight date------------------------------
AND A.EFFECTFORTNIGHT <= TO_DATE('12/06/2020','DD/MM/YYYY')  
AND TRANSACTIONTYPE <> 'CAPITAL'  


---------------------------------------------------------------------------------------------
<<<<<<< HEAD
=======
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
exec PROC_RPT_LOANSUMMARY('JT0069','0002','31/03/2021','','''ADVGN''')

SELECT * FROM GTT_LOANSUMMARY
WHERE LOAN_BAL < 0

SELECT * FROM LOANTRANSACTION
WHERE TOKENNO='5173'


SELECT * FROM LOANBREAKUP
WHERE LOANCODE='ADVGN'
AND TOKENNO='5173' 

SELECT * FROM LOANTRANSACTION
WHERE TOKENNO='5690'
AND LOANDATE='12-MAR-2020'

SELECT * FROM LOANBREAKUP
WHERE LOANCODE='ADVGN'
AND TOKENNO='5690'
AND LOANDATE='12-MAR-2020'

LOANCODE


EXEC PROC_LOANBLNC('JT0069','0002','20/03/2020','20/03/2020','ADVGN')

AND A.WORKERSERIAL='0005179'


(
    P_COMPANYCODE  VARCHAR2,
    P_DIVISIONCODE VARCHAR2,
    P_STARTDATE    VARCHAR2,
    P_ENDDATE      VARCHAR2,    
    P_LOANCODE     VARCHAR2 DEFAULT NULL,
    P_WORKERSERIAL VARCHAR2 DEFAULT NULL,
    P_MODULE       VARCHAR2 DEFAULT 'GPS',
    P_WAGEPROCESS  VARCHAR2 DEFAULT 'NO', 
    P_TRANTYPE     VARCHAR2 DEFAULT 'SALARY' 
    
    
    20/03/2020	20/03/2020
21/03/2020	14/03/2020


FOR TOKENO - 5173
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

 
 SELECT B.COMPANYCODE, B.DIVISIONCODE, B.WORKERSERIAL, B.TOKENNO, B.MODULE, A.LOANCODE, A.LOANDATE, SUM(A.AMOUNT) LOAN_BAL, 
   CASE WHEN SUM(INTERESTAMOUNT) > 0 THEN SUM(INTERESTAMOUNT) ELSE 0 END LOAN_INT_BAL,  
   SUM(LN_CAP_DEDUCT) LN_CAP_DEDUCT, SUM(LN_INT_DEDUCT) LN_INT_DEDUCT, X.CAP_EMI, X.INT_EMI, X.TOT_EMI,  
 NVL(Y.CAP_STOP,'N') CAP_STOP,
 NVL(Y.INT_STOP,'N') INT_STOP
   FROM (   
           SELECT DISTINCT A.COMPANYCODE,A.DIVISIONCODE,A.WORKERSERIAL, A.LOANCODE, A.LOANDATE, AMOUNT, 0 INTERESTAMOUNT , 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT  
           FROM LOANTRANSACTION A,   
           (   
              SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE, MAX(LOANDATE) LOANDATE  
              FROM LOANTRANSACTION   
              WHERE COMPANYCODE = 'JT0069'  
              AND DIVISIONCODE = '0002'  
               AND LOANDATE <=  TO_DATE('19/03/2020','DD/MM/YYYY')  
               GROUP BY COMPANYCODE,DIVISIONCODE,COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE  
           ) B   
           WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE  
             AND A.WORKERSERIAL = B.WORKERSERIAL  AND A.LOANCODE = B.LOANCODE AND A.LOANDATE = B.LOANDATE  AND AMOUNT > 0  
           UNION ALL      
           SELECT A.COMPANYCODE,A.DIVISIONCODE,A.WORKERSERIAL, A.LOANCODE, A.LOANDATE,  
             (CASE WHEN TRANSACTIONTYPE ='CAPITAL' THEN AMOUNT   
                  WHEN TRANSACTIONTYPE ='REPAY' THEN REPAYCAPITAL   
                  WHEN TRANSACTIONTYPE ='REPAYCAP' THEN AMOUNT   
                  ELSE 0   
             END)*(-1) AMOUNT, 0 INTERESTAMOUNT  
             , 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT  
           FROM LOANBREAKUP A,   
           (   
               SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE, MAX(LOANDATE) LOANDATE  
               FROM LOANTRANSACTION   
               WHERE COMPANYCODE = 'JT0069'  
               AND DIVISIONCODE = '0002'  
               AND LOANDATE <=  TO_DATE('19/03/2020','DD/MM/YYYY')   
               GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE  
           ) B   
           WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE  
           AND A.WORKERSERIAL = B.WORKERSERIAL AND A.LOANCODE = B.LOANCODE AND A.LOANDATE = B.LOANDATE  
             AND A.EFFECTFORTNIGHT <=  TO_DATE('22/03/2020','DD/MM/YYYY')   
             AND TRANSACTIONTYPE <> 'INTEREST'   
           UNION ALL   
           SELECT DISTINCT A.COMPANYCODE,A.DIVISIONCODE,A.WORKERSERIAL,A.LOANCODE, A.LOANDATE, 0 AMOUNT, SUM(NVL(C.INTERESTAMOUNT,0)) INTERESTAMOUNT  
           , 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT   
           FROM ( SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE, LOANDATE  
                  FROM LOANTRANSACTION  
                  WHERE COMPANYCODE = 'JT0069'   
                  AND DIVISIONCODE = '0002'   
                ) A,  
              (   
                   SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE, MAX(LOANDATE) LOANDATE  
                  FROM LOANTRANSACTION   
                  WHERE COMPANYCODE = 'JT0069'  /*AND DIVISIONCODE = '0001' */  
                  AND LOANDATE <=  TO_DATE('19/03/2020','DD/MM/YYYY')   
                  GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE  
              ) B, LOANINTEREST C   
           WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE AND A.DIVISIONCODE=C.DIVISIONCODE  
           AND A.WORKERSERIAL = B.WORKERSERIAL  AND A.LOANCODE = B.LOANCODE AND A.LOANDATE = B.LOANDATE  
           AND A.WORKERSERIAL = C.WORKERSERIAL AND A.LOANDATE = C.LOANDATE AND A.LOANCODE = C.LOANCODE   
           AND C.FORTNIGHTENDDATE <= TO_DATE('19/03/2020','DD/MM/YYYY')  
           AND C.TRANSACTIONTYPE = 'ADD'   
           GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.WORKERSERIAL, A.LOANCODE, A.LOANDATE  
           UNION ALL   
           SELECT A.COMPANYCODE,A.DIVISIONCODE,A.WORKERSERIAL, A.LOANCODE, A.LOANDATE, 0 AMOUNT,  
             (CASE WHEN TRANSACTIONTYPE ='INTEREST' THEN AMOUNT   
                  WHEN TRANSACTIONTYPE ='REPAY' THEN REPAYINTEREST   
                  WHEN TRANSACTIONTYPE ='REPAYINT' THEN AMOUNT   
                  ELSE 0   
             END)*(-1) INTERESTAMOUNT  
             , 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT       
           FROM LOANBREAKUP A,   
           (   
               SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE, MAX(LOANDATE) LOANDATE  
               FROM LOANTRANSACTION   
               WHERE COMPANYCODE = 'JT0069'  /*AND DIVISIONCODE = '0001' */  
                 AND LOANDATE <=  TO_DATE('19/03/2020','DD/MM/YYYY')   
               GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE  
           ) B   
           WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE  
           AND A.WORKERSERIAL = B.WORKERSERIAL  AND A.LOANCODE = B.LOANCODE AND A.LOANDATE = B.LOANDATE  
           AND A.EFFECTFORTNIGHT <= TO_DATE('19/03/2020','DD/MM/YYYY')  
           AND TRANSACTIONTYPE <> 'CAPITAL'  
           UNION ALL  
           SELECT A.COMPANYCODE,A.DIVISIONCODE,A.WORKERSERIAL, A.LOANCODE, A.LOANDATE, 0 AMOUNT,  0 INTERESTAMOUNT,  
           DECODE(TRANSACTIONTYPE,'CAPITAL',AMOUNT,0) LN_CAP_DEDUCT, DECODE(TRANSACTIONTYPE,'INTEREST',AMOUNT,0) LN_INT_DEDUCT  
           FROM LOANBREAKUP A,   
           (   
               SELECT DISTINCT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE, MAX(LOANDATE) LOANDATE  
               FROM LOANTRANSACTION   
               WHERE COMPANYCODE = 'JT0069'  /*AND DIVISIONCODE = '0001' */  
               AND LOANDATE <=  TO_DATE('19/03/2020','DD/MM/YYYY')  
               GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE  
           ) B   
           WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE  
             AND A.WORKERSERIAL = B.WORKERSERIAL  AND A.LOANCODE = B.LOANCODE AND A.LOANDATE = B.LOANDATE  
             AND A.EFFECTFORTNIGHT <= TO_DATE('19/03/2020','DD/MM/YYYY') 
             AND TRANSACTIONTYPE IN ('CAPITAL','INTEREST')   
       ) A, WORKERVIEW B,  
       (  
          SELECT M.COMPANYCODE,M.DIVISIONCODE,M.WORKERSERIAL, M.LOANCODE, M.LOANDATE,  
          NVL(M.CAPITALINSTALLMENTAMT,0) CAP_EMI,  
          NVL(M.INTERESTINSTALLMENTAMT,0) INT_EMI, NVL(M.TOTALEMIAMOUNT,0) TOT_EMI  
          FROM LOANTRANSACTION M, ( SELECT COMPANYCODE,DIVISIONCODE,WORKERSERIAL, LOANCODE, MAX(LOANDATE) LOANDATE  
                                    FROM LOANTRANSACTION  
                                    WHERE LOANDATE <= TO_DATE('19/03/2020','DD/MM/YYYY')  
                                    GROUP BY COMPANYCODE,DIVISIONCODE,WORKERSERIAL,LOANCODE  
                                  ) N   
          WHERE M.COMPANYCODE=N.COMPANYCODE AND M.DIVISIONCODE=N.DIVISIONCODE  
           AND M.WORKERSERIAL = N.WORKERSERIAL AND M.LOANCODE = N.LOANCODE AND M.LOANDATE = N.LOANDATE  
       )  X,      
     ( 
         SELECT COMPANYCODE,DIVISIONCODE, WORKERSERIAL, TOKENNO, LOANCODE, LOANDATE, 
         LOANSTOPFROMDATE, LOANSTOPTODATE, CAPITAL CAP_STOP, INTEREST INT_STOP, FULLMILL 
         FROM LOANDEDUCTIONSTOP 
         WHERE COMPANYCODE = 'JT0069' AND DIVISIONCODE = '0002' 
           AND LOANSTOPFROMDATE <= TO_DATE('19/03/2020','DD/MM/YYYY') 
           AND LOANSTOPTODATE >= TO_DATE('19/03/2020','DD/MM/YYYY') 
           AND NVL(FULLMILL,'N') <> 'Y' 
     ) Y 
   WHERE A.COMPANYCODE=B.COMPANYCODE AND A.COMPANYCODE=X.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE AND A.DIVISIONCODE=X.DIVISIONCODE  
   AND A.WORKERSERIAL = B.WORKERSERIAL  
   AND B.MODULE = 'GPS'  
     AND A.WORKERSERIAL = X.WORKERSERIAL AND A.LOANCODE = X.LOANCODE AND A.LOANDATE = X.LOANDATE  
     AND A.COMPANYCODE=Y.COMPANYCODE (+)  
     AND A.DIVISIONCODE=Y.DIVISIONCODE (+)  
     AND A.WORKERSERIAL = Y.WORKERSERIAL (+)  
     AND A.LOANCODE = 'ADVGN' 
     AND A.WORKERSERIAL='0005179'
    GROUP BY B.COMPANYCODE, B.DIVISIONCODE,B.WORKERSERIAL, B.TOKENNO, B.MODULE,A.LOANCODE, A.LOANCODE, A.LOANDATE, X.CAP_EMI, X.INT_EMI, X.TOT_EMI, Y.CAP_STOP, Y.INT_STOP  


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

select * from loantransaction
where tokenno='5173'


select * from loanbreakup
where tokenno='5173'
and loandate=to_date('21/01/2020','dd/mm/yyyy')


exec proc_loanblnc('JT0069','0002','12/06/2020','12/06/2020','ADVGN')

SELECT * FROM GBL_LOANBLNC
where tokenno='5173'

P_COMPANYCODE  VARCHAR2,
    P_DIVISIONCODE VARCHAR2,
    P_STARTDATE    VARCHAR2,
    P_ENDDATE      VARCHAR2,    
    P_LOANCODE     VARCHAR2 DEFAULT NULL,
    P_WORKERSERIAL VARCHAR2 DEFAULT NULL,
    P_MODULE       VARCHAR2 DEFAULT 'GPS',
    P_WAGEPROCESS  VARCHAR2 DEFAULT 'NO', 
    P_TRANTYPE     VARCHAR2 DEFAULT 'SALARY' 
	
	
	
	
---------------------------------------------------------------------------------------------
PIS BIRLA LEAVE ENTITLEMENT


---------------------------------------------------------------------------------------------

SELECT * FROM MENUMASTER_RND
WHERE MENUCODE=''

SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%LEAVE%')

SELECT * FROM ROLEDETAILS
WHERE MENUCODE=''

SELECT * FROM REPORTPARAMETERMASTER
WHERE REPORTTAG=''


prcLeave_Bf_MainSave


delete PISLEAVEAPPLICATION

select * from  PISLEAVEAPPLICATION

    INSERT INTO GBL_PISLEAVEAPPLICATION_TEST
    
    
    SELECT * FROM GBL_PISLEAVEAPPLICATION_TEST;
    
    
     
         SELECT (LV_BAL-LEAVECNT)  FROM 
         (
             SELECT * FROM GBL_PISLEAVEBALANCE
             WHERE TOKENNO='00473'
             AND LEAVECODE='PL'
             AND COMPANYCODE='BJ0056'
             AND DIVISIONCODE='0001'
         ) A,
         (
            SELECT COUNT(*) LEAVECNT 
            FROM GBL_PISLEAVEAPPLICATION_TEST
            where LEAVEENCASHED='Y'
         )B
         WHERE 1=1;
         
         
    
 exec PRC_PIS_LEAVEBALANCE ('BJ0056','0001','2020-2021','202006','00473')
 
 SELECT (LV_BAL+LV_BAL) FROM 
 (
     select * from GBL_PISLEAVEBALANCE
     where tokenno='00597'
 ) A,
 (
    SELECT COUNT(*) LEAVECNT FROM GBL_PISLEAVEAPPLICATION_TEST
 )B
 
 
 pisleavemaster
 
 ALLOWNEGATIVELEAVES
 
 SELECT * FROM SYS_TFMAP
 WHERE SYS_TABLE_SEQUENCIER=''
 
 SELECT * FROM SYS_TFMAP
 WHERE SYS_TABLENAME_ACTUAL='PISLEAVEAPPLICATION'
 
 SELECT * FROM SYS_TFMAP
 WHERE SYS_TABLENAME_TEMP=''
 
 exec proc_create_gbl_tmp_tables(10008,0)
 
---------------------------------------------------------------------------------------------


Insert into PISALLPARAMETER
   (COMPANYCODE, DIVISIONCODE, YEARMONTH, ROUNDOFFRS, PAYMENTROUNDTYPE, 
    SUPERANNUATIONAGEMALE, SUPERANNUATIONAGEFEMALE, MINIMUMSALARYPAYABLE, ESIQUALIFIEDAMOUNT, BANKADVICETO, 
    CUMPFMONTHBETWEEN, PF_E_PERCENTAGE, ESI_E_PERCENT, ESI_C_PERCENT, ESIDEDUCTIONCHECKMONTH, 
    LWFDEDUCTIONMONTH, LOANAMOUNTROUNDOFF, LOANDEDUCTAPPLICABLEWORKDAYS, LOANDEDUCTAPPLICABLECOMPNENT, BONUSPERCENTAGE, 
    BONUSGROSSLIMIT, BONUSAMOUNTLIMIT, BONUSAMOUNTROUNDOFF, NEGATIVELEAVEALLOWED, MAXIMUMPENSIONGROSS, 
    PENSION_PERCENTAGE)
 Values
   ('BJ0056', '0001', '202004', 1, 'BANK', 
    58, 55, 1, 21000, 'XX', 
    '02-03', 10, 1.75, 4.75, '04-10', 
    '06-12', 1, 0, NULL, 20, 
    21000, 7000, 10, 'NO', 15000, 
    8.33);
COMMIT;



---------------------------------------------------------------------------------------------

select * from dynamicwebpage
where menucode='01070206'

select * from userwise_component

pgPISLeaveApplicationEntryWithGridDet_Common





SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%MONTH%')
and PROJECTNAME='PIS'
AND ACTIVE ='Y'



SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%EMPLOYEE%')
and PROJECTNAME='PIS'
AND ACTIVE ='Y'


SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%LEAVE%')
and PROJECTNAME='PIS'
AND ACTIVE ='Y'




UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Transaction/pgPISLeaveApplicationEntryWithGridDet_Common.aspx'
WHERE MENUCODE='0107020402'


UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Transaction/pgPISLeaveApplicationEntryWithGridDet_Common.aspx'
WHERE MENUCODE='0107020403'


UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Transaction/pgPISLeaveApplicationEntryWithGridDet_Common.aspx'
WHERE MENUCODE='0107020403'

PIS/PAGES/Master/pgEmployeeMast_Rate.aspx

UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Master/pgEmployeeMast_Birla.aspx'
WHERE MENUCODE='0107010111'


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10014'


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='PISEMPLOYEEMASTER'


MARITIALSTATUS

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10014'
AND SYS_COLUMNNAME IN ('SUPERANUATIONNUMBER','SUPERANUATIONDATE','CONVEYANCE','RELIGION','PRANNUMBER','GRATUITYNUMBER','FREEUNITELECTRICITY')



EXEC PROC_CREATE_GBL_TMP_TABLES(10014,0)


UPDATE MENUMASTER_RND SET
MENUTAG1 = 'EXTRAINFO'
WHERE MENUCODE='01070202'

EXTRAINFO

SELECT * FROM
PISLEAVEENTITLEMENT

00794

01171

DELETE FROM
PISLEAVEENTITLEMENT

DELETE FROM PISLEAVEAPPLICATION

SELECT * FROM PISLEAVEAPPLICATION


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='PISLEAVEAPPLICATION'

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10008'

GBL_PISLEAVEAPPLICATION

EXEC PROC_CREATE_GBL_TMP_TABLES(10008,0)

 B/LVD/21/00001 DATED : 24/06/2020
 
 B/LVD/21/00002 DATED : 24/06/2020
 
 
 
 SELECT * FROM MENUMASTER_RND
 WHERE UPPER(MENUDESC) LIKE UPPER('%LEAVE%')
 
 
 PIS/PAGES/Transaction/pgPISLeaveApplicationEntry.aspx
 
 0107020403+
 
 
 

UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Transaction/pgPISLeaveApplicationEntryWithGridDet_Common.aspx'
WHERE MENUCODE='0107020403'




SELECT * FROM PFEMPLOYEEMASTER
WHERE DATEOFJOINING=PFJOINDATE

UPDATE PFEMPLOYEEMASTER SET PFJOINDATE=DATEOFJOINING


SELECT * FROM PISEMPLOYEEMASTER
WHERE TOKENNO='00415'

SELECT * FROM PFEMPLOYEEMASTER
WHERE TOKENNO='00415' --28/07/1986


SELECT * FROM PISEMPLOYEEMASTER



UPDATE PFEMPLOYEEMASTER A 
SET PFJOINDATE = 
(
    SELECT PFENTITLEDATE FROM PISEMPLOYEEMASTER WHERE TOKENNO=A.TOKENNO
)
WHERE TOKENNO IN (SELECT DISTINCT TOKENNO FROM PISEMPLOYEEMASTER)




SELECT * FROM SYS_TFMAP
WHERE SYS_COLUMNNAME='PER_ALLOW'


GBL_PISCOMPONENTASSIGNMENT

PISPAYTRANSACTION_SWT


---------------------------------------------------------------------------------------------

Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'GRATUITYNUMBER', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtGRATUITYNUMBER', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'PRANNUMBER', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtPRANNUMBER', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'RELIGION', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtRELIGION', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'SUPERANUATIONDATE', 0, 
    'DATE', 10, 0, 'N', 'mskSUPERANUATIONDATE', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'SUPERANUATIONNUMBER', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtSUPERANUATIONNUMBER', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
COMMIT;



---------------------------------------------------------------------------------------------
DROP TABLE BIRLANEW.USERWISE_COMPONENT CASCADE CONSTRAINTS;

CREATE TABLE USERWISE_COMPONENT
(
  COMPANYCODE      VARCHAR2(10 BYTE),
  DIVISIONCODE     VARCHAR2(10 BYTE),
  ACCESS_USRNAME   VARCHAR2(30 BYTE),
  COMPONENTCODE    VARCHAR2(30 BYTE),
  SYSROWID         VARCHAR2(50 BYTE),
  LASTMODIFIED     DATE                         DEFAULT SYSDATE,
  ISACTIVE         VARCHAR2(1 BYTE)             DEFAULT 'Y',
  USERNAME         VARCHAR2(50 BYTE),
  TRANSACTIONTYPE  VARCHAR2(50 BYTE)
)

SELECT * FROM PIS_GTT_SWT_PHASE_DEDN



---------------------------------------------------------------------------------------------
SELECT SYS_COLUMNNAME FROM SYS_TFMAP WHERE SYS_TABLE_SEQUENCIER = 10013
MINUS 
SELECT COMPONENTCODE FROM PISCOMPONENTMASTER

HRA_FIXED
MISC_DEDN
TOTDEDN

select table_name from cols where COLUMN_NAME='PER_ALLOW'







drop table pisothertransaction  

create table  pisothertransaction as select * from pispaytransaction where 1=2
---------------------------------------------------------------------------------------------
select * from menumaster_rnd
where menudesc like 'Employee %aster'

PIS/PAGES/Master/pgPISEmployeeMast.aspx

pisemployeemaster

select * from pisemployeemaster
where esiapplicable='N'



select * from sys_tfmap
where SYS_TABLENAME_ACTUAL='PISEMPLOYEEMASTER'

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10014'


Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE, IS_EDITABLE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'ESIAPPLICABLE', 0, 
    'VARCHAR2', 1, 0, 'N', 'txtESIAPPLICABLE', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL, 'Y');
COMMIT;

EXEC PROC_CREATE_GBL_TMP_TABLES(10014,0)


---------------------------------------------------------------------------------------------

SELECT  NVL(L_A.SL_LWP,'N') AS SL_LWP ,  NVL(L_A.PL_LWP,'N') AS PL_LWP,EMPMAST.COMPANYCODE,EMPMAST.DIVISIONCODE,ATTN.SYSROWID,ASSIGN.YEARCODE,ASSIGN.YEARMONTH,EMPMAST.UNITCODE,EMPMAST.CATEGORYCODE,EMPMAST.GRADECODE,EMPMAST.WORKERSERIAL,EMPMAST.TOKENNO,EMPMAST.EMPLOYEENAME,EMPMAST.DEPARTMENTCODE,DEPT.DEPARTMENTDESC,CASE WHEN TO_NUMBER(TO_CHAR(EMPMAST.DATEOFJOIN,'YYYYMM'))=TO_NUMBER('202004') THEN (LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')) - EMPMAST.DATEOFJOIN)+1 ELSE TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')),'DD')) END TOTALDAYS,DECODE(NVL(C.CALCULATIONDAYS,0),0,TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')),'DD')),C.CALCULATIONDAYS)  CALCULATIONFACTORDAYS,NVL(ATTN.PRESENTDAYS,NVL(ATTN.SALARYDAYS,CASE WHEN TO_NUMBER(TO_CHAR(EMPMAST.DATEOFJOIN,'YYYYMM'))=TO_NUMBER('202004') THEN (LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')) - EMPMAST.DATEOFJOIN)+1 ELSE DECODE(NVL(C.CALCULATIONDAYS,0),0,TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')),'DD')),C.CALCULATIONDAYS) END  - CASE WHEN ATTN.WITHOUTPAYDAYS IS NULL THEN 0 ELSE NVL(ATTN.WITHOUTPAYDAYS,0) END ) - (NVL(L_A.SL,0) + NVL(L_A.PL,0)) - NVL(ATTN.HOLIDAYS,fn_RtnNoOfApplicableHolidays('BJ0056', '0001', '202004','10','A',EMPMAST.WORKERSERIAL))) AS PRESENTDAYS,NVL(ATTN.SALARYDAYS,CASE WHEN TO_NUMBER(TO_CHAR(EMPMAST.DATEOFJOIN,'YYYYMM'))=TO_NUMBER('202004') THEN (LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')) - EMPMAST.DATEOFJOIN)+1 ELSE DECODE(NVL(DECODE(NVL(C.CALCULATIONDAYS,0),0,TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')),'DD')),C.CALCULATIONDAYS) ,0),0,TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')),'DD')),DECODE(NVL(C.CALCULATIONDAYS,0),0,TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')),'DD')),C.CALCULATIONDAYS) ) END - CASE WHEN ATTN.WITHOUTPAYDAYS IS NULL THEN 0 ELSE NVL(ATTN.WITHOUTPAYDAYS,0) END )  SALARYDAYS,NVL(ATTN.HOLIDAYS,fn_RtnNoOfApplicableHolidays('BJ0056', '0001', '202004','10','A',EMPMAST.WORKERSERIAL)) HOLIDAYS,L.LV_ENCASH_DAYS,ATTN.WITHOUTPAYDAYS,L_A.PL,L_A.SL 
  FROM PISEMPLOYEEMASTER EMPMAST, PISDEPARTMENTMASTER DEPT, PISCATEGORYMASTER C, 
       ( 
        SELECT * 
          FROM PISCOMPONENTASSIGNMENT 
         WHERE COMPANYCODE='BJ0056' 
           AND DIVISIONCODE='0001' 
           AND TRANSACTIONTYPE='ATTENDANCE' 
           AND WORKERSERIAL||YEARMONTH IN ( 
                                            SELECT WORKERSERIAL||MAX(YEARMONTH) FROM PISCOMPONENTASSIGNMENT 
                                             WHERE COMPANYCODE='BJ0056' AND DIVISIONCODE='0001' 
                                               AND TO_NUMBER(YEARMONTH)=TO_NUMBER('202004') 
                                               AND TRANSACTIONTYPE='ATTENDANCE' 
                                            GROUP BY WORKERSERIAL 
                                          ) 
       ) ASSIGN, PISMONTHATTENDANCE ATTN, 
       ( 
         SELECT WORKERSERIAL, TOKENNO, SUM(LEAVEDAYS) LV_ENCASH_DAYS 
           FROM PISLEAVEAPPLICATION 
          WHERE COMPANYCODE='BJ0056'  
           AND DIVISIONCODE='0001' 
           AND NVL(LEAVEENCASHED,'N')='Y' 
           AND TO_NUMBER(TO_CHAR(LEAVEDATE,'YYYYMM'))=TO_NUMBER('202004') 
         GROUP BY WORKERSERIAL, TOKENNO 
       ) L,
        ( 
          SELECT A.WORKERSERIAL,
         SUM(DECODE(A.LEAVECODE,'PL',A.LEAVEDAYS,0))PL,MAX(DECODE(A.LEAVECODE,'PL',M.WITHOUTPAYLEAVE,'N'))PL_LWP,SUM(DECODE(A.LEAVECODE,'SL',A.LEAVEDAYS,0))SL,MAX(DECODE(A.LEAVECODE,'SL',M.WITHOUTPAYLEAVE,'N'))SL_LWP,TOKENNO
            FROM PISLEAVEAPPLICATION A, PISLEAVEMASTER M
           WHERE A.COMPANYCODE='BJ0056'  
            AND A.DIVISIONCODE='0001' 
            AND A.LEAVESANCTIONEDON IS NOT NULL
            AND TO_NUMBER(TO_CHAR(A.LEAVEDATE,'YYYYMM'))=TO_NUMBER('202004') 
            AND A.COMPANYCODE=M.COMPANYCODE
            AND A.DIVISIONCODE=M.DIVISIONCODE
            AND A.LEAVECODE=M.LEAVECODE
           AND NVL(LEAVEENCASHED,'N')<>'Y' 
          GROUP BY WORKERSERIAL, TOKENNO 
        ) L_A
 WHERE EMPMAST.COMPANYCODE=DEPT.COMPANYCODE 
   AND EMPMAST.DIVISIONCODE=DEPT.DIVISIONCODE 
   AND EMPMAST.DEPARTMENTCODE=DEPT.DEPARTMENTCODE 
   AND EMPMAST.COMPANYCODE=ASSIGN.COMPANYCODE(+) 
   AND EMPMAST.DIVISIONCODE=ASSIGN.DIVISIONCODE(+) 
   AND EMPMAST.TOKENNO=ASSIGN.TOKENNO(+) 
   AND EMPMAST.WORKERSERIAL=ASSIGN.WORKERSERIAL(+) 
   AND EMPMAST.TOKENNO=L.TOKENNO(+) 
   AND EMPMAST.WORKERSERIAL=L.WORKERSERIAL(+) 
   AND EMPMAST.COMPANYCODE=ATTN.COMPANYCODE(+) 
   AND EMPMAST.DIVISIONCODE=ATTN.DIVISIONCODE(+) 
   AND EMPMAST.TOKENNO=ATTN.TOKENNO(+)  
   AND EMPMAST.WORKERSERIAL=ATTN.WORKERSERIAL(+) 
   AND ATTN.YEARMONTH(+)='202004' 
   AND EMPMAST.COMPANYCODE='BJ0056' 
   AND EMPMAST.DIVISIONCODE='0001' 
   AND EMPMAST.COMPANYCODE=C.COMPANYCODE(+) 
   AND EMPMAST.DIVISIONCODE=C.DIVISIONCODE(+) 
   AND EMPMAST.CATEGORYCODE=C.CATEGORYCODE(+)  
   AND EMPMAST.TOKENNO=L_A.TOKENNO(+)  
   AND EMPMAST.WORKERSERIAL=L_A.WORKERSERIAL(+)   
   AND EMPMAST.UNITCODE='01' 
   AND EMPMAST.CATEGORYCODE='10' 
   AND EMPMAST.GRADECODE='A' 
   AND TO_NUMBER(TO_CHAR(EMPMAST.DATEOFJOIN,'YYYYMM'))<=TO_NUMBER('202004') 
   AND TO_NUMBER(NVL(TO_CHAR(EMPMAST.EXTENDEDRETIREDATE,'YYYYMM'),NVL(TO_CHAR(EMPMAST.STATUSDATE,'YYYYMM'),'202004')))>=TO_NUMBER('202004') 
   AND EMPMAST.EMPLOYEESTATUS = 'ACTIVE'   
   
   
   
SELECT * FROM PISLEAVEAPPLICATION

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='PISLEAVEAPPLICATION'

 SELECT A.WORKERSERIAL,
         SUM(DECODE(A.LEAVECODE,'PL',A.LEAVEDAYS,0))PL,MAX(DECODE(A.LEAVECODE,'PL',M.WITHOUTPAYLEAVE,'N'))PL_LWP,SUM(DECODE(A.LEAVECODE,'SL',A.LEAVEDAYS,0))SL,MAX(DECODE(A.LEAVECODE,'SL',M.WITHOUTPAYLEAVE,'N'))SL_LWP,TOKENNO
            FROM PISLEAVEAPPLICATION A, PISLEAVEMASTER M
           WHERE A.COMPANYCODE='BJ0056'  
            AND A.DIVISIONCODE='0001' 
            AND A.LEAVESANCTIONEDON IS NOT NULL
            AND TO_NUMBER(TO_CHAR(A.LEAVEDATE,'YYYYMM'))=TO_NUMBER('202004') 
            AND A.COMPANYCODE=M.COMPANYCODE
            AND A.DIVISIONCODE=M.DIVISIONCODE
            AND A.LEAVECODE=M.LEAVECODE
--           AND NVL(LEAVEENCASHED,'N')<>'Y' 
          GROUP BY WORKERSERIAL, TOKENNO 
          
          
          
		  
		  
---------------------------------------------------------------------------------------------

SELECT MAXIMUMPENSIONGROSS, PENSION_PERCENTAGE, ESI_C_PERCENT 
    INTO lv_MaxPensionGrossAmt, lv_PensionPercentage, lv_ESI_C_Percentage
    FROM PISALLPARAMETER
    WHERE COMPANYCODE = P_COMPCODE AND DIVISIONCODE = P_DIVCODE;
	
---------------------------------------------------------------------------------------------

select * from dynamicwebpage
where menucode='01070206'

select * from userwise_component

pgPISLeaveApplicationEntryWithGridDet_Common





SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%MONTH%')
and PROJECTNAME='PIS'
AND ACTIVE ='Y'


SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%LEAVE%')
and PROJECTNAME='PIS'
AND ACTIVE ='Y'




UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Transaction/pgPISLeaveApplicationEntryWithGridDet_Common.aspx'
WHERE MENUCODE='0107020402'


UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Transaction/pgPISMonthAttendanceWithLeave.aspx'
WHERE MENUCODE='01070202'




UPDATE MENUMASTER_RND SET
MENUTAG1 = 'EXTRAINFO'
WHERE MENUCODE='01070202'

EXTRAINFO

SELECT * FROM
PISLEAVEENTITLEMENT

00794

01171

DELETE FROM
PISLEAVEENTITLEMENT

DELETE FROM PISLEAVEAPPLICATION

SELECT * FROM PISLEAVEAPPLICATION


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='PISLEAVEAPPLICATION'

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10008'

GBL_PISLEAVEAPPLICATION

EXEC PROC_CREATE_GBL_TMP_TABLES(10008,0)

 B/LVD/21/00001 DATED : 24/06/2020
 
 B/LVD/21/00002 DATED : 24/06/2020
 
 
 
 SELECT * FROM MENUMASTER_RND
 WHERE UPPER(MENUDESC) LIKE UPPER('%LEAVE%')
 
 
 PIS/PAGES/Transaction/pgPISLeaveApplicationEntry.aspx
 
 0107020403+
 
 
 

UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Transaction/pgPISLeaveApplicationEntryWithGridDet_Common.aspx'
WHERE MENUCODE='0107020403'


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='PISEMPLOYEEMASTER'

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10014'
AND SYS_COLUMNNAME IN ('SUPERANUATIONNUMBER','SUPERANUATIONDATE','CONVEYANCE','RELIGION','PRANNUMBER','GRATUITYNUMBER','FREEUNITELECTRICITY')

SUPERANUATIONNUMBER, SUPERANUATIONDATE, CONVEYANCE, RELIGION, PRANNUMBER, GRATUITYNUMBER, FREEUNITELECTRICITY

EXEC PROC_CREATE_GBL_TMP_TABLES(10014,0)




Insert into PISALLPARAMETER
   (COMPANYCODE, DIVISIONCODE, YEARMONTH, ROUNDOFFRS, PAYMENTROUNDTYPE, 
    SUPERANNUATIONAGEMALE, SUPERANNUATIONAGEFEMALE, MINIMUMSALARYPAYABLE, ESIQUALIFIEDAMOUNT, BANKADVICETO, 
    CUMPFMONTHBETWEEN, PF_E_PERCENTAGE, ESI_E_PERCENT, ESI_C_PERCENT, ESIDEDUCTIONCHECKMONTH, 
    LWFDEDUCTIONMONTH, LOANAMOUNTROUNDOFF, LOANDEDUCTAPPLICABLEWORKDAYS, LOANDEDUCTAPPLICABLECOMPNENT, BONUSPERCENTAGE, 
    BONUSGROSSLIMIT, BONUSAMOUNTLIMIT, BONUSAMOUNTROUNDOFF, NEGATIVELEAVEALLOWED, MAXIMUMPENSIONGROSS, 
    PENSION_PERCENTAGE)
 Values
   ('BJ0056', '0001', '202004', 1, 'BANK', 
    58, 55, 1, 21000, 'XX', 
    '02-03', 10, 1.75, 4.75, '04-10', 
    '06-12', 1, 0, NULL, 20, 
    21000, 7000, 10, 'NO', 15000, 
    8.33);
COMMIT;



---------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
AMBOOTIA ABSENT STATEMENT NOT WORKING
---------------------------------------------------------------------------------------------
DROP TABLE GTT_ABSENTSTATEMENT CASCADE CONSTRAINTS;

CREATE GLOBAL TEMPORARY TABLE GTT_ABSENTSTATEMENT
(
  TOKENNO       VARCHAR2(20 BYTE),
  EMPLOYEENAME  VARCHAR2(500 BYTE),
  PERIOD        VARCHAR2(100 BYTE),
  ABSENT        NUMBER(10,2),
  COMPANYNAME   VARCHAR2(100 BYTE),
  DIVISIONNAME  VARCHAR2(100 BYTE),
  FROMDATE      DATE,
  TODATE        DATE,
  EX1           VARCHAR2(1000 BYTE),
  EX2           VARCHAR2(1000 BYTE),
  EX3           NUMBER(10,2),
  EX4           NUMBER(10,2),
  EX5           VARCHAR2(100 BYTE),
  EX6           VARCHAR2(100 BYTE)
)
ON COMMIT PRESERVE ROWS
NOCACHE;

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
Debasis Dutta call me 

1. In Flexi Division (003) Month 
2. Add ESI Applicable field default value 'Y'

>>>>>>> f7fd4c5a259a5e41cf81b1d3efca6caeddb09ea3
---------------------------------------------------------------------------------------------

SELECT * FROM USERWISE_COMPONENT


ALTER TABLE USERWISE_COMPONENT
ADD TRANSACTIONTYPE VARCHAR2(50)

SELECT * FROM DIVISIONMASTER

INSERT INTO USERWISE_COMPONENT(
COMPANYCODE,DIVISIONCODE,ACCESS_USRNAME,COMPONENTCODE
)
VALUES
(
    'BJ0056','0001','SWT','DA'
)


EXEC PROC_CREATE_SYSTFMAP('')

FN_USERWISE_DATA_ACCESS

USERWISE_DATA_ACCESS

CREATE TABLE USERWISE_DATA_ACCESS
(
  COMPANYCODE    VARCHAR2(10 BYTE),
  DIVISIONCODE   VARCHAR2(10 BYTE),
  MENUCODE       VARCHAR2(50 BYTE),
  LOGINID        VARCHAR2(10 BYTE),
  KEYFIELD       VARCHAR2(30 BYTE),
  KEYFIELDVALUE  VARCHAR2(100 BYTE),
  USERNAME       VARCHAR2(50 BYTE),
  LASTMODIFIED   DATE                           DEFAULT SYSDATE,
  SYSROWID       VARCHAR2(50 BYTE)
)


SELECT WM_CONCAT(''''||COMPONENTCODE||'''') FROM USERWISE_COMPONENT WHERE ACCESS_USRNAME='SWT'


SELECT * FROM USERWISE_COMPONENT


SELECT 'Y' SELECTED,COMPONENTCODE FROM
(
    SELECT * FROM PISCOMPONENTMASTER
    WHERE COMPANYCODE='BJ0056'
    AND DIVISIONCODE='0001'
)



SELECT USERNAME FROM LOGIN

SELECT * FROM DYNAMICWEBPAGE



USERWISE_COMPONENT

delete from sys_tfmap
where SYS_TABLE_SEQUENCIER = 15013


EXEC PROC_CREATE_SYSTFMAP('USERWISE_COMPONENT', 'COMPANYCODE, DIVISIONCODE, ACCESS_USRNAME')

SELECT * FROM SYS_TFMAP WHERE  SYS_TABLE_SEQUENCIER = 15013


EXEC PROC_CREATE_GBL_TMP_TABLES(15013,0)


---------------------------------------------------------------------------------------------

SET DEFINE OFF;
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070205', 'ddlDemo', 'DropDownList', 'width:100px;', '100', 
    NULL, 2, 2, 2, NULL, 
    NULL, NULL, 'SELECT DISTINCT USERNAME FROM LOGIN', 'alert($(''[ID*=ddlDemo]'').val());', NULL, 
    NULL, NULL, NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070205', 'txtDemo', 'TextBox', 'width:100px;', '100', 
    NULL, 1, 2, 1, NULL, 
    NULL, NULL, NULL, NULL, NULL, 
    NULL, 'alert($(''[ID*=txtDemo]'').val());', NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070205', 'lblDemo', 'Label', NULL, '120', 
    NULL, 1, 1, 1, NULL, 
    'Token No', NULL, NULL, NULL, NULL, 
    NULL, NULL, NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070205', 'txtDemo1', 'TextBox', 'width:200px;background-color="#FFCCCC";', '200', 
    NULL, 1, 3, 1, NULL, 
    NULL, NULL, NULL, NULL, NULL, 
    NULL, NULL, 3);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070205', 'lblDemo1', 'Label', NULL, '120', 
    NULL, 2, 1, 1, NULL, 
    'User Name', NULL, NULL, NULL, NULL, 
    NULL, NULL, NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070205', 'btnDemo', 'Button', 'width:100px; ', '200', 
    NULL, 2, 3, 1, NULL, 
    'Get Data', NULL, NULL, NULL, 'FetchGridData();return false;', 
    NULL, NULL, NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070205', 'dataTable', 'Div', 'overflow: auto; border: 1px solid olive; width: 500px; height: 300px;', NULL, 
    NULL, 3, 1, 1, NULL, 
    NULL, NULL, NULL, NULL, 'alert($(''[ID*=txtDemo]'').val());', 
    NULL, NULL, 5);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070205', 'chkDemo', 'CheckBox', NULL, '200', 
    NULL, 2, 5, 1, NULL, 
    'Check Box', NULL, NULL, 'OnChange(this);'||CHR(13)||CHR(10)||'', 'FetchGridData();return false;', 
    NULL, NULL, NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070205', 'lblSelectAll', 'Label', NULL, '200', 
    NULL, 2, 4, 1, NULL, 
    'Select All', NULL, NULL, NULL, NULL, 
    NULL, NULL, NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070206', 'lblUserName', 'Label', NULL, '120', 
    NULL, 1, 1, 1, NULL, 
    'User Name', NULL, NULL, NULL, NULL, 
    NULL, NULL, NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070206', 'ddlUserName', 'DropDownList', 'width:100px;', '100', 
    NULL, 1, 2, 2, NULL, 
    NULL, NULL, 'SELECT DISTINCT USERNAME FROM LOGIN', NULL, NULL, 
    NULL, NULL, NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070206', 'btnGetData', 'Button', 'width:100px; ', '200', 
    NULL, 1, 3, 3, NULL, 
    'Get Data', NULL, NULL, NULL, 'FetchGridData();return false;', 
    NULL, NULL, NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070206', 'lblSelectAll', 'Label', NULL, '200', 
    NULL, 3, 1, 1, NULL, 
    'Select All', NULL, NULL, NULL, NULL, 
    NULL, NULL, NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070206', 'chkDemo', 'CheckBox', NULL, '200', 
    NULL, 3, 2, 4, NULL, 
    'Check Box', NULL, NULL, 'OnChange(this);', NULL, 
    NULL, NULL, NULL);
Insert into DYNAMICWEBPAGE
   (MENUCODE, CONTROLID, CONTROLTYPE, PROPS, WIDTH, 
    HEIGHT, ROWINDEX, COLINDEX, TABINDEX, PAGESRC, 
    TEXTCAPTION, READONLY, DEFAULTVALUE, ONCHANGE, ONCLICK, 
    ONBLUR, SEARCHKEYDOWN, COLSPAN)
 Values
   ('01070206', 'dataTable', 'Div', 'overflow: auto; border: 1px solid olive; width: 500px; height: 300px;', NULL, 
    NULL, 4, 1, 1, NULL, 
    NULL, NULL, NULL, NULL, NULL, 
    NULL, NULL, 3);
COMMIT;

---------------------------------------------------------------------------------------------
DROP TABLE BIRLANEW.DYNAMICWEBPAGE CASCADE CONSTRAINTS;

CREATE TABLE BIRLANEW.DYNAMICWEBPAGE
(
  MENUCODE       VARCHAR2(30 BYTE),
  CONTROLID      VARCHAR2(100 BYTE),
  CONTROLTYPE    VARCHAR2(50 BYTE),
  PROPS          VARCHAR2(2000 BYTE),
  CLASSNAME      VARCHAR2(200 BYTE),
  WIDTH          VARCHAR2(10 BYTE),
  HEIGHT         VARCHAR2(10 BYTE),
  COLSPAN        NUMBER(10),
  ROWINDEX       NUMBER(10),
  COLINDEX       NUMBER(10),
  TABINDEX       NUMBER(10),
  PAGESRC        VARCHAR2(300 BYTE),
  TEXTCAPTION    VARCHAR2(2000 BYTE),
  READONLY       VARCHAR2(2000 BYTE),
  DEFAULTVALUE   VARCHAR2(2000 BYTE),
  ONCHANGE       VARCHAR2(2000 BYTE),
  ONCLICK        VARCHAR2(2000 BYTE),
  ONBLUR         VARCHAR2(2000 BYTE),
  SEARCHKEYDOWN  VARCHAR2(2000 BYTE)
)

---------------------------------------------------------------------------------------------

DROP TABLE ASIANTEA.GTT_PFFORM5_RESULT CASCADE CONSTRAINTS;

CREATE TABLE ASIANTEA.GTT_PFFORM5_RESULT
(
  COMPANYCODE          VARCHAR2(10 BYTE),
  DIVISIONCODE         VARCHAR2(10 BYTE),
  PFREGNO              VARCHAR2(10 BYTE),
  TOKENNO              VARCHAR2(10 BYTE),
  WORKERSERIAL              VARCHAR2(10 BYTE),
  EMPLOYEENAME         VARCHAR2(100 BYTE),
  CATEGORYCODE              VARCHAR2(10 BYTE),
  PFNO                 VARCHAR2(30 BYTE),
  PREVOPENNING         NUMBER,
  CREDIT_BAL_INCOMING  NUMBER,
  CONTRIBUTION         NUMBER,
  INTEREST             NUMBER,
  REFUND_ADV           NUMBER,
  ADVANCEMADE          NUMBER,
  BAL_CARRIED_OVER     NUMBER,
  SETTLEMENTS          NUMBER,
  CREDIT_BAL_OUTGOING  NUMBER,
  LAPSED_CONTRIBUTION  NUMBER,
  BAL_CARRIED_FORWARD  NUMBER
)

---------------------------------------------------------------------------------------------

DROP TABLE ASIANTEA.GPSFORM5TRANSACTION CASCADE CONSTRAINTS;

CREATE TABLE GPSFORM5TRANSACTION
(
  COMPANYCODE          VARCHAR2(10 BYTE),
  DIVISIONCODE         VARCHAR2(10 BYTE),
  YEARCODE             VARCHAR2(10 BYTE),
  PFREGNO              VARCHAR2(10 BYTE),
  CATEGORYCODE         VARCHAR2(10 BYTE),
  TOKENNO         VARCHAR2(20 BYTE),
  WORKERSERIAL         VARCHAR2(20 BYTE),
  EMPLOYEENAME         VARCHAR2(100 BYTE),
  PFCODE               VARCHAR2(10 BYTE),
  PREVOPENNING         NUMBER(15,2)             DEFAULT 0,
  CREDIT_BAL_INCOMING  NUMBER(15,2)             DEFAULT 0,
  CONTRIBUTION         NUMBER(15,2)             DEFAULT 0,
  INTEREST             NUMBER(15,2)             DEFAULT 0,
  REFUND_ADV           NUMBER(15,2)             DEFAULT 0,
  ADVANCEMADE          NUMBER(15,2)             DEFAULT 0,
  BAL_CARRIED_OVER     NUMBER(15,2)             DEFAULT 0,
  SETTLEMENTS          NUMBER(15,2)             DEFAULT 0,
  CREDIT_BAL_OUTGOING  NUMBER(15,2)             DEFAULT 0,
  LAPSED_CONTRIBUTION  NUMBER(15,2)             DEFAULT 0,
  BAL_CARRIED_FORWARD  NUMBER(15,2)             DEFAULT 0,
  REMARKS              VARCHAR2(100 BYTE),
  TRANDATE             DATE,
  ENTEREDBY            VARCHAR2(25 BYTE),
  ENTEREDON            DATE,
  PFFINSTARTDATE       DATE,
  ACTIVE               VARCHAR2(10 BYTE),
  SETTLEMENTTYPE       VARCHAR2(25 BYTE),
  LASTPROCESSDATE      DATE,
  DATEOFSETTLEMENT     DATE,
  VPFAMOUNT            NUMBER(15,2)             DEFAULT 0,
  LOCKED               VARCHAR2(1 BYTE)         DEFAULT 'N',
  MINLAPSEYEAR         NUMBER(5)                DEFAULT 0,
  MINLAPSEAMOUNT       NUMBER(15,2)             DEFAULT 0,
  SYSROWID             VARCHAR2(50 BYTE),
  WAGEPERIODFROM       DATE,
  WAGEPERIODTO         DATE,
  SALARYPERIODFROM     DATE,
  SALARYPERIODTO       DATE,
  LASTMODIFIED       DATE DEFAULT SYSDATE
)


---------------------------------------------------------------------------------------------


SELECT LEVEL SEQ_INDX, trim(regexp_substr('Err1, Err2, Err3', '[^,]+', 1, LEVEL)) str_2_tab
  FROM dual
CONNECT BY LEVEL <= regexp_count('Err1, Err2, Err3', ',')+1


---------------------------------------------------------------------------------------------

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER=''

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='GPSFORM5TRANSACTION'


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='GPSEMPLOYEEMAST'

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_TEMP=''

SELECT * FROM COLS 
WHERE TABLE_NAME='GPSFORM5TRANSACTION'


SELECT 10009 SYS_TABLE_SEQUENCIER,TABLE_NAME SYS_TABLENAME_ACTUAL,'GBL_'||TABLE_NAME SYS_TABLENAME_TEMP,COLUMN_NAME SYS_COLUMNNAME, 
0 SYS_COLUMN_SEQUENCE,DATA_TYPE SYS_DATATYPE,DATA_LENGTH SYS_COLUMN_LENGTH,DATA_PRECISION SYS_COLUMN_PRECISION,'N' SYS_KEYCOLUMN, 
COLUMN_NAME SYS_MAPFIELD,SYSDATE SYS_TIMESTAMP,'Y' SYS_USEMAP,NULL SYS_DEFAULT,NULL TDSCODE FROM
(
SELECT TABLE_NAME,COLUMN_NAME,DATA_TYPE,DATA_LENGTH,DATA_PRECISION  FROM COLS 
WHERE TABLE_NAME='GPSFORM5TRANSACTION'
) A

SELECT MAX(SYS_TABLE_SEQUENCIER)+1 FROM SYS_TFMAP

 SELECT 20279 SYS_TABLE_SEQUENCIER,TABLE_NAME SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP,COLUMN_NAME SYS_COLUMNNAME, 
        NVL(B.SEQ_INDX,0) SYS_COLUMN_SEQUENCE,DATA_TYPE SYS_DATATYPE,DATA_LENGTH SYS_COLUMN_LENGTH,DATA_PRECISION SYS_COLUMN_PRECISION,NVL(B.KEYCOLUMN, 'N') SYS_KEYCOLUMN, 
        COLUMN_NAME SYS_MAPFIELD,SYSDATE SYS_TIMESTAMP,'Y' SYS_USEMAP,NULL SYS_DEFAULT,NULL TDSCODE FROM
        (
            SELECT TABLE_NAME,'GBL_'||TABLE_NAME SYS_TABLENAME_TEMP,COLUMN_NAME,DATA_TYPE,DECODE(DATA_TYPE,'NUMBER',DATA_PRECISION,DATA_LENGTH) DATA_LENGTH,DECODE(DATA_TYPE,'NUMBER',DATA_SCALE,DATA_PRECISION) DATA_PRECISION  FROM COLS 
            WHERE TABLE_NAME='GPSFORM5TRANSACTION'
            UNION ALL
            SELECT 'NONE' , 'GBL_GPSFORM5TRANSACTION', 'OPERATIONMODE' COLUMN_NAME,'VARCHAR2' DATA_TYPE,1 DATA_LENGTH,NULL DATA_PRECISION  FROM DUAL 
        ) A,
        (
            SELECT LEVEL SEQ_INDX,'Y' KEYCOLUMN, trim(regexp_substr('COMPANYCODE, DIVISIONCODE,PFREGNO, CATEGORYCODE, EMPLOYEECODE', '[^,]+', 1, LEVEL)) COLNAME
            FROM dual
            CONNECT BY LEVEL <= regexp_count('COMPANYCODE, DIVISIONCODE,PFREGNO, CATEGORYCODE, EMPLOYEECODE', ',')+1
        )B
        WHERE A.COLUMN_NAME=B.COLNAME(+)
        
        SELECT LEVEL SEQ_INDX,'Y' KEYCOLUMN, trim(regexp_substr('COMPANYCODE, DIVISIONCODE, YEARCODE, PFREGNO, CATEGORYCODE, EMPLOYEECODE', '[^,]+', 1, LEVEL)) COLNAME
        FROM dual
        CONNECT BY LEVEL <= regexp_count('COMPANYCODE, DIVISIONCODE, YEARCODE, PFREGNO, CATEGORYCODE, EMPLOYEECODE', ',')+1
        
        
EXEC PROC_CREATE_SYSTFMAP('GPSFORM5TRANSACTION','COMPANYCODE, DIVISIONCODE, YEARCODE, PFREGNO, CATEGORYCODE, TOKENNO') 

DELETE FROM SYS_TFMAP_TEST

WHERE SYS_TABLE_SEQUENCIER = 20279


DELETE FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER = 20279

DELETE FROM SYS_TFMAP
WHERE SYS_TABLENAME_TEMP = 'GBL_GPSFORM5TRANSACTION'


SELECT * FROM SYS_TFMAP WHERE SYS_TABLE_SEQUENCIER = 20279

SYS_TABLE_SEQUENCIER : 20279


EXEC PROC_CREATE_GBL_TMP_TABLES(20279,0)

SELECT * FROM SYS_TFMAP WHERE  SYS_TABLE_SEQUENCIER = 20279

EXEC PROC_CREATE_GBL_TMP_TABLES(20279,0)


---------------------------------------------------------------------------------------------


CREATE TABLE GTT_PFFORM5_RESULT AS
SELECT COMPANYCODE, DIVISIONCODE,PFREGNO,  TOKENNO,EMPLOYEENAME,PFNO,
0 PREVOPENNING,0 CREDIT_BAL_INCOMING,0 CONTRIBUTION,0 INTEREST,0 REFUND_ADV,0 ADVANCEMADE,0 BAL_CARRIED_OVER, 
0 SETTLEMENTS,0 CREDIT_BAL_OUTGOING,0 LAPSED_CONTRIBUTION,0 BAL_CARRIED_FORWARD 
FROM GPSEMPLOYEEMAST

SELECT COMPANYCODE, DIVISIONCODE, TOKENNO,LOAN_PF,PF_E,PF_C,FPF FROM
GPSPAYSHEETDETAILS

SELECT * FROM 
GPSFORM5TRANSACTION

COMPANYCODE, DIVISIONCODE, YEARCODE, PFREGNO, CATEGORYCODE, EMPLOYEECODE, EMPLOYEENAME, PFCODE, 
PREVOPENNING, CREDIT_BAL_INCOMING, CONTRIBUTION, INTEREST, REFUND_ADV, ADVANCEMADE, BAL_CARRIED_OVER, 
SETTLEMENTS, CREDIT_BAL_OUTGOING, LAPSED_CONTRIBUTION, BAL_CARRIED_FORWARD, REMARKS, TRANDATE, 
ENTEREDBY, ENTEREDON, PFFINSTARTDATE, ACTIVE, SETTLEMENTTYPE, LASTPROCESSDATE, DATEOFSETTLEMENT, 
VPFAMOUNT, LOCKED, MINLAPSEYEAR, MINLAPSEAMOUNT, SYSROWID, WAGEPERIODFROM, WAGEPERIODTO, SALARYPERIODFROM, SALARYPERIODTO

SELECT DISTINCT EMPLOYEESTATUS FROM GPSEMPLOYEEMAST

SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT
FROM PFLOANBREAKUP A, GPSCATEGORYMAST B
WHERE A.COMPANYCODE=B.COMPANYCODE
AND A.DIVISIONCODE=B.DIVISIONCODE
AND A.CATEGORYCODE=B.CATEGORYCODE
AND B.CATEGORYTYPE='WORKER'
AND A.COMPANYCODE='DY0080'
AND A.DIVISIONCODE='0002'
AND PAIDON >= TO_DATE('18/05/2020','DD/MM/YYYY')
AND PAIDON <= TO_DATE('24/05/2020','DD/MM/YYYY')
GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO
UNION ALL
SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT
FROM PFLOANBREAKUP A, GPSCATEGORYMAST B
WHERE A.COMPANYCODE=B.COMPANYCODE
AND A.DIVISIONCODE=B.DIVISIONCODE
AND A.CATEGORYCODE=B.CATEGORYCODE
AND B.CATEGORYTYPE<>'WORKER'
AND A.COMPANYCODE='DY0080'
AND A.DIVISIONCODE='0002'
AND PAIDON >= TO_DATE('18/05/2020','DD/MM/YYYY')
AND PAIDON <= TO_DATE('24/05/2020','DD/MM/YYYY')
GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO


SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT 
from PFLOANTRANSACTION A, GPSCATEGORYMAST B
WHERE A.COMPANYCODE=B.COMPANYCODE
AND A.DIVISIONCODE=B.DIVISIONCODE
AND A.CATEGORYCODE=B.CATEGORYCODE
AND B.CATEGORYTYPE='WORKER'
AND A.COMPANYCODE='DY0080'
AND A.DIVISIONCODE='0002'
AND A.LOANDATE >= TO_DATE('18/05/2020','DD/MM/YYYY')
AND A.LOANDATE <= TO_DATE('24/05/2020','DD/MM/YYYY')
GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO
UNION ALL
SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT 
from PFLOANTRANSACTION A, GPSCATEGORYMAST B
WHERE A.COMPANYCODE=B.COMPANYCODE
AND A.DIVISIONCODE=B.DIVISIONCODE
AND A.CATEGORYCODE=B.CATEGORYCODE
AND B.CATEGORYTYPE<>'WORKER'
AND A.COMPANYCODE='DY0080'
AND A.DIVISIONCODE='0002'
AND A.LOANDATE >= TO_DATE('18/05/2020','DD/MM/YYYY')
AND A.LOANDATE <= TO_DATE('24/05/2020','DD/MM/YYYY')
GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO


DELETE FROM 
GPSFORM5TRANSACTION

SELECT * FROM 
GPSFORM5TRANSACTION


SELECT COMPANYCODE, DIVISIONCODE, TOKENNO,CATEGORYCODE, 
SUM(NVL(LOAN_PF,0)) LOAN_PF,SUM(NVL(PF_E,0)) PF_E,SUM(NVL(PF_C,0)) PF_C,SUM(NVL(FPF,0)) FPF 
FROM GPSPAYSHEETDETAILS 
WHERE COMPANYCODE='DY0080'
AND DIVISIONCODE='0002'
AND CATEGORYTYPE = 'WORKER'
AND PERIODFROM >= TO_DATE('18/05/2020','DD/MM/YYYY')
AND PERIODTO <= TO_DATE('24/05/2020','DD/MM/YYYY')
GROUP BY COMPANYCODE,DIVISIONCODE,TOKENNO,CATEGORYCODE
UNION ALL
SELECT COMPANYCODE, DIVISIONCODE, TOKENNO,CATEGORYCODE, 
SUM(NVL(LOAN_PF,0)) LOAN_PF,SUM(NVL(PF_E,0)) PF_E,SUM(NVL(PF_C,0)) PF_C,SUM(NVL(FPF,0)) FPF 
FROM GPSPAYSHEETDETAILS 
WHERE COMPANYCODE='DY0080'
AND DIVISIONCODE='0002'
AND CATEGORYTYPE <> 'WORKER'
AND PERIODFROM >= TO_DATE('18/05/2020','DD/MM/YYYY')
AND PERIODTO <= TO_DATE('24/05/2020','DD/MM/YYYY')
GROUP BY COMPANYCODE,DIVISIONCODE,TOKENNO,CATEGORYCODE


PERIODFROM	PERIODTO
18/05/2020	24/05/2020


SELECT * FROM GPSPAYSHEETDETAILS

SELECT DISTINCT PERIODFROM,PERIODTO FROM GPSPAYSHEETDETAILS
WHERE COMPANYCODE='DY0080'
AND DIVISIONCODE='0002'
AND CATEGORYTYPE = 'WORKER'




SELECT A.COMPANYCODE, A.DIVISIONCODE,A.PFREGNO,  A.TOKENNO,EMPLOYEENAME,PFNO,
0 PREVOPENNING,0 CREDIT_BAL_INCOMING,B.CONTRIBUTION CONTRIBUTION,0 INTEREST,
NVL(D.AMOUNT,0) REFUND_ADV,NVL(C.AMOUNT,0) ADVANCEMADE,0 BAL_CARRIED_OVER, 
0 SETTLEMENTS,0 CREDIT_BAL_OUTGOING,0 LAPSED_CONTRIBUTION,0 BAL_CARRIED_FORWARD 
FROM GPSEMPLOYEEMAST A,
(
    SELECT COMPANYCODE, DIVISIONCODE, TOKENNO,CATEGORYCODE, 
    SUM(NVL(LOAN_PF,0)) LOAN_PF,SUM(NVL(PF_E,0)) PF_E,SUM(NVL(PF_C,0)) PF_C,SUM(NVL(FPF,0)) FPF ,
    (SUM(NVL(PF_E,0)) + SUM(NVL(PF_C,0)) + SUM(NVL(FPF,0))) CONTRIBUTION
    FROM GPSPAYSHEETDETAILS 
    WHERE COMPANYCODE='DY0080'
    AND DIVISIONCODE='0002'
    AND CATEGORYTYPE = 'WORKER'
    AND PERIODFROM >= TO_DATE('18/05/2020','DD/MM/YYYY')
    AND PERIODTO <= TO_DATE('24/05/2020','DD/MM/YYYY')
    GROUP BY COMPANYCODE,DIVISIONCODE,TOKENNO,CATEGORYCODE
    UNION ALL
    SELECT COMPANYCODE, DIVISIONCODE, TOKENNO,CATEGORYCODE, 
    SUM(NVL(LOAN_PF,0)) LOAN_PF,SUM(NVL(PF_E,0)) PF_E,SUM(NVL(PF_C,0)) PF_C,SUM(NVL(FPF,0)) FPF ,
    (SUM(NVL(PF_E,0)) + SUM(NVL(PF_C,0)) + SUM(NVL(FPF,0))) CONTRIBUTION
    FROM GPSPAYSHEETDETAILS 
    WHERE COMPANYCODE='DY0080'
    AND DIVISIONCODE='0002'
    AND CATEGORYTYPE <> 'WORKER'
    AND PERIODFROM >= TO_DATE('01/05/2020','DD/MM/YYYY')
    AND PERIODTO <= TO_DATE('31/05/2020','DD/MM/YYYY')
    GROUP BY COMPANYCODE,DIVISIONCODE,TOKENNO,CATEGORYCODE
) B,
(
    SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT 
    FROM PFLOANTRANSACTION A, GPSCATEGORYMAST B
    WHERE A.COMPANYCODE=B.COMPANYCODE
    AND A.DIVISIONCODE=B.DIVISIONCODE
    AND A.CATEGORYCODE=B.CATEGORYCODE
    AND B.CATEGORYTYPE='WORKER'
    AND A.COMPANYCODE='DY0080'
    AND A.DIVISIONCODE='0002'
    AND A.LOANDATE >= TO_DATE('18/05/2020','DD/MM/YYYY')
    AND A.LOANDATE <= TO_DATE('24/05/2020','DD/MM/YYYY')
    GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO
    UNION ALL
    SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT 
    FROM PFLOANTRANSACTION A, GPSCATEGORYMAST B
    WHERE A.COMPANYCODE=B.COMPANYCODE
    AND A.DIVISIONCODE=B.DIVISIONCODE
    AND A.CATEGORYCODE=B.CATEGORYCODE
    AND B.CATEGORYTYPE<>'WORKER'
    AND A.COMPANYCODE='DY0080'
    AND A.DIVISIONCODE='0002'
    AND A.LOANDATE >= TO_DATE('01/05/2020','DD/MM/YYYY')
    AND A.LOANDATE <= TO_DATE('31/05/2020','DD/MM/YYYY')
    GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO
) C,
(
    SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT
    FROM PFLOANBREAKUP A, GPSCATEGORYMAST B
    WHERE A.COMPANYCODE=B.COMPANYCODE
    AND A.DIVISIONCODE=B.DIVISIONCODE
    AND A.CATEGORYCODE=B.CATEGORYCODE
    AND B.CATEGORYTYPE='WORKER'
    AND A.COMPANYCODE='DY0080'
    AND A.DIVISIONCODE='0002'
    AND PAIDON >= TO_DATE('18/05/2020','DD/MM/YYYY')
    AND PAIDON <= TO_DATE('24/05/2020','DD/MM/YYYY')
    GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO
    UNION ALL
    SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT
    FROM PFLOANBREAKUP A, GPSCATEGORYMAST B
    WHERE A.COMPANYCODE=B.COMPANYCODE
    AND A.DIVISIONCODE=B.DIVISIONCODE
    AND A.CATEGORYCODE=B.CATEGORYCODE
    AND B.CATEGORYTYPE<>'WORKER'
    AND A.COMPANYCODE='DY0080'
    AND A.DIVISIONCODE='0002'
    AND PAIDON >= TO_DATE('01/05/2020','DD/MM/YYYY')
    AND PAIDON <= TO_DATE('31/05/2020','DD/MM/YYYY')
    GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO
) D
WHERE A.COMPANYCODE=B.COMPANYCODE
AND A.DIVISIONCODE=B.DIVISIONCODE
AND A.TOKENNO=B.TOKENNO
AND A.COMPANYCODE=C.COMPANYCODE(+)
AND A.DIVISIONCODE=C.DIVISIONCODE(+)
AND A.TOKENNO=C.TOKENNO(+)
AND A.COMPANYCODE=D.COMPANYCODE(+)
AND A.DIVISIONCODE=D.DIVISIONCODE(+)
AND A.TOKENNO=D.TOKENNO(+)



SELECT COMPANYCODE, DIVISIONCODE, TOKENNO,CATEGORYCODE, 
    SUM(NVL(LOAN_PF,0)) LOAN_PF,SUM(NVL(PF_E,0)) PF_E,SUM(NVL(PF_C,0)) PF_C,SUM(NVL(FPF,0)) FPF ,
    (SUM(NVL(PF_E,0)) + SUM(NVL(PF_C,0)) + SUM(NVL(FPF,0))) CONTRIBUTION
    FROM GPSPAYSHEETDETAILS 
    WHERE COMPANYCODE='DY0080'
    AND DIVISIONCODE='0002'
    AND CATEGORYTYPE = 'WORKER'
    AND PERIODFROM >= TO_DATE('18/05/2020','DD/MM/YYYY')
    AND PERIODTO <= TO_DATE('24/05/2020','DD/MM/YYYY')
    GROUP BY COMPANYCODE,DIVISIONCODE,TOKENNO,CATEGORYCODE
    UNION ALL
    SELECT COMPANYCODE, DIVISIONCODE, TOKENNO,CATEGORYCODE, 
    SUM(NVL(LOAN_PF,0)) LOAN_PF,SUM(NVL(PF_E,0)) PF_E,SUM(NVL(PF_C,0)) PF_C,SUM(NVL(FPF,0)) FPF ,
    (SUM(NVL(PF_E,0)) + SUM(NVL(PF_C,0)) + SUM(NVL(FPF,0))) CONTRIBUTION
    FROM GPSPAYSHEETDETAILS 
    WHERE COMPANYCODE='DY0080'
    AND DIVISIONCODE='0002'
    AND CATEGORYTYPE <> 'WORKER'
    AND PERIODFROM >= TO_DATE('01/05/2020','DD/MM/YYYY')
    AND PERIODTO <= TO_DATE('31/05/2020','DD/MM/YYYY')
    GROUP BY COMPANYCODE,DIVISIONCODE,TOKENNO,CATEGORYCODE
    
    
    
    EXEC PROC_INSERT_PFFORM5('DY0080','0002','2020-2021','C-36','01/05/2020','31/05/2020','01/05/2020','31/05/2020','18/05/2020','24/05/2020')
	
	
---------------------------------------------------------------------------------------------
SELECT A.COMPANYCODE, A.DIVISIONCODE,A.PFREGNO,  A.TOKENNO,EMPLOYEENAME,PFNO,
0 PREVOPENNING,0 CREDIT_BAL_INCOMING,B.CONTRIBUTION CONTRIBUTION,0 INTEREST,
NVL(D.AMOUNT,0) REFUND_ADV,NVL(C.AMOUNT,0) ADVANCEMADE,0 BAL_CARRIED_OVER, 
0 SETTLEMENTS,0 CREDIT_BAL_OUTGOING,0 LAPSED_CONTRIBUTION,0 BAL_CARRIED_FORWARD 
FROM GPSEMPLOYEEMAST A,
(
    SELECT COMPANYCODE, DIVISIONCODE, TOKENNO,CATEGORYCODE, 
    SUM(NVL(LOAN_PF,0)) LOAN_PF,SUM(NVL(PF_E,0)) PF_E,SUM(NVL(PF_C,0)) PF_C,SUM(NVL(FPF,0)) FPF ,
    (SUM(NVL(PF_E,0)) + SUM(NVL(PF_C,0)) + SUM(NVL(FPF,0))) CONTRIBUTION
    FROM GPSPAYSHEETDETAILS 
    WHERE COMPANYCODE='DY0080'
    AND DIVISIONCODE='0002'
    AND CATEGORYTYPE = 'WORKER'
    AND PERIODFROM >= TO_DATE('18/05/2020','DD/MM/YYYY')
    AND PERIODTO <= TO_DATE('24/05/2020','DD/MM/YYYY')
    GROUP BY COMPANYCODE,DIVISIONCODE,TOKENNO,CATEGORYCODE
    UNION ALL
    SELECT COMPANYCODE, DIVISIONCODE, TOKENNO,CATEGORYCODE, 
    SUM(NVL(LOAN_PF,0)) LOAN_PF,SUM(NVL(PF_E,0)) PF_E,SUM(NVL(PF_C,0)) PF_C,SUM(NVL(FPF,0)) FPF ,
    (SUM(NVL(PF_E,0)) + SUM(NVL(PF_C,0)) + SUM(NVL(FPF,0))) CONTRIBUTION
    FROM GPSPAYSHEETDETAILS 
    WHERE COMPANYCODE='DY0080'
    AND DIVISIONCODE='0002'
    AND CATEGORYTYPE <> 'WORKER'
    AND PERIODFROM >= TO_DATE('01/05/2020','DD/MM/YYYY')
    AND PERIODTO <= TO_DATE('31/05/2020','DD/MM/YYYY')
    GROUP BY COMPANYCODE,DIVISIONCODE,TOKENNO,CATEGORYCODE
) B,
(
    SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT 
    FROM PFLOANTRANSACTION A, GPSCATEGORYMAST B
    WHERE A.COMPANYCODE=B.COMPANYCODE
    AND A.DIVISIONCODE=B.DIVISIONCODE
    AND A.CATEGORYCODE=B.CATEGORYCODE
    AND B.CATEGORYTYPE='WORKER'
    AND A.COMPANYCODE='DY0080'
    AND A.DIVISIONCODE='0002'
    AND A.LOANDATE >= TO_DATE('18/05/2020','DD/MM/YYYY')
    AND A.LOANDATE <= TO_DATE('24/05/2020','DD/MM/YYYY')
    GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO
    UNION ALL
    SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT 
    FROM PFLOANTRANSACTION A, GPSCATEGORYMAST B
    WHERE A.COMPANYCODE=B.COMPANYCODE
    AND A.DIVISIONCODE=B.DIVISIONCODE
    AND A.CATEGORYCODE=B.CATEGORYCODE
    AND B.CATEGORYTYPE<>'WORKER'
    AND A.COMPANYCODE='DY0080'
    AND A.DIVISIONCODE='0002'
    AND A.LOANDATE >= TO_DATE('01/05/2020','DD/MM/YYYY')
    AND A.LOANDATE <= TO_DATE('31/05/2020','DD/MM/YYYY')
    GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO
) C,
(
    SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT
    FROM PFLOANBREAKUP A, GPSCATEGORYMAST B
    WHERE A.COMPANYCODE=B.COMPANYCODE
    AND A.DIVISIONCODE=B.DIVISIONCODE
    AND A.CATEGORYCODE=B.CATEGORYCODE
    AND B.CATEGORYTYPE='WORKER'
    AND A.COMPANYCODE='DY0080'
    AND A.DIVISIONCODE='0002'
    AND PAIDON >= TO_DATE('18/05/2020','DD/MM/YYYY')
    AND PAIDON <= TO_DATE('24/05/2020','DD/MM/YYYY')
    GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO
    UNION ALL
    SELECT A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO, SUM(NVL(A.AMOUNT,0)) AMOUNT
    FROM PFLOANBREAKUP A, GPSCATEGORYMAST B
    WHERE A.COMPANYCODE=B.COMPANYCODE
    AND A.DIVISIONCODE=B.DIVISIONCODE
    AND A.CATEGORYCODE=B.CATEGORYCODE
    AND B.CATEGORYTYPE<>'WORKER'
    AND A.COMPANYCODE='DY0080'
    AND A.DIVISIONCODE='0002'
    AND PAIDON >= TO_DATE('01/05/2020','DD/MM/YYYY')
    AND PAIDON <= TO_DATE('31/05/2020','DD/MM/YYYY')
    GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.TOKENNO
) D
WHERE A.COMPANYCODE=B.COMPANYCODE
AND A.DIVISIONCODE=B.DIVISIONCODE
AND A.TOKENNO=B.TOKENNO
AND A.COMPANYCODE=C.COMPANYCODE(+)
AND A.DIVISIONCODE=C.DIVISIONCODE(+)
AND A.TOKENNO=C.TOKENNO(+)
AND A.COMPANYCODE=D.COMPANYCODE(+)
AND A.DIVISIONCODE=D.DIVISIONCODE(+)
AND A.TOKENNO=D.TOKENNO(+)
---------------------------------------------------------------------------------------------

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER=''

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='GPSFORM5TRANSACTION'


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='GPSEMPLOYEEMAST'

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_TEMP=''

SELECT * FROM COLS 
WHERE TABLE_NAME='GPSFORM5TRANSACTION'


SELECT 10009 SYS_TABLE_SEQUENCIER,TABLE_NAME SYS_TABLENAME_ACTUAL,'GBL_'||TABLE_NAME SYS_TABLENAME_TEMP,COLUMN_NAME SYS_COLUMNNAME, 
0 SYS_COLUMN_SEQUENCE,DATA_TYPE SYS_DATATYPE,DATA_LENGTH SYS_COLUMN_LENGTH,DATA_PRECISION SYS_COLUMN_PRECISION,'N' SYS_KEYCOLUMN, 
COLUMN_NAME SYS_MAPFIELD,SYSDATE SYS_TIMESTAMP,'Y' SYS_USEMAP,NULL SYS_DEFAULT,NULL TDSCODE FROM
(
SELECT TABLE_NAME,COLUMN_NAME,DATA_TYPE,DATA_LENGTH,DATA_PRECISION  FROM COLS 
WHERE TABLE_NAME='GPSFORM5TRANSACTION'
) A

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

Add fields in Employee Master (PIS) - Religion, Pran No., Gratuity No. Super annuation No. Super Annuation Date.

txtRELIGION
txtPRANNUMBER
txtGRATUITYNUMBER
txtSUPERANUATIONNUMBER
mskSUPERANUATIONDATE

SUPERANUATIONNUMBER, SUPERANUATIONDATE, RELIGION, PRANNUMBER, GRATUITYNUMBER

Note :- Prepare Another Page for Birla (Copy from exsiting page)


---------------------------------------------------------------------------------------------

SELECT * FROM MENUMASTER_RND
WHERE MENUCODE='0107010111'

SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%employee mas%')

SELECT * FROM ROLEDETAILS
WHERE MENUCODE=''

SELECT * FROM REPORTPARAMETERMASTER
WHERE REPORTTAG=''

update MENUMASTER_RND SET
URLSRC='PIS/PAGES/Master/pgEmployeeMast_Birla.aspx'
WHERE MENUCODE='0107010111'


select * from 
pisemployeemaster

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='PISEMPLOYEEMASTER'


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_TEMP='PISEMPLOYEEMASTER'

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10014'



txtRELIGION
txtPRANNUMBER
txtGRATUITYNUMBER
txtSUPERANUATIONNUMBER
mskSUPERANUATIONDATE

 SET DEFINE OFF;
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'RELIGION', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtRELIGION', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
COMMIT;

 SET DEFINE OFF;
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'PRANNUMBER', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtPRANNUMBER', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
COMMIT;


 SET DEFINE OFF;
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'GRATUITYNUMBER', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtGRATUITYNUMBER', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
COMMIT;


 SET DEFINE OFF;
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'SUPERANUATIONNUMBER', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtSUPERANUATIONNUMBER', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
COMMIT;

SET DEFINE OFF;
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'SUPERANUATIONDATE', 0, 
    'DATE', 10, 0, 'N', 'mskSUPERANUATIONDATE', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
COMMIT;



exec proc_create_gbl_tmp_tables(10014,0)
---------------------------------------------------------------------------------------------


--dtVoucherPrint

 Select  COMPANYCODE, DIVISIONCODE, YEARCODE, 
 fn_Generate_VoucherPrefix(A.companycode,A.divisioncode,A.yearcode,A.systemvoucherno) as VOUCHERNO,
 VOUCHERDATE, VOUCHERTYPE, SYSTEMVOUCHERNO, SYSTEMVOUCHERDATE, 
 CASHBANKACCODE, CHEQUENO, CHEQUEDATE, CHEQUEDRAWNON, PARTY, CHEQUEPRINTEDBY, CHEQUEPRINTDATE, 
 REALIZATIONDATE, VOUCHERAMOUNT, NARRATION, AUTOMANUALMARK, REFVOUCHERNO, REFVOUCHERDATE, REFVOUCHERTYPE, 
 REFSYSTEMVOUCHERNO, PREPAREDBY, CHECKEDBY, EDITEDBY, PRINTEDBY, PREPAREDDATE, CHECKEDDATE, EDITEDDATE, 
 PRINTEDDATE, LASTMODIFIED, SYNCHRONIZED, CONTROLVOUCHER, REFMEMORANDUMVOUCHERNO, MODULENAME, DOCUMENTTYPE, 
 INSTRUCTIONNO, MANUALVOUCHERNO, MANUALVOUCHERDATE, VOUCHERPAYMENTRECEIPTTYPE, CHEQUEISSUEDON, SYSROWID, 
 USERNAME, CHEQUEBOOKSLNO, LIABILITYTYPE, VOUCHERNATURE,
 REPLACE(REPLACE(REPLACE(A.NARRATION,CHR(9),' '),CHR(10),' '),CHR(13),' ') PRINTNARRATION, DECODE(A.VOUCHERTYPE,'PURCHASE BILL','LIABILITY BILL',A.VOUCHERTYPE) VOUCHERTYPE2, CASE WHEN A.VOUCHERTYPE ='PAYMENTS' THEN 'PAID TO : '||A.PARTY ELSE CASE WHEN A.VOUCHERTYPE ='RECEIPTS' THEN 'RECEIVED FROM : '||A.PARTY ELSE '' END END PAIDTORECEIVEDFROM  
 From AcVoucher A 
 Where A.CompanyCode = '0001'  
   And A.DivisionCode = '002' 
   And A.YearCode = '2020-2021' 
   And A.SystemVoucherNo IN ('BA0001/002-RVB/2021/00000008') 
   
   
--   strAddress
SELECT CASE WHEN INSTR(D.DIVISIONNAME,'MILL')>0 THEN D.DIVISIONADDRESS ||' '|| D.DIVISIONADDRESS1 ELSE D.DIVISIONADDRESS ||' '|| D.DIVISIONADDRESS1 END ADDRESS 
  FROM COMPANYMAST C, DIVISIONMASTER D 
 WHERE C.COMPANYCODE='0001' 
   AND C.COMPANYCODE=D.COMPANYCODE 
   AND DIVISIONCODE='002' 
   
   
   
Select B.ACHEAD || CASE WHEN A.divisioncode <> A.DIVISIONCODEFOR THEN ' [UNIT : ' || d.divisionname || ']' else '' end as ACHEAD, A.* 
  From ACVOUCHERDETAILS_ENTRY A, ACACLEDGER B, DIVISIONMASTER D 
 Where A.CompanyCode = B.CompanyCode 
   And A.ACCODEFOR = B.AcCode 
   And A.CompanyCode = D.CompanyCode 
   And A.divisioncodefor = d.divisioncode 
   And A.CompanyCode = '0001' 
   And A.DivisionCode = '002' 
   And A.YearCode = '2020-2021' 
   And A.SystemVoucherNo IN ('BA0001/002-RVB/2021/00000008') 
 Order By A.SystemVoucherNo,A.SERIALNO  
 
 
 
Select a.*,  
 case when a.TRANSACTIONTYPE='ADVANCE PAYMENT REVERSAL' then 'ADV-PYMT-REV' 
        when a.TRANSACTIONTYPE='ADVANCE PAYMENT ADJUSTMENT' then 'ADV-PYMT-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL ADJUSTMENT' then 'LIB-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL ADJUSTMENT REVERSAL' then 'LIB-ADJ-REV'
        when a.TRANSACTIONTYPE='PURCHASE BILL' then 'LIB'
        when a.TRANSACTIONTYPE='SALES BILL' then 'SB'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT ADJUSTMENT' then 'ADV-RCPT-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL REVERSAL' then 'LIB-REV'
        when a.TRANSACTIONTYPE='SALES BILL ADJUSTMENT ADJUSTMENT' then 'SB-ADJ'
        when a.TRANSACTIONTYPE='ADVANCE PAYMENT' then 'ADV-PYMT'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT' then 'ADV-RCPT'
        when a.TRANSACTIONTYPE='SALES BILL ADJUSTMENT' then 'SB-ADJ'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT REVERSAL' then 'ADV-RCPT-REV'
        else 'REF'
       end reftranstype 
       From ACBILLDETAILS_ENTRY a 
 Where a.CompanyCode = '0001'  
   And a.DivisionCode = '002' 
   And a.YearCode = '2020-2021' 
   And a.SystemVoucherNo IN ('BA0001/002-RVB/2021/00000008') 
 Order By SYSROWID  
 
 
Select B.COSTCENTRENAME, A.* From AcCostCentreDetails A, ACCOSTCENTREMAST B 
 Where A.CompanyCode = '0001'  
   And A.DivisionCode = '002' 
   And A.YearCode = '2020-2021' 
   And A.SystemVoucherNo IN ('BA0001/002-RVB/2021/00000008') 
   And A.CompanyCode = B.CompanyCode 
   And A.DIVISIONCODE = B.LOCATIONCODE  
   And A.CostCentreCode = B.CostCentreCode  
 Order By A.SystemVoucherNo 

---------------------------------------------------------------------------------------------
--    VOUCHER PRINTING


Select a.*,  
 case when a.TRANSACTIONTYPE='ADVANCE PAYMENT REVERSAL' then 'ADV-PYMT-REV' 
        when a.TRANSACTIONTYPE='ADVANCE PAYMENT ADJUSTMENT' then 'ADV-PYMT-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL ADJUSTMENT' then 'LIB-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL ADJUSTMENT REVERSAL' then 'LIB-ADJ-REV'
        when a.TRANSACTIONTYPE='PURCHASE BILL' then 'LIB'
        when a.TRANSACTIONTYPE='SALES BILL' then 'SB'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT ADJUSTMENT' then 'ADV-RCPT-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL REVERSAL' then 'LIB-REV'
        when a.TRANSACTIONTYPE='SALES BILL ADJUSTMENT ADJUSTMENT' then 'SB-ADJ'
        when a.TRANSACTIONTYPE='ADVANCE PAYMENT' then 'ADV-PYMT'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT' then 'ADV-RCPT'
        when a.TRANSACTIONTYPE='SALES BILL ADJUSTMENT' then 'SB-ADJ'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT REVERSAL' then 'ADV-RCPT-REV'
        else 'REF'
       end reftranstype
       From AcBillDetails a 
 Where a.CompanyCode = '0001'  
   And a.DivisionCode = '002' 
   And a.YearCode = '2020-2021' 
   And a.SystemVoucherNo =  'BA0001/002-RVB/2021/00000057' 
   And a.ACCODE= 'S000930' 
-- Order By sysrowid  

BA0001/002-RVB/2021/00000057

BA0001/004-RVB/2021/00000008

SELECT * FROM ACBILLDETAILS_ENTRY
WHERE SYSTEMVOUCHERNO LIKE '%RVB%'

SELECT * from AcBillDetails
WHERE SYSTEMVOUCHERNO LIKE '%RVB%'


SELECT * from AcBillDetails
WHERE SYSTEMVOUCHERNO LIKE 'BA0001/003-RPA/2021/00249599'



SELECT * FROM DIVISIONMASTER


SELECT * from acvoucher
where REFSYSTEMVOUCHERNO='BA0001/002-RVB/2021/00000008'


Select a.*,  
 case when a.TRANSACTIONTYPE='ADVANCE PAYMENT REVERSAL' then 'ADV-PYMT-REV' 
        when a.TRANSACTIONTYPE='ADVANCE PAYMENT ADJUSTMENT' then 'ADV-PYMT-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL ADJUSTMENT' then 'LIB-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL ADJUSTMENT REVERSAL' then 'LIB-ADJ-REV'
        when a.TRANSACTIONTYPE='PURCHASE BILL' then 'LIB'
        when a.TRANSACTIONTYPE='SALES BILL' then 'SB'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT ADJUSTMENT' then 'ADV-RCPT-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL REVERSAL' then 'LIB-REV'
        when a.TRANSACTIONTYPE='SALES BILL ADJUSTMENT ADJUSTMENT' then 'SB-ADJ'
        when a.TRANSACTIONTYPE='ADVANCE PAYMENT' then 'ADV-PYMT'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT' then 'ADV-RCPT'
        when a.TRANSACTIONTYPE='SALES BILL ADJUSTMENT' then 'SB-ADJ'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT REVERSAL' then 'ADV-RCPT-REV'
        else 'REF'
       end reftranstype
       From AcBillDetails a 
 Where a.CompanyCode = '0001'  
   And a.DivisionCode = '002' 
   And a.YearCode = '2020-2021' 
   And a.SystemVoucherNo =  'BA0001/002-RVB/2021/00000057' 
   And a.ACCODE= 'S000757' 
 Order By sysrowid  
 
 BA0001/002-RVB/2021/00000057
 
 
 
 

---------------------------------------------------------------------------------------------

 Select  COMPANYCODE, DIVISIONCODE, YEARCODE, 
 fn_Generate_VoucherPrefix(A.companycode,A.divisioncode,A.yearcode,A.systemvoucherno) as VOUCHERNO,
 VOUCHERDATE, VOUCHERTYPE, SYSTEMVOUCHERNO, SYSTEMVOUCHERDATE, 
 CASHBANKACCODE, CHEQUENO, CHEQUEDATE, CHEQUEDRAWNON, PARTY, CHEQUEPRINTEDBY, CHEQUEPRINTDATE, 
 REALIZATIONDATE, VOUCHERAMOUNT, NARRATION, AUTOMANUALMARK, REFVOUCHERNO, REFVOUCHERDATE, REFVOUCHERTYPE, 
 REFSYSTEMVOUCHERNO, PREPAREDBY, CHECKEDBY, EDITEDBY, PRINTEDBY, PREPAREDDATE, CHECKEDDATE, EDITEDDATE, 
 PRINTEDDATE, LASTMODIFIED, SYNCHRONIZED, CONTROLVOUCHER, REFMEMORANDUMVOUCHERNO, MODULENAME, DOCUMENTTYPE, 
 INSTRUCTIONNO, MANUALVOUCHERNO, MANUALVOUCHERDATE, VOUCHERPAYMENTRECEIPTTYPE, CHEQUEISSUEDON, SYSROWID, 
 USERNAME, CHEQUEBOOKSLNO, LIABILITYTYPE, VOUCHERNATURE,
 REPLACE(REPLACE(REPLACE(A.NARRATION,CHR(9),' '),CHR(10),' '),CHR(13),' ') PRINTNARRATION, DECODE(A.VOUCHERTYPE,'PURCHASE BILL','LIABILITY BILL',A.VOUCHERTYPE) VOUCHERTYPE2, CASE WHEN A.VOUCHERTYPE ='PAYMENTS' THEN 'PAID TO : '||A.PARTY ELSE CASE WHEN A.VOUCHERTYPE ='RECEIPTS' THEN 'RECEIVED FROM : '||A.PARTY ELSE '' END END PAIDTORECEIVEDFROM  
 From AcVoucher A 
 Where A.CompanyCode = '0001'  
   And A.DivisionCode = '002' 
   And A.YearCode = '2020-2021' 
   And A.SystemVoucherNo IN (A0001/002-RVB/2021/00000006) 
---------------------------------------------------------------------------------------------

--BAGGAGE COMPONENT ASSIGNMENT NOT WORKING 

--CORRECTION BY AMALESH SIR

-- BELOW FUNCTION CORRECTTION
FN_USERWISE_DATA_ACCESS

select * from VW_AUTO_DYNAMICGRID

select * from login

LOGIN WITH USER NAME : MISHRA, AND PASSWORD : BMPL123

FN_USERWISE_DATA_ACCESS



---------------------------------------------------------------------------------------------


SELECT COMPANYCODE,DIVISIONCODE,SYSROWID,YEARCODE,YEARMONTH,UNITCODE,CATEGORYCODE,GRADECODE,
WORKERSERIAL,TOKENNO,EMPLOYEENAME,DEPARTMENTCODE,DEPARTMENTDESC,BASIC,BASIC_RT,HRA_PER,
SOFT_ALLW,SERV_ALLW,CONV_ALLW,CHILD_ALLW,PERS_ALLW,OTH_ALLW,FIX_ALW,OTH_ALLW2
  FROM ( 
         SELECT * FROM (SELECT EMPMAST.COMPANYCODE,EMPMAST.DIVISIONCODE,ASSIGN.SYSROWID,ASSIGN.YEARCODE,
         ASSIGN.YEARMONTH,EMPMAST.UNITCODE,EMPMAST.CATEGORYCODE,EMPMAST.GRADECODE,EMPMAST.WORKERSERIAL,
         EMPMAST.TOKENNO,EMPMAST.EMPLOYEENAME,EMPMAST.DEPARTMENTCODE,DEPT.DEPARTMENTDESC,ASSIGN.BASIC,
         ASSIGN.BASIC_RT,ASSIGN.HRA_PER,ASSIGN.SOFT_ALLW,ASSIGN.SERV_ALLW,ASSIGN.CONV_ALLW,ASSIGN.CHILD_ALLW,
         ASSIGN.PERS_ALLW,ASSIGN.OTH_ALLW,ASSIGN.FIX_ALW,ASSIGN.OTH_ALLW2   
         FROM PISEMPLOYEEMASTER EMPMAST, PISDEPARTMENTMASTER DEPT,         
         (         
             SELECT *           
             FROM PISCOMPONENTASSIGNMENT          
             WHERE COMPANYCODE='0001'            
             AND DIVISIONCODE='001'            
             AND TRANSACTIONTYPE='ASSIGNMENT'            
             AND WORKERSERIAL||YEARMONTH IN 
             (                                             
                 SELECT WORKERSERIAL||MAX(YEARMONTH) 
                 FROM PISCOMPONENTASSIGNMENT                                              
                 WHERE COMPANYCODE='0001' AND DIVISIONCODE='001'                                                
                 AND TO_NUMBER(YEARMONTH)<=TO_NUMBER('202004')                                                
                 AND TRANSACTIONTYPE='ASSIGNMENT'                                             
                 GROUP BY WORKERSERIAL                                           
            )        
         ) ASSIGN  
         WHERE EMPMAST.COMPANYCODE=DEPT.COMPANYCODE    
         AND EMPMAST.DIVISIONCODE=DEPT.DIVISIONCODE    
         AND EMPMAST.DEPARTMENTCODE=DEPT.DEPARTMENTCODE    
         AND EMPMAST.COMPANYCODE=ASSIGN.COMPANYCODE(+)    
         AND EMPMAST.DIVISIONCODE=ASSIGN.DIVISIONCODE(+)    
         AND EMPMAST.TOKENNO=ASSIGN.TOKENNO(+)    
         AND EMPMAST.WORKERSERIAL=ASSIGN.WORKERSERIAL(+)    
         AND EMPMAST.COMPANYCODE='0001'    
         AND EMPMAST.DIVISIONCODE='001'    
         AND EMPMAST.EMPLOYEESTATUS='ACTIVE'    
         AND EMPMAST.UNITCODE='001'    
         AND EMPMAST.CATEGORYCODE='01'    
         AND EMPMAST.GRADECODE='CIV'    
         AND TO_NUMBER(TO_CHAR(EMPMAST.DATEOFJOIN,'YYYYMM'))<=TO_NUMBER('202004')    
         AND TO_NUMBER(NVL(TO_CHAR(EMPMAST.STATUSDATE,'YYYYMM'),NVL(TO_CHAR(EMPMAST.EXTENDEDRETIREDATE,'YYYYMM'),'202004')))>=TO_NUMBER('202004') ) 
         ORDER BY TOKENNO 
       ) 
       
       
       ----------------------------------------------------
       
       
        
         SELECT * FROM (SELECT EMPMAST.COMPANYCODE,EMPMAST.DIVISIONCODE,ASSIGN.SYSROWID,ASSIGN.YEARCODE,
         ASSIGN.YEARMONTH,EMPMAST.UNITCODE,EMPMAST.CATEGORYCODE,EMPMAST.GRADECODE,EMPMAST.WORKERSERIAL,
         EMPMAST.TOKENNO,EMPMAST.EMPLOYEENAME,EMPMAST.DEPARTMENTCODE,DEPT.DEPARTMENTDESC,ASSIGN.BASIC,
         ASSIGN.BASIC_RT,ASSIGN.HRA_PER,ASSIGN.SOFT_ALLW,ASSIGN.SERV_ALLW,ASSIGN.CONV_ALLW,ASSIGN.CHILD_ALLW,
         ASSIGN.PERS_ALLW,ASSIGN.OTH_ALLW,ASSIGN.FIX_ALW,ASSIGN.OTH_ALLW2   
         FROM PISEMPLOYEEMASTER EMPMAST, PISDEPARTMENTMASTER DEPT,         
         (         
             SELECT *           
             FROM PISCOMPONENTASSIGNMENT          
             WHERE COMPANYCODE='0001'            
             AND DIVISIONCODE='001'            
             AND TRANSACTIONTYPE='ASSIGNMENT'            
             AND WORKERSERIAL||YEARMONTH IN 
             (                                             
                 SELECT WORKERSERIAL||MAX(YEARMONTH) 
                 FROM PISCOMPONENTASSIGNMENT                                              
                 WHERE COMPANYCODE='0001' AND DIVISIONCODE='001'                                                
                 AND TO_NUMBER(YEARMONTH)<=TO_NUMBER('202004')                                                
                 AND TRANSACTIONTYPE='ASSIGNMENT'                                             
                 GROUP BY WORKERSERIAL                                           
            )        
         ) ASSIGN  
         WHERE EMPMAST.COMPANYCODE=DEPT.COMPANYCODE    
         AND EMPMAST.DIVISIONCODE=DEPT.DIVISIONCODE    
         AND EMPMAST.DEPARTMENTCODE=DEPT.DEPARTMENTCODE    
         AND EMPMAST.COMPANYCODE=ASSIGN.COMPANYCODE(+)    
         AND EMPMAST.DIVISIONCODE=ASSIGN.DIVISIONCODE(+)    
         AND EMPMAST.TOKENNO=ASSIGN.TOKENNO(+)    
         AND EMPMAST.WORKERSERIAL=ASSIGN.WORKERSERIAL(+)    
         AND EMPMAST.COMPANYCODE='0001'    
         AND EMPMAST.DIVISIONCODE='001'    
         AND EMPMAST.EMPLOYEESTATUS='ACTIVE'    
         AND EMPMAST.UNITCODE='002'    
         AND EMPMAST.CATEGORYCODE='01'    
         AND EMPMAST.GRADECODE='CIV'    
         AND TO_NUMBER(TO_CHAR(EMPMAST.DATEOFJOIN,'YYYYMM'))<=TO_NUMBER('202004')    
         AND TO_NUMBER(NVL(TO_CHAR(EMPMAST.STATUSDATE,'YYYYMM'),NVL(TO_CHAR(EMPMAST.EXTENDEDRETIREDATE,'YYYYMM'),'202004')))>=TO_NUMBER('202004') ) 
         ORDER BY TOKENNO 
         
         
         
         
         SELECT * FROM MENUMASTER_RND
         WHERE UPPER(MENUDESC) LIKE UPPER('%component%')
		 
		 
---------------------------------------------------------------------------------------------

--MULTIPLE LOAN REPAY ENTRY
---------------------------------------------------------------------------------------------
--PF LOAN ENTRY

EXEC PROC_PFLOANBLNC('DT0078','0009','23/02/2020','23/02/2020','PF','1050','GPS')

EXEC PROC_PFLOANBLNC('DT0078','0009','17/06/2020','17/06/2020','PF','1050','GPS')

SELECT * FROM GPSPAYSHEETDETAILS
WHERE DIVISIONCODE='0009'
AND TOKENNO='J0028'

SELECT * FROM GBL_PFLOANBLNC

DELETE FROM GPS_ERROR_LOG


SELECT * FROM GPS_ERROR_LOG


SELECT  NVL(PFLOAN_BAL,0) PFLOAN_BAL, NVL(PFLOAN_INT_BAL,0) PFLOAN_INT_BAL FROM GBL_PFLOANBLNC

WHERE TOKENNO='J0028'


SELECT * FROM GPSEMPLOYEEMAST
WHERE PFNO='1050'

---------------------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE DHUNSERI_STRU.PROC_PFLOANREPAY(P_COMPCODE VARCHAR2, 
                                                  P_DIVCODE VARCHAR2,
                                                  P_YEARCODE VARCHAR2,
                                                  P_MODULENAME VARCHAR2,
                                                  P_FNSTDT VARCHAR2, 
                                                  P_FNENDT VARCHAR2,
                                                  P_PAIDDATE VARCHAR2,
                                                  P_PAIDPAMT VARCHAR2 DEFAULT 0,
                                                  P_PAIDINTAMT VARCHAR2 DEFAULT 0,
                                                  P_PFNO VARCHAR2 DEFAULT NULL
                                                  )
AS
LV_FN_STDT DATE := TO_DATE(P_FNSTDT,'DD/MM/YYYY');
LV_FN_ENDT DATE := TO_DATE(P_FNENDT,'DD/MM/YYYY');
LV_TABLENAME        VARCHAR2(50);
LV_REMARKS          VARCHAR2(1000) := 'PROC_PFLOANREPAY --REPAYMENT DONE THROUGH MANUAL INPUT';

LV_COMPCOL          VARCHAR2(1000) := '';
LV_SQLSTR      VARCHAR2(4000) := '';
LV_PARVALUES        VARCHAR2(500) := P_FNSTDT||'-'||P_FNENDT;
LV_SQLERRM          VARCHAR2(500) := '';
LV_WORKERSERIAL     VARCHAR2(10) := '';
LV_TOKENNO          VARCHAR2(10) := '';
LV_TOPTALPAID       NUMBER(12,2) := 0;
lv_error_remark     VARCHAR2(1000):='';
LV_ATTNDATE         DATE := TO_DATE(P_FNSTDT,'DD/MM/YYYY');
BEGIN

    --PROC_PFLOANBLNC(P_COMPCODE,P_DIVCODE,P_FNSTDT,P_FNENDT,'PFLN','','WPS','NO');
    DELETE FROM PFLOANBREAKUP 
    WHERE EFFECTFORTNIGHT=TO_DATE(P_FNSTDT,'DD/MM/YYYY')
      AND TRANSACTIONTYPE= 'REPAY'
      AND PFNO=P_PFNO
      AND COMPANYCODE=P_COMPCODE---ADDED BY CHIRANJIT
      AND DIVISIONCODE=P_DIVCODE---ADDED BY CHIRANJIT
      AND NVL(ISCASHREPAYMENT,'N') = 'Y';
        
   LV_TOPTALPAID :=TO_NUMBER(NVL(P_PAIDPAMT,0)) + TO_NUMBER(NVL(P_PAIDINTAMT,0));
   ----DBMS_OUTPUT.PUT_LINE (LV_TOPTALPAID);
   IF NVL(TO_NUMBER(LV_TOPTALPAID),0) >0 THEN
        LV_SQLSTR := ' INSERT INTO PFLOANBREAKUP ( COMPANYCODE, DIVISIONCODE, EMPLOYEECOMPANYCODE, EMPLOYEEDIVISIONCODE, YEARCODE, YEARMONTH, CATEGORYCODE, GRADECODE, PFNO, TOKENNO, WORKERSERIAL, LOANCODE, LOANDATE, EFFECTYEARMONTH, INTERESTPERCENTAGE, AMOUNT, TRANSACTIONTYPE, EFFECTFORTNIGHT, PAIDON, ISPAID, DEDUCTEDAMT, ADJUSTMENTTAG, REMARKS, REPAYAMOUNT, REPAYCAPITAL, REPAYINTEREST, REPAYREBATE, FINALSETTLEMENTTAG, REPAYDATE, MODULE, DELETERESION, VOUCHERNO, VOUCHERDATE, SYSTEMVOUCHERNO, SYSTEMVOUCHERDATE, CHEQUENO, CHEQUEDATE, SYSROWID, USERNAME, LASTMODIFIED, ISCASHREPAYMENT  ) '||CHR(10)
         ||'  SELECT '''||P_COMPCODE||''', '''||P_DIVCODE||''','''||P_COMPCODE||''', '''||P_DIVCODE||''', '''||P_YEARCODE||''',  '||CHR(10)
         ||'  TO_CHAR(TO_DATE('''||P_FNSTDT||''',''DD/MM/YYYY''),''YYYYMM''),CATEGORYCODE,NULL,A.PFNO,B.TOKENNO,B.WORKERSERIAL,''PF'', LOANDATE,TO_CHAR(TO_DATE('''||P_FNSTDT||''',''DD/MM/YYYY''),''YYYYMM''),NULL,'||CHR(10)
         ||'  '''||LV_TOPTALPAID||''', ''REPAY'',TO_DATE('''||P_FNSTDT||''',''DD/MM/YYYY'') FORTNIGHTSTARTDATE,TO_DATE('''||P_PAIDDATE||''',''DD/MM/YYYY'') PAIDON,  '||CHR(10) 
         ||' ''Y'' ISPAID,NULL, NULL, ''REPAYMENT DONE THROUGH MANUAL INPUT'','''||LV_TOPTALPAID||''','''||P_PAIDPAMT||''','''||P_PAIDINTAMT||''',   '||CHR(10) 
         ||' NULL, NULL, TO_DATE('''||P_PAIDDATE||''',''DD/MM/YYYY'') REPAYDATE, ''GPS'' ,NULL, NULL, NULL, NULL, NULL,NULL, NULL,A.PFNO||B.DIVISIONCODE||TO_CHAR(SYSDATE,''YYYYMMDDHHMISS''),''SWT'',SYSDATE,''Y'' '||CHR(10)
         ||'  FROM GBL_PFLOANBLNC A, GPSEMPLOYEEMAST B '||CHR(10)
         ||' WHERE A.PFNO='''||P_PFNO||''' '||CHR(10)
         ||'   AND A.COMPANYCODE=B.COMPANYCODE '||CHR(10)---ADDED
         ||'   AND A.DIVISIONCODE=B.DIVISIONCODE '||CHR(10)---ADDED
         ||'   AND A.COMPANYCODE='''||P_COMPCODE||''' '||CHR(10) ---ADDED
         ||'   AND A.DIVISIONCODE='''||P_DIVCODE||''' '||CHR(10)---ADDED
         ||'   AND A.DIVISIONCODE=B.DIVISIONCODE '||CHR(10);
     --  --DBMS_OUTPUT.PUT_LINE (LV_SQLSTR);
       EXECUTE IMMEDIATE LV_SQLSTR;COMMIT;
   END IF;
   COMMIT;
EXCEPTION
WHEN OTHERS THEN
 --INSERT INTO ERROR_LOG(PROC_NAME,ORA_ERROR_MESSG,ERROR_QUERY,PAR_VALUES,REMARKS ) VALUES( 'ERROR SQL',LV_SQLSTR,LV_SQLSTR,LV_PARVALUES,LV_REMARKS);
 LV_SQLERRM := SQLERRM ;
 ----DBMS_OUTPUT.PUT_LINE(LV_SQLERRM);
 INSERT INTO GPS_ERROR_LOG(PROC_NAME,ORA_ERROR_MESSG,ERROR_QUERY,PAR_VALUES,FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS ) VALUES( 'PROC_PFLOANREPAY',LV_SQLERRM,LV_SQLSTR,LV_PARVALUES,LV_FN_STDT,LV_FN_ENDT, LV_REMARKS);

END ;
/
---------------------------------------------------------------------------------------------

--LOAN BALANCE QUERY



SELECT DISTINCT A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE, AMOUNT, 0 INTERESTAMOUNT , 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT 
FROM PFLOANTRANSACTION A,  
(  
    SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, MAX(LOANDATE) LOANDATE  
    FROM PFLOANTRANSACTION  
    WHERE COMPANYCODE = 'DT0078' AND DIVISIONCODE = '0009' 
    AND LOANDATE <=  TO_DATE('23/02/2020','DD/MM/YYYY')
    AND LOANTYPE ='REFUNDABLE'
    GROUP BY COMPANYCODE,DIVISIONCODE,PFNO  
) B  
WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE AND A.PFNO = B.PFNO AND A.LOANDATE = B.LOANDATE  AND AMOUNT > 0 

UNION ALL     

SELECT A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE,   
(
CASE WHEN TRANSACTIONTYPE ='CAPITAL' THEN CASE WHEN EFFECTFORTNIGHT < TO_DATE('23/02/2020','DD/MM/YYYY') THEN AMOUNT ELSE 0 END  
WHEN TRANSACTIONTYPE ='REPAY' THEN REPAYCAPITAL  
WHEN TRANSACTIONTYPE ='REPAYCAP' THEN AMOUNT  
ELSE 0  
END
)*(-1) AMOUNT, 0 INTERESTAMOUNT , 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT     
FROM PFLOANBREAKUP A,  
(  
    SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, MAX(LOANDATE) LOANDATE  
    FROM PFLOANTRANSACTION  
    WHERE COMPANYCODE = 'DT0078' AND DIVISIONCODE ='0009' 
    AND LOANDATE <=  TO_DATE('23/02/2020','DD/MM/YYYY')  
    AND LOANTYPE ='REFUNDABLE'                     
    GROUP BY COMPANYCODE,DIVISIONCODE,PFNO  
) B  
WHERE A.COMPANYCODE=B.COMPANYCODE 
AND A.DIVISIONCODE=B.DIVISIONCODE 
AND A.PFNO = B.PFNO 
AND A.LOANDATE = B.LOANDATE  
AND A.EFFECTFORTNIGHT <=  TO_DATE('23/02/2020','DD/MM/YYYY')  
AND TRANSACTIONTYPE <> 'INTEREST'  
AND A.PFNO='1050'
AND A.COMPANYCODE = 'DT0078' AND A.DIVISIONCODE ='0009' 


UNION ALL  

SELECT DISTINCT A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE, 0 AMOUNT, SUM(NVL(C.INTERESTAMOUNT,0)) INTERESTAMOUNT 
, 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT  
FROM 
( 
    SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, LOANCODE, LOANDATE 
    FROM PFLOANTRANSACTION 
    WHERE COMPANYCODE ='DT0078' AND DIVISIONCODE = '0009'
) A, 
(  
    SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, MAX(LOANDATE) LOANDATE 
    FROM PFLOANTRANSACTION  
    WHERE COMPANYCODE = 'DT0078' AND DIVISIONCODE = '0009'  
    AND LOANDATE <=  TO_DATE('23/02/2020','DD/MM/YYYY')  
    AND LOANTYPE ='REFUNDABLE'
    GROUP BY COMPANYCODE,DIVISIONCODE,PFNO  
) B, PFLOANINTEREST C  
WHERE A.COMPANYCODE = 'DT0078' AND A.DIVISIONCODE = '0009' AND A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE AND A.PFNO = B.PFNO AND A.LOANDATE = B.LOANDATE  
AND A.PFNO = C.PFNO AND A.LOANDATE = C.LOANDATE AND A.LOANCODE = C.LOANCODE  
AND C.FORTNIGHTENDDATE <= TO_DATE('23/02/2020','DD/MM/YYYY') 
AND C.TRANSACTIONTYPE = 'ADD'  
GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE  

UNION ALL  

SELECT A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE, 0 AMOUNT,   
(CASE WHEN TRANSACTIONTYPE ='INTEREST' THEN CASE WHEN EFFECTFORTNIGHT < TO_DATE('23/02/2020','DD/MM/YYYY') THEN AMOUNT ELSE 0 END  
WHEN TRANSACTIONTYPE ='REPAY' THEN REPAYINTEREST  
WHEN TRANSACTIONTYPE ='REPAYINT' THEN AMOUNT  
ELSE 0  
END)*(-1) INTERESTAMOUNT 
, 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT      
FROM PFLOANBREAKUP A,  
(  
SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, MAX(LOANDATE) LOANDATE  
FROM PFLOANTRANSACTION  
WHERE COMPANYCODE = 'DT0078' AND DIVISIONCODE = '0009'  
AND LOANDATE <=  TO_DATE('23/02/2020','DD/MM/YYYY')  
AND LOANTYPE ='REFUNDABLE'
GROUP BY COMPANYCODE,DIVISIONCODE,PFNO  
) B  
WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE AND A.PFNO = B.PFNO AND A.LOANDATE = B.LOANDATE  
AND A.EFFECTFORTNIGHT <= TO_DATE('23/02/2020','DD/MM/YYYY') 
AND TRANSACTIONTYPE <> 'CAPITAL' 

UNION ALL 

SELECT A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE, 0 AMOUNT,  0 INTERESTAMOUNT,  
DECODE(TRANSACTIONTYPE,'CAPITAL',AMOUNT,0) LN_CAP_DEDUCT, DECODE(TRANSACTIONTYPE,'INTEREST',AMOUNT,0) LN_INT_DEDUCT 
FROM PFLOANBREAKUP A,  
(  
SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, MAX(LOANDATE) LOANDATE  
FROM PFLOANTRANSACTION  
WHERE COMPANYCODE = 'DT0078' AND DIVISIONCODE = '0009'  
AND LOANDATE <=  TO_DATE('23/02/2020','DD/MM/YYYY') 
AND LOANTYPE ='REFUNDABLE'
GROUP BY COMPANYCODE,DIVISIONCODE,PFNO  
) B  
WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE AND A.PFNO = B.PFNO AND A.LOANDATE = B.LOANDATE  
AND A.EFFECTFORTNIGHT <= TO_DATE('23/02/2020','DD/MM/YYYY')
AND TRANSACTIONTYPE IN ('CAPITAL','INTEREST') 

---------------------------------------------------------------------------------------------

I:\OFFICE\PROJECTS\SWT_Jute\swterp\swterp\PIS\Pages\Report\Transaction\rptCOMPONENTASSIGNMENTSTATUS.rdlc
--baggage
SELECT * FROM  ACVOUCHER
WHERE SYSTEMVOUCHERNO='BA0001/002-RVB/2021/00000008'

WHERE VOUCHERTYPE IN ('RECEIPTS','PAYMENTS')

SELECT * FROM  ACVOUCHERDETAILS_ENTRY

WHERE VOUCHERTYPE IN ('RECEIPTS','PAYMENTS')


SELECT * FROM ACBILLDETAILS_ENTRY
WHERE SYSTEMVOUCHERNO LIKE '%RVB%'


---------------------------------------------------------------------------------------------

SELECT 'BJ0056' COMPANYCODE, '0001' DIVISIONCODE,'2020-2021' YEARCODE, '202004'YEARMONTH, UNITCODE, CATEGORYCODE, 
GRADECODE, DEPARTMENTCODE,EMPCODE,'ASSIGNMENT' TRANSACTIONTYPE, SYS_GUID() SYSROWID, SYSDATE LASTMODIFIED, 
'SWT' USERNAME,
BASIC,DA,ADHOC,PERSONAL_PAY,VPF_PERCENT
FROM bjm_emp_mast



---------------------------------------------------------------------------------------------

--ESI GROSS
CASE WHEN PISCOMP.ESI_RATE>=21000 THEN 0 ELSE (PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.SPL_ALLOW+PISCOMP.NS_ALLOW+PISCOMP.OT_AMT+PISCOMP.SERV_ALW+PISCOMP.OE_NPF+PISCOMP.CONV_ALOW+PISCOMP.OEPF+PISCOMP.ESI_ADJERN+PISCOMP.HRA+PISCOMP.PROF_BONUS+PISCOMP.ADHOC_NPF+PISCOMP.ATN_INCAMT) END

CASE WHEN PISCOMP.ESI_RATE>=21000 THEN 0 ELSE 
(PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.SPL_ALLOW+PISCOMP.NS_ALLOW+PISCOMP.OT_AMT+PISCOMP.SERV_ALW+PISCOMP.OE_NPF+PISCOMP.CONV_ALOW+PISCOMP.OEPF+PISCOMP.ESI_ADJERN+PISCOMP.HRA+PISCOMP.PROF_BONUS+PISCOMP.ADHOC_NPF+PISCOMP.ATN_INCAMT) END


SELECT 
CASE WHEN PISCOMP.ESI_RATE>=21000 THEN 0 ELSE 
(
    PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.SPL_ALLOW+
    PISCOMP.NS_ALLOW+PISCOMP.OT_AMT+PISCOMP.OE_NPF+
    PISCOMP.CONV_ALOW+PISCOMP.OEPF+PISCOMP.ESI_ADJERN+PISCOMP.HRA+
    PISCOMP.PROF_BONUS+PISCOMP.ATN_INCAMT
) END
FROM PISCOMPONENTASSIGNMENT PISCOMP


SELECT 


CASE WHEN PISCOMP.ESI_RATE>=21000 THEN 0 ELSE (PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.SPL_ALLOW+PISCOMP.OT_AMT+PISCOMP.OE_NPF+PISCOMP.CONV_ALOW+PISCOMP.OEPF+PISCOMP.HRA+PISCOMP.ATN_INCAMT) END
FROM PISCOMPONENTASSIGNMENT PISCOMP
 
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------


--PF GROSS
PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.NS_ALLOW+ PISCOMP.OEPF
PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.NS_ALLOW+ PISCOMP.OEPF


CASE WHEN PISMAST.CATEGORYCODE= 'SS' THEN PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.NS_ALLOW+ PISCOMP.OEPF 
ELSE 
	CASE WHEN (PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.NS_ALLOW+ PISCOMP.OEPF) > 15000 THEN 15000 
		 ELSE (PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.NS_ALLOW+ PISCOMP.OEPF) 
	END 
END

CASE WHEN (PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.OEPF) > 15000 THEN 15000 ELSE (PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.OEPFCOMP.OEPF) END 


PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.OEPF


--HRA GROSS
PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.NS_ALLOW+PISCOMP.OEPF

PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.OEPF
 
 
---------------------------------------------------------------------------------------------

--ADDED HELP QUERY FROM GLOSTER
Insert into SYS_HELP_QRY
   (QRY_ID, QRY_STRING, PARAMETER_STRING, QRY_SHORTDESC, QRY_RETURN_TABLE_NAME, 
    WEB_QRY_STRING, SEARCH_COLUMNLIST, MODULENAME)
 Values
   (7041, '""', 'COMPANYCODE~DIVISIONCODE~EMPLOYEECODE~LEAVECODE~PATTERN', 'PIS EMPLOYEE LEAVE INFORMATION', NULL, 
    'SELECT DISTINCT DOCUMENTNO, TOKENNO, LEAVECODE, TO_CHAR(LEAVEAPPLIEDON) LEAVEAPPLIEDON'||CHR(13)||CHR(10)||' FROM PISLEAVEAPPLICATION A'||CHR(13)||CHR(10)||'    WHERE A.COMPANYCODE=<<COMPANYCODE>>'||CHR(13)||CHR(10)||'    AND A.DIVISIONCODE=<<DIVISIONCODE>>'||CHR(13)||CHR(10)||'    AND A.TOKENNO=<<EMPLOYEECODE>>'||CHR(13)||CHR(10)||'    AND A.LEAVECODE=<<LEAVECODE>>'||CHR(13)||CHR(10)||'   ORDER BY DOCUMENTNO'||CHR(10)||'', 'DOCUMENTNO~TOKENNO~LEAVECODE~LEAVEAPPLIEDON'||CHR(10)||'', 'PIS');
COMMIT;

I:\OFFICE\PROJECTS\SWT_Jute\swterp\swterp\PIS\Pages\Report\Transaction\rptCOMPONENTSALARYREGISTER.rdlc

---------------------------------------------------------------------------------------------

--BAGGAGE

select * from pis_error_log

DELETE FROM pis_error_log


proc_componentassinreport

EXEC PROC_RPT_PIS_PTAXSTATEMENT('0001','001','2020-2021','202004','','','','','','','','','SWT20200616_021821PM','WEST BENGAL')

EXEC PROC_RPT_PIS_PTAXSTATEMENT('0001','001','2020-2021','202004','','','','','SWT20200616_021821PM','''WEST BENGAL''');

PROC_RPT_PIS_PTAXSTATEMENT('0001','001','2020-2021','202004','','','','','SWT20200616_025234PM','''WEST BENGAL''')
 


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
work update on 15/06/2020
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------

SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%month att%')


update menumaster_rnd
set URLSRC ='PIS/PAGES/Transaction/pgPISMonthAttendanceWithLeave.aspx'
where menucode = '01070202'


update menumaster_rnd
set URLSRC ='PIS/PAGES/Transaction/pgPISMonthAttendance.aspx'
where menucode = '01070202'

URLSRC

---------------------------------------------------------------------------------------------

--ATTENDANCE CODE
select rtrim(xmlagg(xmlelement(e,x.componentcode||',') order by srl).extract('//text()'),',') xx 
  from ( 
        select srl, columnname componentcode from pistagwisefixedcolumnshow 
         where companycode='BJ0056' 
           and divisioncode='0001' 
           and tagtype='ATTENDANCE' 
        union all 
        select 50+nvl(phase,999)+nvl(calculationindex,9999) srl, 'ASSIGN.'||A.componentcode componentcode from piscomponentmaster A
        ,(
            SELECT DISTINCT COMPONENTCODE FROM PISGRADECOMPONENTMAPPING
            WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001' 
            AND YEARMONTH = (
                                SELECT MAX(YEARMONTH) FROM PISGRADECOMPONENTMAPPING
                                WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001' 
                            )
            AND CATEGORYCODE = '10'
            AND GRADECODE ='11' 
            AND APPLICABLE LIKE 'Y%' 
        ) B 
         where companycode='BJ0056' 
           and divisioncode='0001' 
           and A.componentcode||yearmonth in ( 
                                            select distinct componentcode||max(yearmonth) from piscomponentmaster 
                                             where companycode='BJ0056' 
                                               and divisioncode='0001' 
                                               and to_number(yearmonth)<=to_number('202004') 
                                             group by componentcode 
                                           ) 
          AND A.COMPONENTCODE = B.COMPONENTCODE
           and nvl(userentryapplicable,'N')='Y' 
           and nvl(attendanceentryapplicable,'N')='Y' 
        union all 
        select (SELECT MAX(srl) FROM pistagwisefixedcolumnshow where companycode='BJ0056' 
           and divisioncode='0001' 
           and tagtype='ATTENDANCE' )  srl, 'L_A.'||leavecode componentcode from PISLEAVEMASTER
         where companycode='BJ0056' 
           and divisioncode='0001' 
        union all 
        select 0 srl,  'DYLEAVE' componentcode from dual
       ) x 
	   
---------------------------------------------------------------------------------------------

--FUNCTION TAKEN FROM GLOSTER 
--ADDED TO BIRLA
CREATE OR REPLACE function fn_RtnNoOfApplicableHolidays(P_COMPCODE VARCHAR2, P_DIVCODE VARCHAR2, P_YEARMONTH VARCHAR2, P_CATEGORYCODE VARCHAR2,P_GRADECODE VARCHAR2,P_WORKERSERIAL  VARCHAR2, P_MODULE VARCHAR2 DEFAULT 'PIS') return number
AS 
lv_Cnt      number(5,2):=0;
begin
    if P_MODULE = 'PIS' THEN
        SELECT COUNT(*) INTO lv_Cnt
        FROM PISHOLIDAYMASTER A, PISEMPLOYEEMASTER E
        WHERE A.COMPANYCODE = P_COMPCODE AND A.DIVISIONCODE = P_DIVCODE
          AND TO_CHAR(A.HOLIDAYDATE,'YYYYMM') = P_YEARMONTH
          AND NVL(A.ISPAID,'N') = 'Y'
          AND A.COMPANYCODE=E.COMPANYCODE
          AND A.DIVISIONCODE=E.DIVISIONCODE
          AND NVL(A.CATEGORYCODE,'N')=E.CATEGORYCODE
          AND NVL(A.GRADECODE,'N')=E.GRADECODE
          AND A.HOLIDAYDATE>=E.DATEOFJOIN
          AND E.WORKERSERIAL=P_WORKERSERIAL;
    
    END IF;
    return lv_Cnt;
end;
/

---------------------------------------------------------------------------------------------
procedure

prcAssignment_Bf_MainSave

--IF SUM OF BASIC AMOUNT IS ZERO 
    select sum(nvl(basic,0))
    into lv_cnt
    from GBL_PISCOMPONENTASSIGNMENT;
    
    if lv_cnt = 0 then
        lv_error_remark := 'Validation Failure : [No row found in Component Assignment with Proper Data to Entry]';
        raise_application_error(to_number(FN_DISPLAY_ERROR( 'COMMON')),FN_DISPLAY_ERROR( 'COMMON',6,lv_error_remark));
    end if;
    
	
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------


----COMPONENT CODE FROM PISCOMPONENT ASSIGNMENT 

SELECT DISTINCT COMPONENTCODE FROM PISCOMPONENTMASTER
MINUS
SELECT SYS_COLUMNNAME FROM SYS_TFMAP WHERE SYS_TABLENAME_ACTUAL='PISCOMPONENTASSIGNMENT'


----ALL COMPONENTCODE FROM PISCOMPONENTMASTER

SELECT WM_CONCAT(COMPONENTCODE) COMPONENTCODE FROM
(
SELECT DISTINCT COMPONENTCODE FROM PISCOMPONENTMASTER
)


----ALL SYS_COLUMNNAME / COMPONENTCODE FROM PISCOMPONENTMASTER
SELECT WM_CONCAT(SYS_COLUMNNAME) COMPONENTCODE FROM
(
SELECT SYS_COLUMNNAME FROM SYS_TFMAP WHERE SYS_TABLENAME_ACTUAL='PISCOMPONENTASSIGNMENT'
)


--PISCOMPONENTMASTER
CONV_ALOW,GROSSEARN,HRA_GROSS,HRA_PERC,LIBL_FEADV,LIBL_SA,LINT_PJADV,LINT_SPL,LOAN_PFL,LTP,NETSALARY,OE_NPF,OTHR_DEDN,TOTEARN,
ATN_INCNT,LIBL_PFL,LIBL_STADV,
LINT_FEADV,LNBL_OTADV,LOAN_OTADV,ATN_INCAMT,ATTN_LDAY,CUMM_DAYS,DA,LDAY_PL,
LDAY_SL,LIBL_SPL1,LINT_STADV,LNBL_OLADV,LNBL_STADV,OT_AMT,ACT_PF_GRS,
ELECTRIC,ESI_RATE,LDAY_CL,LNBL_SA,LOAN_PJADV,LOAN_SA,PF_E,PF_GROSS,
PTAX,RT_BASIC,ADHOC,ESI_GROSS,GROSSDEDN,HRA,ITAX,LEAVE_ENC,
LIBL_OLADV,LINT_OTADV,LINT_SPL1,LNBL_FEADV,MESS,PEN_GROSS,
SUSP_DEDN,VPF,LIBL_PJADV,LIBL_SPL,LIC,LINT_OLADV,LNBL_PFL,
LNBL_SPL,MEDICAL,MISC_DEDN,PTAX_GROSS,ATTN_HOLD,ATTN_SALD,
CUMM_PF_E,CUMM_VPF,CUM_PFGROS,LIBL_OTADV,LINT_PFL,LNBL_PJADV,
LOAN_STADV,LWF,ATTN_WRKD,BASIC,CLUB,CUMM_PF_C,ESI_E,LINT_SA,LNBL_SPL1,
LOAN_FEADV,LOAN_OLADV,LOAN_SPL,LOAN_SPL1,LTA,OEPF,SPL_ALLOW,VPF_PERC


--PISCOMPONENTASSIGNMENT SYSTF
ADHOC,BASIC,CATEGORYCODE,CLUB,COMPANYCODE,CONV_ALOW,DA,DEPARTMENTCODE,DIVISIONCODE,
EDU_ALLOW,ELEC_CHRG,ESI_E,ESI_RT,FIRE_ALLOW,FPF,FUEL_ALLOW,GRADECODE,HRA_FIXED,
HRA_PER,HR_ALLOW,HR_DEDN,H_WAGES,ITAX,LAUN_ALLOW,LV_ENCASH,LWF,MESS,ME_1,ME_2,ME_3,ME_4,ME_5,ME_6,
MISC_DEDN,NETSALARY,NS_ALLOW,NS_B_RATE,NS_C_RATE,OT_AMT,OT_HRS,PARA_ALLOW,PEN_GROSS,
PFL_EARN,PF_E,PF_GROSS,PTAX,PTAX_GROSS,SAL_ADV,SERV_CHRG,SE_DEPOSIT,SFT_B_DAYS,
SFT_C_DAYS,SICK_ALLOW,SPL_ALLOW,SWEEPER,SYSROWID,TIFFIN,TOKENNO,TOTDEDN,TRANSACTIONTYPE,
UNITCODE,USERNAME,VPF,VPF_PERC,WORKERSERIAL,YEARCODE,YEARMONTH


--PISCOMPONENTASSIGNMENT SYSTF
ADHOC,BASIC,CATEGORYCODE,CLUB,COMPANYCODE,CONV_ALOW,DA,DEPARTMENTCODE,DIVISIONCODE,
ESI_E,GRADECODE,
HRA_PER,HR_DEDN,ITAX,LWF,MESS
MISC_DEDN,NETSALARY,OT_AMT,PEN_GROSS,
PF_E,PF_GROSS,PTAX,PTAX_GROSS,
SPL_ALLOW,SYSROWID,TOKENNO,TOTDEDN,TRANSACTIONTYPE,
UNITCODE,USERNAME,VPF,VPF_PERC,WORKERSERIAL,YEARCODE,YEARMONTH

--PISCOMPONENTASSIGNMENT SYSTF  DELETED

EDU_ALLOW,ELEC_CHRG,ESI_RT,FIRE_ALLOW,FPF,FUEL_ALLOW,
HR_ALLOW,H_WAGES,LAUN_ALLOW,LV_ENCASH,ME_1,ME_2,ME_3,ME_4,ME_5,ME_6,
NS_ALLOW,NS_B_RATE,NS_C_RATE,OT_HRS,PARA_ALLOW,
PFL_EARN,SAL_ADV,SERV_CHRG,SE_DEPOSIT,SFT_B_DAYS,
SFT_C_DAYS,SICK_ALLOW,

SELECT * FROM SYS_TFMAP
WHERE SYS_COLUMNNAME
IN  (
'EDU_ALLOW','ELEC_CHRG','ESI_RT','FIRE_ALLOW','FPF','FUEL_ALLOW',
'HR_ALLOW','H_WAGES','LAUN_ALLOW','LV_ENCASH','ME_1','ME_2','ME_3','ME_4','ME_5','ME_6',
'NS_ALLOW','NS_B_RATE','NS_C_RATE','OT_HRS','PARA_ALLOW','PFL_EARN','SAL_ADV','SERV_CHRG','SE_DEPOSIT','SFT_B_DAYS',
'SFT_C_DAYS','SICK_ALLOW'
)
AND  SYS_TABLENAME_ACTUAL='PISCOMPONENTASSIGNMENT'
AND  SYS_TABLE_SEQUENCIER='10013'


SELECT * FROM SYS_TFMAP WHERE SYS_TABLENAME_ACTUAL='PISCOMPONENTASSIGNMENT'



SELECT * FROM COLS WHERE TABLE_NAME='PISCOMPONENTASSIGNMENT'


GBL_PISCOMPONENTASSIGNMENT


COMPANYCODE, DIVISIONCODE, YEARCODE, YEARMONTH, UNITCODE, DEPARTMENTCODE, CATEGORYCODE, GRADECODE, 
WORKERSERIAL, TOKENNO, TRANSACTIONTYPE, SYSROWID, LASTMODIFIED, USERNAME, BASIC, DA, HRA_GROSS, 
HRA_PER, HRA, PF_GROSS, PEN_GROSS, ESI_GROSS, PTAX_GROSS, PF_E, PF_C, FPF, VPF_PERC, VPF, ESI_E, 
ESI_C, PTAX, LWF, SARR_ARRE, SARR_ARRD, SARR_PF_GROSS, SARR_NPF_GROSS, GROSSEARN, GROSSDEDN, 
MISC_BF, MISC_CF, TOTEARN, TOTDEDN, NETSALARY, LOAN_PFLN, LINT_PFLN, LOAN_SADV, LINT_SADV, 
LOAN_VADV, LINT_VADV, LOAN_HLOAN, LINT_HLOAN, EPF, ITAX, FUEL, OTH_ALLOW, CHILD_ALOW, 
CONV_ALOW, HRA_FIXED, MISC_EARN, ESI_RT, MISC_DEDN, LTA, ADHOC, SPL_ALLOW, NS_HRS, 
OT_HRS, OT_DAYS, NS_ALLOW, OT_AMT, SERV_PERC, SERV_ALW, CONV_PERC, OEPF, OE_NPF, 
ESI_ADJERN, HRA_PERC, ACT_PF_GRS, LIC, ELECTRIC, MESS, LTP, SUSP_DEDN, HRA_AMT, 
ADHOC_NPF, OTHR_DEDN, PROF_BONUS, MEDICAL, LVENCSH_DAYS, LEAVE_ENC, ATN_INCNT, 
ATN_INCAMT, CLUB, CUMM_DAYS, CUM_PFGROS, ESI_RATE, CUMMPFEBAL, CUMMPFCBAL, 
CUMMVPFBAL, RT_BASIC

COMPANYCODE, DIVISIONCODE, YEARCODE, YEARMONTH, UNITCODE, DEPARTMENTCODE, CATEGORYCODE, GRADECODE, 
WORKERSERIAL, TOKENNO, TRANSACTIONTYPE, SYSROWID, OPERATIONMODE, USERNAME, BASIC, PFL_EARN, 
DA, HRA_PER, HR_ALLOW, PF_GROSS, PF_E, ESI_E, ADHOC, SPL_ALLOW,  MESS, OT_HRS, OT_AMT, PEN_GROSS, 
PTAX_GROSS, LWF, VPF_PERC, CLUB, ITAX, HR_DEDN, SERV_CHRG, SE_DEPOSIT, ELEC_CHRG, 
 CONV_ALOW, TOTDEDN, NETSALARY,  FPF, PTAX, 
VPF, MISC_DEDN, SAL_ADV, FIRE_ALLOW, HRA_FIXED, ESI_RT

FIRE_ALLOW,ELEC_CHRG,HR_DEDN, SERV_CHRG, SE_DEPOSIT, EDU_ALLOW, LAUN_ALLOW, 
SFT_B_DAYS, SFT_C_DAYS, NS_B_RATE, NS_C_RATE, NS_ALLOW, H_WAGES
SICK_ALLOW, ME_1, ME_2, ME_3, ME_4, ME_5, ME_6
TIFFIN,SWEEPER, LV_ENCASH, PARA_ALLOW,
SAL_ADV, FIRE_ALLOW, HRA_FIXED, 


'SICK_ALLOW',' ME_1',' ME_2',' ME_3',' ME_4',' ME_5',
'ME_6','TIFFIN','SWEEPER',' LV_ENCASH',' PARA_ALLOW',
'SAL_ADV',' FIRE_ALLOW',' HRA_FIXED'


-------------------------------------------

PRCASSIGNMENT_BF_MAINSAVE
---------------------------------------------------------------------------------------------

LIBL_FEADV
LIBL_OLADV
LIBL_OTADV
LIBL_PFL
LIBL_PJADV
LIBL_SA
LIBL_SPL
LIBL_SPL1
LIBL_STADV
LIC
LINT_SPL
LNBL_FEADV
LNBL_OLADV
LNBL_OTADV
LNBL_PFL
LNBL_PJADV
LNBL_SA
LNBL_SPL
LNBL_SPL1
LNBL_STADV
LOAN_SPL


---------------------------------------------------------------------------------------------

DECLARE 
    LV_STR VARCHAR2(4000);
    LV_STR1 VARCHAR2(4000);
    LV_SQL VARCHAR2(4000);
    LV_TABLENAME VARCHAR2(30);
BEGIN

LV_TABLENAME := 'PISPAYTRANSACTION';

    LV_STR :='ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,ELECTRIC,ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LIBL_FEADV,LIBL_OLADV,LIBL_OTADV,LIBL_PFL,LIBL_PJADV,LIBL_SA,LIBL_SPL,LIBL_SPL1,LIBL_STADV,LIC,LINT_SPL,LNBL_FEADV,LNBL_OLADV,LNBL_OTADV,LNBL_PFL,LNBL_PJADV,LNBL_SA,LNBL_SPL,LNBL_SPL1,LNBL_STADV,LOAN_SPL,LTA,MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,SUSP_DEDN,TOTEARN,VPF,VPF_PERC';
    
    LV_STR1 :='ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,ELECTRIC,ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LTA,MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,SUSP_DEDN,TOTEARN,VPF,VPF_PERC';

DELETE FROM PISCOMPONENTMASTER
WHERE COMPONENTCODE IN 
(
    SELECT COMPCODE FROM
    (
        SELECT COMPCODE FROM (
            select regexp_substr(LV_STR,'[^,]+', 1, level) COMPCODE
            from dual
            connect BY regexp_substr(LV_STR, '[^,]+', 1, level)
            is not null
            ORDER BY COMPCODE
        ) 
        MINUS
        SELECT COMPCODE FROM (
            select regexp_substr(LV_STR1,'[^,]+', 1, level) COMPCODE
            from dual
            connect BY regexp_substr(LV_STR1, '[^,]+', 1, level)
            is not null
            ORDER BY COMPCODE
        )
    )
);

    FOR C1 IN (  
        SELECT WM_CONCAT(COLNAME) COLNAME FROM
        (
            SELECT COLNAME FROM (
                select regexp_substr(LV_STR,'[^,]+', 1, level) COLNAME
                from dual
                connect BY regexp_substr(LV_STR, '[^,]+', 1, level)
                is not null
                ORDER BY COLNAME
            ) 
            MINUS
            SELECT COLNAME FROM (
                select regexp_substr(LV_STR1,'[^,]+', 1, level) COLNAME
                from dual
                connect BY regexp_substr(LV_STR1, '[^,]+', 1, level)
                is not null
                ORDER BY COLNAME
            )
        )
    )
    LOOP
    LV_SQL := 'ALTER TABLE '||LV_TABLENAME||CHR(10);
    LV_SQL := 'DROP ( '||C1.COLNAME||')'||CHR(10);
    
        DBMS_OUTPUT.PUT_LINE(C1.COLNAME);
    END LOOP;
END;


---------------------------------------------------------------------------------------------

SELECT WM_CONCAT(COMPONENTCODE) 
FROM PISCOMPONENTMASTER
ORDER BY COMPANYCODE

ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,
BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,ELECTRIC,
ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,
ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LIBL_FEADV,LIBL_OLADV,LIBL_OTADV,LIBL_PFL,
LIBL_PJADV,LIBL_SA,LIBL_SPL,LIBL_SPL1,LIBL_STADV,LIC,LINT_SPL,LNBL_FEADV,LNBL_OLADV,
LNBL_OTADV,LNBL_PFL,LNBL_PJADV,LNBL_SA,LNBL_SPL,LNBL_SPL1,LNBL_STADV,LOAN_SPL,LTA,
MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,
PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,
SUSP_DEDN,TOTEARN,VPF,VPF_PERC


ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,
BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,ELECTRIC,
ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,
ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LTA,
MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,
PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,
SUSP_DEDN,TOTEARN,VPF,VPF_PERC


------------------------------------------------------
--NEW COMPONENTS
--------------------------------------------------------

ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,
BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,ELECTRIC,
ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,
ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LTA,MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,
OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,
SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,SUSP_DEDN,TOTEARN,VPF,VPF_PERC



select regexp_substr('A1,A2,A4','[^,]+', 1, level)
from dual
connect BY regexp_substr('A1,A2,A4', '[^,]+', 1, level)
is not null;

-------------------------------

ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,
BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,
ELECTRIC,ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,
ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LTA,MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,
OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,
SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,SUSP_DEDN,TOTEARN,VPF,VPF_PERC


---------------------------------------------------------------------------------------------

pisemployeemaster


SELECT * FROM PISCOMPONENTMASTER WHERE COMPONENTTYPE='DEDUCTION'


SELECT * FROM PISCOMPONENTMASTER WHERE COMPONENTTYPE='EARNING'

SELECT * FROM PISCOMPONENTMASTER WHERE PHASE<=5
ORDER BY PHASE, CALCULATIONINDEX

DELETE  fROM PISCOMPONENTMASTER
WHERE COMPONENTCODE IN (
'NS_HRS','OT_HRS','OT_DAYS','SERV_PERC','CONV_PERC','ESI_ADJERN','HRA_AMT','NS_ALLOW','PROF_BONUS','SERV_ALW','ADHOC_NPF'
)



NS_HRS,
OT_HRS,
OT_DAYS,
SERV_PERC,
CONV_PERC
ESI_ADJERN
HRA_AMT
NS_ALLOW
PROF_BONUS
SERV_ALW
ADHOC_NPF


SELECT * FROM PISCOMPONENTMASTER

----------------------------------------------------------------

 
DELETE  fROM PISCOMPONENTMASTER
WHERE COMPONENTCODE IN (
'LWF','MESS','LTP','LOAN_STADV','LINT_STADV','LOAN_OTADV','LINT_OTADV','LOAN_PJADV','LINT_PJADV',
'LOAN_SA','LINT_SA','LOAN_FEADV','LINT_FEADV','LOAN_OLADV','LINT_OLADV','CLUB','LOAN_PFL','LINT_PFL','LOAN_SPL1','LINT_SPL1'
)




LWF
MESS
LTP
LOAN_STADV
LINT_STADV
LOAN_OTADV
LINT_OTADV
LOAN_PJADV
LINT_PJADV
LOAN_SA
LINT_SA
LOAN_FEADV
LINT_FEADV
LOAN_OLADV
LINT_OLADV
CLUB
LOAN_PFL
LINT_PFL
LOAN_SPL1
LINT_SPL1






SELECT * FROM
PISPAYTRANSACTION

ALTER TABLE PISPAYTRANSACTION
DROP COLUMN LINT_SPL1


ALTER TABLE PISPAYTRANSACTION
DROP (LOAN_PFL,LINT_PFL)
 

ALTER TABLE PISPAYTRANSACTION
DROP (
LWF,
MESS,
LTP,
LOAN_STADV,
LINT_STADV,
LOAN_OTADV,
LINT_OTADV,
LOAN_PJADV,
LINT_PJADV,
LOAN_SA,
LINT_SA,
LOAN_FEADV,
LINT_FEADV,
LOAN_OLADV,
LINT_OLADV,
CLUB,
LOAN_PFL,
LINT_PFL,
LOAN_SPL1,
LINT_SPL1)


ALTER TABLE PISCOMPONENTASSIGNMENT
DROP (
LWF,
MESS,
LTP,
LOAN_STADV,
LINT_STADV,
LOAN_OTADV,
LINT_OTADV,
LOAN_PJADV,
LINT_PJADV,
LOAN_SA,
LINT_SA,
LOAN_FEADV,
LINT_FEADV,
LOAN_OLADV,
LINT_OLADV,
CLUB,
LOAN_PFL,
LINT_PFL)




COMPANYCODE, DIVISIONCODE, YEARCODE, YEARMONTH, EFFECT_YEARMONTH, UNITCODE, DEPARTMENTCODE, 
CATEGORYCODE, GRADECODE, WORKERSERIAL, TOKENNO, TRANSACTIONTYPE, PAYMODE, 
ATTN_SALD, ATTN_WPAY, ATTN_ADJD, ATTN_TOTD, ATTN_LDAY, ATTN_CALCF, ATTN_OFFD, ATTN_HOLD, ATTN_WRKD, 
LDAY_CL, LDAY_PL, LDAY_SL, LVBL_CL, LVBL_PL, LVBL_SL, LV_ENCASH_DAYS, LV_ENCASH, 
BASIC, DA, HRA_GROSS, HRA_PER, HRA, PF_GROSS, PEN_GROSS, ESI_GROSS, PTAX_GROSS, 
PF_E, PF_C, FPF, VPF_PERC, VPF, ESI_E, ESI_C, PTAX, ITAX, ESI_RT, 
SARR_ARRE, SARR_ARRD, SARR_PFARRE, SARR_NPFARRE, 
GROSSEARN, GROSSDEDN, MISC_BF, MISC_CF, TOTEARN, TOTDEDN, NETSALARY, SYSROWID, LASTMODIFIED, 
USERNAME, 
ADHOC, SPL_ALLOW, NS_HRS, OT_HRS, OT_DAYS, NS_ALLOW, OT_AMT, SERV_PERC, SERV_ALW, CONV_PERC, 
CONV_ALOW, OEPF, OE_NPF, ESI_ADJERN, HRA_PERC, ACT_PF_GRS, LIC, ELECTRIC, SUSP_DEDN, 
MISC_DEDN, HRA_AMT, ADHOC_NPF, OTHR_DEDN, PROF_BONUS, MEDICAL, LTA, LOAN_SPL, LINT_SPL, 
LNBL_SPL, LIBL_SPL, LNBL_STADV, LIBL_STADV, LNBL_OTADV, LIBL_OTADV, LNBL_PJADV, LIBL_PJADV, 
LNBL_SA, LIBL_SA, LNBL_FEADV, LIBL_FEADV, LNBL_OLADV, LIBL_OLADV, LVENCSH_DAYS, LEAVE_ENC, EPF, 
ATN_INCNT, ATN_INCAMT, CUMM_DAYS, CUM_PFGROS, ESI_RATE, LNBL_PFL, LIBL_PFL, LOAN_SPL1, LNBL_SPL1, 
LIBL_SPL1, CUMM_PF_E, CUMM_PF_C, CUMM_VPF, RT_BASIC, LDAY_CS


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------