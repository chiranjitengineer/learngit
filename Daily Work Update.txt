
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

Add fields in Employee Master (PIS) - Religion, Pran No., Gratuity No. Super annuation No. Super Annuation Date.

txtRELIGION
txtPRANNUMBER
txtGRATUITYNUMBER
txtSUPERANUATIONNUMBER
mskSUPERANUATIONDATE

SUPERANUATIONNUMBER, SUPERANUATIONDATE, RELIGION, PRANNUMBER, GRATUITYNUMBER

Note :- Prepare Another Page for Birla (Copy from exsiting page)


---------------------------------------------------------------------------------------------

SELECT * FROM MENUMASTER_RND
WHERE MENUCODE='0107010111'

SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%employee mas%')

SELECT * FROM ROLEDETAILS
WHERE MENUCODE=''

SELECT * FROM REPORTPARAMETERMASTER
WHERE REPORTTAG=''

update MENUMASTER_RND SET
URLSRC='PIS/PAGES/Master/pgEmployeeMast_Birla.aspx'
WHERE MENUCODE='0107010111'


select * from 
pisemployeemaster

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='PISEMPLOYEEMASTER'


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_TEMP='PISEMPLOYEEMASTER'

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10014'



txtRELIGION
txtPRANNUMBER
txtGRATUITYNUMBER
txtSUPERANUATIONNUMBER
mskSUPERANUATIONDATE

 SET DEFINE OFF;
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'RELIGION', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtRELIGION', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
COMMIT;

 SET DEFINE OFF;
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'PRANNUMBER', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtPRANNUMBER', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
COMMIT;


 SET DEFINE OFF;
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'GRATUITYNUMBER', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtGRATUITYNUMBER', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
COMMIT;


 SET DEFINE OFF;
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'SUPERANUATIONNUMBER', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtSUPERANUATIONNUMBER', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
COMMIT;

SET DEFINE OFF;
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'SUPERANUATIONDATE', 0, 
    'DATE', 10, 0, 'N', 'mskSUPERANUATIONDATE', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
COMMIT;



exec proc_create_gbl_tmp_tables(10014,0)
---------------------------------------------------------------------------------------------


--dtVoucherPrint

 Select  COMPANYCODE, DIVISIONCODE, YEARCODE, 
 fn_Generate_VoucherPrefix(A.companycode,A.divisioncode,A.yearcode,A.systemvoucherno) as VOUCHERNO,
 VOUCHERDATE, VOUCHERTYPE, SYSTEMVOUCHERNO, SYSTEMVOUCHERDATE, 
 CASHBANKACCODE, CHEQUENO, CHEQUEDATE, CHEQUEDRAWNON, PARTY, CHEQUEPRINTEDBY, CHEQUEPRINTDATE, 
 REALIZATIONDATE, VOUCHERAMOUNT, NARRATION, AUTOMANUALMARK, REFVOUCHERNO, REFVOUCHERDATE, REFVOUCHERTYPE, 
 REFSYSTEMVOUCHERNO, PREPAREDBY, CHECKEDBY, EDITEDBY, PRINTEDBY, PREPAREDDATE, CHECKEDDATE, EDITEDDATE, 
 PRINTEDDATE, LASTMODIFIED, SYNCHRONIZED, CONTROLVOUCHER, REFMEMORANDUMVOUCHERNO, MODULENAME, DOCUMENTTYPE, 
 INSTRUCTIONNO, MANUALVOUCHERNO, MANUALVOUCHERDATE, VOUCHERPAYMENTRECEIPTTYPE, CHEQUEISSUEDON, SYSROWID, 
 USERNAME, CHEQUEBOOKSLNO, LIABILITYTYPE, VOUCHERNATURE,
 REPLACE(REPLACE(REPLACE(A.NARRATION,CHR(9),' '),CHR(10),' '),CHR(13),' ') PRINTNARRATION, DECODE(A.VOUCHERTYPE,'PURCHASE BILL','LIABILITY BILL',A.VOUCHERTYPE) VOUCHERTYPE2, CASE WHEN A.VOUCHERTYPE ='PAYMENTS' THEN 'PAID TO : '||A.PARTY ELSE CASE WHEN A.VOUCHERTYPE ='RECEIPTS' THEN 'RECEIVED FROM : '||A.PARTY ELSE '' END END PAIDTORECEIVEDFROM  
 From AcVoucher A 
 Where A.CompanyCode = '0001'  
   And A.DivisionCode = '002' 
   And A.YearCode = '2020-2021' 
   And A.SystemVoucherNo IN ('BA0001/002-RVB/2021/00000008') 
   
   
--   strAddress
SELECT CASE WHEN INSTR(D.DIVISIONNAME,'MILL')>0 THEN D.DIVISIONADDRESS ||' '|| D.DIVISIONADDRESS1 ELSE D.DIVISIONADDRESS ||' '|| D.DIVISIONADDRESS1 END ADDRESS 
  FROM COMPANYMAST C, DIVISIONMASTER D 
 WHERE C.COMPANYCODE='0001' 
   AND C.COMPANYCODE=D.COMPANYCODE 
   AND DIVISIONCODE='002' 
   
   
   
Select B.ACHEAD || CASE WHEN A.divisioncode <> A.DIVISIONCODEFOR THEN ' [UNIT : ' || d.divisionname || ']' else '' end as ACHEAD, A.* 
  From ACVOUCHERDETAILS_ENTRY A, ACACLEDGER B, DIVISIONMASTER D 
 Where A.CompanyCode = B.CompanyCode 
   And A.ACCODEFOR = B.AcCode 
   And A.CompanyCode = D.CompanyCode 
   And A.divisioncodefor = d.divisioncode 
   And A.CompanyCode = '0001' 
   And A.DivisionCode = '002' 
   And A.YearCode = '2020-2021' 
   And A.SystemVoucherNo IN ('BA0001/002-RVB/2021/00000008') 
 Order By A.SystemVoucherNo,A.SERIALNO  
 
 
 
Select a.*,  
 case when a.TRANSACTIONTYPE='ADVANCE PAYMENT REVERSAL' then 'ADV-PYMT-REV' 
        when a.TRANSACTIONTYPE='ADVANCE PAYMENT ADJUSTMENT' then 'ADV-PYMT-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL ADJUSTMENT' then 'LIB-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL ADJUSTMENT REVERSAL' then 'LIB-ADJ-REV'
        when a.TRANSACTIONTYPE='PURCHASE BILL' then 'LIB'
        when a.TRANSACTIONTYPE='SALES BILL' then 'SB'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT ADJUSTMENT' then 'ADV-RCPT-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL REVERSAL' then 'LIB-REV'
        when a.TRANSACTIONTYPE='SALES BILL ADJUSTMENT ADJUSTMENT' then 'SB-ADJ'
        when a.TRANSACTIONTYPE='ADVANCE PAYMENT' then 'ADV-PYMT'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT' then 'ADV-RCPT'
        when a.TRANSACTIONTYPE='SALES BILL ADJUSTMENT' then 'SB-ADJ'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT REVERSAL' then 'ADV-RCPT-REV'
        else 'REF'
       end reftranstype 
       From ACBILLDETAILS_ENTRY a 
 Where a.CompanyCode = '0001'  
   And a.DivisionCode = '002' 
   And a.YearCode = '2020-2021' 
   And a.SystemVoucherNo IN ('BA0001/002-RVB/2021/00000008') 
 Order By SYSROWID  
 
 
Select B.COSTCENTRENAME, A.* From AcCostCentreDetails A, ACCOSTCENTREMAST B 
 Where A.CompanyCode = '0001'  
   And A.DivisionCode = '002' 
   And A.YearCode = '2020-2021' 
   And A.SystemVoucherNo IN ('BA0001/002-RVB/2021/00000008') 
   And A.CompanyCode = B.CompanyCode 
   And A.DIVISIONCODE = B.LOCATIONCODE  
   And A.CostCentreCode = B.CostCentreCode  
 Order By A.SystemVoucherNo 

---------------------------------------------------------------------------------------------
--    VOUCHER PRINTING


Select a.*,  
 case when a.TRANSACTIONTYPE='ADVANCE PAYMENT REVERSAL' then 'ADV-PYMT-REV' 
        when a.TRANSACTIONTYPE='ADVANCE PAYMENT ADJUSTMENT' then 'ADV-PYMT-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL ADJUSTMENT' then 'LIB-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL ADJUSTMENT REVERSAL' then 'LIB-ADJ-REV'
        when a.TRANSACTIONTYPE='PURCHASE BILL' then 'LIB'
        when a.TRANSACTIONTYPE='SALES BILL' then 'SB'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT ADJUSTMENT' then 'ADV-RCPT-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL REVERSAL' then 'LIB-REV'
        when a.TRANSACTIONTYPE='SALES BILL ADJUSTMENT ADJUSTMENT' then 'SB-ADJ'
        when a.TRANSACTIONTYPE='ADVANCE PAYMENT' then 'ADV-PYMT'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT' then 'ADV-RCPT'
        when a.TRANSACTIONTYPE='SALES BILL ADJUSTMENT' then 'SB-ADJ'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT REVERSAL' then 'ADV-RCPT-REV'
        else 'REF'
       end reftranstype
       From AcBillDetails a 
 Where a.CompanyCode = '0001'  
   And a.DivisionCode = '002' 
   And a.YearCode = '2020-2021' 
   And a.SystemVoucherNo =  'BA0001/002-RVB/2021/00000057' 
   And a.ACCODE= 'S000930' 
-- Order By sysrowid  

BA0001/002-RVB/2021/00000057

BA0001/004-RVB/2021/00000008

SELECT * FROM ACBILLDETAILS_ENTRY
WHERE SYSTEMVOUCHERNO LIKE '%RVB%'

SELECT * from AcBillDetails
WHERE SYSTEMVOUCHERNO LIKE '%RVB%'


SELECT * from AcBillDetails
WHERE SYSTEMVOUCHERNO LIKE 'BA0001/003-RPA/2021/00249599'



SELECT * FROM DIVISIONMASTER


SELECT * from acvoucher
where REFSYSTEMVOUCHERNO='BA0001/002-RVB/2021/00000008'


Select a.*,  
 case when a.TRANSACTIONTYPE='ADVANCE PAYMENT REVERSAL' then 'ADV-PYMT-REV' 
        when a.TRANSACTIONTYPE='ADVANCE PAYMENT ADJUSTMENT' then 'ADV-PYMT-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL ADJUSTMENT' then 'LIB-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL ADJUSTMENT REVERSAL' then 'LIB-ADJ-REV'
        when a.TRANSACTIONTYPE='PURCHASE BILL' then 'LIB'
        when a.TRANSACTIONTYPE='SALES BILL' then 'SB'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT ADJUSTMENT' then 'ADV-RCPT-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL REVERSAL' then 'LIB-REV'
        when a.TRANSACTIONTYPE='SALES BILL ADJUSTMENT ADJUSTMENT' then 'SB-ADJ'
        when a.TRANSACTIONTYPE='ADVANCE PAYMENT' then 'ADV-PYMT'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT' then 'ADV-RCPT'
        when a.TRANSACTIONTYPE='SALES BILL ADJUSTMENT' then 'SB-ADJ'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT REVERSAL' then 'ADV-RCPT-REV'
        else 'REF'
       end reftranstype
       From AcBillDetails a 
 Where a.CompanyCode = '0001'  
   And a.DivisionCode = '002' 
   And a.YearCode = '2020-2021' 
   And a.SystemVoucherNo =  'BA0001/002-RVB/2021/00000057' 
   And a.ACCODE= 'S000757' 
 Order By sysrowid  
 
 BA0001/002-RVB/2021/00000057
 
 
 
 

---------------------------------------------------------------------------------------------

 Select  COMPANYCODE, DIVISIONCODE, YEARCODE, 
 fn_Generate_VoucherPrefix(A.companycode,A.divisioncode,A.yearcode,A.systemvoucherno) as VOUCHERNO,
 VOUCHERDATE, VOUCHERTYPE, SYSTEMVOUCHERNO, SYSTEMVOUCHERDATE, 
 CASHBANKACCODE, CHEQUENO, CHEQUEDATE, CHEQUEDRAWNON, PARTY, CHEQUEPRINTEDBY, CHEQUEPRINTDATE, 
 REALIZATIONDATE, VOUCHERAMOUNT, NARRATION, AUTOMANUALMARK, REFVOUCHERNO, REFVOUCHERDATE, REFVOUCHERTYPE, 
 REFSYSTEMVOUCHERNO, PREPAREDBY, CHECKEDBY, EDITEDBY, PRINTEDBY, PREPAREDDATE, CHECKEDDATE, EDITEDDATE, 
 PRINTEDDATE, LASTMODIFIED, SYNCHRONIZED, CONTROLVOUCHER, REFMEMORANDUMVOUCHERNO, MODULENAME, DOCUMENTTYPE, 
 INSTRUCTIONNO, MANUALVOUCHERNO, MANUALVOUCHERDATE, VOUCHERPAYMENTRECEIPTTYPE, CHEQUEISSUEDON, SYSROWID, 
 USERNAME, CHEQUEBOOKSLNO, LIABILITYTYPE, VOUCHERNATURE,
 REPLACE(REPLACE(REPLACE(A.NARRATION,CHR(9),' '),CHR(10),' '),CHR(13),' ') PRINTNARRATION, DECODE(A.VOUCHERTYPE,'PURCHASE BILL','LIABILITY BILL',A.VOUCHERTYPE) VOUCHERTYPE2, CASE WHEN A.VOUCHERTYPE ='PAYMENTS' THEN 'PAID TO : '||A.PARTY ELSE CASE WHEN A.VOUCHERTYPE ='RECEIPTS' THEN 'RECEIVED FROM : '||A.PARTY ELSE '' END END PAIDTORECEIVEDFROM  
 From AcVoucher A 
 Where A.CompanyCode = '0001'  
   And A.DivisionCode = '002' 
   And A.YearCode = '2020-2021' 
   And A.SystemVoucherNo IN (A0001/002-RVB/2021/00000006) 
---------------------------------------------------------------------------------------------

--BAGGAGE COMPONENT ASSIGNMENT NOT WORKING 

--CORRECTION BY AMALESH SIR

-- BELOW FUNCTION CORRECTTION
FN_USERWISE_DATA_ACCESS

select * from VW_AUTO_DYNAMICGRID

select * from login

LOGIN WITH USER NAME : MISHRA, AND PASSWORD : BMPL123

FN_USERWISE_DATA_ACCESS



---------------------------------------------------------------------------------------------


SELECT COMPANYCODE,DIVISIONCODE,SYSROWID,YEARCODE,YEARMONTH,UNITCODE,CATEGORYCODE,GRADECODE,
WORKERSERIAL,TOKENNO,EMPLOYEENAME,DEPARTMENTCODE,DEPARTMENTDESC,BASIC,BASIC_RT,HRA_PER,
SOFT_ALLW,SERV_ALLW,CONV_ALLW,CHILD_ALLW,PERS_ALLW,OTH_ALLW,FIX_ALW,OTH_ALLW2
  FROM ( 
         SELECT * FROM (SELECT EMPMAST.COMPANYCODE,EMPMAST.DIVISIONCODE,ASSIGN.SYSROWID,ASSIGN.YEARCODE,
         ASSIGN.YEARMONTH,EMPMAST.UNITCODE,EMPMAST.CATEGORYCODE,EMPMAST.GRADECODE,EMPMAST.WORKERSERIAL,
         EMPMAST.TOKENNO,EMPMAST.EMPLOYEENAME,EMPMAST.DEPARTMENTCODE,DEPT.DEPARTMENTDESC,ASSIGN.BASIC,
         ASSIGN.BASIC_RT,ASSIGN.HRA_PER,ASSIGN.SOFT_ALLW,ASSIGN.SERV_ALLW,ASSIGN.CONV_ALLW,ASSIGN.CHILD_ALLW,
         ASSIGN.PERS_ALLW,ASSIGN.OTH_ALLW,ASSIGN.FIX_ALW,ASSIGN.OTH_ALLW2   
         FROM PISEMPLOYEEMASTER EMPMAST, PISDEPARTMENTMASTER DEPT,         
         (         
             SELECT *           
             FROM PISCOMPONENTASSIGNMENT          
             WHERE COMPANYCODE='0001'            
             AND DIVISIONCODE='001'            
             AND TRANSACTIONTYPE='ASSIGNMENT'            
             AND WORKERSERIAL||YEARMONTH IN 
             (                                             
                 SELECT WORKERSERIAL||MAX(YEARMONTH) 
                 FROM PISCOMPONENTASSIGNMENT                                              
                 WHERE COMPANYCODE='0001' AND DIVISIONCODE='001'                                                
                 AND TO_NUMBER(YEARMONTH)<=TO_NUMBER('202004')                                                
                 AND TRANSACTIONTYPE='ASSIGNMENT'                                             
                 GROUP BY WORKERSERIAL                                           
            )        
         ) ASSIGN  
         WHERE EMPMAST.COMPANYCODE=DEPT.COMPANYCODE    
         AND EMPMAST.DIVISIONCODE=DEPT.DIVISIONCODE    
         AND EMPMAST.DEPARTMENTCODE=DEPT.DEPARTMENTCODE    
         AND EMPMAST.COMPANYCODE=ASSIGN.COMPANYCODE(+)    
         AND EMPMAST.DIVISIONCODE=ASSIGN.DIVISIONCODE(+)    
         AND EMPMAST.TOKENNO=ASSIGN.TOKENNO(+)    
         AND EMPMAST.WORKERSERIAL=ASSIGN.WORKERSERIAL(+)    
         AND EMPMAST.COMPANYCODE='0001'    
         AND EMPMAST.DIVISIONCODE='001'    
         AND EMPMAST.EMPLOYEESTATUS='ACTIVE'    
         AND EMPMAST.UNITCODE='001'    
         AND EMPMAST.CATEGORYCODE='01'    
         AND EMPMAST.GRADECODE='CIV'    
         AND TO_NUMBER(TO_CHAR(EMPMAST.DATEOFJOIN,'YYYYMM'))<=TO_NUMBER('202004')    
         AND TO_NUMBER(NVL(TO_CHAR(EMPMAST.STATUSDATE,'YYYYMM'),NVL(TO_CHAR(EMPMAST.EXTENDEDRETIREDATE,'YYYYMM'),'202004')))>=TO_NUMBER('202004') ) 
         ORDER BY TOKENNO 
       ) 
       
       
       ----------------------------------------------------
       
       
        
         SELECT * FROM (SELECT EMPMAST.COMPANYCODE,EMPMAST.DIVISIONCODE,ASSIGN.SYSROWID,ASSIGN.YEARCODE,
         ASSIGN.YEARMONTH,EMPMAST.UNITCODE,EMPMAST.CATEGORYCODE,EMPMAST.GRADECODE,EMPMAST.WORKERSERIAL,
         EMPMAST.TOKENNO,EMPMAST.EMPLOYEENAME,EMPMAST.DEPARTMENTCODE,DEPT.DEPARTMENTDESC,ASSIGN.BASIC,
         ASSIGN.BASIC_RT,ASSIGN.HRA_PER,ASSIGN.SOFT_ALLW,ASSIGN.SERV_ALLW,ASSIGN.CONV_ALLW,ASSIGN.CHILD_ALLW,
         ASSIGN.PERS_ALLW,ASSIGN.OTH_ALLW,ASSIGN.FIX_ALW,ASSIGN.OTH_ALLW2   
         FROM PISEMPLOYEEMASTER EMPMAST, PISDEPARTMENTMASTER DEPT,         
         (         
             SELECT *           
             FROM PISCOMPONENTASSIGNMENT          
             WHERE COMPANYCODE='0001'            
             AND DIVISIONCODE='001'            
             AND TRANSACTIONTYPE='ASSIGNMENT'            
             AND WORKERSERIAL||YEARMONTH IN 
             (                                             
                 SELECT WORKERSERIAL||MAX(YEARMONTH) 
                 FROM PISCOMPONENTASSIGNMENT                                              
                 WHERE COMPANYCODE='0001' AND DIVISIONCODE='001'                                                
                 AND TO_NUMBER(YEARMONTH)<=TO_NUMBER('202004')                                                
                 AND TRANSACTIONTYPE='ASSIGNMENT'                                             
                 GROUP BY WORKERSERIAL                                           
            )        
         ) ASSIGN  
         WHERE EMPMAST.COMPANYCODE=DEPT.COMPANYCODE    
         AND EMPMAST.DIVISIONCODE=DEPT.DIVISIONCODE    
         AND EMPMAST.DEPARTMENTCODE=DEPT.DEPARTMENTCODE    
         AND EMPMAST.COMPANYCODE=ASSIGN.COMPANYCODE(+)    
         AND EMPMAST.DIVISIONCODE=ASSIGN.DIVISIONCODE(+)    
         AND EMPMAST.TOKENNO=ASSIGN.TOKENNO(+)    
         AND EMPMAST.WORKERSERIAL=ASSIGN.WORKERSERIAL(+)    
         AND EMPMAST.COMPANYCODE='0001'    
         AND EMPMAST.DIVISIONCODE='001'    
         AND EMPMAST.EMPLOYEESTATUS='ACTIVE'    
         AND EMPMAST.UNITCODE='002'    
         AND EMPMAST.CATEGORYCODE='01'    
         AND EMPMAST.GRADECODE='CIV'    
         AND TO_NUMBER(TO_CHAR(EMPMAST.DATEOFJOIN,'YYYYMM'))<=TO_NUMBER('202004')    
         AND TO_NUMBER(NVL(TO_CHAR(EMPMAST.STATUSDATE,'YYYYMM'),NVL(TO_CHAR(EMPMAST.EXTENDEDRETIREDATE,'YYYYMM'),'202004')))>=TO_NUMBER('202004') ) 
         ORDER BY TOKENNO 
         
         
         
         
         SELECT * FROM MENUMASTER_RND
         WHERE UPPER(MENUDESC) LIKE UPPER('%component%')
		 
		 
---------------------------------------------------------------------------------------------

--MULTIPLE LOAN REPAY ENTRY
---------------------------------------------------------------------------------------------
--PF LOAN ENTRY

EXEC PROC_PFLOANBLNC('DT0078','0009','23/02/2020','23/02/2020','PF','1050','GPS')

EXEC PROC_PFLOANBLNC('DT0078','0009','17/06/2020','17/06/2020','PF','1050','GPS')

SELECT * FROM GPSPAYSHEETDETAILS
WHERE DIVISIONCODE='0009'
AND TOKENNO='J0028'

SELECT * FROM GBL_PFLOANBLNC

DELETE FROM GPS_ERROR_LOG


SELECT * FROM GPS_ERROR_LOG


SELECT  NVL(PFLOAN_BAL,0) PFLOAN_BAL, NVL(PFLOAN_INT_BAL,0) PFLOAN_INT_BAL FROM GBL_PFLOANBLNC

WHERE TOKENNO='J0028'


SELECT * FROM GPSEMPLOYEEMAST
WHERE PFNO='1050'

---------------------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE DHUNSERI_STRU.PROC_PFLOANREPAY(P_COMPCODE VARCHAR2, 
                                                  P_DIVCODE VARCHAR2,
                                                  P_YEARCODE VARCHAR2,
                                                  P_MODULENAME VARCHAR2,
                                                  P_FNSTDT VARCHAR2, 
                                                  P_FNENDT VARCHAR2,
                                                  P_PAIDDATE VARCHAR2,
                                                  P_PAIDPAMT VARCHAR2 DEFAULT 0,
                                                  P_PAIDINTAMT VARCHAR2 DEFAULT 0,
                                                  P_PFNO VARCHAR2 DEFAULT NULL
                                                  )
AS
LV_FN_STDT DATE := TO_DATE(P_FNSTDT,'DD/MM/YYYY');
LV_FN_ENDT DATE := TO_DATE(P_FNENDT,'DD/MM/YYYY');
LV_TABLENAME        VARCHAR2(50);
LV_REMARKS          VARCHAR2(1000) := 'PROC_PFLOANREPAY --REPAYMENT DONE THROUGH MANUAL INPUT';

LV_COMPCOL          VARCHAR2(1000) := '';
LV_SQLSTR      VARCHAR2(4000) := '';
LV_PARVALUES        VARCHAR2(500) := P_FNSTDT||'-'||P_FNENDT;
LV_SQLERRM          VARCHAR2(500) := '';
LV_WORKERSERIAL     VARCHAR2(10) := '';
LV_TOKENNO          VARCHAR2(10) := '';
LV_TOPTALPAID       NUMBER(12,2) := 0;
lv_error_remark     VARCHAR2(1000):='';
LV_ATTNDATE         DATE := TO_DATE(P_FNSTDT,'DD/MM/YYYY');
BEGIN

    --PROC_PFLOANBLNC(P_COMPCODE,P_DIVCODE,P_FNSTDT,P_FNENDT,'PFLN','','WPS','NO');
    DELETE FROM PFLOANBREAKUP 
    WHERE EFFECTFORTNIGHT=TO_DATE(P_FNSTDT,'DD/MM/YYYY')
      AND TRANSACTIONTYPE= 'REPAY'
      AND PFNO=P_PFNO
      AND COMPANYCODE=P_COMPCODE---ADDED BY CHIRANJIT
      AND DIVISIONCODE=P_DIVCODE---ADDED BY CHIRANJIT
      AND NVL(ISCASHREPAYMENT,'N') = 'Y';
        
   LV_TOPTALPAID :=TO_NUMBER(NVL(P_PAIDPAMT,0)) + TO_NUMBER(NVL(P_PAIDINTAMT,0));
   ----DBMS_OUTPUT.PUT_LINE (LV_TOPTALPAID);
   IF NVL(TO_NUMBER(LV_TOPTALPAID),0) >0 THEN
        LV_SQLSTR := ' INSERT INTO PFLOANBREAKUP ( COMPANYCODE, DIVISIONCODE, EMPLOYEECOMPANYCODE, EMPLOYEEDIVISIONCODE, YEARCODE, YEARMONTH, CATEGORYCODE, GRADECODE, PFNO, TOKENNO, WORKERSERIAL, LOANCODE, LOANDATE, EFFECTYEARMONTH, INTERESTPERCENTAGE, AMOUNT, TRANSACTIONTYPE, EFFECTFORTNIGHT, PAIDON, ISPAID, DEDUCTEDAMT, ADJUSTMENTTAG, REMARKS, REPAYAMOUNT, REPAYCAPITAL, REPAYINTEREST, REPAYREBATE, FINALSETTLEMENTTAG, REPAYDATE, MODULE, DELETERESION, VOUCHERNO, VOUCHERDATE, SYSTEMVOUCHERNO, SYSTEMVOUCHERDATE, CHEQUENO, CHEQUEDATE, SYSROWID, USERNAME, LASTMODIFIED, ISCASHREPAYMENT  ) '||CHR(10)
         ||'  SELECT '''||P_COMPCODE||''', '''||P_DIVCODE||''','''||P_COMPCODE||''', '''||P_DIVCODE||''', '''||P_YEARCODE||''',  '||CHR(10)
         ||'  TO_CHAR(TO_DATE('''||P_FNSTDT||''',''DD/MM/YYYY''),''YYYYMM''),CATEGORYCODE,NULL,A.PFNO,B.TOKENNO,B.WORKERSERIAL,''PF'', LOANDATE,TO_CHAR(TO_DATE('''||P_FNSTDT||''',''DD/MM/YYYY''),''YYYYMM''),NULL,'||CHR(10)
         ||'  '''||LV_TOPTALPAID||''', ''REPAY'',TO_DATE('''||P_FNSTDT||''',''DD/MM/YYYY'') FORTNIGHTSTARTDATE,TO_DATE('''||P_PAIDDATE||''',''DD/MM/YYYY'') PAIDON,  '||CHR(10) 
         ||' ''Y'' ISPAID,NULL, NULL, ''REPAYMENT DONE THROUGH MANUAL INPUT'','''||LV_TOPTALPAID||''','''||P_PAIDPAMT||''','''||P_PAIDINTAMT||''',   '||CHR(10) 
         ||' NULL, NULL, TO_DATE('''||P_PAIDDATE||''',''DD/MM/YYYY'') REPAYDATE, ''GPS'' ,NULL, NULL, NULL, NULL, NULL,NULL, NULL,A.PFNO||B.DIVISIONCODE||TO_CHAR(SYSDATE,''YYYYMMDDHHMISS''),''SWT'',SYSDATE,''Y'' '||CHR(10)
         ||'  FROM GBL_PFLOANBLNC A, GPSEMPLOYEEMAST B '||CHR(10)
         ||' WHERE A.PFNO='''||P_PFNO||''' '||CHR(10)
         ||'   AND A.COMPANYCODE=B.COMPANYCODE '||CHR(10)---ADDED
         ||'   AND A.DIVISIONCODE=B.DIVISIONCODE '||CHR(10)---ADDED
         ||'   AND A.COMPANYCODE='''||P_COMPCODE||''' '||CHR(10) ---ADDED
         ||'   AND A.DIVISIONCODE='''||P_DIVCODE||''' '||CHR(10)---ADDED
         ||'   AND A.DIVISIONCODE=B.DIVISIONCODE '||CHR(10);
     --  --DBMS_OUTPUT.PUT_LINE (LV_SQLSTR);
       EXECUTE IMMEDIATE LV_SQLSTR;COMMIT;
   END IF;
   COMMIT;
EXCEPTION
WHEN OTHERS THEN
 --INSERT INTO ERROR_LOG(PROC_NAME,ORA_ERROR_MESSG,ERROR_QUERY,PAR_VALUES,REMARKS ) VALUES( 'ERROR SQL',LV_SQLSTR,LV_SQLSTR,LV_PARVALUES,LV_REMARKS);
 LV_SQLERRM := SQLERRM ;
 ----DBMS_OUTPUT.PUT_LINE(LV_SQLERRM);
 INSERT INTO GPS_ERROR_LOG(PROC_NAME,ORA_ERROR_MESSG,ERROR_QUERY,PAR_VALUES,FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS ) VALUES( 'PROC_PFLOANREPAY',LV_SQLERRM,LV_SQLSTR,LV_PARVALUES,LV_FN_STDT,LV_FN_ENDT, LV_REMARKS);

END ;
/
---------------------------------------------------------------------------------------------

--LOAN BALANCE QUERY



SELECT DISTINCT A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE, AMOUNT, 0 INTERESTAMOUNT , 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT 
FROM PFLOANTRANSACTION A,  
(  
    SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, MAX(LOANDATE) LOANDATE  
    FROM PFLOANTRANSACTION  
    WHERE COMPANYCODE = 'DT0078' AND DIVISIONCODE = '0009' 
    AND LOANDATE <=  TO_DATE('23/02/2020','DD/MM/YYYY')
    AND LOANTYPE ='REFUNDABLE'
    GROUP BY COMPANYCODE,DIVISIONCODE,PFNO  
) B  
WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE AND A.PFNO = B.PFNO AND A.LOANDATE = B.LOANDATE  AND AMOUNT > 0 

UNION ALL     

SELECT A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE,   
(
CASE WHEN TRANSACTIONTYPE ='CAPITAL' THEN CASE WHEN EFFECTFORTNIGHT < TO_DATE('23/02/2020','DD/MM/YYYY') THEN AMOUNT ELSE 0 END  
WHEN TRANSACTIONTYPE ='REPAY' THEN REPAYCAPITAL  
WHEN TRANSACTIONTYPE ='REPAYCAP' THEN AMOUNT  
ELSE 0  
END
)*(-1) AMOUNT, 0 INTERESTAMOUNT , 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT     
FROM PFLOANBREAKUP A,  
(  
    SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, MAX(LOANDATE) LOANDATE  
    FROM PFLOANTRANSACTION  
    WHERE COMPANYCODE = 'DT0078' AND DIVISIONCODE ='0009' 
    AND LOANDATE <=  TO_DATE('23/02/2020','DD/MM/YYYY')  
    AND LOANTYPE ='REFUNDABLE'                     
    GROUP BY COMPANYCODE,DIVISIONCODE,PFNO  
) B  
WHERE A.COMPANYCODE=B.COMPANYCODE 
AND A.DIVISIONCODE=B.DIVISIONCODE 
AND A.PFNO = B.PFNO 
AND A.LOANDATE = B.LOANDATE  
AND A.EFFECTFORTNIGHT <=  TO_DATE('23/02/2020','DD/MM/YYYY')  
AND TRANSACTIONTYPE <> 'INTEREST'  
AND A.PFNO='1050'
AND A.COMPANYCODE = 'DT0078' AND A.DIVISIONCODE ='0009' 


UNION ALL  

SELECT DISTINCT A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE, 0 AMOUNT, SUM(NVL(C.INTERESTAMOUNT,0)) INTERESTAMOUNT 
, 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT  
FROM 
( 
    SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, LOANCODE, LOANDATE 
    FROM PFLOANTRANSACTION 
    WHERE COMPANYCODE ='DT0078' AND DIVISIONCODE = '0009'
) A, 
(  
    SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, MAX(LOANDATE) LOANDATE 
    FROM PFLOANTRANSACTION  
    WHERE COMPANYCODE = 'DT0078' AND DIVISIONCODE = '0009'  
    AND LOANDATE <=  TO_DATE('23/02/2020','DD/MM/YYYY')  
    AND LOANTYPE ='REFUNDABLE'
    GROUP BY COMPANYCODE,DIVISIONCODE,PFNO  
) B, PFLOANINTEREST C  
WHERE A.COMPANYCODE = 'DT0078' AND A.DIVISIONCODE = '0009' AND A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE AND A.PFNO = B.PFNO AND A.LOANDATE = B.LOANDATE  
AND A.PFNO = C.PFNO AND A.LOANDATE = C.LOANDATE AND A.LOANCODE = C.LOANCODE  
AND C.FORTNIGHTENDDATE <= TO_DATE('23/02/2020','DD/MM/YYYY') 
AND C.TRANSACTIONTYPE = 'ADD'  
GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE  

UNION ALL  

SELECT A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE, 0 AMOUNT,   
(CASE WHEN TRANSACTIONTYPE ='INTEREST' THEN CASE WHEN EFFECTFORTNIGHT < TO_DATE('23/02/2020','DD/MM/YYYY') THEN AMOUNT ELSE 0 END  
WHEN TRANSACTIONTYPE ='REPAY' THEN REPAYINTEREST  
WHEN TRANSACTIONTYPE ='REPAYINT' THEN AMOUNT  
ELSE 0  
END)*(-1) INTERESTAMOUNT 
, 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT      
FROM PFLOANBREAKUP A,  
(  
SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, MAX(LOANDATE) LOANDATE  
FROM PFLOANTRANSACTION  
WHERE COMPANYCODE = 'DT0078' AND DIVISIONCODE = '0009'  
AND LOANDATE <=  TO_DATE('23/02/2020','DD/MM/YYYY')  
AND LOANTYPE ='REFUNDABLE'
GROUP BY COMPANYCODE,DIVISIONCODE,PFNO  
) B  
WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE AND A.PFNO = B.PFNO AND A.LOANDATE = B.LOANDATE  
AND A.EFFECTFORTNIGHT <= TO_DATE('23/02/2020','DD/MM/YYYY') 
AND TRANSACTIONTYPE <> 'CAPITAL' 

UNION ALL 

SELECT A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE, 0 AMOUNT,  0 INTERESTAMOUNT,  
DECODE(TRANSACTIONTYPE,'CAPITAL',AMOUNT,0) LN_CAP_DEDUCT, DECODE(TRANSACTIONTYPE,'INTEREST',AMOUNT,0) LN_INT_DEDUCT 
FROM PFLOANBREAKUP A,  
(  
SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, MAX(LOANDATE) LOANDATE  
FROM PFLOANTRANSACTION  
WHERE COMPANYCODE = 'DT0078' AND DIVISIONCODE = '0009'  
AND LOANDATE <=  TO_DATE('23/02/2020','DD/MM/YYYY') 
AND LOANTYPE ='REFUNDABLE'
GROUP BY COMPANYCODE,DIVISIONCODE,PFNO  
) B  
WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE AND A.PFNO = B.PFNO AND A.LOANDATE = B.LOANDATE  
AND A.EFFECTFORTNIGHT <= TO_DATE('23/02/2020','DD/MM/YYYY')
AND TRANSACTIONTYPE IN ('CAPITAL','INTEREST') 

---------------------------------------------------------------------------------------------

I:\OFFICE\PROJECTS\SWT_Jute\swterp\swterp\PIS\Pages\Report\Transaction\rptCOMPONENTASSIGNMENTSTATUS.rdlc
--baggage
SELECT * FROM  ACVOUCHER
WHERE SYSTEMVOUCHERNO='BA0001/002-RVB/2021/00000008'

WHERE VOUCHERTYPE IN ('RECEIPTS','PAYMENTS')

SELECT * FROM  ACVOUCHERDETAILS_ENTRY

WHERE VOUCHERTYPE IN ('RECEIPTS','PAYMENTS')


SELECT * FROM ACBILLDETAILS_ENTRY
WHERE SYSTEMVOUCHERNO LIKE '%RVB%'


---------------------------------------------------------------------------------------------

SELECT 'BJ0056' COMPANYCODE, '0001' DIVISIONCODE,'2020-2021' YEARCODE, '202004'YEARMONTH, UNITCODE, CATEGORYCODE, 
GRADECODE, DEPARTMENTCODE,EMPCODE,'ASSIGNMENT' TRANSACTIONTYPE, SYS_GUID() SYSROWID, SYSDATE LASTMODIFIED, 
'SWT' USERNAME,
BASIC,DA,ADHOC,PERSONAL_PAY,VPF_PERCENT
FROM bjm_emp_mast



---------------------------------------------------------------------------------------------

--ESI GROSS
CASE WHEN PISCOMP.ESI_RATE>=21000 THEN 0 ELSE (PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.SPL_ALLOW+PISCOMP.NS_ALLOW+PISCOMP.OT_AMT+PISCOMP.SERV_ALW+PISCOMP.OE_NPF+PISCOMP.CONV_ALOW+PISCOMP.OEPF+PISCOMP.ESI_ADJERN+PISCOMP.HRA+PISCOMP.PROF_BONUS+PISCOMP.ADHOC_NPF+PISCOMP.ATN_INCAMT) END

CASE WHEN PISCOMP.ESI_RATE>=21000 THEN 0 ELSE 
(PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.SPL_ALLOW+PISCOMP.NS_ALLOW+PISCOMP.OT_AMT+PISCOMP.SERV_ALW+PISCOMP.OE_NPF+PISCOMP.CONV_ALOW+PISCOMP.OEPF+PISCOMP.ESI_ADJERN+PISCOMP.HRA+PISCOMP.PROF_BONUS+PISCOMP.ADHOC_NPF+PISCOMP.ATN_INCAMT) END


SELECT 
CASE WHEN PISCOMP.ESI_RATE>=21000 THEN 0 ELSE 
(
    PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.SPL_ALLOW+
    PISCOMP.NS_ALLOW+PISCOMP.OT_AMT+PISCOMP.OE_NPF+
    PISCOMP.CONV_ALOW+PISCOMP.OEPF+PISCOMP.ESI_ADJERN+PISCOMP.HRA+
    PISCOMP.PROF_BONUS+PISCOMP.ATN_INCAMT
) END
FROM PISCOMPONENTASSIGNMENT PISCOMP


SELECT 


CASE WHEN PISCOMP.ESI_RATE>=21000 THEN 0 ELSE (PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.SPL_ALLOW+PISCOMP.OT_AMT+PISCOMP.OE_NPF+PISCOMP.CONV_ALOW+PISCOMP.OEPF+PISCOMP.HRA+PISCOMP.ATN_INCAMT) END
FROM PISCOMPONENTASSIGNMENT PISCOMP
 
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------


--PF GROSS
PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.NS_ALLOW+ PISCOMP.OEPF
PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.NS_ALLOW+ PISCOMP.OEPF


CASE WHEN PISMAST.CATEGORYCODE= 'SS' THEN PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.NS_ALLOW+ PISCOMP.OEPF 
ELSE 
	CASE WHEN (PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.NS_ALLOW+ PISCOMP.OEPF) > 15000 THEN 15000 
		 ELSE (PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.NS_ALLOW+ PISCOMP.OEPF) 
	END 
END

CASE WHEN (PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.OEPF) > 15000 THEN 15000 ELSE (PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.OEPFCOMP.OEPF) END 


PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.OEPF


--HRA GROSS
PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.NS_ALLOW+PISCOMP.OEPF

PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.OEPF
 
 
---------------------------------------------------------------------------------------------

--ADDED HELP QUERY FROM GLOSTER
Insert into SYS_HELP_QRY
   (QRY_ID, QRY_STRING, PARAMETER_STRING, QRY_SHORTDESC, QRY_RETURN_TABLE_NAME, 
    WEB_QRY_STRING, SEARCH_COLUMNLIST, MODULENAME)
 Values
   (7041, '""', 'COMPANYCODE~DIVISIONCODE~EMPLOYEECODE~LEAVECODE~PATTERN', 'PIS EMPLOYEE LEAVE INFORMATION', NULL, 
    'SELECT DISTINCT DOCUMENTNO, TOKENNO, LEAVECODE, TO_CHAR(LEAVEAPPLIEDON) LEAVEAPPLIEDON'||CHR(13)||CHR(10)||' FROM PISLEAVEAPPLICATION A'||CHR(13)||CHR(10)||'    WHERE A.COMPANYCODE=<<COMPANYCODE>>'||CHR(13)||CHR(10)||'    AND A.DIVISIONCODE=<<DIVISIONCODE>>'||CHR(13)||CHR(10)||'    AND A.TOKENNO=<<EMPLOYEECODE>>'||CHR(13)||CHR(10)||'    AND A.LEAVECODE=<<LEAVECODE>>'||CHR(13)||CHR(10)||'   ORDER BY DOCUMENTNO'||CHR(10)||'', 'DOCUMENTNO~TOKENNO~LEAVECODE~LEAVEAPPLIEDON'||CHR(10)||'', 'PIS');
COMMIT;

I:\OFFICE\PROJECTS\SWT_Jute\swterp\swterp\PIS\Pages\Report\Transaction\rptCOMPONENTSALARYREGISTER.rdlc

---------------------------------------------------------------------------------------------

--BAGGAGE

select * from pis_error_log

DELETE FROM pis_error_log


proc_componentassinreport

EXEC PROC_RPT_PIS_PTAXSTATEMENT('0001','001','2020-2021','202004','','','','','','','','','SWT20200616_021821PM','WEST BENGAL')

EXEC PROC_RPT_PIS_PTAXSTATEMENT('0001','001','2020-2021','202004','','','','','SWT20200616_021821PM','''WEST BENGAL''');

PROC_RPT_PIS_PTAXSTATEMENT('0001','001','2020-2021','202004','','','','','SWT20200616_025234PM','''WEST BENGAL''')
 


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
work update on 15/06/2020
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------

SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%month att%')


update menumaster_rnd
set URLSRC ='PIS/PAGES/Transaction/pgPISMonthAttendanceWithLeave.aspx'
where menucode = '01070202'


update menumaster_rnd
set URLSRC ='PIS/PAGES/Transaction/pgPISMonthAttendance.aspx'
where menucode = '01070202'

URLSRC

---------------------------------------------------------------------------------------------

--ATTENDANCE CODE
select rtrim(xmlagg(xmlelement(e,x.componentcode||',') order by srl).extract('//text()'),',') xx 
  from ( 
        select srl, columnname componentcode from pistagwisefixedcolumnshow 
         where companycode='BJ0056' 
           and divisioncode='0001' 
           and tagtype='ATTENDANCE' 
        union all 
        select 50+nvl(phase,999)+nvl(calculationindex,9999) srl, 'ASSIGN.'||A.componentcode componentcode from piscomponentmaster A
        ,(
            SELECT DISTINCT COMPONENTCODE FROM PISGRADECOMPONENTMAPPING
            WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001' 
            AND YEARMONTH = (
                                SELECT MAX(YEARMONTH) FROM PISGRADECOMPONENTMAPPING
                                WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001' 
                            )
            AND CATEGORYCODE = '10'
            AND GRADECODE ='11' 
            AND APPLICABLE LIKE 'Y%' 
        ) B 
         where companycode='BJ0056' 
           and divisioncode='0001' 
           and A.componentcode||yearmonth in ( 
                                            select distinct componentcode||max(yearmonth) from piscomponentmaster 
                                             where companycode='BJ0056' 
                                               and divisioncode='0001' 
                                               and to_number(yearmonth)<=to_number('202004') 
                                             group by componentcode 
                                           ) 
          AND A.COMPONENTCODE = B.COMPONENTCODE
           and nvl(userentryapplicable,'N')='Y' 
           and nvl(attendanceentryapplicable,'N')='Y' 
        union all 
        select (SELECT MAX(srl) FROM pistagwisefixedcolumnshow where companycode='BJ0056' 
           and divisioncode='0001' 
           and tagtype='ATTENDANCE' )  srl, 'L_A.'||leavecode componentcode from PISLEAVEMASTER
         where companycode='BJ0056' 
           and divisioncode='0001' 
        union all 
        select 0 srl,  'DYLEAVE' componentcode from dual
       ) x 
	   
---------------------------------------------------------------------------------------------

--FUNCTION TAKEN FROM GLOSTER 
--ADDED TO BIRLA
CREATE OR REPLACE function fn_RtnNoOfApplicableHolidays(P_COMPCODE VARCHAR2, P_DIVCODE VARCHAR2, P_YEARMONTH VARCHAR2, P_CATEGORYCODE VARCHAR2,P_GRADECODE VARCHAR2,P_WORKERSERIAL  VARCHAR2, P_MODULE VARCHAR2 DEFAULT 'PIS') return number
AS 
lv_Cnt      number(5,2):=0;
begin
    if P_MODULE = 'PIS' THEN
        SELECT COUNT(*) INTO lv_Cnt
        FROM PISHOLIDAYMASTER A, PISEMPLOYEEMASTER E
        WHERE A.COMPANYCODE = P_COMPCODE AND A.DIVISIONCODE = P_DIVCODE
          AND TO_CHAR(A.HOLIDAYDATE,'YYYYMM') = P_YEARMONTH
          AND NVL(A.ISPAID,'N') = 'Y'
          AND A.COMPANYCODE=E.COMPANYCODE
          AND A.DIVISIONCODE=E.DIVISIONCODE
          AND NVL(A.CATEGORYCODE,'N')=E.CATEGORYCODE
          AND NVL(A.GRADECODE,'N')=E.GRADECODE
          AND A.HOLIDAYDATE>=E.DATEOFJOIN
          AND E.WORKERSERIAL=P_WORKERSERIAL;
    
    END IF;
    return lv_Cnt;
end;
/

---------------------------------------------------------------------------------------------
procedure

prcAssignment_Bf_MainSave

--IF SUM OF BASIC AMOUNT IS ZERO 
    select sum(nvl(basic,0))
    into lv_cnt
    from GBL_PISCOMPONENTASSIGNMENT;
    
    if lv_cnt = 0 then
        lv_error_remark := 'Validation Failure : [No row found in Component Assignment with Proper Data to Entry]';
        raise_application_error(to_number(FN_DISPLAY_ERROR( 'COMMON')),FN_DISPLAY_ERROR( 'COMMON',6,lv_error_remark));
    end if;
    
	
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------


----COMPONENT CODE FROM PISCOMPONENT ASSIGNMENT 

SELECT DISTINCT COMPONENTCODE FROM PISCOMPONENTMASTER
MINUS
SELECT SYS_COLUMNNAME FROM SYS_TFMAP WHERE SYS_TABLENAME_ACTUAL='PISCOMPONENTASSIGNMENT'


----ALL COMPONENTCODE FROM PISCOMPONENTMASTER

SELECT WM_CONCAT(COMPONENTCODE) COMPONENTCODE FROM
(
SELECT DISTINCT COMPONENTCODE FROM PISCOMPONENTMASTER
)


----ALL SYS_COLUMNNAME / COMPONENTCODE FROM PISCOMPONENTMASTER
SELECT WM_CONCAT(SYS_COLUMNNAME) COMPONENTCODE FROM
(
SELECT SYS_COLUMNNAME FROM SYS_TFMAP WHERE SYS_TABLENAME_ACTUAL='PISCOMPONENTASSIGNMENT'
)


--PISCOMPONENTMASTER
CONV_ALOW,GROSSEARN,HRA_GROSS,HRA_PERC,LIBL_FEADV,LIBL_SA,LINT_PJADV,LINT_SPL,LOAN_PFL,LTP,NETSALARY,OE_NPF,OTHR_DEDN,TOTEARN,
ATN_INCNT,LIBL_PFL,LIBL_STADV,
LINT_FEADV,LNBL_OTADV,LOAN_OTADV,ATN_INCAMT,ATTN_LDAY,CUMM_DAYS,DA,LDAY_PL,
LDAY_SL,LIBL_SPL1,LINT_STADV,LNBL_OLADV,LNBL_STADV,OT_AMT,ACT_PF_GRS,
ELECTRIC,ESI_RATE,LDAY_CL,LNBL_SA,LOAN_PJADV,LOAN_SA,PF_E,PF_GROSS,
PTAX,RT_BASIC,ADHOC,ESI_GROSS,GROSSDEDN,HRA,ITAX,LEAVE_ENC,
LIBL_OLADV,LINT_OTADV,LINT_SPL1,LNBL_FEADV,MESS,PEN_GROSS,
SUSP_DEDN,VPF,LIBL_PJADV,LIBL_SPL,LIC,LINT_OLADV,LNBL_PFL,
LNBL_SPL,MEDICAL,MISC_DEDN,PTAX_GROSS,ATTN_HOLD,ATTN_SALD,
CUMM_PF_E,CUMM_VPF,CUM_PFGROS,LIBL_OTADV,LINT_PFL,LNBL_PJADV,
LOAN_STADV,LWF,ATTN_WRKD,BASIC,CLUB,CUMM_PF_C,ESI_E,LINT_SA,LNBL_SPL1,
LOAN_FEADV,LOAN_OLADV,LOAN_SPL,LOAN_SPL1,LTA,OEPF,SPL_ALLOW,VPF_PERC


--PISCOMPONENTASSIGNMENT SYSTF
ADHOC,BASIC,CATEGORYCODE,CLUB,COMPANYCODE,CONV_ALOW,DA,DEPARTMENTCODE,DIVISIONCODE,
EDU_ALLOW,ELEC_CHRG,ESI_E,ESI_RT,FIRE_ALLOW,FPF,FUEL_ALLOW,GRADECODE,HRA_FIXED,
HRA_PER,HR_ALLOW,HR_DEDN,H_WAGES,ITAX,LAUN_ALLOW,LV_ENCASH,LWF,MESS,ME_1,ME_2,ME_3,ME_4,ME_5,ME_6,
MISC_DEDN,NETSALARY,NS_ALLOW,NS_B_RATE,NS_C_RATE,OT_AMT,OT_HRS,PARA_ALLOW,PEN_GROSS,
PFL_EARN,PF_E,PF_GROSS,PTAX,PTAX_GROSS,SAL_ADV,SERV_CHRG,SE_DEPOSIT,SFT_B_DAYS,
SFT_C_DAYS,SICK_ALLOW,SPL_ALLOW,SWEEPER,SYSROWID,TIFFIN,TOKENNO,TOTDEDN,TRANSACTIONTYPE,
UNITCODE,USERNAME,VPF,VPF_PERC,WORKERSERIAL,YEARCODE,YEARMONTH


--PISCOMPONENTASSIGNMENT SYSTF
ADHOC,BASIC,CATEGORYCODE,CLUB,COMPANYCODE,CONV_ALOW,DA,DEPARTMENTCODE,DIVISIONCODE,
ESI_E,GRADECODE,
HRA_PER,HR_DEDN,ITAX,LWF,MESS
MISC_DEDN,NETSALARY,OT_AMT,PEN_GROSS,
PF_E,PF_GROSS,PTAX,PTAX_GROSS,
SPL_ALLOW,SYSROWID,TOKENNO,TOTDEDN,TRANSACTIONTYPE,
UNITCODE,USERNAME,VPF,VPF_PERC,WORKERSERIAL,YEARCODE,YEARMONTH

--PISCOMPONENTASSIGNMENT SYSTF  DELETED

EDU_ALLOW,ELEC_CHRG,ESI_RT,FIRE_ALLOW,FPF,FUEL_ALLOW,
HR_ALLOW,H_WAGES,LAUN_ALLOW,LV_ENCASH,ME_1,ME_2,ME_3,ME_4,ME_5,ME_6,
NS_ALLOW,NS_B_RATE,NS_C_RATE,OT_HRS,PARA_ALLOW,
PFL_EARN,SAL_ADV,SERV_CHRG,SE_DEPOSIT,SFT_B_DAYS,
SFT_C_DAYS,SICK_ALLOW,

SELECT * FROM SYS_TFMAP
WHERE SYS_COLUMNNAME
IN  (
'EDU_ALLOW','ELEC_CHRG','ESI_RT','FIRE_ALLOW','FPF','FUEL_ALLOW',
'HR_ALLOW','H_WAGES','LAUN_ALLOW','LV_ENCASH','ME_1','ME_2','ME_3','ME_4','ME_5','ME_6',
'NS_ALLOW','NS_B_RATE','NS_C_RATE','OT_HRS','PARA_ALLOW','PFL_EARN','SAL_ADV','SERV_CHRG','SE_DEPOSIT','SFT_B_DAYS',
'SFT_C_DAYS','SICK_ALLOW'
)
AND  SYS_TABLENAME_ACTUAL='PISCOMPONENTASSIGNMENT'
AND  SYS_TABLE_SEQUENCIER='10013'


SELECT * FROM SYS_TFMAP WHERE SYS_TABLENAME_ACTUAL='PISCOMPONENTASSIGNMENT'



SELECT * FROM COLS WHERE TABLE_NAME='PISCOMPONENTASSIGNMENT'


GBL_PISCOMPONENTASSIGNMENT


COMPANYCODE, DIVISIONCODE, YEARCODE, YEARMONTH, UNITCODE, DEPARTMENTCODE, CATEGORYCODE, GRADECODE, 
WORKERSERIAL, TOKENNO, TRANSACTIONTYPE, SYSROWID, LASTMODIFIED, USERNAME, BASIC, DA, HRA_GROSS, 
HRA_PER, HRA, PF_GROSS, PEN_GROSS, ESI_GROSS, PTAX_GROSS, PF_E, PF_C, FPF, VPF_PERC, VPF, ESI_E, 
ESI_C, PTAX, LWF, SARR_ARRE, SARR_ARRD, SARR_PF_GROSS, SARR_NPF_GROSS, GROSSEARN, GROSSDEDN, 
MISC_BF, MISC_CF, TOTEARN, TOTDEDN, NETSALARY, LOAN_PFLN, LINT_PFLN, LOAN_SADV, LINT_SADV, 
LOAN_VADV, LINT_VADV, LOAN_HLOAN, LINT_HLOAN, EPF, ITAX, FUEL, OTH_ALLOW, CHILD_ALOW, 
CONV_ALOW, HRA_FIXED, MISC_EARN, ESI_RT, MISC_DEDN, LTA, ADHOC, SPL_ALLOW, NS_HRS, 
OT_HRS, OT_DAYS, NS_ALLOW, OT_AMT, SERV_PERC, SERV_ALW, CONV_PERC, OEPF, OE_NPF, 
ESI_ADJERN, HRA_PERC, ACT_PF_GRS, LIC, ELECTRIC, MESS, LTP, SUSP_DEDN, HRA_AMT, 
ADHOC_NPF, OTHR_DEDN, PROF_BONUS, MEDICAL, LVENCSH_DAYS, LEAVE_ENC, ATN_INCNT, 
ATN_INCAMT, CLUB, CUMM_DAYS, CUM_PFGROS, ESI_RATE, CUMMPFEBAL, CUMMPFCBAL, 
CUMMVPFBAL, RT_BASIC

COMPANYCODE, DIVISIONCODE, YEARCODE, YEARMONTH, UNITCODE, DEPARTMENTCODE, CATEGORYCODE, GRADECODE, 
WORKERSERIAL, TOKENNO, TRANSACTIONTYPE, SYSROWID, OPERATIONMODE, USERNAME, BASIC, PFL_EARN, 
DA, HRA_PER, HR_ALLOW, PF_GROSS, PF_E, ESI_E, ADHOC, SPL_ALLOW,  MESS, OT_HRS, OT_AMT, PEN_GROSS, 
PTAX_GROSS, LWF, VPF_PERC, CLUB, ITAX, HR_DEDN, SERV_CHRG, SE_DEPOSIT, ELEC_CHRG, 
 CONV_ALOW, TOTDEDN, NETSALARY,  FPF, PTAX, 
VPF, MISC_DEDN, SAL_ADV, FIRE_ALLOW, HRA_FIXED, ESI_RT

FIRE_ALLOW,ELEC_CHRG,HR_DEDN, SERV_CHRG, SE_DEPOSIT, EDU_ALLOW, LAUN_ALLOW, 
SFT_B_DAYS, SFT_C_DAYS, NS_B_RATE, NS_C_RATE, NS_ALLOW, H_WAGES
SICK_ALLOW, ME_1, ME_2, ME_3, ME_4, ME_5, ME_6
TIFFIN,SWEEPER, LV_ENCASH, PARA_ALLOW,
SAL_ADV, FIRE_ALLOW, HRA_FIXED, 


'SICK_ALLOW',' ME_1',' ME_2',' ME_3',' ME_4',' ME_5',
'ME_6','TIFFIN','SWEEPER',' LV_ENCASH',' PARA_ALLOW',
'SAL_ADV',' FIRE_ALLOW',' HRA_FIXED'


-------------------------------------------

PRCASSIGNMENT_BF_MAINSAVE
---------------------------------------------------------------------------------------------

LIBL_FEADV
LIBL_OLADV
LIBL_OTADV
LIBL_PFL
LIBL_PJADV
LIBL_SA
LIBL_SPL
LIBL_SPL1
LIBL_STADV
LIC
LINT_SPL
LNBL_FEADV
LNBL_OLADV
LNBL_OTADV
LNBL_PFL
LNBL_PJADV
LNBL_SA
LNBL_SPL
LNBL_SPL1
LNBL_STADV
LOAN_SPL


---------------------------------------------------------------------------------------------

DECLARE 
    LV_STR VARCHAR2(4000);
    LV_STR1 VARCHAR2(4000);
    LV_SQL VARCHAR2(4000);
    LV_TABLENAME VARCHAR2(30);
BEGIN

LV_TABLENAME := 'PISPAYTRANSACTION';

    LV_STR :='ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,ELECTRIC,ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LIBL_FEADV,LIBL_OLADV,LIBL_OTADV,LIBL_PFL,LIBL_PJADV,LIBL_SA,LIBL_SPL,LIBL_SPL1,LIBL_STADV,LIC,LINT_SPL,LNBL_FEADV,LNBL_OLADV,LNBL_OTADV,LNBL_PFL,LNBL_PJADV,LNBL_SA,LNBL_SPL,LNBL_SPL1,LNBL_STADV,LOAN_SPL,LTA,MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,SUSP_DEDN,TOTEARN,VPF,VPF_PERC';
    
    LV_STR1 :='ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,ELECTRIC,ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LTA,MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,SUSP_DEDN,TOTEARN,VPF,VPF_PERC';

DELETE FROM PISCOMPONENTMASTER
WHERE COMPONENTCODE IN 
(
    SELECT COMPCODE FROM
    (
        SELECT COMPCODE FROM (
            select regexp_substr(LV_STR,'[^,]+', 1, level) COMPCODE
            from dual
            connect BY regexp_substr(LV_STR, '[^,]+', 1, level)
            is not null
            ORDER BY COMPCODE
        ) 
        MINUS
        SELECT COMPCODE FROM (
            select regexp_substr(LV_STR1,'[^,]+', 1, level) COMPCODE
            from dual
            connect BY regexp_substr(LV_STR1, '[^,]+', 1, level)
            is not null
            ORDER BY COMPCODE
        )
    )
);

    FOR C1 IN (  
        SELECT WM_CONCAT(COLNAME) COLNAME FROM
        (
            SELECT COLNAME FROM (
                select regexp_substr(LV_STR,'[^,]+', 1, level) COLNAME
                from dual
                connect BY regexp_substr(LV_STR, '[^,]+', 1, level)
                is not null
                ORDER BY COLNAME
            ) 
            MINUS
            SELECT COLNAME FROM (
                select regexp_substr(LV_STR1,'[^,]+', 1, level) COLNAME
                from dual
                connect BY regexp_substr(LV_STR1, '[^,]+', 1, level)
                is not null
                ORDER BY COLNAME
            )
        )
    )
    LOOP
    LV_SQL := 'ALTER TABLE '||LV_TABLENAME||CHR(10);
    LV_SQL := 'DROP ( '||C1.COLNAME||')'||CHR(10);
    
        DBMS_OUTPUT.PUT_LINE(C1.COLNAME);
    END LOOP;
END;


---------------------------------------------------------------------------------------------

SELECT WM_CONCAT(COMPONENTCODE) 
FROM PISCOMPONENTMASTER
ORDER BY COMPANYCODE

ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,
BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,ELECTRIC,
ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,
ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LIBL_FEADV,LIBL_OLADV,LIBL_OTADV,LIBL_PFL,
LIBL_PJADV,LIBL_SA,LIBL_SPL,LIBL_SPL1,LIBL_STADV,LIC,LINT_SPL,LNBL_FEADV,LNBL_OLADV,
LNBL_OTADV,LNBL_PFL,LNBL_PJADV,LNBL_SA,LNBL_SPL,LNBL_SPL1,LNBL_STADV,LOAN_SPL,LTA,
MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,
PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,
SUSP_DEDN,TOTEARN,VPF,VPF_PERC


ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,
BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,ELECTRIC,
ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,
ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LTA,
MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,
PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,
SUSP_DEDN,TOTEARN,VPF,VPF_PERC


------------------------------------------------------
--NEW COMPONENTS
--------------------------------------------------------

ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,
BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,ELECTRIC,
ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,
ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LTA,MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,
OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,
SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,SUSP_DEDN,TOTEARN,VPF,VPF_PERC



select regexp_substr('A1,A2,A4','[^,]+', 1, level)
from dual
connect BY regexp_substr('A1,A2,A4', '[^,]+', 1, level)
is not null;

-------------------------------

ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,
BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,
ELECTRIC,ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,
ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LTA,MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,
OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,
SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,SUSP_DEDN,TOTEARN,VPF,VPF_PERC


---------------------------------------------------------------------------------------------

pisemployeemaster


SELECT * FROM PISCOMPONENTMASTER WHERE COMPONENTTYPE='DEDUCTION'


SELECT * FROM PISCOMPONENTMASTER WHERE COMPONENTTYPE='EARNING'

SELECT * FROM PISCOMPONENTMASTER WHERE PHASE<=5
ORDER BY PHASE, CALCULATIONINDEX

DELETE  fROM PISCOMPONENTMASTER
WHERE COMPONENTCODE IN (
'NS_HRS','OT_HRS','OT_DAYS','SERV_PERC','CONV_PERC','ESI_ADJERN','HRA_AMT','NS_ALLOW','PROF_BONUS','SERV_ALW','ADHOC_NPF'
)



NS_HRS,
OT_HRS,
OT_DAYS,
SERV_PERC,
CONV_PERC
ESI_ADJERN
HRA_AMT
NS_ALLOW
PROF_BONUS
SERV_ALW
ADHOC_NPF


SELECT * FROM PISCOMPONENTMASTER

----------------------------------------------------------------

 
DELETE  fROM PISCOMPONENTMASTER
WHERE COMPONENTCODE IN (
'LWF','MESS','LTP','LOAN_STADV','LINT_STADV','LOAN_OTADV','LINT_OTADV','LOAN_PJADV','LINT_PJADV',
'LOAN_SA','LINT_SA','LOAN_FEADV','LINT_FEADV','LOAN_OLADV','LINT_OLADV','CLUB','LOAN_PFL','LINT_PFL','LOAN_SPL1','LINT_SPL1'
)




LWF
MESS
LTP
LOAN_STADV
LINT_STADV
LOAN_OTADV
LINT_OTADV
LOAN_PJADV
LINT_PJADV
LOAN_SA
LINT_SA
LOAN_FEADV
LINT_FEADV
LOAN_OLADV
LINT_OLADV
CLUB
LOAN_PFL
LINT_PFL
LOAN_SPL1
LINT_SPL1






SELECT * FROM
PISPAYTRANSACTION

ALTER TABLE PISPAYTRANSACTION
DROP COLUMN LINT_SPL1


ALTER TABLE PISPAYTRANSACTION
DROP (LOAN_PFL,LINT_PFL)
 

ALTER TABLE PISPAYTRANSACTION
DROP (
LWF,
MESS,
LTP,
LOAN_STADV,
LINT_STADV,
LOAN_OTADV,
LINT_OTADV,
LOAN_PJADV,
LINT_PJADV,
LOAN_SA,
LINT_SA,
LOAN_FEADV,
LINT_FEADV,
LOAN_OLADV,
LINT_OLADV,
CLUB,
LOAN_PFL,
LINT_PFL,
LOAN_SPL1,
LINT_SPL1)


ALTER TABLE PISCOMPONENTASSIGNMENT
DROP (
LWF,
MESS,
LTP,
LOAN_STADV,
LINT_STADV,
LOAN_OTADV,
LINT_OTADV,
LOAN_PJADV,
LINT_PJADV,
LOAN_SA,
LINT_SA,
LOAN_FEADV,
LINT_FEADV,
LOAN_OLADV,
LINT_OLADV,
CLUB,
LOAN_PFL,
LINT_PFL)




COMPANYCODE, DIVISIONCODE, YEARCODE, YEARMONTH, EFFECT_YEARMONTH, UNITCODE, DEPARTMENTCODE, 
CATEGORYCODE, GRADECODE, WORKERSERIAL, TOKENNO, TRANSACTIONTYPE, PAYMODE, 
ATTN_SALD, ATTN_WPAY, ATTN_ADJD, ATTN_TOTD, ATTN_LDAY, ATTN_CALCF, ATTN_OFFD, ATTN_HOLD, ATTN_WRKD, 
LDAY_CL, LDAY_PL, LDAY_SL, LVBL_CL, LVBL_PL, LVBL_SL, LV_ENCASH_DAYS, LV_ENCASH, 
BASIC, DA, HRA_GROSS, HRA_PER, HRA, PF_GROSS, PEN_GROSS, ESI_GROSS, PTAX_GROSS, 
PF_E, PF_C, FPF, VPF_PERC, VPF, ESI_E, ESI_C, PTAX, ITAX, ESI_RT, 
SARR_ARRE, SARR_ARRD, SARR_PFARRE, SARR_NPFARRE, 
GROSSEARN, GROSSDEDN, MISC_BF, MISC_CF, TOTEARN, TOTDEDN, NETSALARY, SYSROWID, LASTMODIFIED, 
USERNAME, 
ADHOC, SPL_ALLOW, NS_HRS, OT_HRS, OT_DAYS, NS_ALLOW, OT_AMT, SERV_PERC, SERV_ALW, CONV_PERC, 
CONV_ALOW, OEPF, OE_NPF, ESI_ADJERN, HRA_PERC, ACT_PF_GRS, LIC, ELECTRIC, SUSP_DEDN, 
MISC_DEDN, HRA_AMT, ADHOC_NPF, OTHR_DEDN, PROF_BONUS, MEDICAL, LTA, LOAN_SPL, LINT_SPL, 
LNBL_SPL, LIBL_SPL, LNBL_STADV, LIBL_STADV, LNBL_OTADV, LIBL_OTADV, LNBL_PJADV, LIBL_PJADV, 
LNBL_SA, LIBL_SA, LNBL_FEADV, LIBL_FEADV, LNBL_OLADV, LIBL_OLADV, LVENCSH_DAYS, LEAVE_ENC, EPF, 
ATN_INCNT, ATN_INCAMT, CUMM_DAYS, CUM_PFGROS, ESI_RATE, LNBL_PFL, LIBL_PFL, LOAN_SPL1, LNBL_SPL1, 
LIBL_SPL1, CUMM_PF_E, CUMM_PF_C, CUMM_VPF, RT_BASIC, LDAY_CS


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------