
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------

select * from loantransaction
where tokenno='5173'


select * from loanbreakup
where tokenno='5173'
and loandate=to_date('21/01/2020','dd/mm/yyyy')


exec proc_loanblnc('JT0069','0002','12/06/2020','12/06/2020','ADVGN')

SELECT * FROM GBL_LOANBLNC
where tokenno='5173'

P_COMPANYCODE  VARCHAR2,
    P_DIVISIONCODE VARCHAR2,
    P_STARTDATE    VARCHAR2,
    P_ENDDATE      VARCHAR2,    
    P_LOANCODE     VARCHAR2 DEFAULT NULL,
    P_WORKERSERIAL VARCHAR2 DEFAULT NULL,
    P_MODULE       VARCHAR2 DEFAULT 'GPS',
    P_WAGEPROCESS  VARCHAR2 DEFAULT 'NO', 
    P_TRANTYPE     VARCHAR2 DEFAULT 'SALARY' 
	
	
	
	
---------------------------------------------------------------------------------------------
PIS BIRLA LEAVE ENTITLEMENT


---------------------------------------------------------------------------------------------


Insert into PISALLPARAMETER
   (COMPANYCODE, DIVISIONCODE, YEARMONTH, ROUNDOFFRS, PAYMENTROUNDTYPE, 
    SUPERANNUATIONAGEMALE, SUPERANNUATIONAGEFEMALE, MINIMUMSALARYPAYABLE, ESIQUALIFIEDAMOUNT, BANKADVICETO, 
    CUMPFMONTHBETWEEN, PF_E_PERCENTAGE, ESI_E_PERCENT, ESI_C_PERCENT, ESIDEDUCTIONCHECKMONTH, 
    LWFDEDUCTIONMONTH, LOANAMOUNTROUNDOFF, LOANDEDUCTAPPLICABLEWORKDAYS, LOANDEDUCTAPPLICABLECOMPNENT, BONUSPERCENTAGE, 
    BONUSGROSSLIMIT, BONUSAMOUNTLIMIT, BONUSAMOUNTROUNDOFF, NEGATIVELEAVEALLOWED, MAXIMUMPENSIONGROSS, 
    PENSION_PERCENTAGE)
 Values
   ('BJ0056', '0001', '202004', 1, 'BANK', 
    58, 55, 1, 21000, 'XX', 
    '02-03', 10, 1.75, 4.75, '04-10', 
    '06-12', 1, 0, NULL, 20, 
    21000, 7000, 10, 'NO', 15000, 
    8.33);
COMMIT;



---------------------------------------------------------------------------------------------

select * from dynamicwebpage
where menucode='01070206'

select * from userwise_component

pgPISLeaveApplicationEntryWithGridDet_Common





SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%MONTH%')
and PROJECTNAME='PIS'
AND ACTIVE ='Y'



SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%EMPLOYEE%')
and PROJECTNAME='PIS'
AND ACTIVE ='Y'


SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%LEAVE%')
and PROJECTNAME='PIS'
AND ACTIVE ='Y'




UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Transaction/pgPISLeaveApplicationEntryWithGridDet_Common.aspx'
WHERE MENUCODE='0107020402'


UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Transaction/pgPISLeaveApplicationEntryWithGridDet_Common.aspx'
WHERE MENUCODE='0107020403'


UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Transaction/pgPISLeaveApplicationEntryWithGridDet_Common.aspx'
WHERE MENUCODE='0107020403'

PIS/PAGES/Master/pgEmployeeMast_Rate.aspx

UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Master/pgEmployeeMast_Birla.aspx'
WHERE MENUCODE='0107010111'


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10014'


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='PISEMPLOYEEMASTER'


MARITIALSTATUS

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10014'
AND SYS_COLUMNNAME IN ('SUPERANUATIONNUMBER','SUPERANUATIONDATE','CONVEYANCE','RELIGION','PRANNUMBER','GRATUITYNUMBER','FREEUNITELECTRICITY')



EXEC PROC_CREATE_GBL_TMP_TABLES(10014,0)


UPDATE MENUMASTER_RND SET
MENUTAG1 = 'EXTRAINFO'
WHERE MENUCODE='01070202'

EXTRAINFO

SELECT * FROM
PISLEAVEENTITLEMENT

00794

01171

DELETE FROM
PISLEAVEENTITLEMENT

DELETE FROM PISLEAVEAPPLICATION

SELECT * FROM PISLEAVEAPPLICATION


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='PISLEAVEAPPLICATION'

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10008'

GBL_PISLEAVEAPPLICATION

EXEC PROC_CREATE_GBL_TMP_TABLES(10008,0)

 B/LVD/21/00001 DATED : 24/06/2020
 
 B/LVD/21/00002 DATED : 24/06/2020
 
 
 
 SELECT * FROM MENUMASTER_RND
 WHERE UPPER(MENUDESC) LIKE UPPER('%LEAVE%')
 
 
 PIS/PAGES/Transaction/pgPISLeaveApplicationEntry.aspx
 
 0107020403+
 
 
 

UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Transaction/pgPISLeaveApplicationEntryWithGridDet_Common.aspx'
WHERE MENUCODE='0107020403'




SELECT * FROM PFEMPLOYEEMASTER
WHERE DATEOFJOINING=PFJOINDATE

UPDATE PFEMPLOYEEMASTER SET PFJOINDATE=DATEOFJOINING


SELECT * FROM PISEMPLOYEEMASTER
WHERE TOKENNO='00415'

SELECT * FROM PFEMPLOYEEMASTER
WHERE TOKENNO='00415' --28/07/1986


SELECT * FROM PISEMPLOYEEMASTER



UPDATE PFEMPLOYEEMASTER A 
SET PFJOINDATE = 
(
    SELECT PFENTITLEDATE FROM PISEMPLOYEEMASTER WHERE TOKENNO=A.TOKENNO
)
WHERE TOKENNO IN (SELECT DISTINCT TOKENNO FROM PISEMPLOYEEMASTER)




SELECT * FROM SYS_TFMAP
WHERE SYS_COLUMNNAME='PER_ALLOW'


GBL_PISCOMPONENTASSIGNMENT

PISPAYTRANSACTION_SWT


---------------------------------------------------------------------------------------------

Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'GRATUITYNUMBER', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtGRATUITYNUMBER', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'PRANNUMBER', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtPRANNUMBER', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'RELIGION', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtRELIGION', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'SUPERANUATIONDATE', 0, 
    'DATE', 10, 0, 'N', 'mskSUPERANUATIONDATE', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'SUPERANUATIONNUMBER', 0, 
    'VARCHAR2', 30, 0, 'N', 'txtSUPERANUATIONNUMBER', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL);
COMMIT;



---------------------------------------------------------------------------------------------
DROP TABLE BIRLANEW.USERWISE_COMPONENT CASCADE CONSTRAINTS;

CREATE TABLE USERWISE_COMPONENT
(
  COMPANYCODE      VARCHAR2(10 BYTE),
  DIVISIONCODE     VARCHAR2(10 BYTE),
  ACCESS_USRNAME   VARCHAR2(30 BYTE),
  COMPONENTCODE    VARCHAR2(30 BYTE),
  SYSROWID         VARCHAR2(50 BYTE),
  LASTMODIFIED     DATE                         DEFAULT SYSDATE,
  ISACTIVE         VARCHAR2(1 BYTE)             DEFAULT 'Y',
  USERNAME         VARCHAR2(50 BYTE),
  TRANSACTIONTYPE  VARCHAR2(50 BYTE)
)

SELECT * FROM PIS_GTT_SWT_PHASE_DEDN



---------------------------------------------------------------------------------------------
SELECT SYS_COLUMNNAME FROM SYS_TFMAP WHERE SYS_TABLE_SEQUENCIER = 10013
MINUS 
SELECT COMPONENTCODE FROM PISCOMPONENTMASTER

HRA_FIXED
MISC_DEDN
TOTDEDN

select table_name from cols where COLUMN_NAME='PER_ALLOW'







drop table pisothertransaction  

create table  pisothertransaction as select * from pispaytransaction where 1=2
---------------------------------------------------------------------------------------------
select * from menumaster_rnd
where menudesc like 'Employee %aster'

PIS/PAGES/Master/pgPISEmployeeMast.aspx

pisemployeemaster

select * from pisemployeemaster
where esiapplicable='N'



select * from sys_tfmap
where SYS_TABLENAME_ACTUAL='PISEMPLOYEEMASTER'

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10014'


Insert into SYS_TFMAP
   (SYS_TABLE_SEQUENCIER, SYS_TABLENAME_ACTUAL, SYS_TABLENAME_TEMP, SYS_COLUMNNAME, SYS_COLUMN_SEQUENCE, 
    SYS_DATATYPE, SYS_COLUMN_LENGTH, SYS_COLUMN_PRECISION, SYS_KEYCOLUMN, SYS_MAPFIELD, 
    SYS_TIMESTAMP, SYS_USEMAP, SYS_DEFAULT, TDSCODE, IS_EDITABLE)
 Values
   (10014, 'PISEMPLOYEEMASTER', 'GBL_PISEMPLOYEEMASTER', 'ESIAPPLICABLE', 0, 
    'VARCHAR2', 1, 0, 'N', 'txtESIAPPLICABLE', 
    TO_TIMESTAMP('25/11/2016 7:07:37.000000 PM','DD/MM/YYYY fmHH12fm:MI:SS.FF AM'), 'Y', NULL, NULL, 'Y');
COMMIT;

EXEC PROC_CREATE_GBL_TMP_TABLES(10014,0)


---------------------------------------------------------------------------------------------

SELECT  NVL(L_A.SL_LWP,'N') AS SL_LWP ,  NVL(L_A.PL_LWP,'N') AS PL_LWP,EMPMAST.COMPANYCODE,EMPMAST.DIVISIONCODE,ATTN.SYSROWID,ASSIGN.YEARCODE,ASSIGN.YEARMONTH,EMPMAST.UNITCODE,EMPMAST.CATEGORYCODE,EMPMAST.GRADECODE,EMPMAST.WORKERSERIAL,EMPMAST.TOKENNO,EMPMAST.EMPLOYEENAME,EMPMAST.DEPARTMENTCODE,DEPT.DEPARTMENTDESC,CASE WHEN TO_NUMBER(TO_CHAR(EMPMAST.DATEOFJOIN,'YYYYMM'))=TO_NUMBER('202004') THEN (LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')) - EMPMAST.DATEOFJOIN)+1 ELSE TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')),'DD')) END TOTALDAYS,DECODE(NVL(C.CALCULATIONDAYS,0),0,TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')),'DD')),C.CALCULATIONDAYS)  CALCULATIONFACTORDAYS,NVL(ATTN.PRESENTDAYS,NVL(ATTN.SALARYDAYS,CASE WHEN TO_NUMBER(TO_CHAR(EMPMAST.DATEOFJOIN,'YYYYMM'))=TO_NUMBER('202004') THEN (LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')) - EMPMAST.DATEOFJOIN)+1 ELSE DECODE(NVL(C.CALCULATIONDAYS,0),0,TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')),'DD')),C.CALCULATIONDAYS) END  - CASE WHEN ATTN.WITHOUTPAYDAYS IS NULL THEN 0 ELSE NVL(ATTN.WITHOUTPAYDAYS,0) END ) - (NVL(L_A.SL,0) + NVL(L_A.PL,0)) - NVL(ATTN.HOLIDAYS,fn_RtnNoOfApplicableHolidays('BJ0056', '0001', '202004','10','A',EMPMAST.WORKERSERIAL))) AS PRESENTDAYS,NVL(ATTN.SALARYDAYS,CASE WHEN TO_NUMBER(TO_CHAR(EMPMAST.DATEOFJOIN,'YYYYMM'))=TO_NUMBER('202004') THEN (LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')) - EMPMAST.DATEOFJOIN)+1 ELSE DECODE(NVL(DECODE(NVL(C.CALCULATIONDAYS,0),0,TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')),'DD')),C.CALCULATIONDAYS) ,0),0,TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')),'DD')),DECODE(NVL(C.CALCULATIONDAYS,0),0,TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE('01/04/2020','DD/MM/YYYY')),'DD')),C.CALCULATIONDAYS) ) END - CASE WHEN ATTN.WITHOUTPAYDAYS IS NULL THEN 0 ELSE NVL(ATTN.WITHOUTPAYDAYS,0) END )  SALARYDAYS,NVL(ATTN.HOLIDAYS,fn_RtnNoOfApplicableHolidays('BJ0056', '0001', '202004','10','A',EMPMAST.WORKERSERIAL)) HOLIDAYS,L.LV_ENCASH_DAYS,ATTN.WITHOUTPAYDAYS,L_A.PL,L_A.SL 
  FROM PISEMPLOYEEMASTER EMPMAST, PISDEPARTMENTMASTER DEPT, PISCATEGORYMASTER C, 
       ( 
        SELECT * 
          FROM PISCOMPONENTASSIGNMENT 
         WHERE COMPANYCODE='BJ0056' 
           AND DIVISIONCODE='0001' 
           AND TRANSACTIONTYPE='ATTENDANCE' 
           AND WORKERSERIAL||YEARMONTH IN ( 
                                            SELECT WORKERSERIAL||MAX(YEARMONTH) FROM PISCOMPONENTASSIGNMENT 
                                             WHERE COMPANYCODE='BJ0056' AND DIVISIONCODE='0001' 
                                               AND TO_NUMBER(YEARMONTH)=TO_NUMBER('202004') 
                                               AND TRANSACTIONTYPE='ATTENDANCE' 
                                            GROUP BY WORKERSERIAL 
                                          ) 
       ) ASSIGN, PISMONTHATTENDANCE ATTN, 
       ( 
         SELECT WORKERSERIAL, TOKENNO, SUM(LEAVEDAYS) LV_ENCASH_DAYS 
           FROM PISLEAVEAPPLICATION 
          WHERE COMPANYCODE='BJ0056'  
           AND DIVISIONCODE='0001' 
           AND NVL(LEAVEENCASHED,'N')='Y' 
           AND TO_NUMBER(TO_CHAR(LEAVEDATE,'YYYYMM'))=TO_NUMBER('202004') 
         GROUP BY WORKERSERIAL, TOKENNO 
       ) L,
        ( 
          SELECT A.WORKERSERIAL,
         SUM(DECODE(A.LEAVECODE,'PL',A.LEAVEDAYS,0))PL,MAX(DECODE(A.LEAVECODE,'PL',M.WITHOUTPAYLEAVE,'N'))PL_LWP,SUM(DECODE(A.LEAVECODE,'SL',A.LEAVEDAYS,0))SL,MAX(DECODE(A.LEAVECODE,'SL',M.WITHOUTPAYLEAVE,'N'))SL_LWP,TOKENNO
            FROM PISLEAVEAPPLICATION A, PISLEAVEMASTER M
           WHERE A.COMPANYCODE='BJ0056'  
            AND A.DIVISIONCODE='0001' 
            AND A.LEAVESANCTIONEDON IS NOT NULL
            AND TO_NUMBER(TO_CHAR(A.LEAVEDATE,'YYYYMM'))=TO_NUMBER('202004') 
            AND A.COMPANYCODE=M.COMPANYCODE
            AND A.DIVISIONCODE=M.DIVISIONCODE
            AND A.LEAVECODE=M.LEAVECODE
           AND NVL(LEAVEENCASHED,'N')<>'Y' 
          GROUP BY WORKERSERIAL, TOKENNO 
        ) L_A
 WHERE EMPMAST.COMPANYCODE=DEPT.COMPANYCODE 
   AND EMPMAST.DIVISIONCODE=DEPT.DIVISIONCODE 
   AND EMPMAST.DEPARTMENTCODE=DEPT.DEPARTMENTCODE 
   AND EMPMAST.COMPANYCODE=ASSIGN.COMPANYCODE(+) 
   AND EMPMAST.DIVISIONCODE=ASSIGN.DIVISIONCODE(+) 
   AND EMPMAST.TOKENNO=ASSIGN.TOKENNO(+) 
   AND EMPMAST.WORKERSERIAL=ASSIGN.WORKERSERIAL(+) 
   AND EMPMAST.TOKENNO=L.TOKENNO(+) 
   AND EMPMAST.WORKERSERIAL=L.WORKERSERIAL(+) 
   AND EMPMAST.COMPANYCODE=ATTN.COMPANYCODE(+) 
   AND EMPMAST.DIVISIONCODE=ATTN.DIVISIONCODE(+) 
   AND EMPMAST.TOKENNO=ATTN.TOKENNO(+)  
   AND EMPMAST.WORKERSERIAL=ATTN.WORKERSERIAL(+) 
   AND ATTN.YEARMONTH(+)='202004' 
   AND EMPMAST.COMPANYCODE='BJ0056' 
   AND EMPMAST.DIVISIONCODE='0001' 
   AND EMPMAST.COMPANYCODE=C.COMPANYCODE(+) 
   AND EMPMAST.DIVISIONCODE=C.DIVISIONCODE(+) 
   AND EMPMAST.CATEGORYCODE=C.CATEGORYCODE(+)  
   AND EMPMAST.TOKENNO=L_A.TOKENNO(+)  
   AND EMPMAST.WORKERSERIAL=L_A.WORKERSERIAL(+)   
   AND EMPMAST.UNITCODE='01' 
   AND EMPMAST.CATEGORYCODE='10' 
   AND EMPMAST.GRADECODE='A' 
   AND TO_NUMBER(TO_CHAR(EMPMAST.DATEOFJOIN,'YYYYMM'))<=TO_NUMBER('202004') 
   AND TO_NUMBER(NVL(TO_CHAR(EMPMAST.EXTENDEDRETIREDATE,'YYYYMM'),NVL(TO_CHAR(EMPMAST.STATUSDATE,'YYYYMM'),'202004')))>=TO_NUMBER('202004') 
   AND EMPMAST.EMPLOYEESTATUS = 'ACTIVE'   
   
   
   
SELECT * FROM PISLEAVEAPPLICATION

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='PISLEAVEAPPLICATION'

 SELECT A.WORKERSERIAL,
         SUM(DECODE(A.LEAVECODE,'PL',A.LEAVEDAYS,0))PL,MAX(DECODE(A.LEAVECODE,'PL',M.WITHOUTPAYLEAVE,'N'))PL_LWP,SUM(DECODE(A.LEAVECODE,'SL',A.LEAVEDAYS,0))SL,MAX(DECODE(A.LEAVECODE,'SL',M.WITHOUTPAYLEAVE,'N'))SL_LWP,TOKENNO
            FROM PISLEAVEAPPLICATION A, PISLEAVEMASTER M
           WHERE A.COMPANYCODE='BJ0056'  
            AND A.DIVISIONCODE='0001' 
            AND A.LEAVESANCTIONEDON IS NOT NULL
            AND TO_NUMBER(TO_CHAR(A.LEAVEDATE,'YYYYMM'))=TO_NUMBER('202004') 
            AND A.COMPANYCODE=M.COMPANYCODE
            AND A.DIVISIONCODE=M.DIVISIONCODE
            AND A.LEAVECODE=M.LEAVECODE
--           AND NVL(LEAVEENCASHED,'N')<>'Y' 
          GROUP BY WORKERSERIAL, TOKENNO 
          
          
          
		  
		  
---------------------------------------------------------------------------------------------

SELECT MAXIMUMPENSIONGROSS, PENSION_PERCENTAGE, ESI_C_PERCENT 
    INTO lv_MaxPensionGrossAmt, lv_PensionPercentage, lv_ESI_C_Percentage
    FROM PISALLPARAMETER
    WHERE COMPANYCODE = P_COMPCODE AND DIVISIONCODE = P_DIVCODE;
	
---------------------------------------------------------------------------------------------

select * from dynamicwebpage
where menucode='01070206'

select * from userwise_component

pgPISLeaveApplicationEntryWithGridDet_Common





SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%MONTH%')
and PROJECTNAME='PIS'
AND ACTIVE ='Y'


SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%LEAVE%')
and PROJECTNAME='PIS'
AND ACTIVE ='Y'




UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Transaction/pgPISLeaveApplicationEntryWithGridDet_Common.aspx'
WHERE MENUCODE='0107020402'


UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Transaction/pgPISMonthAttendanceWithLeave.aspx'
WHERE MENUCODE='01070202'




UPDATE MENUMASTER_RND SET
MENUTAG1 = 'EXTRAINFO'
WHERE MENUCODE='01070202'

EXTRAINFO

SELECT * FROM
PISLEAVEENTITLEMENT

00794

01171

DELETE FROM
PISLEAVEENTITLEMENT

DELETE FROM PISLEAVEAPPLICATION

SELECT * FROM PISLEAVEAPPLICATION


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='PISLEAVEAPPLICATION'

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10008'

GBL_PISLEAVEAPPLICATION

EXEC PROC_CREATE_GBL_TMP_TABLES(10008,0)

 B/LVD/21/00001 DATED : 24/06/2020
 
 B/LVD/21/00002 DATED : 24/06/2020
 
 
 
 SELECT * FROM MENUMASTER_RND
 WHERE UPPER(MENUDESC) LIKE UPPER('%LEAVE%')
 
 
 PIS/PAGES/Transaction/pgPISLeaveApplicationEntry.aspx
 
 0107020403+
 
 
 

UPDATE MENUMASTER_RND SET
URLSRC = 'PIS/PAGES/Transaction/pgPISLeaveApplicationEntryWithGridDet_Common.aspx'
WHERE MENUCODE='0107020403'


SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='PISEMPLOYEEMASTER'

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLE_SEQUENCIER='10014'
AND SYS_COLUMNNAME IN ('SUPERANUATIONNUMBER','SUPERANUATIONDATE','CONVEYANCE','RELIGION','PRANNUMBER','GRATUITYNUMBER','FREEUNITELECTRICITY')

SUPERANUATIONNUMBER, SUPERANUATIONDATE, CONVEYANCE, RELIGION, PRANNUMBER, GRATUITYNUMBER, FREEUNITELECTRICITY

EXEC PROC_CREATE_GBL_TMP_TABLES(10014,0)




Insert into PISALLPARAMETER
   (COMPANYCODE, DIVISIONCODE, YEARMONTH, ROUNDOFFRS, PAYMENTROUNDTYPE, 
    SUPERANNUATIONAGEMALE, SUPERANNUATIONAGEFEMALE, MINIMUMSALARYPAYABLE, ESIQUALIFIEDAMOUNT, BANKADVICETO, 
    CUMPFMONTHBETWEEN, PF_E_PERCENTAGE, ESI_E_PERCENT, ESI_C_PERCENT, ESIDEDUCTIONCHECKMONTH, 
    LWFDEDUCTIONMONTH, LOANAMOUNTROUNDOFF, LOANDEDUCTAPPLICABLEWORKDAYS, LOANDEDUCTAPPLICABLECOMPNENT, BONUSPERCENTAGE, 
    BONUSGROSSLIMIT, BONUSAMOUNTLIMIT, BONUSAMOUNTROUNDOFF, NEGATIVELEAVEALLOWED, MAXIMUMPENSIONGROSS, 
    PENSION_PERCENTAGE)
 Values
   ('BJ0056', '0001', '202004', 1, 'BANK', 
    58, 55, 1, 21000, 'XX', 
    '02-03', 10, 1.75, 4.75, '04-10', 
    '06-12', 1, 0, NULL, 20, 
    21000, 7000, 10, 'NO', 15000, 
    8.33);
COMMIT;



---------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
AMBOOTIA ABSENT STATEMENT NOT WORKING
---------------------------------------------------------------------------------------------
DROP TABLE GTT_ABSENTSTATEMENT CASCADE CONSTRAINTS;

CREATE GLOBAL TEMPORARY TABLE GTT_ABSENTSTATEMENT
(
  TOKENNO       VARCHAR2(20 BYTE),
  EMPLOYEENAME  VARCHAR2(500 BYTE),
  PERIOD        VARCHAR2(100 BYTE),
  ABSENT        NUMBER(10,2),
  COMPANYNAME   VARCHAR2(100 BYTE),
  DIVISIONNAME  VARCHAR2(100 BYTE),
  FROMDATE      DATE,
  TODATE        DATE,
  EX1           VARCHAR2(1000 BYTE),
  EX2           VARCHAR2(1000 BYTE),
  EX3           NUMBER(10,2),
  EX4           NUMBER(10,2),
  EX5           VARCHAR2(100 BYTE),
  EX6           VARCHAR2(100 BYTE)
)
ON COMMIT PRESERVE ROWS
NOCACHE;

---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
Debasis Dutta call me 

1. In Flexi Division (003) Month 
2. Add ESI Applicable field default value 'Y'

---------------------------------------------------------------------------------------------
ACBILLDETAILS_ENTRY

--
-----------------------------------------------------------------------------------------------------------------------------------------------
-- Employee|     Employee           |Employee's |Employee's  |Employeer's |Share       |Refund  | No.of Days/|         |           |           
--  Code   |     Name               |Amount of  |Contribution|EPF differ  |Pension Fund| of     | Period     |   DLI   |  EE+      |   Gross   
--         |                        |  Wages    |            |between     |Contribution|Advance |  of non    |  Wages  |  ER+PF_E  |   Earn    
--         |                        | ( Rs. )   |   12%      |  8.33%     |   8.33%    |        |contributing|         |           |           
-----------------------------------------------------------------------------------------------------------------------------------------------
--00002     LAXMI NARAYAN DASH          42000.00     5040.00     3790.00      1250.00      0.00      0.00      15000.00    10080.00    78217.00
--'

select * from pispaytransaction


select netsalary, totearn,pf_gross,pf_c from pispaytransaction

select netsalary, totearn,pf_gross,pf_c, epf from pispaytransaction

select netsalary, totearn,pf_gross,pf_c, pf_e from pispaytransaction


select 1950/16250 from dual

---------------------------------------------------------------------------------------------


CREATE TABLE GTT_PFSTATEMENET_EDLI AS
SELECT A.COMPANYCODE,A.DIVISIONCODE, C.COMPANYNAME,D.DIVISIONNAME ,A.TOKENNO,A.EMPLOYEENAME, WAGESAMT, PF_E, EPF_DIFFER, SHARE_PF,
ADV_REFUND, NOOFDAYS_NC, DLI,(PF_E+EPF_DIFFER+SHARE_PF) EE_ER_PFE, GROSSEARN, C.COMPANYADDRESS,D.DIVISIONADDRESS 
FROM PISEMPLOYEEMASTER A, 
(
SELECT COMPANYCODE,DIVISIONCODE,TOKENNO, NVL(PF_GROSS,0) WAGESAMT, NVL(PF_E,0) PF_E,
CEIL(PF_GROSS*0.09024) EPF_DIFFER,CEIL(PF_GROSS*(0.12-0.09024)) SHARE_PF,
0 ADV_REFUND, 0 NOOFDAYS_NC, 0 DLI,0 EE_ER_PFE, GROSSEARN 
FROM PISPAYTRANSACTION
WHERE COMPANYCODE='0001'
AND DIVISIONCODE='001'
) B,COMPANYMAST C, DIVISIONMASTER D
WHERE A.COMPANYCODE='0001'
AND A.DIVISIONCODE='001' 
AND A.COMPANYCODE=B.COMPANYCODE
AND A.DIVISIONCODE=B.DIVISIONCODE
AND A.TOKENNO=B.TOKENNO
AND A.COMPANYCODE=C.COMPANYCODE
AND A.COMPANYCODE=D.COMPANYCODE
AND A.DIVISIONCODE=D.DIVISIONCODE


SELECT * FROM GTT_PFSTATEMENT_SUMMARY


SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%pay slip%')

SELECT * FROM MENUMASTER_RND
WHERE MENUCODE = '0107030313'



Insert into MENUMASTER_RND
(MENUCODE, MENUNAME, MENUDESC, MENUTYPE, MENUTAG, 
MENUTAG1, MENUTAG2, ENTRYPOSSIBLE, EDITPOSSIBLE, DELETEPOSSIBLE, 
REPORTSPOSSIBLE, UTILITIESPOSSIBLE, ACTIVE, PROJECTNAME, MENUDETAILS, 
EFFECTIVEDIVISION, EFFECTIVEINDIVISION, PROCEDURE_SAVE_EDIT, URLSRC, FRM_HEIGHT, 
FRM_WIDTH, FUNCTIONCALL_BEFORE, FUNCTIONCALL_AFTER, VIEWPOSSIBLE, PRINTPOSSIBLE, 
DOCDATEVALIDATEFIELD, KEY_TABLE)
Values
('0107030314', NULL, 'PF Statement Summary', 'REPORTS', 'PIS PF STATEMENT SUMMARY', 
NULL, NULL, 'N', 'N', 'N', 
'Y', 'N', 'Y', 'PIS', NULL, 
NULL, '''0001'',''0002'',''0003'',''0004'',''0005''', NULL, 'PIS/Pages/Report/pgReportPISTemplate.aspx', NULL, 
NULL, NULL, NULL, NULL, NULL, 
NULL, NULL);
COMMIT;


SELECT * FROM ROLEDETAILS
WHERE MENUCODE = '0107030313'

Insert into ROLEDETAILS
(ROLEID, MENUCODE, ACCESSENTRY, ACCESSEDIT, ACCESSDELETE, 
ACCESSREPORT, ACCESSUTILITIES, ACCESSVIEW, ACCESSPRINT, PROJECTNAME, 
SYSROWID)
Values
('54', '0107030314', 'X', 'X', 'X', 
'Y', 'X', 'X', 'X', 'PIS', 
'201909091126350008465562');
Insert into ROLEDETAILS
(ROLEID, MENUCODE, ACCESSENTRY, ACCESSEDIT, ACCESSDELETE, 
ACCESSREPORT, ACCESSUTILITIES, ACCESSVIEW, ACCESSPRINT, PROJECTNAME, 
SYSROWID)
Values
('1', '0107030314', 'X', 'X', 'X', 
'Y', 'X', 'X', 'X', 'PIS', 
'202005271045580008869987');
Insert into ROLEDETAILS
(ROLEID, MENUCODE, ACCESSENTRY, ACCESSEDIT, ACCESSDELETE, 
ACCESSREPORT, ACCESSUTILITIES, ACCESSVIEW, ACCESSPRINT, PROJECTNAME, 
SYSROWID)
Values
('25', '0107030314', 'X', 'X', 'X', 
'Y', 'X', 'X', 'X', 'PIS', 
'202006171017100008930945');
COMMIT;


SELECT * FROM REPORTPARAMETERMASTER
WHERE REPORTTAG='PIS PAY SLIP ED'

Insert into REPORTPARAMETERMASTER
(MODULENAME, REPORTTAG, REPORTTAG1, REPORTTAG2, REPORTTAG3, 
MAINTABLE, SUBREPORTTABLE, SUBREPORTTABLE1, SUBREPORTTABLE2, SUBREPORTTABLE3, 
SUBREPORTTABLE4, REPORTNAME)
Values
('PIS', 'PIS PF STATEMENT SUMMARY', NULL, NULL, NULL, 
'GTT_PFSTATEMENT_SUMMARY', NULL, NULL, NULL, NULL, 
NULL, 'PIS/Pages/Report/Transaction/rptPFSTATEMENTSUMMARY.rdlc');
COMMIT;


UPDATE MENUMASTER_RND SET
MENUTAG ='PF STATEMENET EDLI GROSS'
WHERE MENUCODE='0107030314'


UPDATE REPORTPARAMETERMASTER SET
REPORTTAG ='PF STATEMENET EDLI GROSS'
WHERE REPORTTAG='PIS PF STATEMENT SUMMARY'


UPDATE REPORTPARAMETERMASTER SET
MAINTABLE ='GTT_PFSTATEMENET_EDLI'
WHERE REPORTTAG='PF STATEMENET EDLI GROSS'



Case "PF STATEMENET EDLI GROSS"
                
exec PROC_RPT_PIS_PFSTATEMENET_EDLI('0001','001','2020-2021','202004','''001''','','','')

exec PROC_RPT_PIS_PFSTATEMENET_EDLI('0001','001','2020-2021','202004','','','','''000003''')


INSERT INTO GTT_PFSTATEMENET_EDLI (COMPANYCODE, DIVISIONCODE, COMPANYNAME, DIVISIONNAME, TOKENNO, EMPLOYEENAME, WAGESAMT, PF_E, EPF_DIFFER, SHARE_PF, ADV_REFUND, NOOFDAYS_NC, DLI, EE_ER_PFE, GROSSEARN, COMPANYADDRESS, DIVISIONADDRESS)

SELECT A.COMPANYCODE,A.DIVISIONCODE, C.COMPANYNAME,D.DIVISIONNAME ,A.TOKENNO,A.EMPLOYEENAME, WAGESAMT, PF_E, EPF_DIFFER, SHARE_PF,
ADV_REFUND, NOOFDAYS_NC, DLI,(PF_E+EPF_DIFFER+SHARE_PF) EE_ER_PFE, GROSSEARN, C.COMPANYADDRESS,D.DIVISIONADDRESS 
FROM PISEMPLOYEEMASTER A, 
(
    SELECT COMPANYCODE,DIVISIONCODE,TOKENNO, NVL(PF_GROSS,0) WAGESAMT, NVL(PF_E,0) PF_E,
    CEIL( NVL(PF_E,0) - ROUND( NVL(PEN_GROSS,0)*(8.33/100),0)) EPF_DIFFER,ROUND(NVL(PEN_GROSS,0)*(8.33/100),0) SHARE_PF,
    0 ADV_REFUND, 0 NOOFDAYS_NC, NVL(PEN_GROSS,0) DLI,0 EE_ER_PFE, GROSSEARN 
    FROM PISPAYTRANSACTION
    WHERE COMPANYCODE='0001'
    AND DIVISIONCODE='001' 
    AND UNITCODE IN ('001') 
    AND YEARMONTH = '202004'
) B,COMPANYMAST C, DIVISIONMASTER D
WHERE A.COMPANYCODE='0001'
AND A.DIVISIONCODE='001' 
AND A.COMPANYCODE=B.COMPANYCODE
AND A.DIVISIONCODE=B.DIVISIONCODE
AND A.TOKENNO=B.TOKENNO
AND A.COMPANYCODE=C.COMPANYCODE
AND A.COMPANYCODE=D.COMPANYCODE
AND A.DIVISIONCODE=D.DIVISIONCODE

PROC_RPT_PIS_PFSTATEMENET_EDLI


select * from pispaytransaction



select * from pisemployeemaster
where employeename like 'LAX%'

SELECT * FROM 
PISCOMPONENTASSIGNMENT
WHERE TOKENNO ='C1004'


SELECT * FROM 
pispaytransaction
WHERE TOKENNO ='C1004'



exec PROC_RPT_PIS_PFSTATEMENET_EDLI('0001','001','2020-2021','202004','''001''','','','')
 



---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------


2. Add ESI Applicable field default value 'Y'
----------------------------------------------
SELECT * FROM PISEMPLOYEEMASTER

ALTER TABLE PISEMPLOYEEMASTER
ADD ESIAPPLICABLE VARCHAR2(1)

UPDATE PISEMPLOYEEMASTER SET 
ESI_APPLICABLE ='Y'

SELECT * FROM PISCOMPONENTMASTER
WHERE COMPONENTCODE LIKE 'ESI%'

PISCOMP.ESI_GROSS*0.0325

ESI_E
---------------------
CASE WHEN PISCOMP.BASIC > 0 AND NVL(PISMAST.ESIAPPLICABLE,'Y')= 'Y' THEN PISCOMP.ESI_GROSS*0.0075 ELSE 0 END 



---------------------------------------------------------------------------------------------

SELECT * FROM COLS


SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%MONTH ATTEN%')

PISCOMPONENTMASTER


PISTEMPMAST

SELECT * FROM PIS_ERROR_LOG

PRC_PIS_SALARY_PROCESS


select COMPANYCODE, DIVISIONCODE, PROCESSTYPE, PROCEDURE_NAME, PHASE, CALCULATIONINDEX, PARAM_1, PARAM_2, PARAM_3 
                            from WAGESPROCESSTYPE_PHASE  
                            where COMPANYCODE = '0001' 
                              and DIVISIONCODE = '001'
                              and PROCESSTYPE = 'SALARY'
                            ORDER BY PHASE, CALCULATIONINDEX


PRC_PISSALARYPROCESS_INSERT
PRC_PISSALARY_WRKDAY_LV_UPDT
PRC_PISSALARYPROCESS_UPDATE
PRC_PISSALARYPROCESS_UPDATE
PRC_PISSALARYPROCESS_UPDATE
PRC_PISSALARYPROCESS_UPDATE
PRC_PISSALARYPROCESS_UPDATE
PRC_PISSALARYPROCESS_DEDN
PRC_PISSALARYPROCESS_UPDATE
PRC_PISSALARY_OTHCOMP_UPDATE
PRC_PISSALARYPROCESS_TRANSFER


---------------------------------------------------------------------------------------------
SELECT * FROM PISEMPLOYEEMASTER

ALTER TABLE PISEMPLOYEEMASTER
ADD ESI_APPLICABLE VARCHAR2(1)

UPDATE PISEMPLOYEEMASTER SET 
ESI_APPLICABLE ='Y'

SELECT * FROM PISCOMPONENTMASTER
WHERE COMPONENTCODE LIKE 'ESI%'

PISCOMP.ESI_GROSS*0.0325


---------------------------------------------------------------------------------------------
/* Formatted on 19/06/2020 1:55:01 PM (QP5 v5.326) */
  SELECT *
    FROM (SELECT NVL (L_A.PL_LWP, 'N')
                     AS PL_LWP,
                 NVL (L_A.SL_LWP, 'N')
                     AS SL_LWP,
                 EMPMAST.COMPANYCODE,
                 EMPMAST.DIVISIONCODE,
                 ATTN.SYSROWID,
                 ASSIGN.YEARCODE,
                 ASSIGN.YEARMONTH,
                 EMPMAST.UNITCODE,
                 EMPMAST.CATEGORYCODE,
                 EMPMAST.GRADECODE,
                 EMPMAST.WORKERSERIAL,
                 EMPMAST.TOKENNO,
                 EMPMAST.EMPLOYEENAME,
                 EMPMAST.DEPARTMENTCODE,
                 DEPT.DEPARTMENTDESC,
                 CASE
                     WHEN TO_NUMBER (TO_CHAR (EMPMAST.DATEOFJOIN, 'YYYYMM')) =
                          TO_NUMBER ('202004')
                     THEN
                           (  LAST_DAY (TO_DATE ('01/04/2020', 'DD/MM/YYYY'))
                            - EMPMAST.DATEOFJOIN)
                         + 1
                     ELSE
                         TO_NUMBER (
                             TO_CHAR (
                                 LAST_DAY (
                                     TO_DATE ('01/04/2020', 'DD/MM/YYYY')),
                                 'DD'))
                 END
                     TOTALDAYS,
                 DECODE (
                     NVL (C.CALCULATIONDAYS, 0),
                     0, TO_NUMBER (
                            TO_CHAR (
                                LAST_DAY (TO_DATE ('01/04/2020', 'DD/MM/YYYY')),
                                'DD')),
                     C.CALCULATIONDAYS)
                     CALCULATIONFACTORDAYS,
                 NVL (
                     ATTN.PRESENTDAYS,
                       NVL (
                           ATTN.SALARYDAYS,
                             CASE
                                 WHEN TO_NUMBER (
                                          TO_CHAR (EMPMAST.DATEOFJOIN,
                                                   'YYYYMM')) =
                                      TO_NUMBER ('202004')
                                 THEN
                                       (  LAST_DAY (
                                              TO_DATE ('01/04/2020',
                                                       'DD/MM/YYYY'))
                                        - EMPMAST.DATEOFJOIN)
                                     + 1
                                 ELSE
                                     DECODE (
                                         NVL (C.CALCULATIONDAYS, 0),
                                         0, TO_NUMBER (
                                                TO_CHAR (
                                                    LAST_DAY (
                                                        TO_DATE ('01/04/2020',
                                                                 'DD/MM/YYYY')),
                                                    'DD')),
                                         C.CALCULATIONDAYS)
                             END
                           - CASE
                                 WHEN ATTN.WITHOUTPAYDAYS IS NULL THEN 0
                                 ELSE NVL (ATTN.WITHOUTPAYDAYS, 0)
                             END)
                     - (NVL (L_A.PL, 0) + NVL (L_A.SL, 0))
                     - NVL (
                           ATTN.HOLIDAYS,
                           fn_RtnNoOfApplicableHolidays ('0001',
                                                         '003',
                                                         '202004',
                                                         '01',
                                                         '01',
                                                         EMPMAST.WORKERSERIAL)))
                     AS PRESENTDAYS,
                 NVL (
                     ATTN.SALARYDAYS,
                       CASE
                           WHEN TO_NUMBER (
                                    TO_CHAR (EMPMAST.DATEOFJOIN, 'YYYYMM')) =
                                TO_NUMBER ('202004')
                           THEN
                                 (  LAST_DAY (
                                        TO_DATE ('01/04/2020', 'DD/MM/YYYY'))
                                  - EMPMAST.DATEOFJOIN)
                               + 1
                           ELSE
                               DECODE (
                                   NVL (
                                       DECODE (
                                           NVL (C.CALCULATIONDAYS, 0),
                                           0, TO_NUMBER (
                                                  TO_CHAR (
                                                      LAST_DAY (
                                                          TO_DATE (
                                                              '01/04/2020',
                                                              'DD/MM/YYYY')),
                                                      'DD')),
                                           C.CALCULATIONDAYS),
                                       0),
                                   0, TO_NUMBER (
                                          TO_CHAR (
                                              LAST_DAY (
                                                  TO_DATE ('01/04/2020',
                                                           'DD/MM/YYYY')),
                                              'DD')),
                                   DECODE (
                                       NVL (C.CALCULATIONDAYS, 0),
                                       0, TO_NUMBER (
                                              TO_CHAR (
                                                  LAST_DAY (
                                                      TO_DATE ('01/04/2020',
                                                               'DD/MM/YYYY')),
                                                  'DD')),
                                       C.CALCULATIONDAYS))
                       END
                     - CASE
                           WHEN ATTN.WITHOUTPAYDAYS IS NULL THEN 0
                           ELSE NVL (ATTN.WITHOUTPAYDAYS, 0)
                       END)
                     SALARYDAYS,
                 NVL (ATTN.HOLIDAYS,
                      fn_RtnNoOfApplicableHolidays ('0001',
                                                    '003',
                                                    '202004',
                                                    '01',
                                                    '01',
                                                    EMPMAST.WORKERSERIAL))
                     HOLIDAYS,
                 ATTN.NOOFOFFDAYS,
                 ATTN.WITHOUTPAYDAYS,
                 L_A.SL,
                 L_A.PL,
                 ASSIGN.LOP,
                 ASSIGN.SHIFT_A,
                 ASSIGN.SHIFT_B,
                 ASSIGN.SHIFT_C,
                 ASSIGN.CONV_ALW,
                 ASSIGN.ATN_INCTV,
                 ASSIGN.PUNC_ALW,
                 ASSIGN.ATN_ALW,
                 ASSIGN.WASH_ALW,
                 ASSIGN.EDU_ALW,
                 ASSIGN.CLEAN_ALW,
                 ASSIGN.LGBK_ALW,
                 ASSIGN.INSP_ALW,
                 ASSIGN.CHRG_HAND,
                 ASSIGN.PERF_ALW,
                 ASSIGN.MISC_DEDN,
                 ASSIGN.CANTEEN
            FROM PISEMPLOYEEMASTER  EMPMAST,
                 PISDEPARTMENTMASTER DEPT,
                 PISCATEGORYMASTER  C,
                 (SELECT *
                    FROM PISCOMPONENTASSIGNMENT
                   WHERE     COMPANYCODE = '0001'
                         AND DIVISIONCODE = '003'
                         AND TRANSACTIONTYPE = 'ATTENDANCE'
                         AND WORKERSERIAL || YEARMONTH IN
                                 (  SELECT WORKERSERIAL || MAX (YEARMONTH)
                                      FROM PISCOMPONENTASSIGNMENT
                                     WHERE     COMPANYCODE = '0001'
                                           AND DIVISIONCODE = '003'
                                           AND TO_NUMBER (YEARMONTH) =
                                               TO_NUMBER ('202004')
                                           AND TRANSACTIONTYPE = 'ATTENDANCE'
                                  GROUP BY WORKERSERIAL)) ASSIGN,
                 PISMONTHATTENDANCE ATTN,
                 (  SELECT WORKERSERIAL, TOKENNO, SUM (LEAVEDAYS) LV_ENCASH_DAYS
                      FROM PISLEAVEAPPLICATION
                     WHERE     COMPANYCODE = '0001'
                           AND DIVISIONCODE = '003'
                           AND NVL (LEAVEENCASHED, 'N') = 'Y'
                           AND TO_NUMBER (TO_CHAR (LEAVEDATE, 'YYYYMM')) =
                               TO_NUMBER ('202004')
                  GROUP BY WORKERSERIAL, TOKENNO) L,
                 (  SELECT A.WORKERSERIAL,
                           SUM (DECODE (A.LEAVECODE, 'PL', A.LEAVEDAYS, 0))
                               PL,
                           MAX (
                               DECODE (A.LEAVECODE, 'PL', M.WITHOUTPAYLEAVE, 'N'))
                               PL_LWP,
                           SUM (DECODE (A.LEAVECODE, 'SL', A.LEAVEDAYS, 0))
                               SL,
                           MAX (
                               DECODE (A.LEAVECODE, 'SL', M.WITHOUTPAYLEAVE, 'N'))
                               SL_LWP,
                           TOKENNO
                      FROM PISLEAVEAPPLICATION A, PISLEAVEMASTER M
                     WHERE     A.COMPANYCODE = '0001'
                           AND A.DIVISIONCODE = '003'
                           AND A.LEAVESANCTIONEDON IS NOT NULL
                           AND TO_NUMBER (TO_CHAR (A.LEAVEDATE, 'YYYYMM')) =
                               TO_NUMBER ('202004')
                           AND A.COMPANYCODE = M.COMPANYCODE
                           AND A.DIVISIONCODE = M.DIVISIONCODE
                           AND A.LEAVECODE = M.LEAVECODE
                           AND NVL (LEAVEENCASHED, 'N') <> 'Y'
                  GROUP BY WORKERSERIAL, TOKENNO) L_A
           WHERE     EMPMAST.COMPANYCODE = DEPT.COMPANYCODE
                 AND EMPMAST.DIVISIONCODE = DEPT.DIVISIONCODE
                 AND EMPMAST.DEPARTMENTCODE = DEPT.DEPARTMENTCODE
                 AND EMPMAST.COMPANYCODE = ASSIGN.COMPANYCODE(+)
                 AND EMPMAST.DIVISIONCODE = ASSIGN.DIVISIONCODE(+)
                 AND EMPMAST.TOKENNO = ASSIGN.TOKENNO(+)
                 AND EMPMAST.WORKERSERIAL = ASSIGN.WORKERSERIAL(+)
                 AND EMPMAST.TOKENNO = L.TOKENNO(+)
                 AND EMPMAST.WORKERSERIAL = L.WORKERSERIAL(+)
                 AND EMPMAST.COMPANYCODE = ATTN.COMPANYCODE(+)
                 AND EMPMAST.DIVISIONCODE = ATTN.DIVISIONCODE(+)
                 AND EMPMAST.TOKENNO = ATTN.TOKENNO(+)
                 AND EMPMAST.WORKERSERIAL = ATTN.WORKERSERIAL(+)
                 AND ATTN.YEARMONTH(+) = '202004'
                 AND EMPMAST.COMPANYCODE = '0001'
                 AND EMPMAST.DIVISIONCODE = '003'
                 AND EMPMAST.COMPANYCODE = C.COMPANYCODE(+)
                 AND EMPMAST.DIVISIONCODE = C.DIVISIONCODE(+)
                 AND EMPMAST.CATEGORYCODE = C.CATEGORYCODE(+)
                 AND EMPMAST.TOKENNO = L_A.TOKENNO(+)
                 AND EMPMAST.WORKERSERIAL = L_A.WORKERSERIAL(+)
                 AND EMPMAST.UNITCODE = '003'
                 AND EMPMAST.CATEGORYCODE = '01'
                 AND EMPMAST.GRADECODE = '01'
                 AND TO_NUMBER (TO_CHAR (EMPMAST.DATEOFJOIN, 'YYYYMM')) <=
                     TO_NUMBER ('202004')
                 AND TO_NUMBER (
                         NVL (
                             TO_CHAR (EMPMAST.EXTENDEDRETIREDATE, 'YYYYMM'),
                             NVL (TO_CHAR (EMPMAST.STATUSDATE, 'YYYYMM'),
                                  '202004'))) >=
                     TO_NUMBER ('202004')
                 AND EMPMAST.EMPLOYEESTATUS = 'ACTIVE')
ORDER BY TOKENNO
---------------------------------------------------------------------------------------------

SELECT COMPONENT, COLUMN_NAME FROM (
SELECT 'PISMAST.'||COLUMN_NAME COMPONENT, COLUMN_NAME FROM COLS WHERE TABLE_NAME = 'PISMAST' AND COLUMN_NAME NOT IN ('COMPANYCODE','DIVISIONCODE',<<COLUMN_NAME>>) 
UNION ALL
SELECT 'PISASSIGN.'||COLUMN_NAME COMPONENT, COLUMN_NAME FROM COLS WHERE TABLE_NAME = 'PISASSIGN' AND COLUMN_NAME NOT IN ('COMPANYCODE','DIVISIONCODE',<<COLUMN_NAME>>) 
UNION ALL
SELECT 'PISATTN.'||COLUMN_NAME COMPONENT, COLUMN_NAME FROM COLS WHERE TABLE_NAME = 'PISATTN'  AND COLUMN_NAME NOT IN ('COMPANYCODE','DIVISIONCODE',<<COLUMN_NAME>>) 
UNION ALL
SELECT 'PISCOMP.'||COLUMN_NAME COMPONENT, COLUMN_NAME FROM COLS WHERE TABLE_NAME = 'PISCOMP' AND COLUMN_NAME NOT IN ('COMPANYCODE','DIVISIONCODE',<<COLUMN_NAME>>)
UNION ALL
SELECT 'PISPREV.'||COLUMN_NAME COMPONENT, COLUMN_NAME FROM COLS WHERE TABLE_NAME = 'PISPREV' AND COLUMN_NAME NOT IN ('COMPANYCODE','DIVISIONCODE',<<COLUMN_NAME>>)  
) WHERE 1=1 ORDER BY COLUMN_NAME

PISMAST

---------------------------------------------------------------------------------------------


 
 SELECT COL_TO_DISPLAY  FROM SYS_RPT_QRY  WHERE COMPANYCODE='0001'  
 
 
 SELECT DISTINCT COMPONENTCODE, COMPONENTSHORTNAME, PHASE, CALCULATIONINDEX 
  FROM PISCOMPONENTMASTER 
 WHERE COMPANYCODE='0001' 
   AND DIVISIONCODE ='001' 
   AND YEARMONTH <= '202004' 
UNION ALL
SELECT DISTINCT 'MISC_BF' COMPONENTCODE, 'MISC BF' COMPONENTSHORTNAME, 9999 PHASE,99999 CALCULATIONINDEX FROM DUAL

SELECT * FROM 
PISCOMPONENTASSIGNMENT
WHERE 1=1
--AND TOKENNO='00134'
AND NVL(HRA_PER,0) > 0


UPDATE PISCOMPONENTASSIGNMENT SET 
HRA_PER = 25


---------------------------------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE PRC_OUTPUT_TEST(P_IN IN  VARCHAR2, P_OUT OUT VARCHAR2)
AS
BEGIN
P_OUT := P_IN;

DBMS_OUTPUT.PUT_LINE('P_IN = '|| P_IN);
DBMS_OUTPUT.PUT_LINE('P_OUT = '|| P_OUT);
END;
/

DECLARE
LV_IN VARCHAR2(100);
LV_OUT VARCHAR2(100);

BEGIN

LV_IN := 'TEST';
PRC_OUTPUT_TEST(LV_IN, LV_OUT);

DBMS_OUTPUT.PUT_LINE(LV_OUT);

END;

---------------------------------------------------------------------------------------------------------------

--BIRLA

SELECT * FROM SYS_TFMAP
WHERE SYS_TABLENAME_ACTUAL='PISEMPLOYEEMASTER'

UPDATE SYS_TFMAP SET
SYS_COLUMNNAME='MARITIALSTATUS'
WHERE SYS_TABLENAME_ACTUAL='PISEMPLOYEEMASTER'
AND SYS_COLUMNNAME='MARRIED'

EXEC PROC_CREATE_GBL_TMP_TABLES(10014,0)

---------------------------------------------------------------------------------------------

--LUDLOW UPDATE


---------------------------------------------------------------------------------------------------------------

CREATE TABLE FILE_ID
(
  FILE_ID        VARCHAR2(100 BYTE),
  DATA_FILE      BLOB,
  FILE_TYPE      VARCHAR2(100 BYTE),
  UID_DATE       DATE                           DEFAULT SYSDATE,
  FILE_MENUCODE  VARCHAR2(50 BYTE)
)

---------------------------------------------------------------------------------------------------------------

CREATE OR REPLACE procedure prc_upload_key_wise_document
(
    p_keyTable varchar2
)
as
lv_cnt                  number;
lv_result               varchar2(10);
lv_error_remark         varchar2(4000) := '';
lv_master               gbl_sys_upload_memo%rowtype;
lv_dbuser               varchar2(50);
lv_dbtable              varchar2(30);
lv_sql                  varchar2(4000) :='';
lv_keycols              varchar2(4000) :='';
begin
    lv_result:='#SUCCESS#';
    
    select count(*)
    into lv_cnt
    from gbl_sys_upload_memo;
    
    if lv_cnt > 0  then
       lv_keycols := fn_get_Key_column_names(p_keyTable);
       lv_sql := 'select distinct ' || replace(lv_keycols,',','||'',''||') || ' from ' || p_keyTable;
       execute immediate lv_sql into lv_keycols;
       
       update gbl_sys_upload_memo set key_column=lv_keycols,
                                      uid_date=nvl(uid_date,trunc(sysdate));
        
       for c1 in (    
                   select distinct db_username, tablename
                   from gbl_sys_upload_memo
                 )
       loop
            select count(*) into lv_cnt from dba_tables 
            where upper(owner) = upper(c1.db_username)
            and upper(table_name) = upper(c1.tablename)
            and nvl(status,'XX')='VALID';
            
            if lv_cnt=0 then
                lv_sql := 'CREATE TABLE ' || c1.db_username||'.'||c1.tablename || chr(10);
                lv_sql := lv_sql || '(' || chr(10);
                lv_sql := lv_sql || 'UID_NO VARCHAR2(200), ' || chr(10);
                lv_sql := lv_sql || 'UID_DATE DATE, ' || chr(10);
                lv_sql := lv_sql || 'DATA_FILE BLOB, ' || chr(10);
                lv_sql := lv_sql || 'DATA_TYPE VARCHAR2(50), ' || chr(10);
                lv_sql := lv_sql || 'MODULE VARCHAR2(100), ' || chr(10);
                lv_sql := lv_sql || 'LASTMODIFIED DATE DEFAULT SYSDATE ' || chr(10);
                lv_sql := lv_sql || ')' || chr(10);
                execute immediate lv_sql;
            end if;
            
            for c2 in (
                        select a.uid_no, a.uid_date, a.key_column, b.data_file, b.file_type, a.module, a.operationmode
                        from gbl_sys_upload_memo a, file_id b
                        where a.uid_no=b.file_id
                      )
            loop
                lv_sql := 'DELETE FROM ' || c1.db_username||'.'||c1.tablename || ' WHERE UID_NO = '''|| c2.uid_no||''' ';
                execute immediate lv_sql;
                
                if c2.operationmode <> 'D' then
                    lv_sql := 'insert into ' || c1.db_username||'.'||c1.tablename || ' (uid_no, uid_date, data_file, data_type, module) ' || chr(10);
                    lv_sql := lv_sql || 'select a.uid_no, a.uid_date, b.data_file, b.file_type, a.module ' || chr(10);
                    lv_sql := lv_sql || 'from gbl_sys_upload_memo a, file_id b ' || chr(10);
                    lv_sql := lv_sql || 'where a.uid_no=b.file_id ' || chr(10);
                    lv_sql := lv_sql || 'and a.uid_no='''||c2.uid_no||''' ';
                    execute immediate lv_sql;
                end if;
                
                delete from file_id where file_id=c2.uid_no;
            end loop;
       end loop;
       --proc_sd_GTTVSACTUAL_sync('GBL_SYS_UPLOAD_MEMO', 'M');
    end if;      
end;
/


---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------


CREATE TABLE USERWISE_DATA_ACCESS
(
  COMPANYCODE    VARCHAR2(10 BYTE),
  DIVISIONCODE   VARCHAR2(10 BYTE),
  MENUCODE       VARCHAR2(50 BYTE),
  LOGINID        VARCHAR2(10 BYTE),
  KEYFIELD       VARCHAR2(30 BYTE),
  KEYFIELDVALUE  VARCHAR2(100 BYTE),
  USERNAME       VARCHAR2(50 BYTE),
  LASTMODIFIED   DATE                           DEFAULT SYSDATE,
  SYSROWID       VARCHAR2(50 BYTE)
)


---------------------------------------------------------------------------------------------------------------


CREATE OR REPLACE FUNCTION FN_USERWISE_DATA_ACCESS(P_COMPCODE VARCHAR2, P_DIVCODE VARCHAR2, P_MENUCODE VARCHAR2, P_USER VARCHAR2, P_KEYCODE VARCHAR2, P_KEYVALUE VARCHAR2) RETURN VARCHAR2
AS
lv_Sql        varchar2(10000):= '';
lv_TableName  varchar2(30) := 'USERWISE_DATA_ACCESS';
lv_Cnt        number(2) := 0;
lv_IsAdmin    varchar2(1) := 'N';
lv_Return     varchar2(100) := '';
lv_KEYFIELD   varchar2(30):=''; 
KEYFIELDVALUE varchar2(10) := '';
BEGIN
    SELECT NVL(ISADMINISTRATOR,'N')  INTO lv_IsAdmin 
    FROM LOGIN 
    WHERE COMPANYCODE = P_COMPCODE AND USERNAME = P_USER;
    IF lv_IsAdmin = 'Y' THEN
        lv_Return := 'SUCCESS';
    ELSE
        SELECT COUNT(*) INTO lv_Cnt FROM COLS WHERE TABLE_NAME =  lv_TableName;
        IF lv_Cnt <=0 then
           lv_Return := 'SUCCESS';       --- no need to check the
        else
            SELECT COUNT(*) INTO lv_Cnt from USERWISE_DATA_ACCESS 
            WHERE COMPANYCODE = P_COMPCODE AND DIVISIONCODE = P_DIVCODE AND MENUCODE = P_MENUCODE;
            if lv_Cnt <=0 then
                lv_Return := 'SUCCESS';
            else          
               SELECT COUNT(*) INTO lv_Cnt
               FROM USERWISE_DATA_ACCESS  
               WHERE COMPANYCODE = P_COMPCODE AND MENUCODE = P_MENUCODE
                 AND KEYFIELD = P_KEYCODE AND KEYFIELDVALUE = P_KEYVALUE;
               IF lv_Cnt > 0 then
                lv_Return := 'SUCCESS'; 
               else
                lv_Return := 'DENIED, USER - '||P_USER||' IS NOT AUTHORZIED TO ACCESS THE DATA'; 
               end if;
            end if;     
        end if;
    END IF;
    RETURN lv_Return;
END ;
/

---------------------------------------------------------------------------------------------
--VOUCHER PRINTING


Select a.*,  
 case when a.TRANSACTIONTYPE='ADVANCE PAYMENT REVERSAL' then 'ADV-PYMT-REV' 
        when a.TRANSACTIONTYPE='ADVANCE PAYMENT ADJUSTMENT' then 'ADV-PYMT-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL ADJUSTMENT' then 'LIB-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL ADJUSTMENT REVERSAL' then 'LIB-ADJ-REV'
        when a.TRANSACTIONTYPE='PURCHASE BILL' then 'LIB'
        when a.TRANSACTIONTYPE='SALES BILL' then 'SB'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT ADJUSTMENT' then 'ADV-RCPT-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL REVERSAL' then 'LIB-REV'
        when a.TRANSACTIONTYPE='SALES BILL ADJUSTMENT ADJUSTMENT' then 'SB-ADJ'
        when a.TRANSACTIONTYPE='ADVANCE PAYMENT' then 'ADV-PYMT'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT' then 'ADV-RCPT'
        when a.TRANSACTIONTYPE='SALES BILL ADJUSTMENT' then 'SB-ADJ'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT REVERSAL' then 'ADV-RCPT-REV'
        else 'REF'
       end reftranstype
       From AcBillDetails a 
 Where a.CompanyCode = '0001'  
   And a.DivisionCode = '002' 
   And a.YearCode = '2020-2021' 
   And a.SystemVoucherNo =  'BA0001/002-RVB/2021/00000057' 
   And a.ACCODE= 'S000930' 
-- Order By sysrowid  

BA0001/002-RVB/2021/00000057

BA0001/004-RVB/2021/00000008

SELECT * FROM ACBILLDETAILS_ENTRY
WHERE SYSTEMVOUCHERNO LIKE '%RVB%'

SELECT * from AcBillDetails
WHERE SYSTEMVOUCHERNO LIKE '%RVB%'


SELECT * from AcBillDetails
WHERE SYSTEMVOUCHERNO LIKE 'BA0001/003-RPA/2021/00249599'



SELECT * FROM DIVISIONMASTER


SELECT * from acvoucher
where REFSYSTEMVOUCHERNO='BA0001/002-RVB/2021/00000008'


Select a.*,  
 case when a.TRANSACTIONTYPE='ADVANCE PAYMENT REVERSAL' then 'ADV-PYMT-REV' 
        when a.TRANSACTIONTYPE='ADVANCE PAYMENT ADJUSTMENT' then 'ADV-PYMT-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL ADJUSTMENT' then 'LIB-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL ADJUSTMENT REVERSAL' then 'LIB-ADJ-REV'
        when a.TRANSACTIONTYPE='PURCHASE BILL' then 'LIB'
        when a.TRANSACTIONTYPE='SALES BILL' then 'SB'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT ADJUSTMENT' then 'ADV-RCPT-ADJ'
        when a.TRANSACTIONTYPE='PURCHASE BILL REVERSAL' then 'LIB-REV'
        when a.TRANSACTIONTYPE='SALES BILL ADJUSTMENT ADJUSTMENT' then 'SB-ADJ'
        when a.TRANSACTIONTYPE='ADVANCE PAYMENT' then 'ADV-PYMT'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT' then 'ADV-RCPT'
        when a.TRANSACTIONTYPE='SALES BILL ADJUSTMENT' then 'SB-ADJ'
        when a.TRANSACTIONTYPE='ADVANCE RECEIPT REVERSAL' then 'ADV-RCPT-REV'
        else 'REF'
       end reftranstype
       From AcBillDetails a 
 Where a.CompanyCode = '0001'  
   And a.DivisionCode = '002' 
   And a.YearCode = '2020-2021' 
   And a.SystemVoucherNo =  'BA0001/002-RVB/2021/00000057' 
   And a.ACCODE= 'S000757' 
 Order By sysrowid  
 
 BA0001/002-RVB/2021/00000057
 
 
 
 

---------------------------------------------------------------------------------------------

 Select  COMPANYCODE, DIVISIONCODE, YEARCODE, 
 fn_Generate_VoucherPrefix(A.companycode,A.divisioncode,A.yearcode,A.systemvoucherno) as VOUCHERNO,
 VOUCHERDATE, VOUCHERTYPE, SYSTEMVOUCHERNO, SYSTEMVOUCHERDATE, 
 CASHBANKACCODE, CHEQUENO, CHEQUEDATE, CHEQUEDRAWNON, PARTY, CHEQUEPRINTEDBY, CHEQUEPRINTDATE, 
 REALIZATIONDATE, VOUCHERAMOUNT, NARRATION, AUTOMANUALMARK, REFVOUCHERNO, REFVOUCHERDATE, REFVOUCHERTYPE, 
 REFSYSTEMVOUCHERNO, PREPAREDBY, CHECKEDBY, EDITEDBY, PRINTEDBY, PREPAREDDATE, CHECKEDDATE, EDITEDDATE, 
 PRINTEDDATE, LASTMODIFIED, SYNCHRONIZED, CONTROLVOUCHER, REFMEMORANDUMVOUCHERNO, MODULENAME, DOCUMENTTYPE, 
 INSTRUCTIONNO, MANUALVOUCHERNO, MANUALVOUCHERDATE, VOUCHERPAYMENTRECEIPTTYPE, CHEQUEISSUEDON, SYSROWID, 
 USERNAME, CHEQUEBOOKSLNO, LIABILITYTYPE, VOUCHERNATURE,
 REPLACE(REPLACE(REPLACE(A.NARRATION,CHR(9),' '),CHR(10),' '),CHR(13),' ') PRINTNARRATION, DECODE(A.VOUCHERTYPE,'PURCHASE BILL','LIABILITY BILL',A.VOUCHERTYPE) VOUCHERTYPE2, CASE WHEN A.VOUCHERTYPE ='PAYMENTS' THEN 'PAID TO : '||A.PARTY ELSE CASE WHEN A.VOUCHERTYPE ='RECEIPTS' THEN 'RECEIVED FROM : '||A.PARTY ELSE '' END END PAIDTORECEIVEDFROM  
 From AcVoucher A 
 Where A.CompanyCode = '0001'  
   And A.DivisionCode = '002' 
   And A.YearCode = '2020-2021' 
   And A.SystemVoucherNo IN (A0001/002-RVB/2021/00000006) 
---------------------------------------------------------------------------------------------

--BAGGAGE COMPONENT ASSIGNMENT NOT WORKING 

--CORRECTION BY AMALESH SIR

-- BELOW FUNCTION CORRECTTION
FN_USERWISE_DATA_ACCESS

select * from VW_AUTO_DYNAMICGRID

select * from login

LOGIN WITH USER NAME : MISHRA, AND PASSWORD : BMPL123

FN_USERWISE_DATA_ACCESS



---------------------------------------------------------------------------------------------


SELECT COMPANYCODE,DIVISIONCODE,SYSROWID,YEARCODE,YEARMONTH,UNITCODE,CATEGORYCODE,GRADECODE,
WORKERSERIAL,TOKENNO,EMPLOYEENAME,DEPARTMENTCODE,DEPARTMENTDESC,BASIC,BASIC_RT,HRA_PER,
SOFT_ALLW,SERV_ALLW,CONV_ALLW,CHILD_ALLW,PERS_ALLW,OTH_ALLW,FIX_ALW,OTH_ALLW2
  FROM ( 
         SELECT * FROM (SELECT EMPMAST.COMPANYCODE,EMPMAST.DIVISIONCODE,ASSIGN.SYSROWID,ASSIGN.YEARCODE,
         ASSIGN.YEARMONTH,EMPMAST.UNITCODE,EMPMAST.CATEGORYCODE,EMPMAST.GRADECODE,EMPMAST.WORKERSERIAL,
         EMPMAST.TOKENNO,EMPMAST.EMPLOYEENAME,EMPMAST.DEPARTMENTCODE,DEPT.DEPARTMENTDESC,ASSIGN.BASIC,
         ASSIGN.BASIC_RT,ASSIGN.HRA_PER,ASSIGN.SOFT_ALLW,ASSIGN.SERV_ALLW,ASSIGN.CONV_ALLW,ASSIGN.CHILD_ALLW,
         ASSIGN.PERS_ALLW,ASSIGN.OTH_ALLW,ASSIGN.FIX_ALW,ASSIGN.OTH_ALLW2   
         FROM PISEMPLOYEEMASTER EMPMAST, PISDEPARTMENTMASTER DEPT,         
         (         
             SELECT *           
             FROM PISCOMPONENTASSIGNMENT          
             WHERE COMPANYCODE='0001'            
             AND DIVISIONCODE='001'            
             AND TRANSACTIONTYPE='ASSIGNMENT'            
             AND WORKERSERIAL||YEARMONTH IN 
             (                                             
                 SELECT WORKERSERIAL||MAX(YEARMONTH) 
                 FROM PISCOMPONENTASSIGNMENT                                              
                 WHERE COMPANYCODE='0001' AND DIVISIONCODE='001'                                                
                 AND TO_NUMBER(YEARMONTH)<=TO_NUMBER('202004')                                                
                 AND TRANSACTIONTYPE='ASSIGNMENT'                                             
                 GROUP BY WORKERSERIAL                                           
            )        
         ) ASSIGN  
         WHERE EMPMAST.COMPANYCODE=DEPT.COMPANYCODE    
         AND EMPMAST.DIVISIONCODE=DEPT.DIVISIONCODE    
         AND EMPMAST.DEPARTMENTCODE=DEPT.DEPARTMENTCODE    
         AND EMPMAST.COMPANYCODE=ASSIGN.COMPANYCODE(+)    
         AND EMPMAST.DIVISIONCODE=ASSIGN.DIVISIONCODE(+)    
         AND EMPMAST.TOKENNO=ASSIGN.TOKENNO(+)    
         AND EMPMAST.WORKERSERIAL=ASSIGN.WORKERSERIAL(+)    
         AND EMPMAST.COMPANYCODE='0001'    
         AND EMPMAST.DIVISIONCODE='001'    
         AND EMPMAST.EMPLOYEESTATUS='ACTIVE'    
         AND EMPMAST.UNITCODE='001'    
         AND EMPMAST.CATEGORYCODE='01'    
         AND EMPMAST.GRADECODE='CIV'    
         AND TO_NUMBER(TO_CHAR(EMPMAST.DATEOFJOIN,'YYYYMM'))<=TO_NUMBER('202004')    
         AND TO_NUMBER(NVL(TO_CHAR(EMPMAST.STATUSDATE,'YYYYMM'),NVL(TO_CHAR(EMPMAST.EXTENDEDRETIREDATE,'YYYYMM'),'202004')))>=TO_NUMBER('202004') ) 
         ORDER BY TOKENNO 
       ) 
       
       
       ----------------------------------------------------
       
       
        
         SELECT * FROM (SELECT EMPMAST.COMPANYCODE,EMPMAST.DIVISIONCODE,ASSIGN.SYSROWID,ASSIGN.YEARCODE,
         ASSIGN.YEARMONTH,EMPMAST.UNITCODE,EMPMAST.CATEGORYCODE,EMPMAST.GRADECODE,EMPMAST.WORKERSERIAL,
         EMPMAST.TOKENNO,EMPMAST.EMPLOYEENAME,EMPMAST.DEPARTMENTCODE,DEPT.DEPARTMENTDESC,ASSIGN.BASIC,
         ASSIGN.BASIC_RT,ASSIGN.HRA_PER,ASSIGN.SOFT_ALLW,ASSIGN.SERV_ALLW,ASSIGN.CONV_ALLW,ASSIGN.CHILD_ALLW,
         ASSIGN.PERS_ALLW,ASSIGN.OTH_ALLW,ASSIGN.FIX_ALW,ASSIGN.OTH_ALLW2   
         FROM PISEMPLOYEEMASTER EMPMAST, PISDEPARTMENTMASTER DEPT,         
         (         
             SELECT *           
             FROM PISCOMPONENTASSIGNMENT          
             WHERE COMPANYCODE='0001'            
             AND DIVISIONCODE='001'            
             AND TRANSACTIONTYPE='ASSIGNMENT'            
             AND WORKERSERIAL||YEARMONTH IN 
             (                                             
                 SELECT WORKERSERIAL||MAX(YEARMONTH) 
                 FROM PISCOMPONENTASSIGNMENT                                              
                 WHERE COMPANYCODE='0001' AND DIVISIONCODE='001'                                                
                 AND TO_NUMBER(YEARMONTH)<=TO_NUMBER('202004')                                                
                 AND TRANSACTIONTYPE='ASSIGNMENT'                                             
                 GROUP BY WORKERSERIAL                                           
            )        
         ) ASSIGN  
         WHERE EMPMAST.COMPANYCODE=DEPT.COMPANYCODE    
         AND EMPMAST.DIVISIONCODE=DEPT.DIVISIONCODE    
         AND EMPMAST.DEPARTMENTCODE=DEPT.DEPARTMENTCODE    
         AND EMPMAST.COMPANYCODE=ASSIGN.COMPANYCODE(+)    
         AND EMPMAST.DIVISIONCODE=ASSIGN.DIVISIONCODE(+)    
         AND EMPMAST.TOKENNO=ASSIGN.TOKENNO(+)    
         AND EMPMAST.WORKERSERIAL=ASSIGN.WORKERSERIAL(+)    
         AND EMPMAST.COMPANYCODE='0001'    
         AND EMPMAST.DIVISIONCODE='001'    
         AND EMPMAST.EMPLOYEESTATUS='ACTIVE'    
         AND EMPMAST.UNITCODE='002'    
         AND EMPMAST.CATEGORYCODE='01'    
         AND EMPMAST.GRADECODE='CIV'    
         AND TO_NUMBER(TO_CHAR(EMPMAST.DATEOFJOIN,'YYYYMM'))<=TO_NUMBER('202004')    
         AND TO_NUMBER(NVL(TO_CHAR(EMPMAST.STATUSDATE,'YYYYMM'),NVL(TO_CHAR(EMPMAST.EXTENDEDRETIREDATE,'YYYYMM'),'202004')))>=TO_NUMBER('202004') ) 
         ORDER BY TOKENNO 
         
         
         
         
         SELECT * FROM MENUMASTER_RND
         WHERE UPPER(MENUDESC) LIKE UPPER('%component%')
		 
		 
---------------------------------------------------------------------------------------------

--MULTIPLE LOAN REPAY ENTRY
---------------------------------------------------------------------------------------------
--PF LOAN ENTRY

EXEC PROC_PFLOANBLNC('DT0078','0009','23/02/2020','23/02/2020','PF','1050','GPS')

EXEC PROC_PFLOANBLNC('DT0078','0009','17/06/2020','17/06/2020','PF','1050','GPS')

SELECT * FROM GPSPAYSHEETDETAILS
WHERE DIVISIONCODE='0009'
AND TOKENNO='J0028'

SELECT * FROM GBL_PFLOANBLNC

DELETE FROM GPS_ERROR_LOG


SELECT * FROM GPS_ERROR_LOG


SELECT  NVL(PFLOAN_BAL,0) PFLOAN_BAL, NVL(PFLOAN_INT_BAL,0) PFLOAN_INT_BAL FROM GBL_PFLOANBLNC

WHERE TOKENNO='J0028'


SELECT * FROM GPSEMPLOYEEMAST
WHERE PFNO='1050'

---------------------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE DHUNSERI_STRU.PROC_PFLOANREPAY(P_COMPCODE VARCHAR2, 
                                                  P_DIVCODE VARCHAR2,
                                                  P_YEARCODE VARCHAR2,
                                                  P_MODULENAME VARCHAR2,
                                                  P_FNSTDT VARCHAR2, 
                                                  P_FNENDT VARCHAR2,
                                                  P_PAIDDATE VARCHAR2,
                                                  P_PAIDPAMT VARCHAR2 DEFAULT 0,
                                                  P_PAIDINTAMT VARCHAR2 DEFAULT 0,
                                                  P_PFNO VARCHAR2 DEFAULT NULL
                                                  )
AS
LV_FN_STDT DATE := TO_DATE(P_FNSTDT,'DD/MM/YYYY');
LV_FN_ENDT DATE := TO_DATE(P_FNENDT,'DD/MM/YYYY');
LV_TABLENAME        VARCHAR2(50);
LV_REMARKS          VARCHAR2(1000) := 'PROC_PFLOANREPAY --REPAYMENT DONE THROUGH MANUAL INPUT';

LV_COMPCOL          VARCHAR2(1000) := '';
LV_SQLSTR      VARCHAR2(4000) := '';
LV_PARVALUES        VARCHAR2(500) := P_FNSTDT||'-'||P_FNENDT;
LV_SQLERRM          VARCHAR2(500) := '';
LV_WORKERSERIAL     VARCHAR2(10) := '';
LV_TOKENNO          VARCHAR2(10) := '';
LV_TOPTALPAID       NUMBER(12,2) := 0;
lv_error_remark     VARCHAR2(1000):='';
LV_ATTNDATE         DATE := TO_DATE(P_FNSTDT,'DD/MM/YYYY');
BEGIN

    --PROC_PFLOANBLNC(P_COMPCODE,P_DIVCODE,P_FNSTDT,P_FNENDT,'PFLN','','WPS','NO');
    DELETE FROM PFLOANBREAKUP 
    WHERE EFFECTFORTNIGHT=TO_DATE(P_FNSTDT,'DD/MM/YYYY')
      AND TRANSACTIONTYPE= 'REPAY'
      AND PFNO=P_PFNO
      AND COMPANYCODE=P_COMPCODE---ADDED BY CHIRANJIT
      AND DIVISIONCODE=P_DIVCODE---ADDED BY CHIRANJIT
      AND NVL(ISCASHREPAYMENT,'N') = 'Y';
        
   LV_TOPTALPAID :=TO_NUMBER(NVL(P_PAIDPAMT,0)) + TO_NUMBER(NVL(P_PAIDINTAMT,0));
   ----DBMS_OUTPUT.PUT_LINE (LV_TOPTALPAID);
   IF NVL(TO_NUMBER(LV_TOPTALPAID),0) >0 THEN
        LV_SQLSTR := ' INSERT INTO PFLOANBREAKUP ( COMPANYCODE, DIVISIONCODE, EMPLOYEECOMPANYCODE, EMPLOYEEDIVISIONCODE, YEARCODE, YEARMONTH, CATEGORYCODE, GRADECODE, PFNO, TOKENNO, WORKERSERIAL, LOANCODE, LOANDATE, EFFECTYEARMONTH, INTERESTPERCENTAGE, AMOUNT, TRANSACTIONTYPE, EFFECTFORTNIGHT, PAIDON, ISPAID, DEDUCTEDAMT, ADJUSTMENTTAG, REMARKS, REPAYAMOUNT, REPAYCAPITAL, REPAYINTEREST, REPAYREBATE, FINALSETTLEMENTTAG, REPAYDATE, MODULE, DELETERESION, VOUCHERNO, VOUCHERDATE, SYSTEMVOUCHERNO, SYSTEMVOUCHERDATE, CHEQUENO, CHEQUEDATE, SYSROWID, USERNAME, LASTMODIFIED, ISCASHREPAYMENT  ) '||CHR(10)
         ||'  SELECT '''||P_COMPCODE||''', '''||P_DIVCODE||''','''||P_COMPCODE||''', '''||P_DIVCODE||''', '''||P_YEARCODE||''',  '||CHR(10)
         ||'  TO_CHAR(TO_DATE('''||P_FNSTDT||''',''DD/MM/YYYY''),''YYYYMM''),CATEGORYCODE,NULL,A.PFNO,B.TOKENNO,B.WORKERSERIAL,''PF'', LOANDATE,TO_CHAR(TO_DATE('''||P_FNSTDT||''',''DD/MM/YYYY''),''YYYYMM''),NULL,'||CHR(10)
         ||'  '''||LV_TOPTALPAID||''', ''REPAY'',TO_DATE('''||P_FNSTDT||''',''DD/MM/YYYY'') FORTNIGHTSTARTDATE,TO_DATE('''||P_PAIDDATE||''',''DD/MM/YYYY'') PAIDON,  '||CHR(10) 
         ||' ''Y'' ISPAID,NULL, NULL, ''REPAYMENT DONE THROUGH MANUAL INPUT'','''||LV_TOPTALPAID||''','''||P_PAIDPAMT||''','''||P_PAIDINTAMT||''',   '||CHR(10) 
         ||' NULL, NULL, TO_DATE('''||P_PAIDDATE||''',''DD/MM/YYYY'') REPAYDATE, ''GPS'' ,NULL, NULL, NULL, NULL, NULL,NULL, NULL,A.PFNO||B.DIVISIONCODE||TO_CHAR(SYSDATE,''YYYYMMDDHHMISS''),''SWT'',SYSDATE,''Y'' '||CHR(10)
         ||'  FROM GBL_PFLOANBLNC A, GPSEMPLOYEEMAST B '||CHR(10)
         ||' WHERE A.PFNO='''||P_PFNO||''' '||CHR(10)
         ||'   AND A.COMPANYCODE=B.COMPANYCODE '||CHR(10)---ADDED
         ||'   AND A.DIVISIONCODE=B.DIVISIONCODE '||CHR(10)---ADDED
         ||'   AND A.COMPANYCODE='''||P_COMPCODE||''' '||CHR(10) ---ADDED
         ||'   AND A.DIVISIONCODE='''||P_DIVCODE||''' '||CHR(10)---ADDED
         ||'   AND A.DIVISIONCODE=B.DIVISIONCODE '||CHR(10);
     --  --DBMS_OUTPUT.PUT_LINE (LV_SQLSTR);
       EXECUTE IMMEDIATE LV_SQLSTR;COMMIT;
   END IF;
   COMMIT;
EXCEPTION
WHEN OTHERS THEN
 --INSERT INTO ERROR_LOG(PROC_NAME,ORA_ERROR_MESSG,ERROR_QUERY,PAR_VALUES,REMARKS ) VALUES( 'ERROR SQL',LV_SQLSTR,LV_SQLSTR,LV_PARVALUES,LV_REMARKS);
 LV_SQLERRM := SQLERRM ;
 ----DBMS_OUTPUT.PUT_LINE(LV_SQLERRM);
 INSERT INTO GPS_ERROR_LOG(PROC_NAME,ORA_ERROR_MESSG,ERROR_QUERY,PAR_VALUES,FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS ) VALUES( 'PROC_PFLOANREPAY',LV_SQLERRM,LV_SQLSTR,LV_PARVALUES,LV_FN_STDT,LV_FN_ENDT, LV_REMARKS);

END ;
/
---------------------------------------------------------------------------------------------

--LOAN BALANCE QUERY



SELECT DISTINCT A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE, AMOUNT, 0 INTERESTAMOUNT , 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT 
FROM PFLOANTRANSACTION A,  
(  
    SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, MAX(LOANDATE) LOANDATE  
    FROM PFLOANTRANSACTION  
    WHERE COMPANYCODE = 'DT0078' AND DIVISIONCODE = '0009' 
    AND LOANDATE <=  TO_DATE('23/02/2020','DD/MM/YYYY')
    AND LOANTYPE ='REFUNDABLE'
    GROUP BY COMPANYCODE,DIVISIONCODE,PFNO  
) B  
WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE AND A.PFNO = B.PFNO AND A.LOANDATE = B.LOANDATE  AND AMOUNT > 0 

UNION ALL     

SELECT A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE,   
(
CASE WHEN TRANSACTIONTYPE ='CAPITAL' THEN CASE WHEN EFFECTFORTNIGHT < TO_DATE('23/02/2020','DD/MM/YYYY') THEN AMOUNT ELSE 0 END  
WHEN TRANSACTIONTYPE ='REPAY' THEN REPAYCAPITAL  
WHEN TRANSACTIONTYPE ='REPAYCAP' THEN AMOUNT  
ELSE 0  
END
)*(-1) AMOUNT, 0 INTERESTAMOUNT , 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT     
FROM PFLOANBREAKUP A,  
(  
    SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, MAX(LOANDATE) LOANDATE  
    FROM PFLOANTRANSACTION  
    WHERE COMPANYCODE = 'DT0078' AND DIVISIONCODE ='0009' 
    AND LOANDATE <=  TO_DATE('23/02/2020','DD/MM/YYYY')  
    AND LOANTYPE ='REFUNDABLE'                     
    GROUP BY COMPANYCODE,DIVISIONCODE,PFNO  
) B  
WHERE A.COMPANYCODE=B.COMPANYCODE 
AND A.DIVISIONCODE=B.DIVISIONCODE 
AND A.PFNO = B.PFNO 
AND A.LOANDATE = B.LOANDATE  
AND A.EFFECTFORTNIGHT <=  TO_DATE('23/02/2020','DD/MM/YYYY')  
AND TRANSACTIONTYPE <> 'INTEREST'  
AND A.PFNO='1050'
AND A.COMPANYCODE = 'DT0078' AND A.DIVISIONCODE ='0009' 


UNION ALL  

SELECT DISTINCT A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE, 0 AMOUNT, SUM(NVL(C.INTERESTAMOUNT,0)) INTERESTAMOUNT 
, 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT  
FROM 
( 
    SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, LOANCODE, LOANDATE 
    FROM PFLOANTRANSACTION 
    WHERE COMPANYCODE ='DT0078' AND DIVISIONCODE = '0009'
) A, 
(  
    SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, MAX(LOANDATE) LOANDATE 
    FROM PFLOANTRANSACTION  
    WHERE COMPANYCODE = 'DT0078' AND DIVISIONCODE = '0009'  
    AND LOANDATE <=  TO_DATE('23/02/2020','DD/MM/YYYY')  
    AND LOANTYPE ='REFUNDABLE'
    GROUP BY COMPANYCODE,DIVISIONCODE,PFNO  
) B, PFLOANINTEREST C  
WHERE A.COMPANYCODE = 'DT0078' AND A.DIVISIONCODE = '0009' AND A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE AND A.PFNO = B.PFNO AND A.LOANDATE = B.LOANDATE  
AND A.PFNO = C.PFNO AND A.LOANDATE = C.LOANDATE AND A.LOANCODE = C.LOANCODE  
AND C.FORTNIGHTENDDATE <= TO_DATE('23/02/2020','DD/MM/YYYY') 
AND C.TRANSACTIONTYPE = 'ADD'  
GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE  

UNION ALL  

SELECT A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE, 0 AMOUNT,   
(CASE WHEN TRANSACTIONTYPE ='INTEREST' THEN CASE WHEN EFFECTFORTNIGHT < TO_DATE('23/02/2020','DD/MM/YYYY') THEN AMOUNT ELSE 0 END  
WHEN TRANSACTIONTYPE ='REPAY' THEN REPAYINTEREST  
WHEN TRANSACTIONTYPE ='REPAYINT' THEN AMOUNT  
ELSE 0  
END)*(-1) INTERESTAMOUNT 
, 0 LN_CAP_DEDUCT, 0 LN_INT_DEDUCT      
FROM PFLOANBREAKUP A,  
(  
SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, MAX(LOANDATE) LOANDATE  
FROM PFLOANTRANSACTION  
WHERE COMPANYCODE = 'DT0078' AND DIVISIONCODE = '0009'  
AND LOANDATE <=  TO_DATE('23/02/2020','DD/MM/YYYY')  
AND LOANTYPE ='REFUNDABLE'
GROUP BY COMPANYCODE,DIVISIONCODE,PFNO  
) B  
WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE AND A.PFNO = B.PFNO AND A.LOANDATE = B.LOANDATE  
AND A.EFFECTFORTNIGHT <= TO_DATE('23/02/2020','DD/MM/YYYY') 
AND TRANSACTIONTYPE <> 'CAPITAL' 

UNION ALL 

SELECT A.COMPANYCODE,A.DIVISIONCODE,A.PFNO, A.LOANCODE, A.LOANDATE, 0 AMOUNT,  0 INTERESTAMOUNT,  
DECODE(TRANSACTIONTYPE,'CAPITAL',AMOUNT,0) LN_CAP_DEDUCT, DECODE(TRANSACTIONTYPE,'INTEREST',AMOUNT,0) LN_INT_DEDUCT 
FROM PFLOANBREAKUP A,  
(  
SELECT DISTINCT COMPANYCODE,DIVISIONCODE,PFNO, MAX(LOANDATE) LOANDATE  
FROM PFLOANTRANSACTION  
WHERE COMPANYCODE = 'DT0078' AND DIVISIONCODE = '0009'  
AND LOANDATE <=  TO_DATE('23/02/2020','DD/MM/YYYY') 
AND LOANTYPE ='REFUNDABLE'
GROUP BY COMPANYCODE,DIVISIONCODE,PFNO  
) B  
WHERE A.COMPANYCODE=B.COMPANYCODE AND A.DIVISIONCODE=B.DIVISIONCODE AND A.PFNO = B.PFNO AND A.LOANDATE = B.LOANDATE  
AND A.EFFECTFORTNIGHT <= TO_DATE('23/02/2020','DD/MM/YYYY')
AND TRANSACTIONTYPE IN ('CAPITAL','INTEREST') 

---------------------------------------------------------------------------------------------

I:\OFFICE\PROJECTS\SWT_Jute\swterp\swterp\PIS\Pages\Report\Transaction\rptCOMPONENTASSIGNMENTSTATUS.rdlc
--baggage
SELECT * FROM  ACVOUCHER
WHERE SYSTEMVOUCHERNO='BA0001/002-RVB/2021/00000008'

WHERE VOUCHERTYPE IN ('RECEIPTS','PAYMENTS')

SELECT * FROM  ACVOUCHERDETAILS_ENTRY

WHERE VOUCHERTYPE IN ('RECEIPTS','PAYMENTS')


SELECT * FROM ACBILLDETAILS_ENTRY
WHERE SYSTEMVOUCHERNO LIKE '%RVB%'


---------------------------------------------------------------------------------------------

SELECT 'BJ0056' COMPANYCODE, '0001' DIVISIONCODE,'2020-2021' YEARCODE, '202004'YEARMONTH, UNITCODE, CATEGORYCODE, 
GRADECODE, DEPARTMENTCODE,EMPCODE,'ASSIGNMENT' TRANSACTIONTYPE, SYS_GUID() SYSROWID, SYSDATE LASTMODIFIED, 
'SWT' USERNAME,
BASIC,DA,ADHOC,PERSONAL_PAY,VPF_PERCENT
FROM bjm_emp_mast



---------------------------------------------------------------------------------------------

--ESI GROSS
CASE WHEN PISCOMP.ESI_RATE>=21000 THEN 0 ELSE (PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.SPL_ALLOW+PISCOMP.NS_ALLOW+PISCOMP.OT_AMT+PISCOMP.SERV_ALW+PISCOMP.OE_NPF+PISCOMP.CONV_ALOW+PISCOMP.OEPF+PISCOMP.ESI_ADJERN+PISCOMP.HRA+PISCOMP.PROF_BONUS+PISCOMP.ADHOC_NPF+PISCOMP.ATN_INCAMT) END

CASE WHEN PISCOMP.ESI_RATE>=21000 THEN 0 ELSE 
(PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.SPL_ALLOW+PISCOMP.NS_ALLOW+PISCOMP.OT_AMT+PISCOMP.SERV_ALW+PISCOMP.OE_NPF+PISCOMP.CONV_ALOW+PISCOMP.OEPF+PISCOMP.ESI_ADJERN+PISCOMP.HRA+PISCOMP.PROF_BONUS+PISCOMP.ADHOC_NPF+PISCOMP.ATN_INCAMT) END


SELECT 
CASE WHEN PISCOMP.ESI_RATE>=21000 THEN 0 ELSE 
(
    PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.SPL_ALLOW+
    PISCOMP.NS_ALLOW+PISCOMP.OT_AMT+PISCOMP.OE_NPF+
    PISCOMP.CONV_ALOW+PISCOMP.OEPF+PISCOMP.ESI_ADJERN+PISCOMP.HRA+
    PISCOMP.PROF_BONUS+PISCOMP.ATN_INCAMT
) END
FROM PISCOMPONENTASSIGNMENT PISCOMP


SELECT 


CASE WHEN PISCOMP.ESI_RATE>=21000 THEN 0 ELSE (PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.SPL_ALLOW+PISCOMP.OT_AMT+PISCOMP.OE_NPF+PISCOMP.CONV_ALOW+PISCOMP.OEPF+PISCOMP.HRA+PISCOMP.ATN_INCAMT) END
FROM PISCOMPONENTASSIGNMENT PISCOMP
 
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------


--PF GROSS
PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.NS_ALLOW+ PISCOMP.OEPF
PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.NS_ALLOW+ PISCOMP.OEPF


CASE WHEN PISMAST.CATEGORYCODE= 'SS' THEN PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.NS_ALLOW+ PISCOMP.OEPF 
ELSE 
	CASE WHEN (PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.NS_ALLOW+ PISCOMP.OEPF) > 15000 THEN 15000 
		 ELSE (PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.NS_ALLOW+ PISCOMP.OEPF) 
	END 
END

CASE WHEN (PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.OEPF) > 15000 THEN 15000 ELSE (PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.OEPFCOMP.OEPF) END 


PISCOMP.BASIC+ PISCOMP.DA+ PISCOMP.ADHOC+ PISCOMP.OEPF


--HRA GROSS
PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.NS_ALLOW+PISCOMP.OEPF

PISCOMP.BASIC+PISCOMP.DA+PISCOMP.ADHOC+PISCOMP.OEPF
 
 
---------------------------------------------------------------------------------------------

--ADDED HELP QUERY FROM GLOSTER
Insert into SYS_HELP_QRY
   (QRY_ID, QRY_STRING, PARAMETER_STRING, QRY_SHORTDESC, QRY_RETURN_TABLE_NAME, 
    WEB_QRY_STRING, SEARCH_COLUMNLIST, MODULENAME)
 Values
   (7041, '""', 'COMPANYCODE~DIVISIONCODE~EMPLOYEECODE~LEAVECODE~PATTERN', 'PIS EMPLOYEE LEAVE INFORMATION', NULL, 
    'SELECT DISTINCT DOCUMENTNO, TOKENNO, LEAVECODE, TO_CHAR(LEAVEAPPLIEDON) LEAVEAPPLIEDON'||CHR(13)||CHR(10)||' FROM PISLEAVEAPPLICATION A'||CHR(13)||CHR(10)||'    WHERE A.COMPANYCODE=<<COMPANYCODE>>'||CHR(13)||CHR(10)||'    AND A.DIVISIONCODE=<<DIVISIONCODE>>'||CHR(13)||CHR(10)||'    AND A.TOKENNO=<<EMPLOYEECODE>>'||CHR(13)||CHR(10)||'    AND A.LEAVECODE=<<LEAVECODE>>'||CHR(13)||CHR(10)||'   ORDER BY DOCUMENTNO'||CHR(10)||'', 'DOCUMENTNO~TOKENNO~LEAVECODE~LEAVEAPPLIEDON'||CHR(10)||'', 'PIS');
COMMIT;

I:\OFFICE\PROJECTS\SWT_Jute\swterp\swterp\PIS\Pages\Report\Transaction\rptCOMPONENTSALARYREGISTER.rdlc

---------------------------------------------------------------------------------------------

--BAGGAGE

select * from pis_error_log

DELETE FROM pis_error_log


proc_componentassinreport

EXEC PROC_RPT_PIS_PTAXSTATEMENT('0001','001','2020-2021','202004','','','','','','','','','SWT20200616_021821PM','WEST BENGAL')

EXEC PROC_RPT_PIS_PTAXSTATEMENT('0001','001','2020-2021','202004','','','','','SWT20200616_021821PM','''WEST BENGAL''');

PROC_RPT_PIS_PTAXSTATEMENT('0001','001','2020-2021','202004','','','','','SWT20200616_025234PM','''WEST BENGAL''')
 


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------
work update on 15/06/2020
---------------------------------------------------------------------------------------------


---------------------------------------------------------------------------------------------

SELECT * FROM MENUMASTER_RND
WHERE UPPER(MENUDESC) LIKE UPPER('%month att%')


update menumaster_rnd
set URLSRC ='PIS/PAGES/Transaction/pgPISMonthAttendanceWithLeave.aspx'
where menucode = '01070202'


update menumaster_rnd
set URLSRC ='PIS/PAGES/Transaction/pgPISMonthAttendance.aspx'
where menucode = '01070202'

URLSRC

---------------------------------------------------------------------------------------------

--ATTENDANCE CODE
select rtrim(xmlagg(xmlelement(e,x.componentcode||',') order by srl).extract('//text()'),',') xx 
  from ( 
        select srl, columnname componentcode from pistagwisefixedcolumnshow 
         where companycode='BJ0056' 
           and divisioncode='0001' 
           and tagtype='ATTENDANCE' 
        union all 
        select 50+nvl(phase,999)+nvl(calculationindex,9999) srl, 'ASSIGN.'||A.componentcode componentcode from piscomponentmaster A
        ,(
            SELECT DISTINCT COMPONENTCODE FROM PISGRADECOMPONENTMAPPING
            WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001' 
            AND YEARMONTH = (
                                SELECT MAX(YEARMONTH) FROM PISGRADECOMPONENTMAPPING
                                WHERE COMPANYCODE = 'BJ0056' AND DIVISIONCODE = '0001' 
                            )
            AND CATEGORYCODE = '10'
            AND GRADECODE ='11' 
            AND APPLICABLE LIKE 'Y%' 
        ) B 
         where companycode='BJ0056' 
           and divisioncode='0001' 
           and A.componentcode||yearmonth in ( 
                                            select distinct componentcode||max(yearmonth) from piscomponentmaster 
                                             where companycode='BJ0056' 
                                               and divisioncode='0001' 
                                               and to_number(yearmonth)<=to_number('202004') 
                                             group by componentcode 
                                           ) 
          AND A.COMPONENTCODE = B.COMPONENTCODE
           and nvl(userentryapplicable,'N')='Y' 
           and nvl(attendanceentryapplicable,'N')='Y' 
        union all 
        select (SELECT MAX(srl) FROM pistagwisefixedcolumnshow where companycode='BJ0056' 
           and divisioncode='0001' 
           and tagtype='ATTENDANCE' )  srl, 'L_A.'||leavecode componentcode from PISLEAVEMASTER
         where companycode='BJ0056' 
           and divisioncode='0001' 
        union all 
        select 0 srl,  'DYLEAVE' componentcode from dual
       ) x 
	   
---------------------------------------------------------------------------------------------

--FUNCTION TAKEN FROM GLOSTER 
--ADDED TO BIRLA
CREATE OR REPLACE function fn_RtnNoOfApplicableHolidays(P_COMPCODE VARCHAR2, P_DIVCODE VARCHAR2, P_YEARMONTH VARCHAR2, P_CATEGORYCODE VARCHAR2,P_GRADECODE VARCHAR2,P_WORKERSERIAL  VARCHAR2, P_MODULE VARCHAR2 DEFAULT 'PIS') return number
AS 
lv_Cnt      number(5,2):=0;
begin
    if P_MODULE = 'PIS' THEN
        SELECT COUNT(*) INTO lv_Cnt
        FROM PISHOLIDAYMASTER A, PISEMPLOYEEMASTER E
        WHERE A.COMPANYCODE = P_COMPCODE AND A.DIVISIONCODE = P_DIVCODE
          AND TO_CHAR(A.HOLIDAYDATE,'YYYYMM') = P_YEARMONTH
          AND NVL(A.ISPAID,'N') = 'Y'
          AND A.COMPANYCODE=E.COMPANYCODE
          AND A.DIVISIONCODE=E.DIVISIONCODE
          AND NVL(A.CATEGORYCODE,'N')=E.CATEGORYCODE
          AND NVL(A.GRADECODE,'N')=E.GRADECODE
          AND A.HOLIDAYDATE>=E.DATEOFJOIN
          AND E.WORKERSERIAL=P_WORKERSERIAL;
    
    END IF;
    return lv_Cnt;
end;
/

---------------------------------------------------------------------------------------------
procedure

prcAssignment_Bf_MainSave

--IF SUM OF BASIC AMOUNT IS ZERO 
    select sum(nvl(basic,0))
    into lv_cnt
    from GBL_PISCOMPONENTASSIGNMENT;
    
    if lv_cnt = 0 then
        lv_error_remark := 'Validation Failure : [No row found in Component Assignment with Proper Data to Entry]';
        raise_application_error(to_number(FN_DISPLAY_ERROR( 'COMMON')),FN_DISPLAY_ERROR( 'COMMON',6,lv_error_remark));
    end if;
    
	
---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------


----COMPONENT CODE FROM PISCOMPONENT ASSIGNMENT 

SELECT DISTINCT COMPONENTCODE FROM PISCOMPONENTMASTER
MINUS
SELECT SYS_COLUMNNAME FROM SYS_TFMAP WHERE SYS_TABLENAME_ACTUAL='PISCOMPONENTASSIGNMENT'


----ALL COMPONENTCODE FROM PISCOMPONENTMASTER

SELECT WM_CONCAT(COMPONENTCODE) COMPONENTCODE FROM
(
SELECT DISTINCT COMPONENTCODE FROM PISCOMPONENTMASTER
)


----ALL SYS_COLUMNNAME / COMPONENTCODE FROM PISCOMPONENTMASTER
SELECT WM_CONCAT(SYS_COLUMNNAME) COMPONENTCODE FROM
(
SELECT SYS_COLUMNNAME FROM SYS_TFMAP WHERE SYS_TABLENAME_ACTUAL='PISCOMPONENTASSIGNMENT'
)


--PISCOMPONENTMASTER
CONV_ALOW,GROSSEARN,HRA_GROSS,HRA_PERC,LIBL_FEADV,LIBL_SA,LINT_PJADV,LINT_SPL,LOAN_PFL,LTP,NETSALARY,OE_NPF,OTHR_DEDN,TOTEARN,
ATN_INCNT,LIBL_PFL,LIBL_STADV,
LINT_FEADV,LNBL_OTADV,LOAN_OTADV,ATN_INCAMT,ATTN_LDAY,CUMM_DAYS,DA,LDAY_PL,
LDAY_SL,LIBL_SPL1,LINT_STADV,LNBL_OLADV,LNBL_STADV,OT_AMT,ACT_PF_GRS,
ELECTRIC,ESI_RATE,LDAY_CL,LNBL_SA,LOAN_PJADV,LOAN_SA,PF_E,PF_GROSS,
PTAX,RT_BASIC,ADHOC,ESI_GROSS,GROSSDEDN,HRA,ITAX,LEAVE_ENC,
LIBL_OLADV,LINT_OTADV,LINT_SPL1,LNBL_FEADV,MESS,PEN_GROSS,
SUSP_DEDN,VPF,LIBL_PJADV,LIBL_SPL,LIC,LINT_OLADV,LNBL_PFL,
LNBL_SPL,MEDICAL,MISC_DEDN,PTAX_GROSS,ATTN_HOLD,ATTN_SALD,
CUMM_PF_E,CUMM_VPF,CUM_PFGROS,LIBL_OTADV,LINT_PFL,LNBL_PJADV,
LOAN_STADV,LWF,ATTN_WRKD,BASIC,CLUB,CUMM_PF_C,ESI_E,LINT_SA,LNBL_SPL1,
LOAN_FEADV,LOAN_OLADV,LOAN_SPL,LOAN_SPL1,LTA,OEPF,SPL_ALLOW,VPF_PERC


--PISCOMPONENTASSIGNMENT SYSTF
ADHOC,BASIC,CATEGORYCODE,CLUB,COMPANYCODE,CONV_ALOW,DA,DEPARTMENTCODE,DIVISIONCODE,
EDU_ALLOW,ELEC_CHRG,ESI_E,ESI_RT,FIRE_ALLOW,FPF,FUEL_ALLOW,GRADECODE,HRA_FIXED,
HRA_PER,HR_ALLOW,HR_DEDN,H_WAGES,ITAX,LAUN_ALLOW,LV_ENCASH,LWF,MESS,ME_1,ME_2,ME_3,ME_4,ME_5,ME_6,
MISC_DEDN,NETSALARY,NS_ALLOW,NS_B_RATE,NS_C_RATE,OT_AMT,OT_HRS,PARA_ALLOW,PEN_GROSS,
PFL_EARN,PF_E,PF_GROSS,PTAX,PTAX_GROSS,SAL_ADV,SERV_CHRG,SE_DEPOSIT,SFT_B_DAYS,
SFT_C_DAYS,SICK_ALLOW,SPL_ALLOW,SWEEPER,SYSROWID,TIFFIN,TOKENNO,TOTDEDN,TRANSACTIONTYPE,
UNITCODE,USERNAME,VPF,VPF_PERC,WORKERSERIAL,YEARCODE,YEARMONTH


--PISCOMPONENTASSIGNMENT SYSTF
ADHOC,BASIC,CATEGORYCODE,CLUB,COMPANYCODE,CONV_ALOW,DA,DEPARTMENTCODE,DIVISIONCODE,
ESI_E,GRADECODE,
HRA_PER,HR_DEDN,ITAX,LWF,MESS
MISC_DEDN,NETSALARY,OT_AMT,PEN_GROSS,
PF_E,PF_GROSS,PTAX,PTAX_GROSS,
SPL_ALLOW,SYSROWID,TOKENNO,TOTDEDN,TRANSACTIONTYPE,
UNITCODE,USERNAME,VPF,VPF_PERC,WORKERSERIAL,YEARCODE,YEARMONTH

--PISCOMPONENTASSIGNMENT SYSTF  DELETED

EDU_ALLOW,ELEC_CHRG,ESI_RT,FIRE_ALLOW,FPF,FUEL_ALLOW,
HR_ALLOW,H_WAGES,LAUN_ALLOW,LV_ENCASH,ME_1,ME_2,ME_3,ME_4,ME_5,ME_6,
NS_ALLOW,NS_B_RATE,NS_C_RATE,OT_HRS,PARA_ALLOW,
PFL_EARN,SAL_ADV,SERV_CHRG,SE_DEPOSIT,SFT_B_DAYS,
SFT_C_DAYS,SICK_ALLOW,

SELECT * FROM SYS_TFMAP
WHERE SYS_COLUMNNAME
IN  (
'EDU_ALLOW','ELEC_CHRG','ESI_RT','FIRE_ALLOW','FPF','FUEL_ALLOW',
'HR_ALLOW','H_WAGES','LAUN_ALLOW','LV_ENCASH','ME_1','ME_2','ME_3','ME_4','ME_5','ME_6',
'NS_ALLOW','NS_B_RATE','NS_C_RATE','OT_HRS','PARA_ALLOW','PFL_EARN','SAL_ADV','SERV_CHRG','SE_DEPOSIT','SFT_B_DAYS',
'SFT_C_DAYS','SICK_ALLOW'
)
AND  SYS_TABLENAME_ACTUAL='PISCOMPONENTASSIGNMENT'
AND  SYS_TABLE_SEQUENCIER='10013'


SELECT * FROM SYS_TFMAP WHERE SYS_TABLENAME_ACTUAL='PISCOMPONENTASSIGNMENT'



SELECT * FROM COLS WHERE TABLE_NAME='PISCOMPONENTASSIGNMENT'


GBL_PISCOMPONENTASSIGNMENT


COMPANYCODE, DIVISIONCODE, YEARCODE, YEARMONTH, UNITCODE, DEPARTMENTCODE, CATEGORYCODE, GRADECODE, 
WORKERSERIAL, TOKENNO, TRANSACTIONTYPE, SYSROWID, LASTMODIFIED, USERNAME, BASIC, DA, HRA_GROSS, 
HRA_PER, HRA, PF_GROSS, PEN_GROSS, ESI_GROSS, PTAX_GROSS, PF_E, PF_C, FPF, VPF_PERC, VPF, ESI_E, 
ESI_C, PTAX, LWF, SARR_ARRE, SARR_ARRD, SARR_PF_GROSS, SARR_NPF_GROSS, GROSSEARN, GROSSDEDN, 
MISC_BF, MISC_CF, TOTEARN, TOTDEDN, NETSALARY, LOAN_PFLN, LINT_PFLN, LOAN_SADV, LINT_SADV, 
LOAN_VADV, LINT_VADV, LOAN_HLOAN, LINT_HLOAN, EPF, ITAX, FUEL, OTH_ALLOW, CHILD_ALOW, 
CONV_ALOW, HRA_FIXED, MISC_EARN, ESI_RT, MISC_DEDN, LTA, ADHOC, SPL_ALLOW, NS_HRS, 
OT_HRS, OT_DAYS, NS_ALLOW, OT_AMT, SERV_PERC, SERV_ALW, CONV_PERC, OEPF, OE_NPF, 
ESI_ADJERN, HRA_PERC, ACT_PF_GRS, LIC, ELECTRIC, MESS, LTP, SUSP_DEDN, HRA_AMT, 
ADHOC_NPF, OTHR_DEDN, PROF_BONUS, MEDICAL, LVENCSH_DAYS, LEAVE_ENC, ATN_INCNT, 
ATN_INCAMT, CLUB, CUMM_DAYS, CUM_PFGROS, ESI_RATE, CUMMPFEBAL, CUMMPFCBAL, 
CUMMVPFBAL, RT_BASIC

COMPANYCODE, DIVISIONCODE, YEARCODE, YEARMONTH, UNITCODE, DEPARTMENTCODE, CATEGORYCODE, GRADECODE, 
WORKERSERIAL, TOKENNO, TRANSACTIONTYPE, SYSROWID, OPERATIONMODE, USERNAME, BASIC, PFL_EARN, 
DA, HRA_PER, HR_ALLOW, PF_GROSS, PF_E, ESI_E, ADHOC, SPL_ALLOW,  MESS, OT_HRS, OT_AMT, PEN_GROSS, 
PTAX_GROSS, LWF, VPF_PERC, CLUB, ITAX, HR_DEDN, SERV_CHRG, SE_DEPOSIT, ELEC_CHRG, 
 CONV_ALOW, TOTDEDN, NETSALARY,  FPF, PTAX, 
VPF, MISC_DEDN, SAL_ADV, FIRE_ALLOW, HRA_FIXED, ESI_RT

FIRE_ALLOW,ELEC_CHRG,HR_DEDN, SERV_CHRG, SE_DEPOSIT, EDU_ALLOW, LAUN_ALLOW, 
SFT_B_DAYS, SFT_C_DAYS, NS_B_RATE, NS_C_RATE, NS_ALLOW, H_WAGES
SICK_ALLOW, ME_1, ME_2, ME_3, ME_4, ME_5, ME_6
TIFFIN,SWEEPER, LV_ENCASH, PARA_ALLOW,
SAL_ADV, FIRE_ALLOW, HRA_FIXED, 


'SICK_ALLOW',' ME_1',' ME_2',' ME_3',' ME_4',' ME_5',
'ME_6','TIFFIN','SWEEPER',' LV_ENCASH',' PARA_ALLOW',
'SAL_ADV',' FIRE_ALLOW',' HRA_FIXED'


-------------------------------------------

PRCASSIGNMENT_BF_MAINSAVE
---------------------------------------------------------------------------------------------

LIBL_FEADV
LIBL_OLADV
LIBL_OTADV
LIBL_PFL
LIBL_PJADV
LIBL_SA
LIBL_SPL
LIBL_SPL1
LIBL_STADV
LIC
LINT_SPL
LNBL_FEADV
LNBL_OLADV
LNBL_OTADV
LNBL_PFL
LNBL_PJADV
LNBL_SA
LNBL_SPL
LNBL_SPL1
LNBL_STADV
LOAN_SPL


---------------------------------------------------------------------------------------------

DECLARE 
    LV_STR VARCHAR2(4000);
    LV_STR1 VARCHAR2(4000);
    LV_SQL VARCHAR2(4000);
    LV_TABLENAME VARCHAR2(30);
BEGIN

LV_TABLENAME := 'PISPAYTRANSACTION';

    LV_STR :='ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,ELECTRIC,ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LIBL_FEADV,LIBL_OLADV,LIBL_OTADV,LIBL_PFL,LIBL_PJADV,LIBL_SA,LIBL_SPL,LIBL_SPL1,LIBL_STADV,LIC,LINT_SPL,LNBL_FEADV,LNBL_OLADV,LNBL_OTADV,LNBL_PFL,LNBL_PJADV,LNBL_SA,LNBL_SPL,LNBL_SPL1,LNBL_STADV,LOAN_SPL,LTA,MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,SUSP_DEDN,TOTEARN,VPF,VPF_PERC';
    
    LV_STR1 :='ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,ELECTRIC,ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LTA,MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,SUSP_DEDN,TOTEARN,VPF,VPF_PERC';

DELETE FROM PISCOMPONENTMASTER
WHERE COMPONENTCODE IN 
(
    SELECT COMPCODE FROM
    (
        SELECT COMPCODE FROM (
            select regexp_substr(LV_STR,'[^,]+', 1, level) COMPCODE
            from dual
            connect BY regexp_substr(LV_STR, '[^,]+', 1, level)
            is not null
            ORDER BY COMPCODE
        ) 
        MINUS
        SELECT COMPCODE FROM (
            select regexp_substr(LV_STR1,'[^,]+', 1, level) COMPCODE
            from dual
            connect BY regexp_substr(LV_STR1, '[^,]+', 1, level)
            is not null
            ORDER BY COMPCODE
        )
    )
);

    FOR C1 IN (  
        SELECT WM_CONCAT(COLNAME) COLNAME FROM
        (
            SELECT COLNAME FROM (
                select regexp_substr(LV_STR,'[^,]+', 1, level) COLNAME
                from dual
                connect BY regexp_substr(LV_STR, '[^,]+', 1, level)
                is not null
                ORDER BY COLNAME
            ) 
            MINUS
            SELECT COLNAME FROM (
                select regexp_substr(LV_STR1,'[^,]+', 1, level) COLNAME
                from dual
                connect BY regexp_substr(LV_STR1, '[^,]+', 1, level)
                is not null
                ORDER BY COLNAME
            )
        )
    )
    LOOP
    LV_SQL := 'ALTER TABLE '||LV_TABLENAME||CHR(10);
    LV_SQL := 'DROP ( '||C1.COLNAME||')'||CHR(10);
    
        DBMS_OUTPUT.PUT_LINE(C1.COLNAME);
    END LOOP;
END;


---------------------------------------------------------------------------------------------

SELECT WM_CONCAT(COMPONENTCODE) 
FROM PISCOMPONENTMASTER
ORDER BY COMPANYCODE

ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,
BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,ELECTRIC,
ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,
ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LIBL_FEADV,LIBL_OLADV,LIBL_OTADV,LIBL_PFL,
LIBL_PJADV,LIBL_SA,LIBL_SPL,LIBL_SPL1,LIBL_STADV,LIC,LINT_SPL,LNBL_FEADV,LNBL_OLADV,
LNBL_OTADV,LNBL_PFL,LNBL_PJADV,LNBL_SA,LNBL_SPL,LNBL_SPL1,LNBL_STADV,LOAN_SPL,LTA,
MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,
PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,
SUSP_DEDN,TOTEARN,VPF,VPF_PERC


ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,
BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,ELECTRIC,
ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,
ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LTA,
MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,
PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,
SUSP_DEDN,TOTEARN,VPF,VPF_PERC


------------------------------------------------------
--NEW COMPONENTS
--------------------------------------------------------

ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,
BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,ELECTRIC,
ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,
ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LTA,MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,
OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,
SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,SUSP_DEDN,TOTEARN,VPF,VPF_PERC



select regexp_substr('A1,A2,A4','[^,]+', 1, level)
from dual
connect BY regexp_substr('A1,A2,A4', '[^,]+', 1, level)
is not null;

-------------------------------

ACT_PF_GRS,ADHOC,ATN_INCAMT,ATN_INCNT,ATTN_HOLD,ATTN_LDAY,ATTN_SALD,ATTN_WRKD,
BASIC,CONV_ALOW,CUMM_DAYS,CUMM_PF_C,CUMM_PF_E,CUMM_VPF,CUM_PFGROS,DA,
ELECTRIC,ESI_E,ESI_GROSS,ESI_RATE,GROSSDEDN,GROSSEARN,HRA,HRA_GROSS,HRA_PERC,
ITAX,LDAY_CL,LDAY_PL,LDAY_SL,LEAVE_ENC,LTA,MEDICAL,MISC_DEDN,NETSALARY,OEPF,OE_NPF,
OTHR_DEDN,OT_AMT,PEN_GROSS,PF_E,PF_GROSS,PTAX,PTAX_GROSS,RT_BASIC,SARR_ARRD,
SARR_ARRE,SARR_NPFARRE,SARR_PFARRE,SPL_ALLOW,SUSP_DEDN,TOTEARN,VPF,VPF_PERC


---------------------------------------------------------------------------------------------

pisemployeemaster


SELECT * FROM PISCOMPONENTMASTER WHERE COMPONENTTYPE='DEDUCTION'


SELECT * FROM PISCOMPONENTMASTER WHERE COMPONENTTYPE='EARNING'

SELECT * FROM PISCOMPONENTMASTER WHERE PHASE<=5
ORDER BY PHASE, CALCULATIONINDEX

DELETE  fROM PISCOMPONENTMASTER
WHERE COMPONENTCODE IN (
'NS_HRS','OT_HRS','OT_DAYS','SERV_PERC','CONV_PERC','ESI_ADJERN','HRA_AMT','NS_ALLOW','PROF_BONUS','SERV_ALW','ADHOC_NPF'
)



NS_HRS,
OT_HRS,
OT_DAYS,
SERV_PERC,
CONV_PERC
ESI_ADJERN
HRA_AMT
NS_ALLOW
PROF_BONUS
SERV_ALW
ADHOC_NPF


SELECT * FROM PISCOMPONENTMASTER

----------------------------------------------------------------

 
DELETE  fROM PISCOMPONENTMASTER
WHERE COMPONENTCODE IN (
'LWF','MESS','LTP','LOAN_STADV','LINT_STADV','LOAN_OTADV','LINT_OTADV','LOAN_PJADV','LINT_PJADV',
'LOAN_SA','LINT_SA','LOAN_FEADV','LINT_FEADV','LOAN_OLADV','LINT_OLADV','CLUB','LOAN_PFL','LINT_PFL','LOAN_SPL1','LINT_SPL1'
)




LWF
MESS
LTP
LOAN_STADV
LINT_STADV
LOAN_OTADV
LINT_OTADV
LOAN_PJADV
LINT_PJADV
LOAN_SA
LINT_SA
LOAN_FEADV
LINT_FEADV
LOAN_OLADV
LINT_OLADV
CLUB
LOAN_PFL
LINT_PFL
LOAN_SPL1
LINT_SPL1






SELECT * FROM
PISPAYTRANSACTION

ALTER TABLE PISPAYTRANSACTION
DROP COLUMN LINT_SPL1


ALTER TABLE PISPAYTRANSACTION
DROP (LOAN_PFL,LINT_PFL)
 

ALTER TABLE PISPAYTRANSACTION
DROP (
LWF,
MESS,
LTP,
LOAN_STADV,
LINT_STADV,
LOAN_OTADV,
LINT_OTADV,
LOAN_PJADV,
LINT_PJADV,
LOAN_SA,
LINT_SA,
LOAN_FEADV,
LINT_FEADV,
LOAN_OLADV,
LINT_OLADV,
CLUB,
LOAN_PFL,
LINT_PFL,
LOAN_SPL1,
LINT_SPL1)


ALTER TABLE PISCOMPONENTASSIGNMENT
DROP (
LWF,
MESS,
LTP,
LOAN_STADV,
LINT_STADV,
LOAN_OTADV,
LINT_OTADV,
LOAN_PJADV,
LINT_PJADV,
LOAN_SA,
LINT_SA,
LOAN_FEADV,
LINT_FEADV,
LOAN_OLADV,
LINT_OLADV,
CLUB,
LOAN_PFL,
LINT_PFL)




COMPANYCODE, DIVISIONCODE, YEARCODE, YEARMONTH, EFFECT_YEARMONTH, UNITCODE, DEPARTMENTCODE, 
CATEGORYCODE, GRADECODE, WORKERSERIAL, TOKENNO, TRANSACTIONTYPE, PAYMODE, 
ATTN_SALD, ATTN_WPAY, ATTN_ADJD, ATTN_TOTD, ATTN_LDAY, ATTN_CALCF, ATTN_OFFD, ATTN_HOLD, ATTN_WRKD, 
LDAY_CL, LDAY_PL, LDAY_SL, LVBL_CL, LVBL_PL, LVBL_SL, LV_ENCASH_DAYS, LV_ENCASH, 
BASIC, DA, HRA_GROSS, HRA_PER, HRA, PF_GROSS, PEN_GROSS, ESI_GROSS, PTAX_GROSS, 
PF_E, PF_C, FPF, VPF_PERC, VPF, ESI_E, ESI_C, PTAX, ITAX, ESI_RT, 
SARR_ARRE, SARR_ARRD, SARR_PFARRE, SARR_NPFARRE, 
GROSSEARN, GROSSDEDN, MISC_BF, MISC_CF, TOTEARN, TOTDEDN, NETSALARY, SYSROWID, LASTMODIFIED, 
USERNAME, 
ADHOC, SPL_ALLOW, NS_HRS, OT_HRS, OT_DAYS, NS_ALLOW, OT_AMT, SERV_PERC, SERV_ALW, CONV_PERC, 
CONV_ALOW, OEPF, OE_NPF, ESI_ADJERN, HRA_PERC, ACT_PF_GRS, LIC, ELECTRIC, SUSP_DEDN, 
MISC_DEDN, HRA_AMT, ADHOC_NPF, OTHR_DEDN, PROF_BONUS, MEDICAL, LTA, LOAN_SPL, LINT_SPL, 
LNBL_SPL, LIBL_SPL, LNBL_STADV, LIBL_STADV, LNBL_OTADV, LIBL_OTADV, LNBL_PJADV, LIBL_PJADV, 
LNBL_SA, LIBL_SA, LNBL_FEADV, LIBL_FEADV, LNBL_OLADV, LIBL_OLADV, LVENCSH_DAYS, LEAVE_ENC, EPF, 
ATN_INCNT, ATN_INCAMT, CUMM_DAYS, CUM_PFGROS, ESI_RATE, LNBL_PFL, LIBL_PFL, LOAN_SPL1, LNBL_SPL1, 
LIBL_SPL1, CUMM_PF_E, CUMM_PF_C, CUMM_VPF, RT_BASIC, LDAY_CS


---------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------