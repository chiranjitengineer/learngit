CREATE OR REPLACE PROCEDURE NJMCL_WEB.PROC_PFLOANSANCTION
(
  P_COMPANYCODE VARCHAR2,
  P_DIVISIONCODE VARCHAR2,
  P_PARAMS VARCHAR2,
  P_PARAMTAG   VARCHAR2 DEFAULT NULL
)
AS
    
LV_FIRST    VARCHAR2(50);
LV_SQLSTR   VARCHAR2(20000);
LV_COMPANY VARCHAR2(150);
LV_DIVISION VARCHAR2(150);

LV_RETMSG VARCHAR2(1000);

LV_LOANCODE VARCHAR2(10);
LV_LOANDATE VARCHAR2(10);
LV_PFNO VARCHAR2(30);
LV_LOANAMOUNT NUMBER(10,2);
LV_QRYVAL VARCHAR2(100);
LV_SQLERRM VARCHAR2(1000);
BEGIN  
    LV_RETMSG := '#SUCCESS';
    
    LV_SQLSTR:=NULL;          
    LV_LOANCODE := FN_GET_PARAMVALUE(P_PARAMS, 'LOANCODE');           
    LV_PFNO := FN_GET_PARAMVALUE(P_PARAMS, 'PFNO');             
    LV_LOANDATE := FN_GET_PARAMVALUE(P_PARAMS, 'LOANDATE');      
    LV_LOANAMOUNT := FN_GET_PARAMVALUE(P_PARAMS, 'LOANAMOUNT');    
    
--    DBMS_OUTPUT.PUT_LINE(LV_LOANCODE);
--    DBMS_OUTPUT.PUT_LINE(LV_PFNO);
--    DBMS_OUTPUT.PUT_LINE(LV_LOANDATE);
    DELETE FROM PF_ERROR_LOG
    WHERE PROC_NAME='PROC_PFLOANSANCTION';
    FOR C1 IN (
        SELECT * FROM PFLOANSANCTIONPARAM
        WHERE COMPANYCODE=P_COMPANYCODE
        AND DIVISIONCODE=P_DIVISIONCODE
        AND LOANCODE=LV_LOANCODE
        ORDER BY QUERYINDEX
    )
    LOOP
        LV_SQLERRM := NULL;
        LV_SQLSTR := NULL;
        BEGIN
            IF C1.PROC_NAME IS NOT NULL THEN
                LV_SQLSTR := 'BEGIN ' || FN_GET_QRYSTRING(P_PARAMS, C1.PROC_NAME) ||' END;';
                DBMS_OUTPUT.PUT_LINE(LV_SQLSTR);
                    
                INSERT INTO PF_ERROR_LOG(COMPANYCODE, DIVISIONCODE, PROC_NAME,ORA_ERROR_MESSG,ERROR_QUERY,PAR_VALUES,FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS ) 
                VALUES(P_COMPANYCODE, P_DIVISIONCODE, 'PROC_PFLOANSANCTION',LV_SQLERRM,LV_SQLSTR,P_PARAMS,SYSDATE,SYSDATE, 'REMARK');

                EXECUTE IMMEDIATE LV_SQLSTR;
               
            END IF;
            IF C1.QUERYSTRING IS NOT NULL THEN
                LV_SQLSTR := FN_GET_QRYSTRING(P_PARAMS, C1.QUERYSTRING);
                DBMS_OUTPUT.PUT_LINE(LV_SQLSTR);
                EXECUTE IMMEDIATE LV_SQLSTR INTO LV_QRYVAL;
                
                DBMS_OUTPUT.PUT_LINE(LV_QRYVAL);
                    
                INSERT INTO PF_ERROR_LOG(COMPANYCODE, DIVISIONCODE, PROC_NAME,ORA_ERROR_MESSG,ERROR_QUERY,PAR_VALUES,FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS ) 
                VALUES(P_COMPANYCODE, P_DIVISIONCODE, 'PROC_PFLOANSANCTION',LV_SQLERRM,LV_SQLSTR,P_PARAMS,SYSDATE,SYSDATE, 'REMARK');

                EXIT WHEN LV_QRYVAL <> '#SUCCESS';
            END IF;
            
        EXCEPTION WHEN OTHERS THEN 
            LV_SQLERRM := SQLERRM ;
            INSERT INTO PF_ERROR_LOG(COMPANYCODE, DIVISIONCODE, PROC_NAME,ORA_ERROR_MESSG,ERROR_QUERY,PAR_VALUES,FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS ) 
            VALUES(P_COMPANYCODE, P_DIVISIONCODE, 'PROC_PFLOANSANCTION',LV_SQLERRM,LV_SQLSTR,P_PARAMS,SYSDATE,SYSDATE, 'REMARK');

        END;
    END LOOP;
    LV_RETMSG := nvl(LV_QRYVAL,'#SUCCESS');
--    INSERT INTO SYS_GBL_PROCOUTPUT_INFO(SYS_SAVE_INFO) VALUES(LV_QRYVAL);
    DELETE FROM SYS_GBL_PROCOUTPUT_INFO WHERE 1=1;
    INSERT INTO SYS_GBL_PROCOUTPUT_INFO SELECT LV_RETMSG FROM DUAL;
   
     --  dbms_output.put_line(lv_sqlstr);
--     EXECUTE IMMEDIATE LV_SQLSTR;   

EXCEPTION WHEN OTHERS THEN NULL;  
    LV_SQLERRM := sqlerrm ;
--    INSERT INTO PF_ERROR_LOG(COMPANYCODE, DIVISIONCODE, PROC_NAME,ORA_ERROR_MESSG,ERROR_QUERY,PAR_VALUES,FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS ) 
--    VALUES(P_COMPANYCODE, P_DIVISIONCODE, 'PROC_PFLOANSANCTION',LV_SQLERRM,LV_SQLSTR,P_PARAMS,SYSDATE,SYSDATE, 'REMARK');

END;
/
