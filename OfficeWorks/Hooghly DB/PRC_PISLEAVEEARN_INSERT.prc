CREATE OR REPLACE PROCEDURE PRC_PISLEAVEEARN_INSERT 
( 
    P_COMPCODE Varchar2, 
    P_DIVCODE Varchar2,
    P_TRANTYPE Varchar2, 
    P_PHASE  number, 
    P_YEARMONTH Varchar2,
    P_EFFECTYEARMONTH Varchar2, 
    P_TABLENAME Varchar2,
    P_PHASE_TABLENAME Varchar2,
    P_UNIT  Varchar2,
    P_CATEGORY    Varchar2  DEFAULT NULL,
    P_GRADE       Varchar2  DEFAULT NULL,
    P_DEPARTMENT  Varchar2  DEFAULT NULL,
    P_WORKERSERIAL VARCHAR2 DEFAULT NULL
)
as 
lv_fn_stdt DATE := TO_DATE('01/'||SUBSTR(P_YEARMONTH,5,2)||'/'||SUBSTR(P_YEARMONTH,5,2),'DD/MM/YYYY');
lv_fn_endt DATE := LAST_DAY(TO_DATE('01/'||SUBSTR(P_YEARMONTH,5,2)||'/'||SUBSTR(P_YEARMONTH,5,2),'DD/MM/YYYY'));

lv_TableName        varchar2(50);
lv_Remarks          varchar2(1000) := '';
lv_SqlStr           varchar2(4000);
lv_AttnComponent    varchar2(4000) := ''; 
lv_CompWithZero     varchar2(1000) := '';
lv_CompWithValue    varchar2(4000) := '';
lv_CompCol          varchar2(1000) := '';
lv_SQLCompView      varchar2(4000) := '';
lv_parvalues        varchar2(500);
lv_sqlerrm          varchar2(500) := '';   
lv_ProcName         varchar2(30)   := 'PRC_PISLEAVEEARN_INSERT';
lv_TranType         varchar2(20) := 'ATTENDANCE';
begin

--select * from pisleavetransaction

--select * from pisleaveapplication


--select * from pisleaveentitlement

--select * from sys_parameter
--WHERE PARAMETER_NAME='LEAVE BALANCE MAINTAIN PROPORTIONATE'




--SET DEFINE OFF;
--Insert into SYS_PARAMETER
--   (PARAMETER_NAME, PARAMETER_DESC, PARAMETER_VALUE, PROJECTNAME, COMPANYCODE, LASTMODIFIED, SYSROWID, DIVISIONCODE, USERNAME, ALLOW_CHANGE_FROM_INTERFACE)
-- Values
--   ('LEAVE BALANCE MAINTAIN PROPORTIONATE', 'LEAVE BALANCE MAINTAIN PROPORTIONATE', 'Y', 'PIS', 'BJ0056', 
--    TO_DATE('02/28/2015 22:45:18', 'MM/DD/YYYY HH24:MI:SS'), '9', '0001', 'SWT', 'SWT TO SET');
--COMMIT;


--SELECT * FROM PISLEAVEENTITLEMENT

--SELECT * FROM PISLEAVETRANSACTION

--INSERT INTO PISLEAVETRANSACTION

--SELECT A.COMPANYCODE, A.DIVISIONCODE, A.YEARCODE,A.CALENDARYEAR, '202101' YEARMONTH, 
--A.CATEGORYCODE, A.GRADECODE, A.WORKERSERIAL, A.TOKENNO, LEAVECODE,round(ENTITLEMENTS/12,2) NOOFDAYS,
--'ADD' ADDLESS,'ENT' TRANSACTIONTYPE,SYSDATE WITHEFFECTFROM,'SWT' USERNAME,SYSDATE LASTMODIFIED,fn_generate_sysrowid SYSROWID 
--FROM PISLEAVEENTITLEMENT A, PISEMPLOYEEMASTER  B
--WHERE A.COMPANYCODE='BJ0056'
--AND A.DIVISIONCODE='0001'
--AND A.YEARCODE='2020-2021'
--AND A.DIVISIONCODE=B.DIVISIONCODE
--AND A.COMPANYCODE=B.COMPANYCODE
--AND A.DIVISIONCODE=B.DIVISIONCODE
--AND A.WORKERSERIAL=B.WORKERSERIAL


--SELECT * FROM PISLEAVETRANSACTION A
--WHERE A.COMPANYCODE='BJ0056'
--AND A.DIVISIONCODE='0001'
--AND A.YEARCODE='2020-2021'
--AND A.YEARMONTH='202101'
--AND A.WORKERSERIAL IN 
--(
--    SELECT WORKERSERIAL FROM PISEMPLOYEEMASTER
--    WHERE COMPANYCODE='BJ0056'
--    AND DIVISIONCODE='0001'
--    AND UNITCODE = '10'
--    AND CATEGORYCODE = '10'
--    AND GRADECODE = '10'
--)
--AND A.CATEGORYCODE = '10'
--AND A.GRADECODE = '10'



    lv_SqlStr := ' DELETE FROM '||P_TABLENAME;
    BEGIN
        execute immediate lv_SqlStr;
      EXCEPTION WHEN OTHERS THEN NULL;
    END;
    --INSERT INTO PISPAYTRANSACTION_SWT (
    lv_SqlStr := ' INSERT INTO '||P_TABLENAME||' ( '||CHR(10)
               ||' COMPANYCODE, DIVISIONCODE, YEARCODE, YEARMONTH, EFFECT_YEARMONTH,UNITCODE, DEPARTMENTCODE, CATEGORYCODE, GRADECODE, WORKERSERIAL, TOKENNO, '||CHR(10)  
               ||' TRANSACTIONTYPE, PAYMODE, ATTN_SALD, ATTN_WPAY, ATTN_ADJD, ATTN_TOTD, ATTN_LDAY, ATTN_HOLD, ATTN_CALCF, ATTN_OFFD, LDAY_PL, LDAY_CL, LDAY_SL '||CHR(10)
               ||' ,LV_ENCASH_DAYS '||CHR(10)
               ||'     ) '||CHR(10)
               ||' SELECT A.COMPANYCODE, A.DIVISIONCODE, A.YEARCODE, A.YEARMONTH, '''||P_EFFECTYEARMONTH||''' EFFECT_YEARMONTH, A.UNITCODE, A.DEPARTMENTCODE, A.CATEGORYCODE, A.GRADECODE, A.WORKERSERIAL, B.TOKENNO, '||CHR(10) 
               ||' '''||P_TRANTYPE||''' TRANSACTIONTYPE, B.PAYMODE,  A.SALARYDAYS ATTN_SALD, NVL(A.WITHOUTPAYDAYS,0) ATTN_WPAY, NVL(A.ADJUSTMENTDAYS,0) ATTN_ADJD, '||CHR(10) 
               ||' NVL(A.TOTALDAYS,0) ATTN_TOTD, 0 ATTN_LDAY, NVL(A.HOLIDAYS,0) ATTN_HOLD, NVL(A.CALCULATIONFACTORDAYS,0) ATTN_CALCF, NVL(NOOFOFFDAYS,0) ATTN_OFFD, 0 LDAY_PL, 0 LDAY_CL, 0 LDAY_SL '||CHR(10)
               ||' ,NVL(LV_ENCASH_DAYS,0) LV_ENCASH_DAYS '||CHR(10)    
               ||'  FROM PISMONTHATTENDANCE A, PISEMPLOYEEMASTER B '||CHR(10)
               ||' WHERE A.COMPANYCODE = '''||P_COMPCODE||''' AND A.DIVISIONCODE = '''||P_DIVCODE||''' '||CHR(10)
               ||'   AND A.TRANSACTIONTYPE = '''||lv_TranType||''' '||chr(10)
               ||'   AND A.YEARMONTH = '''||P_YEARMONTH||'''    '||CHR(10)
               ||'   AND A.UNITCODE = '''||P_UNIT||'''        '||CHR(10);
    if NVL(P_CATEGORY,'XXXXX') <> 'XXXXX' THEN
        lv_SqlStr := lv_SqlStr ||'   AND A.CATEGORYCODE = '''||P_CATEGORY||''' '||CHR(10);
    end if;
    if NVL(P_GRADE,'XXXXX') <> 'XXXXX' THEN
        lv_SqlStr := lv_SqlStr ||'   AND A.GRADECODE = '''||P_GRADE||''' '||CHR(10);
    end if;
    if NVL(P_DEPARTMENT,'XXXXX') <> 'XXXXX' THEN
        lv_SqlStr := lv_SqlStr ||'   AND A.DEPARTMENTCODE = '''||P_DEPARTMENT||''' '||CHR(10);
    end if;
    if NVL(P_WORKERSERIAL,'XXXXX') <> 'XXXXX' THEN
        lv_SqlStr := lv_SqlStr ||'   AND A.WORKERSERIAL = '''||P_WORKERSERIAL||''' '||CHR(10);
    end if;
    if P_TRANTYPE = 'SALARY' OR P_TRANTYPE = 'ARREAR' THEN
        lv_SqlStr := lv_SqlStr ||'   AND (NVL(A.SALARYDAYS,0) + NVL(A.ADJUSTMENTDAYS,0)) > 0 '||CHR(10);
    end if;
    lv_SqlStr := lv_SqlStr||'   AND A.COMPANYCODE = B.COMPANYCODE AND A.DIVISIONCODE = B.DIVISIONCODE '||CHR(10)
               ||' AND A.WORKERSERIAL = B.WORKERSERIAL '||CHR(10)  
               ||' ORDER BY A.TOKENNO  '||CHR(10); 
               
               
    insert into PIS_ERROR_LOG(COMPANYCODE, DIVISIONCODE, PROC_NAME,ORA_ERROR_MESSG,ERROR_QUERY,PAR_VALUES,FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS ) 
    values( P_COMPCODE, P_DIVCODE, lv_ProcName,lv_sqlerrm,lv_SqlStr,lv_parvalues,lv_fn_stdt,lv_fn_endt, lv_remarks);
    execute immediate lv_SqlStr; COMMIT;                      
exception
when others then
 lv_sqlerrm := sqlerrm ;
 insert into PIS_ERROR_LOG(COMPANYCODE, DIVISIONCODE, PROC_NAME,ORA_ERROR_MESSG,ERROR_QUERY,PAR_VALUES,FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS ) 
 values( P_COMPCODE, P_DIVCODE, lv_ProcName,lv_sqlerrm,lv_SqlStr,lv_parvalues,lv_fn_stdt,lv_fn_endt, lv_remarks);
end;
/
