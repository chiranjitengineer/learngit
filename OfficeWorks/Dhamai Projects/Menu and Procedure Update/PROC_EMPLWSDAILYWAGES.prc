CREATE OR REPLACE PROCEDURE PROC_EMPLWSDAILYWAGES
(
  P_COMPANYCODE VARCHAR2,
  P_DIVISIONCODE VARCHAR2,
  P_FROMDATE VARCHAR2,
  P_TODATE VARCHAR2,
  P_CATEGORY VARCHAR2,
  P_DIVISION VARCHAR2,
  P_ATTNBOOK VARCHAR2,
  P_PROCESSTYPE VARCHAR2
)
AS
  QRY_STRING VARCHAR2(30000);
  LV_CATEGORY           VARCHAR2(3000);
  LV_DIVISION          VARCHAR2(3000);
  LV_ATTAINBOOK          VARCHAR2(3000);
BEGIN

  IF P_CATEGORY IS NOT NULL THEN
  SELECT REPLACE(P_CATEGORY, '''') INTO LV_CATEGORY FROM DUAL;
  ELSE 
  SELECT 'ALL' INTO LV_CATEGORY FROM DUAL;          
  END IF;

 IF P_DIVISION IS NOT NULL THEN
  SELECT REPLACE(P_DIVISION, '''') INTO LV_DIVISION FROM DUAL;
  ELSE 
  SELECT 'ALL' INTO LV_DIVISION FROM DUAL;      
 END IF;
 
 IF P_ATTNBOOK IS NOT NULL THEN
  SELECT REPLACE(P_ATTNBOOK, '''') INTO LV_ATTAINBOOK FROM DUAL;
  ELSE 
  SELECT 'ALL' INTO LV_ATTAINBOOK FROM DUAL;      
 END IF;
 
  DELETE FROM GTT_EMPLWSDAILYWAGES;
  
  QRY_STRING:='INSERT INTO GTT_EMPLWSDAILYWAGES(COMPANYNAME,DIVISIONNAME,TOKENNO,EMPLOYEENAME,CATEGORYTYPE,OCCUPATIONCODE,ATTENDANCEDATE,HAZIRA,TOTALOUTPUT,DAILYWAGES,DA,INCENTIVE,POP,GROSSWAGES,OVERTIMEHOURS,OT_AMOUNT,FACT_ALOW,EXTRA_ALOW,SPRAY_ALOW,CATEGORYLBL,DIVISIONLBL,ATTAINBOOKBL,REPORTHEADER )'|| CHR(10)   
           ||'SELECT DISTINCT B.COMPANYNAME,C.DIVISIONNAME,'||CHR(10)
           ||'A.TOKENNO,D.EMPLOYEENAME,A.CATEGORYCODE AS CATEGORYTYPE,A.OCCUPATIONCODE,ATTENDANCEDATE,NVL(A.HAZIRA,0) AS HAZIRA,NVL(A.TOTALOUTPUT,0) AS TOTALOUTPUT,'||CHR(10)
           ||'NVL(A.DAILYWAGES,0) AS DAILYWAGES,NVL(A.DA,0) AS DA,NVL(A.INCENTIVE,0) AS INCENTIVE,NVL(A.POP,0) AS POP,'||CHR(10)
           ||'NVL(A.GROSSWAGES,0) AS GROSSWAGES,NVL(A.OVERTIMEHOURS,0) AS OVERTIMEHOURS,NVL(A.OT_AMOUNT,0) AS OT_AMOUNT, NVL(A.FACT_ALOW,0) AS FACT_ALOW,NVL(A.EXTRA_ALLOW,0) AS EXTRA_ALLOW, NVL(A.SPRAY_ALLOW,0) AS SPRAY_ALLOW, '||CHR(10) 
           ||''''||LV_CATEGORY||''' AS CATEGORYLBL,'''||LV_DIVISION||''' AS DIVISIONLBL,'''||LV_ATTAINBOOK||''' AS ATTAINBOOKBL,'''||P_FROMDATE||'''||'' to ''||'''||P_TODATE||''' as REPORTHEADER'||CHR(10)
           ||'FROM GPSDAILYPAYSHEETDETAILS A               '||CHR(10)  
           ||'INNER JOIN COMPANYMAST B ON A.COMPANYCODE= B.COMPANYCODE '||CHR(10)
           ||'INNER JOIN DIVISIONMASTER C ON A.DIVISIONCODE= C.DIVISIONCODE'||CHR(10)
           ||'INNER JOIN GPSEMPLOYEEMAST D ON A.WORKERSERIAL=D.WORKERSERIAL AND A.COMPANYCODE=D.COMPANYCODE AND A.DIVISIONCODE=D.DIVISIONCODE'|| CHR(10)
           ||'WHERE A.COMPANYCODE='''||P_COMPANYCODE||''' '|| CHR(10)
           ||'AND A.DIVISIONCODE='''||P_DIVISIONCODE||''' '|| CHR(10)
           ||'AND A.ATTENDANCEDATE>=TO_DATE('''||P_FROMDATE||''',''dd/mm/yyyy'') '|| CHR(10)
           ||'AND A.ATTENDANCEDATE<=TO_DATE('''||P_TODATE||''',''dd/mm/yyyy'') '|| CHR(10);
             
              IF P_CATEGORY IS NOT NULL THEN
                  QRY_STRING := QRY_STRING || ' AND D.CATEGORYCODE IN ('||P_CATEGORY||') '|| CHR(10);
              END IF;
              IF P_DIVISION IS NOT NULL THEN
                  QRY_STRING := QRY_STRING || ' AND D.CLUSTERCODE IN ('||P_DIVISION||') '|| CHR(10);
              END IF;
              IF P_ATTNBOOK IS NOT NULL THEN
                  QRY_STRING := QRY_STRING || ' AND D.ATTNBOOKCODE IN ('||P_ATTNBOOK||') '|| CHR(10);
              END IF;
              
              IF P_PROCESSTYPE IS NOT NULL THEN
                        IF P_PROCESSTYPE != 'ALL' THEN
                            IF P_PROCESSTYPE = 'CASH' THEN
                            QRY_STRING := QRY_STRING || ' AND A.PROCESSTYPE LIKE ''%'||P_PROCESSTYPE||'%'' '||CHR(10);
                            ELSE
                            --QRY_STRING := QRY_STRING || ' AND A.PROCESSTYPE <> ''CASH'' '||chr(10);
                            QRY_STRING := QRY_STRING || ' AND A.PROCESSTYPE NOT LIKE ''%CASH%'' '||CHR(10);
                            END IF;                     
                        END IF;
                    END IF;
              QRY_STRING := QRY_STRING || '   ORDER BY A.TOKENNO ,ATTENDANCEDATE         '||CHR(10)  ;
 -- dbms_output.put_line(QRY_STRING);
 EXECUTE IMMEDIATE QRY_STRING;
 
  QRY_STRING:='INSERT INTO GTT_EMPLWSDAILYWAGES(OCCUPATIONCODESUM,OCCUPATIONDESC,TOTALHAZIRA,TOTALGROSSWAGES,TOTALOUTPUTSUM,TOTALOT_AMOUNT)'|| CHR(10)   
  ||' SELECT OCC.OCCUPATIONCODE OCCUPATIONCODESUM ,M.OCCUPATIONDESC OCCUPATIONDESC , NVL(OCC.HAZIRA,0) TOTALHAZIRA,NVL(OCC.GROSSWAGES,0) TOTALGROSSWAGES,NVL(OCC.TOTALOUTPUT,0) TOTALOUTPUTSUM ,NVL(OCC.TOTALOT_AMOUNT,0) TOTALOT_AMOUNT FROM '||CHR(10)
  ||' (SELECT A.COMPANYCODE,A.DIVISIONCODE,A.OCCUPATIONCODE,NVL(SUM(NVL(A.HAZIRA,0)),0) AS HAZIRA                 '||CHR(10)
  ||' ,NVL(SUM(NVL(A.GROSSWAGES,0)),0) AS GROSSWAGES,NVL(SUM(NVL(A.TOTALOUTPUT,0)),0) AS TOTALOUTPUT,NVL(SUM(NVL(A.OT_AMOUNT,0)),0) AS TOTALOT_AMOUNT'||CHR(10)
  ||' FROM GPSDAILYPAYSHEETDETAILS A INNER JOIN GPSEMPLOYEEMAST D ON A.WORKERSERIAL=D.WORKERSERIAL AND A.COMPANYCODE=D.COMPANYCODE AND A.DIVISIONCODE=D.DIVISIONCODE'||CHR(10)
  ||' WHERE A.COMPANYCODE='''||P_COMPANYCODE||''' '|| CHR(10)
  ||' AND A.DIVISIONCODE='''||P_DIVISIONCODE||''' '|| CHR(10)
  ||' AND A.ATTENDANCEDATE>=TO_DATE('''||P_FROMDATE||''',''dd/mm/yyyy'') '|| CHR(10)
  ||' AND A.ATTENDANCEDATE<=TO_DATE('''||P_TODATE||''',''dd/mm/yyyy'') '|| CHR(10);
              IF P_CATEGORY IS NOT NULL THEN
                  QRY_STRING := QRY_STRING || ' AND D.CATEGORYCODE IN ('||P_CATEGORY||') '|| CHR(10);
              END IF;
              IF P_DIVISION IS NOT NULL THEN
                  QRY_STRING := QRY_STRING || ' AND D.CLUSTERCODE IN ('||P_DIVISION||') '|| CHR(10);
              END IF;
              IF P_ATTNBOOK IS NOT NULL THEN
                  QRY_STRING := QRY_STRING || ' AND D.ATTNBOOKCODE IN ('||P_ATTNBOOK||') '|| CHR(10);
              END IF;
              
              IF P_PROCESSTYPE IS NOT NULL THEN
                        IF P_PROCESSTYPE != 'ALL' THEN
                            IF P_PROCESSTYPE = 'CASH' THEN
                            QRY_STRING := QRY_STRING || ' AND A.PROCESSTYPE LIKE ''%'||P_PROCESSTYPE||'%'' '||CHR(10);
                            ELSE
                            --QRY_STRING := QRY_STRING || ' AND A.PROCESSTYPE <> ''CASH'' '||chr(10);
                            QRY_STRING := QRY_STRING || ' AND A.PROCESSTYPE NOT LIKE ''%CASH%''  '||CHR(10);
                            END IF;                     
                        END IF;
                    END IF;
  
              QRY_STRING := QRY_STRING || ' GROUP BY A.COMPANYCODE,A.DIVISIONCODE,A.OCCUPATIONCODE '|| CHR(10);
              QRY_STRING := QRY_STRING || ' ) OCC LEFT JOIN GPSOCCUPATIONMAST M ON OCC.OCCUPATIONCODE= M.OCCUPATIONCODE AND OCC.COMPANYCODE= M.COMPANYCODE AND OCC.DIVISIONCODE=M.DIVISIONCODE '|| CHR(10);
  --dbms_output.put_line(QRY_STRING);
 EXECUTE IMMEDIATE QRY_STRING;
  
  
END;
/