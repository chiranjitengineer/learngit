DROP PROCEDURE NJMCL_WEB.PROC_WPSWAGESPROCESS_INSERT;

CREATE OR REPLACE PROCEDURE NJMCL_WEB.PROC_WPSWAGESPROCESS_INSERT ( P_COMPCODE Varchar2, 
                                                  P_DIVCODE Varchar2, 
                                                  P_YEARCODE Varchar2,
                                                  P_FNSTDT Varchar2, 
                                                  P_FNENDT Varchar2,
                                                  P_PHASE  number, 
                                                  P_PHASE_TABLENAME Varchar2,
                                                  P_TABLENAME Varchar2,
                                                  P_WORKKERSERIAL VARCHAR2 DEFAULT NULL,
                                                  P_PROCESSTYPE  VARCHAR2 DEFAULT 'WAGES PROCESS')
as 
lv_fn_stdt DATE := TO_DATE(P_FNSTDT,'DD/MM/YYYY');
lv_fn_endt DATE := TO_DATE(P_FNENDT,'DD/MM/YYYY');
lv_TableName        varchar2(50);
lv_Remarks          varchar2(1000) := '';
lv_SqlStr           varchar2(20000);
lv_AttnComponent    varchar2(4000) := ''; 
lv_CompWithZero     varchar2(1000) := '';
lv_CompWithValue    varchar2(4000) := '';
lv_CompCol          varchar2(1000) := '';
lv_MastComponent    varchar2(4000) := '';
lv_MastComponentGroupBy    varchar2(4000) := '';
lv_MastComponent_RT varchar2(4000) := '';
lv_parvalues        varchar2(500);
lv_sqlerrm          varchar2(500) := '';
lv_ProcName         varchar2(30) := 'PROC_WPSWAGESPROCESS_INSERT';   

begin
    
    --PROC_WPSVBPROCEES_WORKORDER(P_COMPCODE,P_DIVCODE,'SWT',P_YEARCODE,P_FNSTDT,P_FNENDT, NULL);

    lv_SqlStr := 'TRUNCATE TABLE WPSWAGESDETAILS_SWT';
    execute immediate lv_sqlStr;
    
    lv_SqlStr := 'TRUNCATE TABLE WPSWAGESDETAILS_MV_SWT';
    execute immediate lv_sqlStr;
    
    --- BELOW PROCEDURE CALL STL DATA TRANSFER INTO ATTENDNACE TABLE --------
    --PROC_STL_DATATRANSFER_ATTN ( P_COMPCODE,P_DIVCODE,P_FNSTDT,P_FNENDT,P_WORKKERSERIAL);
    
    PROC_WPSVIEWCREATION ( P_COMPCODE,P_DIVCODE,'ALL',0,P_FNSTDT,P_FNENDT,P_TABLENAME,P_PROCESSTYPE);
    ----- CREATE TABLE WMPTEMPMAST FROM THE VIEW MAST
    
    
    BEGIN 
        EXECUTE IMMEDIATE 'DROP TABLE WPSTEMPMAST CASCADE CONSTRAINTS';
        EXECUTE IMMEDIATE 'CREATE TABLE WPSTEMPMAST AS SELECT * FROM MAST';
      EXCEPTION WHEN OTHERS THEN 
        EXECUTE IMMEDIATE 'CREATE TABLE WPSTEMPMAST AS SELECT * FROM MAST';
    END;
    
    ----- CREATE TABLE WMPTEMPATTN FROM THE VIEW ATTN
    BEGIN 
        EXECUTE IMMEDIATE 'DROP TABLE WPSTEMPATTN CASCADE CONSTRAINTS';
        EXECUTE IMMEDIATE 'CREATE TABLE WPSTEMPATTN AS SELECT * FROM ATTN';
      EXCEPTION WHEN OTHERS THEN 
        EXECUTE IMMEDIATE 'CREATE TABLE WPSTEMPATTN AS SELECT * FROM ATTN';
    END;    

    BEGIN 
        EXECUTE IMMEDIATE 'DROP TABLE WPSTEMPFNPARAM CASCADE CONSTRAINTS';
        EXECUTE IMMEDIATE 'CREATE TABLE WPSTEMPFNPARAM AS SELECT * FROM FNPARAM';
      EXCEPTION WHEN OTHERS THEN 
        EXECUTE IMMEDIATE 'CREATE TABLE WPSTEMPFNPARAM AS SELECT * FROM FNPARAM';
    END;    
    
    lv_SqlStr := ' DELETE FROM '||P_TABLENAME;
    BEGIN
        execute immediate lv_SqlStr;
      EXCEPTION WHEN OTHERS THEN NULL;
    END;
    lv_MastComponent := '';
    lv_MastComponent_RT := '';
    for c1 in ( SELECT COMPONENTSHORTNAME FROM WPSCOMPONENTMASTER 
                 WHERE COMPANYCODE = P_COMPCODE AND DIVISIONCODE = P_DIVCODE
                   AND NVL(TAKEPARTINWAGES,'N') ='Y' AND NVL(MASTERCOMPONENT,'N') = 'Y'
              )
    LOOP
        IF length(lv_MastComponent) >= 4 THEN
            lv_MastComponent := lv_MastComponent||',NVL(B.'||c1.COMPONENTSHORTNAME||',0) AS '||c1.COMPONENTSHORTNAME;
            lv_MastComponentGroupBy := lv_MastComponentGroupBy||',NVL(B.'||c1.COMPONENTSHORTNAME||',0)';
            lv_MastComponent_RT := lv_MastComponent_RT||','||c1.COMPONENTSHORTNAME||'_RT';
        ELSE
            lv_MastComponent := 'NVL(B.'||c1.COMPONENTSHORTNAME||',0) AS '||c1.COMPONENTSHORTNAME ;
            lv_MastComponentGroupBy := 'NVL(B.'||c1.COMPONENTSHORTNAME||',0)';
            lv_MastComponent_RT := c1.COMPONENTSHORTNAME||'_RT';
        END IF;    
    END LOOP;                   
    
    --lv_MastCompenet :=     
    lv_SqlStr := ' INSERT INTO '||P_TABLENAME||' ( '||CHR(10)
            ||'    COMPANYCODE, DIVISIONCODE, SYSROWID, YEARCODE, FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, WORKERSERIAL, TOKENNO, WORKERCATEGORYCODE, GRADECODE, SHIFTCODE, DEPARTMENTCODE, SECTIONCODE, OCCUPATIONCODE, DEPTSERIAL,'||CHR(10)
            ||' '||lv_MastComponent_RT||', '||CHR(10) 
            ||' ATTENDANCEHOURS, NIGHTALLOWANCEHOURS, OVERTIMEHOURS, OT_NSHRS, HOLIDAYHOURS, LAYOFFHOURS, FBKHOURS, STLHOURS, '||CHR(10) 
            ||' VBASIC,NS_ALLOW, FBK_WAGES, OT_AMOUNT, NS_ALLOW_OT, HRS_RATE '||CHR(10) 
            ||' ) '||CHR(10)
            ||' SELECT A.COMPANYCODE, A.DIVISIONCODE, A.WORKERSERIAL SYSROWID, '''||P_YEARCODE||''',  '''||lv_fn_stdt||''','''||lv_fn_endt||''', A.WORKERSERIAL, A.TOKENNO, A.WORKERCATEGORYCODE, B.GRADECODE, A.SHIFTCODE, A.DEPARTMENTCODE, A.SECTIONCODE, A.OCCUPATIONCODE, A.DEPTSERIAL,'||CHR(10)
            ||' '||lv_MastComponent||','||CHR(10)            
            ||' SUM(A.ATTENDANCEHOURS) ATTENDANCEHOURS, SUM(NVL(A.NIGHTALLOWANCEHOURS,0)) NIGHTALLOWANCEHOURS, SUM(NVL(A.OVERTIMEHOURS,0)) OVERTIMEHOURS, SUM(NVL(A.OT_NSHRS,0)) OT_NSHRS, '||CHR(10)
            ||' SUM(NVL(A.HOLIDAYHOURS,0))HOLIDAYHOURS, SUM(NVL(A.LAYOFFHOURS,0)) LAYOFFHOURS, SUM(NVL(A.FBKHOURS,0)) FBKHOURS, SUM(NVL(A.STLHOURS,0)) STLHOURS, '||CHR(10) 
            ||' ROUND(NVL(C.VBAMOUNT,0),2) VBASIC, SUM(NVL(C.VBAMOUNT_NS,0)) NS_ALLOW, SUM(NVL(C.VBAMOUNT_FBK,0)) VBAMOUNT_FBK,  SUM(NVL(C.VBAMOUNT_NS,0)) NS_ALLOW, SUM(NVL(C.VBAMOUNT_OTNS,0)) NS_ALLOW_OT,'||CHR(10)
            ||' ROUND(NVL(HRS_RATE,0),4) HRS_RATE'||CHR(10)
            ||' FROM '||CHR(10) 
            ||' ( '||CHR(10)
            ||'  SELECT Z.COMPANYCODE, Z.DIVISIONCODE, Z.WORKERSERIAL, Z.TOKENNO,Z.WORKERCATEGORYCODE, Z.SHIFTCODE, Z.DEPARTMENTCODE, Z.SECTIONCODE,Z.OCCUPATIONCODE, Z.DEPTSERIAL,'||CHR(10)
            ||'  SUM(ATTENDANCEHOURS) ATTENDANCEHOURS, SUM(NVL(NIGHTALLOWANCEHOURS,0)) NIGHTALLOWANCEHOURS, SUM(NVL(OVERTIMEHOURS,0)) OVERTIMEHOURS,  SUM(NVL(OT_NSHRS,0)) OT_NSHRS, '||CHR(10)
            ||'  SUM(HOLIDAYHOURS) HOLIDAYHOURS, SUM(LAYOFFHOURS) LAYOFFHOURS, SUM(FBKHOURS) FBKHOURS, /*SUM(STLHOURS)*/ 0 STLHOURS  '||CHR(10)
            ||'  FROM WPSATTENDANCEDAYWISE Z  '||CHR(10)
            ||'  WHERE Z.COMPANYCODE = '''||P_COMPCODE||''' AND Z.DIVISIONCODE = '''||P_DIVCODE||''' '||CHR(10)
            ||'    AND Z.YEARCODE = '''||P_YEARCODE||''' '||CHR(10) 
            ||'    AND Z.DATEOFATTENDANCE >= '''||lv_fn_stdt||''' AND Z.DATEOFATTENDANCE <= '''||lv_fn_endt||''' '||CHR(10)
--            ||'  FROM ( '||CHR(10)   
--            ||'         SELECT A.COMPANYCODE, A.DIVISIONCODE, A.WORKERSERIAL, A.TOKENNO,A.WORKERCATEGORYCODE, A.SHIFTCODE,A.DEPARTMENTCODE DEPARTMENTCODE, A.SECTIONCODE, A.OCCUPATIONCODE, A.DEPTSERIAL,'||CHR(10) 
--            ||'         NVL(ATTENDANCEHOURS,0) ATTENDANCEHOURS, NVL(OVERTIMEHOURS,0) OVERTIMEHOURS,   '||CHR(10)  
--            ||'         NVL(HOLIDAYHOURS,0) HOLIDAYHOURS, NVL(LAYOFFHOURS,0) LAYOFFHOURS, NVL(FBKHOURS,0) FBKHOURS, 0 STLHOURS, '||CHR(10) 
--            ||'         NVL(NIGHTALLOWANCEHOURS,0) NIGHTALLOWANCEHOURS, NVL(OT_NSHRS,0)    '||CHR(10)
--            ||'         FROM WPSATTENDANCEDAYWISE A  '||CHR(10)
--            ||'         WHERE A.COMPANYCODE = '''||P_COMPCODE||''' AND A.DIVISIONCODE = '''||P_DIVCODE||''' '||CHR(10)
--            ||'           AND A.YEARCODE = '''||P_YEARCODE||''' '||CHR(10) 
--            ||'           AND A.DATEOFATTENDANCE >= '''||lv_fn_stdt||''' AND A.DATEOFATTENDANCE <= '''||lv_fn_endt||''' '||CHR(10)
--            ||'         UNION ALL '||CHR(10)
--            ||'         SELECT  S.COMPANYCODE, S.DIVISIONCODE, S.WORKERSERIAL, S.TOKENNO,S.WORKERCATEGORYCODE, S.DEPARTMENTCODE DEPARTMENTCODE, S.SECTIONCODE,'||CHR(10)
--            ||'         0 ATTENDANCEHOURS, 0 OVERTIMEHOURS,    '||CHR(10)
--            ||'         0 HOLIDAYHOURS, 0 LAYOFFHOURS, 0 FBKHOURS, STLHOURS STLHOURS, '||CHR(10)
--            ||'         0 NIGHTALLOWANCEHOURS  '||CHR(10)
--            ||'         FROM WPSSTLENTRY S  '||CHR(10)
--            ||'         WHERE S.COMPANYCODE = '''||P_COMPCODE||''' AND S.DIVISIONCODE = '''||P_DIVCODE||''' '||CHR(10) 
--            ||'           AND S.FORTNIGHTENDDATE = '''||lv_fn_endt||''' '||CHR(10)
--            ||'           AND S.LEAVECODE = ''STL'' '||CHR(10)
--            ||'       ) Z '||CHR(10)
            ||'   GROUP BY Z.COMPANYCODE, Z.DIVISIONCODE, Z.WORKERSERIAL, Z.TOKENNO,Z.WORKERCATEGORYCODE,Z.SHIFTCODE, Z.DEPARTMENTCODE, Z.SECTIONCODE, Z.OCCUPATIONCODE, Z.DEPTSERIAL'||CHR(10)    
            ||' ) A, WPSTEMPMAST B, /*WPSWORKERMAST B,*/ '||CHR(10) 
            ||' (    '||CHR(10)
            ||'      SELECT WORKERSERIAL, SHIFTCODE, DEPARTMENTCODE, SECTIONCODE, OCCUPATIONCODE, DEPTSERIAL, SUM(VBAMOUNT) VBAMOUNT, '||CHR(10)
            ||'      SUM(NVL(VBAMOUNT_FBK,0)) VBAMOUNT_FBK, SUM(NVL(VBAMOUNT_NS,0)) VBAMOUNT_NS, SUM(NVL(VBAMOUNT_OTNS,0)) VBAMOUNT_OTNS, '||CHR(10)  
            ||'      SUM(NVL(HRS_RATE,0)) HRS_RATE '||CHR(10)
            ||'      FROM WPSVBDETAILS '||CHR(10)
            ||'      WHERE COMPANYCODE = '''||P_COMPCODE||''' AND DIVISIONCODE = '''||P_DIVCODE||'''   '||CHR(10)   
            ||'        AND FORTNIGHTSTARTDATE = '''||lv_fn_stdt||''' AND FORTNIGHTENDDATE = '''||lv_fn_endt||'''  '||chr(10)
            ||'      GROUP BY WORKERSERIAL, SHIFTCODE, DEPARTMENTCODE, SECTIONCODE, OCCUPATIONCODE, DEPTSERIAL '||CHR(10)  
            ||' ) C, WPSWORKERCATEGORYMAST  D '||CHR(10)
            ||' WHERE A.COMPANYCODE =  '''||P_COMPCODE||''' AND A.DIVISIONCODE = '''||P_DIVCODE||'''  '||CHR(10) 
            ||'   AND A.COMPANYCODE = B.COMPANYCODE AND A.DIVISIONCODE = B.DIVISIONCODE  '||CHR(10)
            ||'   AND A.WORKERSERIAL = B.WORKERSERIAL  AND NVL(B.ACTIVE,''N'')=''Y'' '||CHR(10)
            ||'   AND A.WORKERSERIAL = C.WORKERSERIAL (+)  AND A.SHIFTCODE = C.SHIFTCODE (+) AND A.DEPARTMENTCODE = C.DEPARTMENTCODE (+) '||CHR(10)
            ||'   AND A.SECTIONCODE = C.SECTIONCODE(+) AND A.OCCUPATIONCODE = C.OCCUPATIONCODE (+) AND A.DEPTSERIAL = C.DEPTSERIAL (+) '||CHR(10)
            ||'   AND A.COMPANYCODE = D.COMPANYCODE   '|| CHR(10)
            ||'   AND A.DIVISIONCODE = D.DIVISIONCODE  '||CHR(10)
            ||'   AND A.WORKERCATEGORYCODE = D.WORKERCATEGORYCODE  '||CHR(10);
            if P_PROCESSTYPE='VOUCHER PROCESS' then
            lv_SqlStr := lv_SqlStr ||'   AND  D.CATEGORYGROUP  LIKE''%VOUCHER%''  '||CHR(10);
            ELSE
             lv_SqlStr := lv_SqlStr ||'   AND D.ISWAGESPROCESS = ''Y'' AND D.CATEGORYGROUP NOT LIKE''%VOUCHER%''  '||CHR(10);
            END IF;
            lv_SqlStr := lv_SqlStr ||' GROUP BY A.COMPANYCODE, A.DIVISIONCODE, A.WORKERSERIAL, A.TOKENNO,  A.WORKERCATEGORYCODE, B.GRADECODE, A.SHIFTCODE, A.DEPARTMENTCODE, A.SECTIONCODE, A.OCCUPATIONCODE, A.DEPTSERIAL,'||CHR(10)
            ||'        '||lv_MastComponentGroupBy||', NVL(C.VBAMOUNT,0), NVL(HRS_RATE,0)'||CHR(10);
--            ---- BELOW PART DISABLE BY AMALESH ON 13/06/2020 BECAUSE ONLY HRA PAID IN 2ND FORTNIGHT BASED ON WORKING/STL IN 1ST FORTNIHGT BUT NOT WORKING IN 2ND FORTNIGHT 
--            ||' HAVING ( SUM(NVL(ATTENDANCEHOURS,0))<> 0 OR SUM(NVL(OVERTIMEHOURS,0))<> 0 OR SUM(NVL(STLHOURS,0))<>0 OR SUM(NVL(HOLIDAYHOURS,0))<> 0 OR SUM(NVL(FBKHOURS,0))<>0 OR SUM(NVL(LAYOFFHOURS,0))<>0 ) '||CHR(10);
             
    insert into WPS_error_log(COMPANYCODE, DIVISIONCODE,PROC_NAME,ORA_ERROR_MESSG,ERROR_QUERY,PAR_VALUES,FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS ) 
    values( P_COMPCODE, P_DIVCODE,lv_ProcName,lv_sqlerrm,lv_SqlStr,lv_parvalues,lv_fn_stdt,lv_fn_endt, lv_remarks);
    --COMMIT;
    execute immediate lv_SqlStr;
    ---- UPDATE NOT APPLCICABLE COLUMN TO ZERO AS PER CATEGORY VS COMPONENT MAPPING FOR THE PHSE 0 OR INSERT 
    PROC_WPS_UPDATE_NA_COMP(P_COMPCODE, P_DIVCODE, P_FNSTDT, P_FNENDT, P_TABLENAME,P_TABLENAME,'NO');
    insert into WPS_error_log(COMPANYCODE, DIVISIONCODE,PROC_NAME,ORA_ERROR_MESSG,ERROR_QUERY,PAR_VALUES,FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS ) 
    values( P_COMPCODE, P_DIVCODE,lv_ProcName,'','',lv_parvalues,lv_fn_stdt,lv_fn_endt, 'PROCESS INSERT SUCCESSFULLY COMPLETE');
    COMMIT;
exception
when others then
 --insert into error_log(PROC_NAME,ORA_ERROR_MESSG,ERROR_QUERY,PAR_VALUES,REMARKS ) values( 'ERROR SQL',lv_sqlstr,lv_sqlstr,lv_parvalues,lv_remarks);
 lv_sqlerrm := sqlerrm ;
 --dbms_output.put_line(lv_sqlerrm);
 insert into WPS_error_log(COMPANYCODE, DIVISIONCODE,PROC_NAME,ORA_ERROR_MESSG,ERROR_QUERY,PAR_VALUES,FORTNIGHTSTARTDATE, FORTNIGHTENDDATE, REMARKS ) 
 values( P_COMPCODE, P_DIVCODE,lv_ProcName,lv_sqlerrm,lv_SqlStr,lv_parvalues,lv_fn_stdt,lv_fn_endt, lv_remarks);
 COMMIT;
end;
/


